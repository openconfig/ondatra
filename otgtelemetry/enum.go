/*
Package otgtelemetry is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by /home/athena/go/pkg/mod/github.com/openconfig/ygot@v0.16.3/genutil/names.go
using the following YANG input files:
	- gnmi-collector-metadata.yang
	- models-yang/models/isis/open-traffic-generator-isis.yang
	- models-yang/models/types/open-traffic-generator-types.yang
	- models-yang/models/flow/open-traffic-generator-flow.yang
	- models-yang/models/discovery/open-traffic-generator-discovery.yang
	- models-yang/models/interface/open-traffic-generator-port.yang
	- models-yang/models/bgp/open-traffic-generator-bgp.yang
Imported modules were sourced from:
	- models-yang/models/...
*/
package otgtelemetry

import (
	"github.com/openconfig/ygot/ygot"
)

// E_BgpPeer_SessionState is a derived int64 type which is used to represent
// the enumerated node BgpPeer_SessionState. An additional value named
// BgpPeer_SessionState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpPeer_SessionState int64

// IsYANGGoEnum ensures that BgpPeer_SessionState implements the yang.GoEnum
// interface. This ensures that BgpPeer_SessionState can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpPeer_SessionState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpPeer_SessionState.
func (E_BgpPeer_SessionState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpPeer_SessionState.
func (e E_BgpPeer_SessionState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpPeer_SessionState")
}

const (
	// BgpPeer_SessionState_UNSET corresponds to the value UNSET of BgpPeer_SessionState
	BgpPeer_SessionState_UNSET E_BgpPeer_SessionState = 0
	// BgpPeer_SessionState_IDLE corresponds to the value IDLE of BgpPeer_SessionState
	BgpPeer_SessionState_IDLE E_BgpPeer_SessionState = 1
	// BgpPeer_SessionState_CONNECT corresponds to the value CONNECT of BgpPeer_SessionState
	BgpPeer_SessionState_CONNECT E_BgpPeer_SessionState = 2
	// BgpPeer_SessionState_ACTIVE corresponds to the value ACTIVE of BgpPeer_SessionState
	BgpPeer_SessionState_ACTIVE E_BgpPeer_SessionState = 3
	// BgpPeer_SessionState_OPEN_SENT corresponds to the value OPEN_SENT of BgpPeer_SessionState
	BgpPeer_SessionState_OPEN_SENT E_BgpPeer_SessionState = 4
	// BgpPeer_SessionState_OPEN_CONFIRM corresponds to the value OPEN_CONFIRM of BgpPeer_SessionState
	BgpPeer_SessionState_OPEN_CONFIRM E_BgpPeer_SessionState = 5
	// BgpPeer_SessionState_ESTABLISHED corresponds to the value ESTABLISHED of BgpPeer_SessionState
	BgpPeer_SessionState_ESTABLISHED E_BgpPeer_SessionState = 6
)

// E_Port_Link is a derived int64 type which is used to represent
// the enumerated node Port_Link. An additional value named
// Port_Link_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Port_Link int64

// IsYANGGoEnum ensures that Port_Link implements the yang.GoEnum
// interface. This ensures that Port_Link can be identified as a
// mapped type for a YANG enumeration.
func (E_Port_Link) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Port_Link.
func (E_Port_Link) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Port_Link.
func (e E_Port_Link) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Port_Link")
}

const (
	// Port_Link_UNSET corresponds to the value UNSET of Port_Link
	Port_Link_UNSET E_Port_Link = 0
	// Port_Link_UP corresponds to the value UP of Port_Link
	Port_Link_UP E_Port_Link = 1
	// Port_Link_DOWN corresponds to the value DOWN of Port_Link
	Port_Link_DOWN E_Port_Link = 2
)
