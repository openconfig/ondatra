/*
Package platform is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /home/athena/go/pkg/mod/github.com/openconfig/ygot@v0.15.1/genutil/names.go
using the following YANG input files:
	- gnmi-collector-metadata.yang
	- public/release/models/acl/openconfig-acl.yang
	- public/release/models/acl/openconfig-packet-match.yang
	- public/release/models/aft/openconfig-aft.yang
	- public/release/models/ate/openconfig-ate-flow.yang
	- public/release/models/ate/openconfig-ate-intf.yang
	- public/release/models/bfd/openconfig-bfd.yang
	- public/release/models/bgp/openconfig-bgp-policy.yang
	- public/release/models/bgp/openconfig-bgp-types.yang
	- public/release/models/interfaces/openconfig-if-aggregate.yang
	- public/release/models/interfaces/openconfig-if-ethernet.yang
	- public/release/models/interfaces/openconfig-if-ip-ext.yang
	- public/release/models/interfaces/openconfig-if-ip.yang
	- public/release/models/interfaces/openconfig-interfaces.yang
	- public/release/models/isis/openconfig-isis.yang
	- public/release/models/lacp/openconfig-lacp.yang
	- public/release/models/lldp/openconfig-lldp-types.yang
	- public/release/models/lldp/openconfig-lldp.yang
	- public/release/models/local-routing/openconfig-local-routing.yang
	- public/release/models/mpls/openconfig-mpls-types.yang
	- public/release/models/multicast/openconfig-pim.yang
	- public/release/models/network-instance/openconfig-network-instance.yang
	- public/release/models/openconfig-extensions.yang
	- public/release/models/optical-transport/openconfig-transport-types.yang
	- public/release/models/ospf/openconfig-ospfv2.yang
	- public/release/models/platform/openconfig-platform-cpu.yang
	- public/release/models/platform/openconfig-platform-integrated-circuit.yang
	- public/release/models/platform/openconfig-platform-software.yang
	- public/release/models/platform/openconfig-platform-transceiver.yang
	- public/release/models/platform/openconfig-platform.yang
	- public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
	- public/release/models/policy/openconfig-policy-types.yang
	- public/release/models/qos/openconfig-qos-elements.yang
	- public/release/models/qos/openconfig-qos-interfaces.yang
	- public/release/models/qos/openconfig-qos-types.yang
	- public/release/models/qos/openconfig-qos.yang
	- public/release/models/rib/openconfig-rib-bgp.yang
	- public/release/models/segment-routing/openconfig-segment-routing-types.yang
	- public/release/models/system/openconfig-system.yang
	- public/release/models/types/openconfig-inet-types.yang
	- public/release/models/types/openconfig-types.yang
	- public/release/models/types/openconfig-yang-types.yang
	- public/release/models/vlan/openconfig-vlan.yang
	- public/third_party/ietf/iana-if-type.yang
	- public/third_party/ietf/ietf-inet-types.yang
	- public/third_party/ietf/ietf-interfaces.yang
	- public/third_party/ietf/ietf-yang-types.yang
Imported modules were sourced from:
	- public/release/models/...
	- public/third_party/ietf/...
*/
package platform

import (
	"github.com/openconfig/ygot/ygot"
)

// ComponentPath represents the /openconfig-platform/components/component YANG schema element.
type ComponentPath struct {
	*ygot.NodePath
}

// ComponentPathAny represents the wildcard version of the /openconfig-platform/components/component YANG schema element.
type ComponentPathAny struct {
	*ygot.NodePath
}

// Component_AllocatedPowerPath represents the /openconfig-platform/components/component/state/allocated-power YANG schema element.
type Component_AllocatedPowerPath struct {
	*ygot.NodePath
}

// Component_AllocatedPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/state/allocated-power YANG schema element.
type Component_AllocatedPowerPathAny struct {
	*ygot.NodePath
}

// Component_DescriptionPath represents the /openconfig-platform/components/component/state/description YANG schema element.
type Component_DescriptionPath struct {
	*ygot.NodePath
}

// Component_DescriptionPathAny represents the wildcard version of the /openconfig-platform/components/component/state/description YANG schema element.
type Component_DescriptionPathAny struct {
	*ygot.NodePath
}

// Component_EmptyPath represents the /openconfig-platform/components/component/state/empty YANG schema element.
type Component_EmptyPath struct {
	*ygot.NodePath
}

// Component_EmptyPathAny represents the wildcard version of the /openconfig-platform/components/component/state/empty YANG schema element.
type Component_EmptyPathAny struct {
	*ygot.NodePath
}

// Component_EquipmentFailurePath represents the /openconfig-platform/components/component/state/equipment-failure YANG schema element.
type Component_EquipmentFailurePath struct {
	*ygot.NodePath
}

// Component_EquipmentFailurePathAny represents the wildcard version of the /openconfig-platform/components/component/state/equipment-failure YANG schema element.
type Component_EquipmentFailurePathAny struct {
	*ygot.NodePath
}

// Component_EquipmentMismatchPath represents the /openconfig-platform/components/component/state/equipment-mismatch YANG schema element.
type Component_EquipmentMismatchPath struct {
	*ygot.NodePath
}

// Component_EquipmentMismatchPathAny represents the wildcard version of the /openconfig-platform/components/component/state/equipment-mismatch YANG schema element.
type Component_EquipmentMismatchPathAny struct {
	*ygot.NodePath
}

// Component_FirmwareVersionPath represents the /openconfig-platform/components/component/state/firmware-version YANG schema element.
type Component_FirmwareVersionPath struct {
	*ygot.NodePath
}

// Component_FirmwareVersionPathAny represents the wildcard version of the /openconfig-platform/components/component/state/firmware-version YANG schema element.
type Component_FirmwareVersionPathAny struct {
	*ygot.NodePath
}

// Component_HardwareVersionPath represents the /openconfig-platform/components/component/state/hardware-version YANG schema element.
type Component_HardwareVersionPath struct {
	*ygot.NodePath
}

// Component_HardwareVersionPathAny represents the wildcard version of the /openconfig-platform/components/component/state/hardware-version YANG schema element.
type Component_HardwareVersionPathAny struct {
	*ygot.NodePath
}

// Component_IdPath represents the /openconfig-platform/components/component/state/id YANG schema element.
type Component_IdPath struct {
	*ygot.NodePath
}

// Component_IdPathAny represents the wildcard version of the /openconfig-platform/components/component/state/id YANG schema element.
type Component_IdPathAny struct {
	*ygot.NodePath
}

// Component_LastRebootReasonPath represents the /openconfig-platform/components/component/state/last-reboot-reason YANG schema element.
type Component_LastRebootReasonPath struct {
	*ygot.NodePath
}

// Component_LastRebootReasonPathAny represents the wildcard version of the /openconfig-platform/components/component/state/last-reboot-reason YANG schema element.
type Component_LastRebootReasonPathAny struct {
	*ygot.NodePath
}

// Component_LastRebootTimePath represents the /openconfig-platform/components/component/state/last-reboot-time YANG schema element.
type Component_LastRebootTimePath struct {
	*ygot.NodePath
}

// Component_LastRebootTimePathAny represents the wildcard version of the /openconfig-platform/components/component/state/last-reboot-time YANG schema element.
type Component_LastRebootTimePathAny struct {
	*ygot.NodePath
}

// Component_LastSwitchoverTimePath represents the /openconfig-platform/components/component/state/last-switchover-time YANG schema element.
type Component_LastSwitchoverTimePath struct {
	*ygot.NodePath
}

// Component_LastSwitchoverTimePathAny represents the wildcard version of the /openconfig-platform/components/component/state/last-switchover-time YANG schema element.
type Component_LastSwitchoverTimePathAny struct {
	*ygot.NodePath
}

// Component_LocationPath represents the /openconfig-platform/components/component/state/location YANG schema element.
type Component_LocationPath struct {
	*ygot.NodePath
}

// Component_LocationPathAny represents the wildcard version of the /openconfig-platform/components/component/state/location YANG schema element.
type Component_LocationPathAny struct {
	*ygot.NodePath
}

// Component_MfgDatePath represents the /openconfig-platform/components/component/state/mfg-date YANG schema element.
type Component_MfgDatePath struct {
	*ygot.NodePath
}

// Component_MfgDatePathAny represents the wildcard version of the /openconfig-platform/components/component/state/mfg-date YANG schema element.
type Component_MfgDatePathAny struct {
	*ygot.NodePath
}

// Component_MfgNamePath represents the /openconfig-platform/components/component/state/mfg-name YANG schema element.
type Component_MfgNamePath struct {
	*ygot.NodePath
}

// Component_MfgNamePathAny represents the wildcard version of the /openconfig-platform/components/component/state/mfg-name YANG schema element.
type Component_MfgNamePathAny struct {
	*ygot.NodePath
}

// Component_NamePath represents the /openconfig-platform/components/component/state/name YANG schema element.
type Component_NamePath struct {
	*ygot.NodePath
}

// Component_NamePathAny represents the wildcard version of the /openconfig-platform/components/component/state/name YANG schema element.
type Component_NamePathAny struct {
	*ygot.NodePath
}

// Component_OperStatusPath represents the /openconfig-platform/components/component/state/oper-status YANG schema element.
type Component_OperStatusPath struct {
	*ygot.NodePath
}

// Component_OperStatusPathAny represents the wildcard version of the /openconfig-platform/components/component/state/oper-status YANG schema element.
type Component_OperStatusPathAny struct {
	*ygot.NodePath
}

// Component_ParentPath represents the /openconfig-platform/components/component/state/parent YANG schema element.
type Component_ParentPath struct {
	*ygot.NodePath
}

// Component_ParentPathAny represents the wildcard version of the /openconfig-platform/components/component/state/parent YANG schema element.
type Component_ParentPathAny struct {
	*ygot.NodePath
}

// Component_PartNoPath represents the /openconfig-platform/components/component/state/part-no YANG schema element.
type Component_PartNoPath struct {
	*ygot.NodePath
}

// Component_PartNoPathAny represents the wildcard version of the /openconfig-platform/components/component/state/part-no YANG schema element.
type Component_PartNoPathAny struct {
	*ygot.NodePath
}

// Component_RedundantRolePath represents the /openconfig-platform/components/component/state/redundant-role YANG schema element.
type Component_RedundantRolePath struct {
	*ygot.NodePath
}

// Component_RedundantRolePathAny represents the wildcard version of the /openconfig-platform/components/component/state/redundant-role YANG schema element.
type Component_RedundantRolePathAny struct {
	*ygot.NodePath
}

// Component_RemovablePath represents the /openconfig-platform/components/component/state/removable YANG schema element.
type Component_RemovablePath struct {
	*ygot.NodePath
}

// Component_RemovablePathAny represents the wildcard version of the /openconfig-platform/components/component/state/removable YANG schema element.
type Component_RemovablePathAny struct {
	*ygot.NodePath
}

// Component_SerialNoPath represents the /openconfig-platform/components/component/state/serial-no YANG schema element.
type Component_SerialNoPath struct {
	*ygot.NodePath
}

// Component_SerialNoPathAny represents the wildcard version of the /openconfig-platform/components/component/state/serial-no YANG schema element.
type Component_SerialNoPathAny struct {
	*ygot.NodePath
}

// Component_SoftwareVersionPath represents the /openconfig-platform/components/component/state/software-version YANG schema element.
type Component_SoftwareVersionPath struct {
	*ygot.NodePath
}

// Component_SoftwareVersionPathAny represents the wildcard version of the /openconfig-platform/components/component/state/software-version YANG schema element.
type Component_SoftwareVersionPathAny struct {
	*ygot.NodePath
}

// Component_TypePath represents the /openconfig-platform/components/component/state/type YANG schema element.
type Component_TypePath struct {
	*ygot.NodePath
}

// Component_TypePathAny represents the wildcard version of the /openconfig-platform/components/component/state/type YANG schema element.
type Component_TypePathAny struct {
	*ygot.NodePath
}

// Component_UsedPowerPath represents the /openconfig-platform/components/component/state/used-power YANG schema element.
type Component_UsedPowerPath struct {
	*ygot.NodePath
}

// Component_UsedPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/state/used-power YANG schema element.
type Component_UsedPowerPathAny struct {
	*ygot.NodePath
}

// AllocatedPower (leaf): Power allocated by the system for the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/allocated-power"
// Path from root: "/components/component/state/allocated-power"
func (n *ComponentPath) AllocatedPower() *Component_AllocatedPowerPath {
	return &Component_AllocatedPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "allocated-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllocatedPower (leaf): Power allocated by the system for the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/allocated-power"
// Path from root: "/components/component/state/allocated-power"
func (n *ComponentPathAny) AllocatedPower() *Component_AllocatedPowerPathAny {
	return &Component_AllocatedPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "allocated-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backplane (container): Data for backplane components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "backplane"
// Path from root: "/components/component/backplane"
func (n *ComponentPath) Backplane() *Component_BackplanePath {
	return &Component_BackplanePath{
		NodePath: ygot.NewNodePath(
			[]string{"backplane"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backplane (container): Data for backplane components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "backplane"
// Path from root: "/components/component/backplane"
func (n *ComponentPathAny) Backplane() *Component_BackplanePathAny {
	return &Component_BackplanePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"backplane"},
			map[string]interface{}{},
			n,
		),
	}
}

// Chassis (container): Data for chassis components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "chassis"
// Path from root: "/components/component/chassis"
func (n *ComponentPath) Chassis() *Component_ChassisPath {
	return &Component_ChassisPath{
		NodePath: ygot.NewNodePath(
			[]string{"chassis"},
			map[string]interface{}{},
			n,
		),
	}
}

// Chassis (container): Data for chassis components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "chassis"
// Path from root: "/components/component/chassis"
func (n *ComponentPathAny) Chassis() *Component_ChassisPathAny {
	return &Component_ChassisPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"chassis"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cpu (container): Data for cpu components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "cpu"
// Path from root: "/components/component/cpu"
func (n *ComponentPath) Cpu() *Component_CpuPath {
	return &Component_CpuPath{
		NodePath: ygot.NewNodePath(
			[]string{"cpu"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cpu (container): Data for cpu components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "cpu"
// Path from root: "/components/component/cpu"
func (n *ComponentPathAny) Cpu() *Component_CpuPathAny {
	return &Component_CpuPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"cpu"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): System-supplied description of the component
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/description"
// Path from root: "/components/component/state/description"
func (n *ComponentPath) Description() *Component_DescriptionPath {
	return &Component_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): System-supplied description of the component
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/description"
// Path from root: "/components/component/state/description"
func (n *ComponentPathAny) Description() *Component_DescriptionPathAny {
	return &Component_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Empty (leaf): The empty leaf may be used by the device to indicate that a
// component position exists but is not populated.  Using this
// flag, it is possible for the management system to learn how
// many positions are available (e.g., occupied vs. empty
// linecard slots in a chassis).
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/empty"
// Path from root: "/components/component/state/empty"
func (n *ComponentPath) Empty() *Component_EmptyPath {
	return &Component_EmptyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "empty"},
			map[string]interface{}{},
			n,
		),
	}
}

// Empty (leaf): The empty leaf may be used by the device to indicate that a
// component position exists but is not populated.  Using this
// flag, it is possible for the management system to learn how
// many positions are available (e.g., occupied vs. empty
// linecard slots in a chassis).
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/empty"
// Path from root: "/components/component/state/empty"
func (n *ComponentPathAny) Empty() *Component_EmptyPathAny {
	return &Component_EmptyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "empty"},
			map[string]interface{}{},
			n,
		),
	}
}

// EquipmentFailure (leaf): If true, the hardware indicates that the component's physical equipment
// has failed
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/equipment-failure"
// Path from root: "/components/component/state/equipment-failure"
func (n *ComponentPath) EquipmentFailure() *Component_EquipmentFailurePath {
	return &Component_EquipmentFailurePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "equipment-failure"},
			map[string]interface{}{},
			n,
		),
	}
}

// EquipmentFailure (leaf): If true, the hardware indicates that the component's physical equipment
// has failed
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/equipment-failure"
// Path from root: "/components/component/state/equipment-failure"
func (n *ComponentPathAny) EquipmentFailure() *Component_EquipmentFailurePathAny {
	return &Component_EquipmentFailurePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "equipment-failure"},
			map[string]interface{}{},
			n,
		),
	}
}

// EquipmentMismatch (leaf): If true, the hardware indicates that the component inserted into the
// affected component's physical location is of a different type than what
// is configured
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/equipment-mismatch"
// Path from root: "/components/component/state/equipment-mismatch"
func (n *ComponentPath) EquipmentMismatch() *Component_EquipmentMismatchPath {
	return &Component_EquipmentMismatchPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "equipment-mismatch"},
			map[string]interface{}{},
			n,
		),
	}
}

// EquipmentMismatch (leaf): If true, the hardware indicates that the component inserted into the
// affected component's physical location is of a different type than what
// is configured
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/equipment-mismatch"
// Path from root: "/components/component/state/equipment-mismatch"
func (n *ComponentPathAny) EquipmentMismatch() *Component_EquipmentMismatchPathAny {
	return &Component_EquipmentMismatchPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "equipment-mismatch"},
			map[string]interface{}{},
			n,
		),
	}
}

// Fabric (container): Data for fabric components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "fabric"
// Path from root: "/components/component/fabric"
func (n *ComponentPath) Fabric() *Component_FabricPath {
	return &Component_FabricPath{
		NodePath: ygot.NewNodePath(
			[]string{"fabric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Fabric (container): Data for fabric components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "fabric"
// Path from root: "/components/component/fabric"
func (n *ComponentPathAny) Fabric() *Component_FabricPathAny {
	return &Component_FabricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"fabric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Fan (container): Data for fan components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "fan"
// Path from root: "/components/component/fan"
func (n *ComponentPath) Fan() *Component_FanPath {
	return &Component_FanPath{
		NodePath: ygot.NewNodePath(
			[]string{"fan"},
			map[string]interface{}{},
			n,
		),
	}
}

// Fan (container): Data for fan components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "fan"
// Path from root: "/components/component/fan"
func (n *ComponentPathAny) Fan() *Component_FanPathAny {
	return &Component_FanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"fan"},
			map[string]interface{}{},
			n,
		),
	}
}

// FirmwareVersion (leaf): For hardware components, this is the version of associated
// firmware that is running on the component, if applicable.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/firmware-version"
// Path from root: "/components/component/state/firmware-version"
func (n *ComponentPath) FirmwareVersion() *Component_FirmwareVersionPath {
	return &Component_FirmwareVersionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "firmware-version"},
			map[string]interface{}{},
			n,
		),
	}
}

// FirmwareVersion (leaf): For hardware components, this is the version of associated
// firmware that is running on the component, if applicable.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/firmware-version"
// Path from root: "/components/component/state/firmware-version"
func (n *ComponentPathAny) FirmwareVersion() *Component_FirmwareVersionPathAny {
	return &Component_FirmwareVersionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "firmware-version"},
			map[string]interface{}{},
			n,
		),
	}
}

// HardwareVersion (leaf): For hardware components, this is the hardware revision of
// the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/hardware-version"
// Path from root: "/components/component/state/hardware-version"
func (n *ComponentPath) HardwareVersion() *Component_HardwareVersionPath {
	return &Component_HardwareVersionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hardware-version"},
			map[string]interface{}{},
			n,
		),
	}
}

// HardwareVersion (leaf): For hardware components, this is the hardware revision of
// the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/hardware-version"
// Path from root: "/components/component/state/hardware-version"
func (n *ComponentPathAny) HardwareVersion() *Component_HardwareVersionPathAny {
	return &Component_HardwareVersionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hardware-version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique identifier assigned by the system for the
// component
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/id"
// Path from root: "/components/component/state/id"
func (n *ComponentPath) Id() *Component_IdPath {
	return &Component_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique identifier assigned by the system for the
// component
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/id"
// Path from root: "/components/component/state/id"
func (n *ComponentPathAny) Id() *Component_IdPathAny {
	return &Component_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IntegratedCircuit (container): Data for chip components, such as ASIC, NPUs, etc.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "integrated-circuit"
// Path from root: "/components/component/integrated-circuit"
func (n *ComponentPath) IntegratedCircuit() *Component_IntegratedCircuitPath {
	return &Component_IntegratedCircuitPath{
		NodePath: ygot.NewNodePath(
			[]string{"integrated-circuit"},
			map[string]interface{}{},
			n,
		),
	}
}

// IntegratedCircuit (container): Data for chip components, such as ASIC, NPUs, etc.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "integrated-circuit"
// Path from root: "/components/component/integrated-circuit"
func (n *ComponentPathAny) IntegratedCircuit() *Component_IntegratedCircuitPathAny {
	return &Component_IntegratedCircuitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"integrated-circuit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastRebootReason (leaf): This reports the reason of the last reboot of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/last-reboot-reason"
// Path from root: "/components/component/state/last-reboot-reason"
func (n *ComponentPath) LastRebootReason() *Component_LastRebootReasonPath {
	return &Component_LastRebootReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-reboot-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastRebootReason (leaf): This reports the reason of the last reboot of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/last-reboot-reason"
// Path from root: "/components/component/state/last-reboot-reason"
func (n *ComponentPathAny) LastRebootReason() *Component_LastRebootReasonPathAny {
	return &Component_LastRebootReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-reboot-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastRebootTime (leaf): This reports the time of the last reboot of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/last-reboot-time"
// Path from root: "/components/component/state/last-reboot-time"
func (n *ComponentPath) LastRebootTime() *Component_LastRebootTimePath {
	return &Component_LastRebootTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-reboot-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastRebootTime (leaf): This reports the time of the last reboot of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/last-reboot-time"
// Path from root: "/components/component/state/last-reboot-time"
func (n *ComponentPathAny) LastRebootTime() *Component_LastRebootTimePathAny {
	return &Component_LastRebootTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-reboot-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastSwitchoverReason (container): For components that have redundant roles (e.g. two
// supervisors in a device, one as primary the other as secondary),
// this reports the reason of the last change of the
// component's role.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/last-switchover-reason"
// Path from root: "/components/component/state/last-switchover-reason"
func (n *ComponentPath) LastSwitchoverReason() *Component_LastSwitchoverReasonPath {
	return &Component_LastSwitchoverReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-switchover-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastSwitchoverReason (container): For components that have redundant roles (e.g. two
// supervisors in a device, one as primary the other as secondary),
// this reports the reason of the last change of the
// component's role.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/last-switchover-reason"
// Path from root: "/components/component/state/last-switchover-reason"
func (n *ComponentPathAny) LastSwitchoverReason() *Component_LastSwitchoverReasonPathAny {
	return &Component_LastSwitchoverReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-switchover-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastSwitchoverTime (leaf): For components that have redundant roles (e.g. two
// supervisors in a device, one as primary the other as
// secondary), this reports the time of the last change of
// the component's role.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/last-switchover-time"
// Path from root: "/components/component/state/last-switchover-time"
func (n *ComponentPath) LastSwitchoverTime() *Component_LastSwitchoverTimePath {
	return &Component_LastSwitchoverTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-switchover-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastSwitchoverTime (leaf): For components that have redundant roles (e.g. two
// supervisors in a device, one as primary the other as
// secondary), this reports the time of the last change of
// the component's role.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/last-switchover-time"
// Path from root: "/components/component/state/last-switchover-time"
func (n *ComponentPathAny) LastSwitchoverTime() *Component_LastSwitchoverTimePathAny {
	return &Component_LastSwitchoverTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-switchover-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Location (leaf): System-supplied description of the location of the
// component within the system. This could be a bay position,
// slot number, socket location, etc. For component types that
// have an explicit slot-id attribute, such as linecards, the
// system should populate the more specific slot-id.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/location"
// Path from root: "/components/component/state/location"
func (n *ComponentPath) Location() *Component_LocationPath {
	return &Component_LocationPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "location"},
			map[string]interface{}{},
			n,
		),
	}
}

// Location (leaf): System-supplied description of the location of the
// component within the system. This could be a bay position,
// slot number, socket location, etc. For component types that
// have an explicit slot-id attribute, such as linecards, the
// system should populate the more specific slot-id.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/location"
// Path from root: "/components/component/state/location"
func (n *ComponentPathAny) Location() *Component_LocationPathAny {
	return &Component_LocationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "location"},
			map[string]interface{}{},
			n,
		),
	}
}

// Memory (container): For components that have associated memory, these values
// report information about available and utilized memory.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/memory"
// Path from root: "/components/component/state/memory"
func (n *ComponentPath) Memory() *Component_MemoryPath {
	return &Component_MemoryPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "memory"},
			map[string]interface{}{},
			n,
		),
	}
}

// Memory (container): For components that have associated memory, these values
// report information about available and utilized memory.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/memory"
// Path from root: "/components/component/state/memory"
func (n *ComponentPathAny) Memory() *Component_MemoryPathAny {
	return &Component_MemoryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "memory"},
			map[string]interface{}{},
			n,
		),
	}
}

// MfgDate (leaf): System-supplied representation of the component's
// manufacturing date.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/mfg-date"
// Path from root: "/components/component/state/mfg-date"
func (n *ComponentPath) MfgDate() *Component_MfgDatePath {
	return &Component_MfgDatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mfg-date"},
			map[string]interface{}{},
			n,
		),
	}
}

// MfgDate (leaf): System-supplied representation of the component's
// manufacturing date.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/mfg-date"
// Path from root: "/components/component/state/mfg-date"
func (n *ComponentPathAny) MfgDate() *Component_MfgDatePathAny {
	return &Component_MfgDatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mfg-date"},
			map[string]interface{}{},
			n,
		),
	}
}

// MfgName (leaf): System-supplied identifier for the manufacturer of the
// component.  This data is particularly useful when a
// component manufacturer is different than the overall
// device vendor.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/mfg-name"
// Path from root: "/components/component/state/mfg-name"
func (n *ComponentPath) MfgName() *Component_MfgNamePath {
	return &Component_MfgNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mfg-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// MfgName (leaf): System-supplied identifier for the manufacturer of the
// component.  This data is particularly useful when a
// component manufacturer is different than the overall
// device vendor.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/mfg-name"
// Path from root: "/components/component/state/mfg-name"
func (n *ComponentPathAny) MfgName() *Component_MfgNamePathAny {
	return &Component_MfgNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mfg-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Device name for the component -- this may not be a
// configurable parameter on many implementations.  Where
// component preconfiguration is supported, for example,
// the component name may be configurable.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/name"
// Path from root: "/components/component/state/name"
func (n *ComponentPath) Name() *Component_NamePath {
	return &Component_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Device name for the component -- this may not be a
// configurable parameter on many implementations.  Where
// component preconfiguration is supported, for example,
// the component name may be configurable.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/name"
// Path from root: "/components/component/state/name"
func (n *ComponentPathAny) Name() *Component_NamePathAny {
	return &Component_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// OperStatus (leaf): If applicable, this reports the current operational status
// of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/oper-status"
// Path from root: "/components/component/state/oper-status"
func (n *ComponentPath) OperStatus() *Component_OperStatusPath {
	return &Component_OperStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "oper-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// OperStatus (leaf): If applicable, this reports the current operational status
// of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/oper-status"
// Path from root: "/components/component/state/oper-status"
func (n *ComponentPathAny) OperStatus() *Component_OperStatusPathAny {
	return &Component_OperStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "oper-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// Parent (leaf): Reference to the name of the parent component.  Note that
// this reference must be kept synchronized with the
// corresponding subcomponent reference from the parent
// component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/parent"
// Path from root: "/components/component/state/parent"
func (n *ComponentPath) Parent() *Component_ParentPath {
	return &Component_ParentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "parent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Parent (leaf): Reference to the name of the parent component.  Note that
// this reference must be kept synchronized with the
// corresponding subcomponent reference from the parent
// component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/parent"
// Path from root: "/components/component/state/parent"
func (n *ComponentPathAny) Parent() *Component_ParentPathAny {
	return &Component_ParentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "parent"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartNo (leaf): System-assigned part number for the component.  This should
// be present in particular if the component is also an FRU
// (field replaceable unit)
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/part-no"
// Path from root: "/components/component/state/part-no"
func (n *ComponentPath) PartNo() *Component_PartNoPath {
	return &Component_PartNoPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "part-no"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartNo (leaf): System-assigned part number for the component.  This should
// be present in particular if the component is also an FRU
// (field replaceable unit)
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/part-no"
// Path from root: "/components/component/state/part-no"
func (n *ComponentPathAny) PartNo() *Component_PartNoPathAny {
	return &Component_PartNoPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "part-no"},
			map[string]interface{}{},
			n,
		),
	}
}

// Pcie (container): Components that are connected to the system over the Peripheral
// Component Interconnect Express (PCIe), report the fatal, non-fatal
// and correctable PCIe error counts.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/pcie"
// Path from root: "/components/component/state/pcie"
func (n *ComponentPath) Pcie() *Component_PciePath {
	return &Component_PciePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pcie"},
			map[string]interface{}{},
			n,
		),
	}
}

// Pcie (container): Components that are connected to the system over the Peripheral
// Component Interconnect Express (PCIe), report the fatal, non-fatal
// and correctable PCIe error counts.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/pcie"
// Path from root: "/components/component/state/pcie"
func (n *ComponentPathAny) Pcie() *Component_PciePathAny {
	return &Component_PciePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pcie"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (container): Data for physical port components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "port"
// Path from root: "/components/component/port"
func (n *ComponentPath) Port() *Component_PortPath {
	return &Component_PortPath{
		NodePath: ygot.NewNodePath(
			[]string{"port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (container): Data for physical port components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "port"
// Path from root: "/components/component/port"
func (n *ComponentPathAny) Port() *Component_PortPathAny {
	return &Component_PortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"port"},
			map[string]interface{}{},
			n,
		),
	}
}

// PowerSupply (container): Data for power supply components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "power-supply"
// Path from root: "/components/component/power-supply"
func (n *ComponentPath) PowerSupply() *Component_PowerSupplyPath {
	return &Component_PowerSupplyPath{
		NodePath: ygot.NewNodePath(
			[]string{"power-supply"},
			map[string]interface{}{},
			n,
		),
	}
}

// PowerSupply (container): Data for power supply components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "power-supply"
// Path from root: "/components/component/power-supply"
func (n *ComponentPathAny) PowerSupply() *Component_PowerSupplyPathAny {
	return &Component_PowerSupplyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"power-supply"},
			map[string]interface{}{},
			n,
		),
	}
}

// PropertyAny (list): List of system properties for the component
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "properties/property"
// Path from root: "/components/component/properties/property"
// Name (wildcarded): string
func (n *ComponentPath) PropertyAny() *Component_PropertyPathAny {
	return &Component_PropertyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"properties", "property"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// PropertyAny (list): List of system properties for the component
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "properties/property"
// Path from root: "/components/component/properties/property"
// Name (wildcarded): string
func (n *ComponentPathAny) PropertyAny() *Component_PropertyPathAny {
	return &Component_PropertyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"properties", "property"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Property (list): List of system properties for the component
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "properties/property"
// Path from root: "/components/component/properties/property"
// Name: string
func (n *ComponentPath) Property(Name string) *Component_PropertyPath {
	return &Component_PropertyPath{
		NodePath: ygot.NewNodePath(
			[]string{"properties", "property"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Property (list): List of system properties for the component
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "properties/property"
// Path from root: "/components/component/properties/property"
// Name: string
func (n *ComponentPathAny) Property(Name string) *Component_PropertyPathAny {
	return &Component_PropertyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"properties", "property"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// RedundantRole (leaf): For components that have redundant roles (e.g. two
// supervisors in a device, one as primary the other as secondary),
// this reports the role of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/redundant-role"
// Path from root: "/components/component/state/redundant-role"
func (n *ComponentPath) RedundantRole() *Component_RedundantRolePath {
	return &Component_RedundantRolePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "redundant-role"},
			map[string]interface{}{},
			n,
		),
	}
}

// RedundantRole (leaf): For components that have redundant roles (e.g. two
// supervisors in a device, one as primary the other as secondary),
// this reports the role of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/redundant-role"
// Path from root: "/components/component/state/redundant-role"
func (n *ComponentPathAny) RedundantRole() *Component_RedundantRolePathAny {
	return &Component_RedundantRolePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "redundant-role"},
			map[string]interface{}{},
			n,
		),
	}
}

// Removable (leaf): If true, this component is removable or is a field
// replaceable unit
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/removable"
// Path from root: "/components/component/state/removable"
func (n *ComponentPath) Removable() *Component_RemovablePath {
	return &Component_RemovablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "removable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Removable (leaf): If true, this component is removable or is a field
// replaceable unit
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/removable"
// Path from root: "/components/component/state/removable"
func (n *ComponentPathAny) Removable() *Component_RemovablePathAny {
	return &Component_RemovablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "removable"},
			map[string]interface{}{},
			n,
		),
	}
}

// SerialNo (leaf): System-assigned serial number of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/serial-no"
// Path from root: "/components/component/state/serial-no"
func (n *ComponentPath) SerialNo() *Component_SerialNoPath {
	return &Component_SerialNoPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "serial-no"},
			map[string]interface{}{},
			n,
		),
	}
}

// SerialNo (leaf): System-assigned serial number of the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/serial-no"
// Path from root: "/components/component/state/serial-no"
func (n *ComponentPathAny) SerialNo() *Component_SerialNoPathAny {
	return &Component_SerialNoPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "serial-no"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftwareModule (container): Data for software module components, i.e., for components
// with type=SOFTWARE_MODULE
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "software-module"
// Path from root: "/components/component/software-module"
func (n *ComponentPath) SoftwareModule() *Component_SoftwareModulePath {
	return &Component_SoftwareModulePath{
		NodePath: ygot.NewNodePath(
			[]string{"software-module"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftwareModule (container): Data for software module components, i.e., for components
// with type=SOFTWARE_MODULE
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "software-module"
// Path from root: "/components/component/software-module"
func (n *ComponentPathAny) SoftwareModule() *Component_SoftwareModulePathAny {
	return &Component_SoftwareModulePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"software-module"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftwareVersion (leaf): For software components such as operating system or other
// software module, this is the version of the currently
// running software.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/software-version"
// Path from root: "/components/component/state/software-version"
func (n *ComponentPath) SoftwareVersion() *Component_SoftwareVersionPath {
	return &Component_SoftwareVersionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "software-version"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftwareVersion (leaf): For software components such as operating system or other
// software module, this is the version of the currently
// running software.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/software-version"
// Path from root: "/components/component/state/software-version"
func (n *ComponentPathAny) SoftwareVersion() *Component_SoftwareVersionPathAny {
	return &Component_SoftwareVersionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "software-version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Storage (container): Data for storage components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "storage"
// Path from root: "/components/component/storage"
func (n *ComponentPath) Storage() *Component_StoragePath {
	return &Component_StoragePath{
		NodePath: ygot.NewNodePath(
			[]string{"storage"},
			map[string]interface{}{},
			n,
		),
	}
}

// Storage (container): Data for storage components
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "storage"
// Path from root: "/components/component/storage"
func (n *ComponentPathAny) Storage() *Component_StoragePathAny {
	return &Component_StoragePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"storage"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubcomponentAny (list): List of subcomponent references
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "subcomponents/subcomponent"
// Path from root: "/components/component/subcomponents/subcomponent"
// Name (wildcarded): string
func (n *ComponentPath) SubcomponentAny() *Component_SubcomponentPathAny {
	return &Component_SubcomponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subcomponents", "subcomponent"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// SubcomponentAny (list): List of subcomponent references
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "subcomponents/subcomponent"
// Path from root: "/components/component/subcomponents/subcomponent"
// Name (wildcarded): string
func (n *ComponentPathAny) SubcomponentAny() *Component_SubcomponentPathAny {
	return &Component_SubcomponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subcomponents", "subcomponent"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Subcomponent (list): List of subcomponent references
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "subcomponents/subcomponent"
// Path from root: "/components/component/subcomponents/subcomponent"
// Name: string
func (n *ComponentPath) Subcomponent(Name string) *Component_SubcomponentPath {
	return &Component_SubcomponentPath{
		NodePath: ygot.NewNodePath(
			[]string{"subcomponents", "subcomponent"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Subcomponent (list): List of subcomponent references
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "subcomponents/subcomponent"
// Path from root: "/components/component/subcomponents/subcomponent"
// Name: string
func (n *ComponentPathAny) Subcomponent(Name string) *Component_SubcomponentPathAny {
	return &Component_SubcomponentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subcomponents", "subcomponent"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Temperature (container): Temperature in degrees Celsius of the component. Values include
// the instantaneous, average, minimum, and maximum statistics. If
// avg/min/max statistics are not supported, the target is expected
// to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/temperature"
// Path from root: "/components/component/state/temperature"
func (n *ComponentPath) Temperature() *Component_TemperaturePath {
	return &Component_TemperaturePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "temperature"},
			map[string]interface{}{},
			n,
		),
	}
}

// Temperature (container): Temperature in degrees Celsius of the component. Values include
// the instantaneous, average, minimum, and maximum statistics. If
// avg/min/max statistics are not supported, the target is expected
// to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/temperature"
// Path from root: "/components/component/state/temperature"
func (n *ComponentPathAny) Temperature() *Component_TemperaturePathAny {
	return &Component_TemperaturePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "temperature"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transceiver (container): Top-level container for client port transceiver data
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "transceiver"
// Path from root: "/components/component/transceiver"
func (n *ComponentPath) Transceiver() *Component_TransceiverPath {
	return &Component_TransceiverPath{
		NodePath: ygot.NewNodePath(
			[]string{"transceiver"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transceiver (container): Top-level container for client port transceiver data
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "transceiver"
// Path from root: "/components/component/transceiver"
func (n *ComponentPathAny) Transceiver() *Component_TransceiverPathAny {
	return &Component_TransceiverPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transceiver"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of component as identified by the system
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/type"
// Path from root: "/components/component/state/type"
func (n *ComponentPath) Type() *Component_TypePath {
	return &Component_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of component as identified by the system
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/type"
// Path from root: "/components/component/state/type"
func (n *ComponentPathAny) Type() *Component_TypePathAny {
	return &Component_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UsedPower (leaf): Actual power used by the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/used-power"
// Path from root: "/components/component/state/used-power"
func (n *ComponentPath) UsedPower() *Component_UsedPowerPath {
	return &Component_UsedPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "used-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// UsedPower (leaf): Actual power used by the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/used-power"
// Path from root: "/components/component/state/used-power"
func (n *ComponentPathAny) UsedPower() *Component_UsedPowerPathAny {
	return &Component_UsedPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "used-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_BackplanePath represents the /openconfig-platform/components/component/backplane YANG schema element.
type Component_BackplanePath struct {
	*ygot.NodePath
}

// Component_BackplanePathAny represents the wildcard version of the /openconfig-platform/components/component/backplane YANG schema element.
type Component_BackplanePathAny struct {
	*ygot.NodePath
}

// Component_ChassisPath represents the /openconfig-platform/components/component/chassis YANG schema element.
type Component_ChassisPath struct {
	*ygot.NodePath
}

// Component_ChassisPathAny represents the wildcard version of the /openconfig-platform/components/component/chassis YANG schema element.
type Component_ChassisPathAny struct {
	*ygot.NodePath
}

// Component_CpuPath represents the /openconfig-platform/components/component/cpu YANG schema element.
type Component_CpuPath struct {
	*ygot.NodePath
}

// Component_CpuPathAny represents the wildcard version of the /openconfig-platform/components/component/cpu YANG schema element.
type Component_CpuPathAny struct {
	*ygot.NodePath
}

// Utilization (container): Statistics representing CPU utilization of the
// component.
// ----------------------------------------
// Defining module: "openconfig-platform-cpu"
// Instantiating module: "openconfig-platform"
// Path from parent: "utilization"
// Path from root: "/components/component/cpu/utilization"
func (n *Component_CpuPath) Utilization() *Component_Cpu_UtilizationPath {
	return &Component_Cpu_UtilizationPath{
		NodePath: ygot.NewNodePath(
			[]string{"utilization"},
			map[string]interface{}{},
			n,
		),
	}
}

// Utilization (container): Statistics representing CPU utilization of the
// component.
// ----------------------------------------
// Defining module: "openconfig-platform-cpu"
// Instantiating module: "openconfig-platform"
// Path from parent: "utilization"
// Path from root: "/components/component/cpu/utilization"
func (n *Component_CpuPathAny) Utilization() *Component_Cpu_UtilizationPathAny {
	return &Component_Cpu_UtilizationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"utilization"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Cpu_UtilizationPath represents the /openconfig-platform/components/component/cpu/utilization YANG schema element.
type Component_Cpu_UtilizationPath struct {
	*ygot.NodePath
}

// Component_Cpu_UtilizationPathAny represents the wildcard version of the /openconfig-platform/components/component/cpu/utilization YANG schema element.
type Component_Cpu_UtilizationPathAny struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_AvgPath represents the /openconfig-platform/components/component/cpu/utilization/state/avg YANG schema element.
type Component_Cpu_Utilization_AvgPath struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/cpu/utilization/state/avg YANG schema element.
type Component_Cpu_Utilization_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_InstantPath represents the /openconfig-platform/components/component/cpu/utilization/state/instant YANG schema element.
type Component_Cpu_Utilization_InstantPath struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/cpu/utilization/state/instant YANG schema element.
type Component_Cpu_Utilization_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_IntervalPath represents the /openconfig-platform/components/component/cpu/utilization/state/interval YANG schema element.
type Component_Cpu_Utilization_IntervalPath struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/cpu/utilization/state/interval YANG schema element.
type Component_Cpu_Utilization_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_MaxPath represents the /openconfig-platform/components/component/cpu/utilization/state/max YANG schema element.
type Component_Cpu_Utilization_MaxPath struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/cpu/utilization/state/max YANG schema element.
type Component_Cpu_Utilization_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_MaxTimePath represents the /openconfig-platform/components/component/cpu/utilization/state/max-time YANG schema element.
type Component_Cpu_Utilization_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/cpu/utilization/state/max-time YANG schema element.
type Component_Cpu_Utilization_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_MinPath represents the /openconfig-platform/components/component/cpu/utilization/state/min YANG schema element.
type Component_Cpu_Utilization_MinPath struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/cpu/utilization/state/min YANG schema element.
type Component_Cpu_Utilization_MinPathAny struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_MinTimePath represents the /openconfig-platform/components/component/cpu/utilization/state/min-time YANG schema element.
type Component_Cpu_Utilization_MinTimePath struct {
	*ygot.NodePath
}

// Component_Cpu_Utilization_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/cpu/utilization/state/min-time YANG schema element.
type Component_Cpu_Utilization_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/avg"
// Path from root: "/components/component/cpu/utilization/state/avg"
func (n *Component_Cpu_UtilizationPath) Avg() *Component_Cpu_Utilization_AvgPath {
	return &Component_Cpu_Utilization_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/avg"
// Path from root: "/components/component/cpu/utilization/state/avg"
func (n *Component_Cpu_UtilizationPathAny) Avg() *Component_Cpu_Utilization_AvgPathAny {
	return &Component_Cpu_Utilization_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/instant"
// Path from root: "/components/component/cpu/utilization/state/instant"
func (n *Component_Cpu_UtilizationPath) Instant() *Component_Cpu_Utilization_InstantPath {
	return &Component_Cpu_Utilization_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/instant"
// Path from root: "/components/component/cpu/utilization/state/instant"
func (n *Component_Cpu_UtilizationPathAny) Instant() *Component_Cpu_Utilization_InstantPathAny {
	return &Component_Cpu_Utilization_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/interval"
// Path from root: "/components/component/cpu/utilization/state/interval"
func (n *Component_Cpu_UtilizationPath) Interval() *Component_Cpu_Utilization_IntervalPath {
	return &Component_Cpu_Utilization_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/interval"
// Path from root: "/components/component/cpu/utilization/state/interval"
func (n *Component_Cpu_UtilizationPathAny) Interval() *Component_Cpu_Utilization_IntervalPathAny {
	return &Component_Cpu_Utilization_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/max"
// Path from root: "/components/component/cpu/utilization/state/max"
func (n *Component_Cpu_UtilizationPath) Max() *Component_Cpu_Utilization_MaxPath {
	return &Component_Cpu_Utilization_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/max"
// Path from root: "/components/component/cpu/utilization/state/max"
func (n *Component_Cpu_UtilizationPathAny) Max() *Component_Cpu_Utilization_MaxPathAny {
	return &Component_Cpu_Utilization_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/max-time"
// Path from root: "/components/component/cpu/utilization/state/max-time"
func (n *Component_Cpu_UtilizationPath) MaxTime() *Component_Cpu_Utilization_MaxTimePath {
	return &Component_Cpu_Utilization_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/max-time"
// Path from root: "/components/component/cpu/utilization/state/max-time"
func (n *Component_Cpu_UtilizationPathAny) MaxTime() *Component_Cpu_Utilization_MaxTimePathAny {
	return &Component_Cpu_Utilization_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/min"
// Path from root: "/components/component/cpu/utilization/state/min"
func (n *Component_Cpu_UtilizationPath) Min() *Component_Cpu_Utilization_MinPath {
	return &Component_Cpu_Utilization_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/min"
// Path from root: "/components/component/cpu/utilization/state/min"
func (n *Component_Cpu_UtilizationPathAny) Min() *Component_Cpu_Utilization_MinPathAny {
	return &Component_Cpu_Utilization_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/min-time"
// Path from root: "/components/component/cpu/utilization/state/min-time"
func (n *Component_Cpu_UtilizationPath) MinTime() *Component_Cpu_Utilization_MinTimePath {
	return &Component_Cpu_Utilization_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/min-time"
// Path from root: "/components/component/cpu/utilization/state/min-time"
func (n *Component_Cpu_UtilizationPathAny) MinTime() *Component_Cpu_Utilization_MinTimePathAny {
	return &Component_Cpu_Utilization_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_FabricPath represents the /openconfig-platform/components/component/fabric YANG schema element.
type Component_FabricPath struct {
	*ygot.NodePath
}

// Component_FabricPathAny represents the wildcard version of the /openconfig-platform/components/component/fabric YANG schema element.
type Component_FabricPathAny struct {
	*ygot.NodePath
}

// Component_FanPath represents the /openconfig-platform/components/component/fan YANG schema element.
type Component_FanPath struct {
	*ygot.NodePath
}

// Component_FanPathAny represents the wildcard version of the /openconfig-platform/components/component/fan YANG schema element.
type Component_FanPathAny struct {
	*ygot.NodePath
}

// Component_IntegratedCircuitPath represents the /openconfig-platform/components/component/integrated-circuit YANG schema element.
type Component_IntegratedCircuitPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuitPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit YANG schema element.
type Component_IntegratedCircuitPathAny struct {
	*ygot.NodePath
}

// BackplaneFacingCapacity (container): This container allows a particular INTEGRATED_CIRCUIT to report its
// available backplane-facing bandwidth. Where an integrated circuit is connected
// by one or more links to the system's backplane, the capacity is the total cross-
// sectional bandwidth available from the input ports of the integrated circuit
// across the fabric. The capacity should also reflect the operational status of
// the links.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "backplane-facing-capacity"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity"
func (n *Component_IntegratedCircuitPath) BackplaneFacingCapacity() *Component_IntegratedCircuit_BackplaneFacingCapacityPath {
	return &Component_IntegratedCircuit_BackplaneFacingCapacityPath{
		NodePath: ygot.NewNodePath(
			[]string{"backplane-facing-capacity"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackplaneFacingCapacity (container): This container allows a particular INTEGRATED_CIRCUIT to report its
// available backplane-facing bandwidth. Where an integrated circuit is connected
// by one or more links to the system's backplane, the capacity is the total cross-
// sectional bandwidth available from the input ports of the integrated circuit
// across the fabric. The capacity should also reflect the operational status of
// the links.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "backplane-facing-capacity"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity"
func (n *Component_IntegratedCircuitPathAny) BackplaneFacingCapacity() *Component_IntegratedCircuit_BackplaneFacingCapacityPathAny {
	return &Component_IntegratedCircuit_BackplaneFacingCapacityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"backplane-facing-capacity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Memory (container): Container for integrated circuit memory.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "memory"
// Path from root: "/components/component/integrated-circuit/memory"
func (n *Component_IntegratedCircuitPath) Memory() *Component_IntegratedCircuit_MemoryPath {
	return &Component_IntegratedCircuit_MemoryPath{
		NodePath: ygot.NewNodePath(
			[]string{"memory"},
			map[string]interface{}{},
			n,
		),
	}
}

// Memory (container): Container for integrated circuit memory.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "memory"
// Path from root: "/components/component/integrated-circuit/memory"
func (n *Component_IntegratedCircuitPathAny) Memory() *Component_IntegratedCircuit_MemoryPathAny {
	return &Component_IntegratedCircuit_MemoryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"memory"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_IntegratedCircuit_BackplaneFacingCapacityPath represents the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacityPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_BackplaneFacingCapacityPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacityPathAny struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_BackplaneFacingCapacity_AvailablePctPath represents the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity/state/available-pct YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacity_AvailablePctPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_BackplaneFacingCapacity_AvailablePctPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity/state/available-pct YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacity_AvailablePctPathAny struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_BackplaneFacingCapacity_ConsumedCapacityPath represents the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity/state/consumed-capacity YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacity_ConsumedCapacityPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_BackplaneFacingCapacity_ConsumedCapacityPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity/state/consumed-capacity YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacity_ConsumedCapacityPathAny struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_BackplaneFacingCapacity_TotalPath represents the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity/state/total YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacity_TotalPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_BackplaneFacingCapacity_TotalPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity/state/total YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacity_TotalPathAny struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_BackplaneFacingCapacity_TotalOperationalCapacityPath represents the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity/state/total-operational-capacity YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacity_TotalOperationalCapacityPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_BackplaneFacingCapacity_TotalOperationalCapacityPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit/backplane-facing-capacity/state/total-operational-capacity YANG schema element.
type Component_IntegratedCircuit_BackplaneFacingCapacity_TotalOperationalCapacityPathAny struct {
	*ygot.NodePath
}

// AvailablePct (leaf): Percentage of the total backplane-facing capacity that is currently available to the front
// panel ports taking into account failures and/or degradation within the system.
//
// In the case that there is more backplane-facing capacity available than the front-panel
// ports consume, this value may be greater than 100%.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/available-pct"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity/state/available-pct"
func (n *Component_IntegratedCircuit_BackplaneFacingCapacityPath) AvailablePct() *Component_IntegratedCircuit_BackplaneFacingCapacity_AvailablePctPath {
	return &Component_IntegratedCircuit_BackplaneFacingCapacity_AvailablePctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "available-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailablePct (leaf): Percentage of the total backplane-facing capacity that is currently available to the front
// panel ports taking into account failures and/or degradation within the system.
//
// In the case that there is more backplane-facing capacity available than the front-panel
// ports consume, this value may be greater than 100%.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/available-pct"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity/state/available-pct"
func (n *Component_IntegratedCircuit_BackplaneFacingCapacityPathAny) AvailablePct() *Component_IntegratedCircuit_BackplaneFacingCapacity_AvailablePctPathAny {
	return &Component_IntegratedCircuit_BackplaneFacingCapacity_AvailablePctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "available-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConsumedCapacity (leaf): Backplane-facing capacity that is consumed by front-panel ports that are connected
// to the integrated circuit and are operationally up.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/consumed-capacity"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity/state/consumed-capacity"
func (n *Component_IntegratedCircuit_BackplaneFacingCapacityPath) ConsumedCapacity() *Component_IntegratedCircuit_BackplaneFacingCapacity_ConsumedCapacityPath {
	return &Component_IntegratedCircuit_BackplaneFacingCapacity_ConsumedCapacityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "consumed-capacity"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConsumedCapacity (leaf): Backplane-facing capacity that is consumed by front-panel ports that are connected
// to the integrated circuit and are operationally up.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/consumed-capacity"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity/state/consumed-capacity"
func (n *Component_IntegratedCircuit_BackplaneFacingCapacityPathAny) ConsumedCapacity() *Component_IntegratedCircuit_BackplaneFacingCapacity_ConsumedCapacityPathAny {
	return &Component_IntegratedCircuit_BackplaneFacingCapacity_ConsumedCapacityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "consumed-capacity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Total (leaf): Total backplane-facing capacity that is available in the presence
// of no link failures or degradation.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/total"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity/state/total"
func (n *Component_IntegratedCircuit_BackplaneFacingCapacityPath) Total() *Component_IntegratedCircuit_BackplaneFacingCapacity_TotalPath {
	return &Component_IntegratedCircuit_BackplaneFacingCapacity_TotalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total"},
			map[string]interface{}{},
			n,
		),
	}
}

// Total (leaf): Total backplane-facing capacity that is available in the presence
// of no link failures or degradation.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/total"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity/state/total"
func (n *Component_IntegratedCircuit_BackplaneFacingCapacityPathAny) Total() *Component_IntegratedCircuit_BackplaneFacingCapacity_TotalPathAny {
	return &Component_IntegratedCircuit_BackplaneFacingCapacity_TotalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalOperationalCapacity (leaf): Total backplane-facing capacity that is currently available based
// on the active links.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/total-operational-capacity"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity/state/total-operational-capacity"
func (n *Component_IntegratedCircuit_BackplaneFacingCapacityPath) TotalOperationalCapacity() *Component_IntegratedCircuit_BackplaneFacingCapacity_TotalOperationalCapacityPath {
	return &Component_IntegratedCircuit_BackplaneFacingCapacity_TotalOperationalCapacityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-operational-capacity"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalOperationalCapacity (leaf): Total backplane-facing capacity that is currently available based
// on the active links.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/total-operational-capacity"
// Path from root: "/components/component/integrated-circuit/backplane-facing-capacity/state/total-operational-capacity"
func (n *Component_IntegratedCircuit_BackplaneFacingCapacityPathAny) TotalOperationalCapacity() *Component_IntegratedCircuit_BackplaneFacingCapacity_TotalOperationalCapacityPathAny {
	return &Component_IntegratedCircuit_BackplaneFacingCapacity_TotalOperationalCapacityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-operational-capacity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_IntegratedCircuit_MemoryPath represents the /openconfig-platform/components/component/integrated-circuit/memory YANG schema element.
type Component_IntegratedCircuit_MemoryPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_MemoryPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit/memory YANG schema element.
type Component_IntegratedCircuit_MemoryPathAny struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_Memory_CorrectedParityErrorsPath represents the /openconfig-platform/components/component/integrated-circuit/memory/state/corrected-parity-errors YANG schema element.
type Component_IntegratedCircuit_Memory_CorrectedParityErrorsPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_Memory_CorrectedParityErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit/memory/state/corrected-parity-errors YANG schema element.
type Component_IntegratedCircuit_Memory_CorrectedParityErrorsPathAny struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_Memory_TotalParityErrorsPath represents the /openconfig-platform/components/component/integrated-circuit/memory/state/total-parity-errors YANG schema element.
type Component_IntegratedCircuit_Memory_TotalParityErrorsPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_Memory_TotalParityErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit/memory/state/total-parity-errors YANG schema element.
type Component_IntegratedCircuit_Memory_TotalParityErrorsPathAny struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_Memory_UncorrectedParityErrorsPath represents the /openconfig-platform/components/component/integrated-circuit/memory/state/uncorrected-parity-errors YANG schema element.
type Component_IntegratedCircuit_Memory_UncorrectedParityErrorsPath struct {
	*ygot.NodePath
}

// Component_IntegratedCircuit_Memory_UncorrectedParityErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/integrated-circuit/memory/state/uncorrected-parity-errors YANG schema element.
type Component_IntegratedCircuit_Memory_UncorrectedParityErrorsPathAny struct {
	*ygot.NodePath
}

// CorrectedParityErrors (leaf): Number of corrected parity errors. Single bit ECC errors can be
// detected and corrected by most integrated circuits.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/corrected-parity-errors"
// Path from root: "/components/component/integrated-circuit/memory/state/corrected-parity-errors"
func (n *Component_IntegratedCircuit_MemoryPath) CorrectedParityErrors() *Component_IntegratedCircuit_Memory_CorrectedParityErrorsPath {
	return &Component_IntegratedCircuit_Memory_CorrectedParityErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "corrected-parity-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CorrectedParityErrors (leaf): Number of corrected parity errors. Single bit ECC errors can be
// detected and corrected by most integrated circuits.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/corrected-parity-errors"
// Path from root: "/components/component/integrated-circuit/memory/state/corrected-parity-errors"
func (n *Component_IntegratedCircuit_MemoryPathAny) CorrectedParityErrors() *Component_IntegratedCircuit_Memory_CorrectedParityErrorsPathAny {
	return &Component_IntegratedCircuit_Memory_CorrectedParityErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "corrected-parity-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalParityErrors (leaf): Total number of parity errors. This includes both the corrected and
// uncorrected parity errors.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/total-parity-errors"
// Path from root: "/components/component/integrated-circuit/memory/state/total-parity-errors"
func (n *Component_IntegratedCircuit_MemoryPath) TotalParityErrors() *Component_IntegratedCircuit_Memory_TotalParityErrorsPath {
	return &Component_IntegratedCircuit_Memory_TotalParityErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-parity-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalParityErrors (leaf): Total number of parity errors. This includes both the corrected and
// uncorrected parity errors.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/total-parity-errors"
// Path from root: "/components/component/integrated-circuit/memory/state/total-parity-errors"
func (n *Component_IntegratedCircuit_MemoryPathAny) TotalParityErrors() *Component_IntegratedCircuit_Memory_TotalParityErrorsPathAny {
	return &Component_IntegratedCircuit_Memory_TotalParityErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-parity-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UncorrectedParityErrors (leaf): Number of uncorrected parity errors. Multi-bit ECC errors can be
// detected but cannot be corrected by most integrated circuits.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/uncorrected-parity-errors"
// Path from root: "/components/component/integrated-circuit/memory/state/uncorrected-parity-errors"
func (n *Component_IntegratedCircuit_MemoryPath) UncorrectedParityErrors() *Component_IntegratedCircuit_Memory_UncorrectedParityErrorsPath {
	return &Component_IntegratedCircuit_Memory_UncorrectedParityErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "uncorrected-parity-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UncorrectedParityErrors (leaf): Number of uncorrected parity errors. Multi-bit ECC errors can be
// detected but cannot be corrected by most integrated circuits.
// ----------------------------------------
// Defining module: "openconfig-platform-integrated-circuit"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/uncorrected-parity-errors"
// Path from root: "/components/component/integrated-circuit/memory/state/uncorrected-parity-errors"
func (n *Component_IntegratedCircuit_MemoryPathAny) UncorrectedParityErrors() *Component_IntegratedCircuit_Memory_UncorrectedParityErrorsPathAny {
	return &Component_IntegratedCircuit_Memory_UncorrectedParityErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "uncorrected-parity-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_LastSwitchoverReasonPath represents the /openconfig-platform/components/component/state/last-switchover-reason YANG schema element.
type Component_LastSwitchoverReasonPath struct {
	*ygot.NodePath
}

// Component_LastSwitchoverReasonPathAny represents the wildcard version of the /openconfig-platform/components/component/state/last-switchover-reason YANG schema element.
type Component_LastSwitchoverReasonPathAny struct {
	*ygot.NodePath
}

// Component_LastSwitchoverReason_DetailsPath represents the /openconfig-platform/components/component/state/last-switchover-reason/details YANG schema element.
type Component_LastSwitchoverReason_DetailsPath struct {
	*ygot.NodePath
}

// Component_LastSwitchoverReason_DetailsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/last-switchover-reason/details YANG schema element.
type Component_LastSwitchoverReason_DetailsPathAny struct {
	*ygot.NodePath
}

// Component_LastSwitchoverReason_TriggerPath represents the /openconfig-platform/components/component/state/last-switchover-reason/trigger YANG schema element.
type Component_LastSwitchoverReason_TriggerPath struct {
	*ygot.NodePath
}

// Component_LastSwitchoverReason_TriggerPathAny represents the wildcard version of the /openconfig-platform/components/component/state/last-switchover-reason/trigger YANG schema element.
type Component_LastSwitchoverReason_TriggerPathAny struct {
	*ygot.NodePath
}

// Details (leaf): Records detailed description of why the switchover happens.
// For example, when system initiated the switchover, this leaf
// can be used to record the specific reason, e.g. due to critical
// errors of the routing daemon in the primary role.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "details"
// Path from root: "/components/component/state/last-switchover-reason/details"
func (n *Component_LastSwitchoverReasonPath) Details() *Component_LastSwitchoverReason_DetailsPath {
	return &Component_LastSwitchoverReason_DetailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"details"},
			map[string]interface{}{},
			n,
		),
	}
}

// Details (leaf): Records detailed description of why the switchover happens.
// For example, when system initiated the switchover, this leaf
// can be used to record the specific reason, e.g. due to critical
// errors of the routing daemon in the primary role.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "details"
// Path from root: "/components/component/state/last-switchover-reason/details"
func (n *Component_LastSwitchoverReasonPathAny) Details() *Component_LastSwitchoverReason_DetailsPathAny {
	return &Component_LastSwitchoverReason_DetailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"details"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf): Records the generic triggers, e.g. user or system
// initiated the switchover.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "trigger"
// Path from root: "/components/component/state/last-switchover-reason/trigger"
func (n *Component_LastSwitchoverReasonPath) Trigger() *Component_LastSwitchoverReason_TriggerPath {
	return &Component_LastSwitchoverReason_TriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf): Records the generic triggers, e.g. user or system
// initiated the switchover.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "trigger"
// Path from root: "/components/component/state/last-switchover-reason/trigger"
func (n *Component_LastSwitchoverReasonPathAny) Trigger() *Component_LastSwitchoverReason_TriggerPathAny {
	return &Component_LastSwitchoverReason_TriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_MemoryPath represents the /openconfig-platform/components/component/state/memory YANG schema element.
type Component_MemoryPath struct {
	*ygot.NodePath
}

// Component_MemoryPathAny represents the wildcard version of the /openconfig-platform/components/component/state/memory YANG schema element.
type Component_MemoryPathAny struct {
	*ygot.NodePath
}

// Component_Memory_AvailablePath represents the /openconfig-platform/components/component/state/memory/available YANG schema element.
type Component_Memory_AvailablePath struct {
	*ygot.NodePath
}

// Component_Memory_AvailablePathAny represents the wildcard version of the /openconfig-platform/components/component/state/memory/available YANG schema element.
type Component_Memory_AvailablePathAny struct {
	*ygot.NodePath
}

// Component_Memory_UtilizedPath represents the /openconfig-platform/components/component/state/memory/utilized YANG schema element.
type Component_Memory_UtilizedPath struct {
	*ygot.NodePath
}

// Component_Memory_UtilizedPathAny represents the wildcard version of the /openconfig-platform/components/component/state/memory/utilized YANG schema element.
type Component_Memory_UtilizedPathAny struct {
	*ygot.NodePath
}

// Available (leaf): The available memory physically installed, or logically
// allocated to the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "available"
// Path from root: "/components/component/state/memory/available"
func (n *Component_MemoryPath) Available() *Component_Memory_AvailablePath {
	return &Component_Memory_AvailablePath{
		NodePath: ygot.NewNodePath(
			[]string{"available"},
			map[string]interface{}{},
			n,
		),
	}
}

// Available (leaf): The available memory physically installed, or logically
// allocated to the component.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "available"
// Path from root: "/components/component/state/memory/available"
func (n *Component_MemoryPathAny) Available() *Component_Memory_AvailablePathAny {
	return &Component_Memory_AvailablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"available"},
			map[string]interface{}{},
			n,
		),
	}
}

// Utilized (leaf): The memory currently in use by processes running on
// the component, not considering reserved memory that is
// not available for use.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "utilized"
// Path from root: "/components/component/state/memory/utilized"
func (n *Component_MemoryPath) Utilized() *Component_Memory_UtilizedPath {
	return &Component_Memory_UtilizedPath{
		NodePath: ygot.NewNodePath(
			[]string{"utilized"},
			map[string]interface{}{},
			n,
		),
	}
}

// Utilized (leaf): The memory currently in use by processes running on
// the component, not considering reserved memory that is
// not available for use.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "utilized"
// Path from root: "/components/component/state/memory/utilized"
func (n *Component_MemoryPathAny) Utilized() *Component_Memory_UtilizedPathAny {
	return &Component_Memory_UtilizedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"utilized"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_PciePath represents the /openconfig-platform/components/component/state/pcie YANG schema element.
type Component_PciePath struct {
	*ygot.NodePath
}

// Component_PciePathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie YANG schema element.
type Component_PciePathAny struct {
	*ygot.NodePath
}

// CorrectableErrors (container): The count of the correctable PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "correctable-errors"
// Path from root: "/components/component/state/pcie/correctable-errors"
func (n *Component_PciePath) CorrectableErrors() *Component_Pcie_CorrectableErrorsPath {
	return &Component_Pcie_CorrectableErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"correctable-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CorrectableErrors (container): The count of the correctable PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "correctable-errors"
// Path from root: "/components/component/state/pcie/correctable-errors"
func (n *Component_PciePathAny) CorrectableErrors() *Component_Pcie_CorrectableErrorsPathAny {
	return &Component_Pcie_CorrectableErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"correctable-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FatalErrors (container): The count of the fatal PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "fatal-errors"
// Path from root: "/components/component/state/pcie/fatal-errors"
func (n *Component_PciePath) FatalErrors() *Component_Pcie_FatalErrorsPath {
	return &Component_Pcie_FatalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FatalErrors (container): The count of the fatal PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "fatal-errors"
// Path from root: "/components/component/state/pcie/fatal-errors"
func (n *Component_PciePathAny) FatalErrors() *Component_Pcie_FatalErrorsPathAny {
	return &Component_Pcie_FatalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// NonFatalErrors (container): The count of the non-fatal PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "non-fatal-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors"
func (n *Component_PciePath) NonFatalErrors() *Component_Pcie_NonFatalErrorsPath {
	return &Component_Pcie_NonFatalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"non-fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// NonFatalErrors (container): The count of the non-fatal PCIe errors.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "non-fatal-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors"
func (n *Component_PciePathAny) NonFatalErrors() *Component_Pcie_NonFatalErrorsPathAny {
	return &Component_Pcie_NonFatalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"non-fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Pcie_CorrectableErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors YANG schema element.
type Component_Pcie_CorrectableErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors YANG schema element.
type Component_Pcie_CorrectableErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/advisory-non-fatal-errors YANG schema element.
type Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/advisory-non-fatal-errors YANG schema element.
type Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_BadDllpErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/bad-dllp-errors YANG schema element.
type Component_Pcie_CorrectableErrors_BadDllpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_BadDllpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/bad-dllp-errors YANG schema element.
type Component_Pcie_CorrectableErrors_BadDllpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_BadTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/bad-tlp-errors YANG schema element.
type Component_Pcie_CorrectableErrors_BadTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_BadTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/bad-tlp-errors YANG schema element.
type Component_Pcie_CorrectableErrors_BadTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/hdr-log-overflow-errors YANG schema element.
type Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/hdr-log-overflow-errors YANG schema element.
type Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_InternalErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/internal-errors YANG schema element.
type Component_Pcie_CorrectableErrors_InternalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_InternalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/internal-errors YANG schema element.
type Component_Pcie_CorrectableErrors_InternalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_ReceiverErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/receiver-errors YANG schema element.
type Component_Pcie_CorrectableErrors_ReceiverErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_ReceiverErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/receiver-errors YANG schema element.
type Component_Pcie_CorrectableErrors_ReceiverErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_RelayRolloverErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/relay-rollover-errors YANG schema element.
type Component_Pcie_CorrectableErrors_RelayRolloverErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_RelayRolloverErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/relay-rollover-errors YANG schema element.
type Component_Pcie_CorrectableErrors_RelayRolloverErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/replay-timeout-errors YANG schema element.
type Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/replay-timeout-errors YANG schema element.
type Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_TotalErrorsPath represents the /openconfig-platform/components/component/state/pcie/correctable-errors/total-errors YANG schema element.
type Component_Pcie_CorrectableErrors_TotalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_CorrectableErrors_TotalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/correctable-errors/total-errors YANG schema element.
type Component_Pcie_CorrectableErrors_TotalErrorsPathAny struct {
	*ygot.NodePath
}

// AdvisoryNonFatalErrors (leaf): Number of advisory non fatal errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "advisory-non-fatal-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/advisory-non-fatal-errors"
func (n *Component_Pcie_CorrectableErrorsPath) AdvisoryNonFatalErrors() *Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPath {
	return &Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"advisory-non-fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvisoryNonFatalErrors (leaf): Number of advisory non fatal errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "advisory-non-fatal-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/advisory-non-fatal-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) AdvisoryNonFatalErrors() *Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_AdvisoryNonFatalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"advisory-non-fatal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadDllpErrors (leaf): Number of DLLPs with bad LCRC detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "bad-dllp-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/bad-dllp-errors"
func (n *Component_Pcie_CorrectableErrorsPath) BadDllpErrors() *Component_Pcie_CorrectableErrors_BadDllpErrorsPath {
	return &Component_Pcie_CorrectableErrors_BadDllpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-dllp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadDllpErrors (leaf): Number of DLLPs with bad LCRC detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "bad-dllp-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/bad-dllp-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) BadDllpErrors() *Component_Pcie_CorrectableErrors_BadDllpErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_BadDllpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-dllp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadTlpErrors (leaf): Number of TLPs with bad LCRC detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "bad-tlp-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/bad-tlp-errors"
func (n *Component_Pcie_CorrectableErrorsPath) BadTlpErrors() *Component_Pcie_CorrectableErrors_BadTlpErrorsPath {
	return &Component_Pcie_CorrectableErrors_BadTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadTlpErrors (leaf): Number of TLPs with bad LCRC detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "bad-tlp-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/bad-tlp-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) BadTlpErrors() *Component_Pcie_CorrectableErrors_BadTlpErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_BadTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// HdrLogOverflowErrors (leaf): Number of header log overflow errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "hdr-log-overflow-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/hdr-log-overflow-errors"
func (n *Component_Pcie_CorrectableErrorsPath) HdrLogOverflowErrors() *Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPath {
	return &Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"hdr-log-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// HdrLogOverflowErrors (leaf): Number of header log overflow errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "hdr-log-overflow-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/hdr-log-overflow-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) HdrLogOverflowErrors() *Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_HdrLogOverflowErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hdr-log-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/internal-errors"
func (n *Component_Pcie_CorrectableErrorsPath) InternalErrors() *Component_Pcie_CorrectableErrors_InternalErrorsPath {
	return &Component_Pcie_CorrectableErrors_InternalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/internal-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) InternalErrors() *Component_Pcie_CorrectableErrors_InternalErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_InternalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverErrors (leaf): Number of receiver errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/receiver-errors"
func (n *Component_Pcie_CorrectableErrorsPath) ReceiverErrors() *Component_Pcie_CorrectableErrors_ReceiverErrorsPath {
	return &Component_Pcie_CorrectableErrors_ReceiverErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverErrors (leaf): Number of receiver errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/receiver-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) ReceiverErrors() *Component_Pcie_CorrectableErrors_ReceiverErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_ReceiverErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// RelayRolloverErrors (leaf): Number of relay rollover errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "relay-rollover-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/relay-rollover-errors"
func (n *Component_Pcie_CorrectableErrorsPath) RelayRolloverErrors() *Component_Pcie_CorrectableErrors_RelayRolloverErrorsPath {
	return &Component_Pcie_CorrectableErrors_RelayRolloverErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"relay-rollover-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// RelayRolloverErrors (leaf): Number of relay rollover errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "relay-rollover-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/relay-rollover-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) RelayRolloverErrors() *Component_Pcie_CorrectableErrors_RelayRolloverErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_RelayRolloverErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"relay-rollover-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplayTimeoutErrors (leaf): Number of replay timeout errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "replay-timeout-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/replay-timeout-errors"
func (n *Component_Pcie_CorrectableErrorsPath) ReplayTimeoutErrors() *Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPath {
	return &Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"replay-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplayTimeoutErrors (leaf): Number of replay timeout errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "replay-timeout-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/replay-timeout-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) ReplayTimeoutErrors() *Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_ReplayTimeoutErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"replay-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of correctable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/total-errors"
func (n *Component_Pcie_CorrectableErrorsPath) TotalErrors() *Component_Pcie_CorrectableErrors_TotalErrorsPath {
	return &Component_Pcie_CorrectableErrors_TotalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of correctable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/correctable-errors/total-errors"
func (n *Component_Pcie_CorrectableErrorsPathAny) TotalErrors() *Component_Pcie_CorrectableErrors_TotalErrorsPathAny {
	return &Component_Pcie_CorrectableErrors_TotalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Pcie_FatalErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors YANG schema element.
type Component_Pcie_FatalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors YANG schema element.
type Component_Pcie_FatalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_AcsViolationErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/acs-violation-errors YANG schema element.
type Component_Pcie_FatalErrors_AcsViolationErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_AcsViolationErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/acs-violation-errors YANG schema element.
type Component_Pcie_FatalErrors_AcsViolationErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/atomic-op-blocked-errors YANG schema element.
type Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/atomic-op-blocked-errors YANG schema element.
type Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_BlockedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/blocked-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_BlockedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_BlockedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/blocked-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_BlockedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_CompletionAbortErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/completion-abort-errors YANG schema element.
type Component_Pcie_FatalErrors_CompletionAbortErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_CompletionAbortErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/completion-abort-errors YANG schema element.
type Component_Pcie_FatalErrors_CompletionAbortErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_CompletionTimeoutErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/completion-timeout-errors YANG schema element.
type Component_Pcie_FatalErrors_CompletionTimeoutErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_CompletionTimeoutErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/completion-timeout-errors YANG schema element.
type Component_Pcie_FatalErrors_CompletionTimeoutErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_DataLinkErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/data-link-errors YANG schema element.
type Component_Pcie_FatalErrors_DataLinkErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_DataLinkErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/data-link-errors YANG schema element.
type Component_Pcie_FatalErrors_DataLinkErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_EcrcErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/ecrc-errors YANG schema element.
type Component_Pcie_FatalErrors_EcrcErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_EcrcErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/ecrc-errors YANG schema element.
type Component_Pcie_FatalErrors_EcrcErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_FlowControlProtocolErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/flow-control-protocol-errors YANG schema element.
type Component_Pcie_FatalErrors_FlowControlProtocolErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_FlowControlProtocolErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/flow-control-protocol-errors YANG schema element.
type Component_Pcie_FatalErrors_FlowControlProtocolErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_InternalErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/internal-errors YANG schema element.
type Component_Pcie_FatalErrors_InternalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_InternalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/internal-errors YANG schema element.
type Component_Pcie_FatalErrors_InternalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_MalformedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/malformed-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_MalformedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_MalformedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/malformed-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_MalformedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_PoisonedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/poisoned-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_PoisonedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_PoisonedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/poisoned-tlp-errors YANG schema element.
type Component_Pcie_FatalErrors_PoisonedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_ReceiverOverflowErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/receiver-overflow-errors YANG schema element.
type Component_Pcie_FatalErrors_ReceiverOverflowErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_ReceiverOverflowErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/receiver-overflow-errors YANG schema element.
type Component_Pcie_FatalErrors_ReceiverOverflowErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_SurpriseDownErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/surprise-down-errors YANG schema element.
type Component_Pcie_FatalErrors_SurpriseDownErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_SurpriseDownErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/surprise-down-errors YANG schema element.
type Component_Pcie_FatalErrors_SurpriseDownErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/tlp-prefix-blocked-errors YANG schema element.
type Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/tlp-prefix-blocked-errors YANG schema element.
type Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_TotalErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/total-errors YANG schema element.
type Component_Pcie_FatalErrors_TotalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_TotalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/total-errors YANG schema element.
type Component_Pcie_FatalErrors_TotalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UndefinedErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/undefined-errors YANG schema element.
type Component_Pcie_FatalErrors_UndefinedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UndefinedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/undefined-errors YANG schema element.
type Component_Pcie_FatalErrors_UndefinedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/unexpected-completion-errors YANG schema element.
type Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/unexpected-completion-errors YANG schema element.
type Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UnsupportedRequestErrorsPath represents the /openconfig-platform/components/component/state/pcie/fatal-errors/unsupported-request-errors YANG schema element.
type Component_Pcie_FatalErrors_UnsupportedRequestErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_FatalErrors_UnsupportedRequestErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/fatal-errors/unsupported-request-errors YANG schema element.
type Component_Pcie_FatalErrors_UnsupportedRequestErrorsPathAny struct {
	*ygot.NodePath
}

// AcsViolationErrors (leaf): Number of access control errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "acs-violation-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/acs-violation-errors"
func (n *Component_Pcie_FatalErrorsPath) AcsViolationErrors() *Component_Pcie_FatalErrors_AcsViolationErrorsPath {
	return &Component_Pcie_FatalErrors_AcsViolationErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"acs-violation-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AcsViolationErrors (leaf): Number of access control errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "acs-violation-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/acs-violation-errors"
func (n *Component_Pcie_FatalErrorsPathAny) AcsViolationErrors() *Component_Pcie_FatalErrors_AcsViolationErrorsPathAny {
	return &Component_Pcie_FatalErrors_AcsViolationErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"acs-violation-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicOpBlockedErrors (leaf): Number of atomic operation blocked errors detected by PCIe
// device since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "atomic-op-blocked-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/atomic-op-blocked-errors"
func (n *Component_Pcie_FatalErrorsPath) AtomicOpBlockedErrors() *Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPath {
	return &Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"atomic-op-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicOpBlockedErrors (leaf): Number of atomic operation blocked errors detected by PCIe
// device since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "atomic-op-blocked-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/atomic-op-blocked-errors"
func (n *Component_Pcie_FatalErrorsPathAny) AtomicOpBlockedErrors() *Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPathAny {
	return &Component_Pcie_FatalErrors_AtomicOpBlockedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"atomic-op-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BlockedTlpErrors (leaf): Number of blocked TLP errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "blocked-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/blocked-tlp-errors"
func (n *Component_Pcie_FatalErrorsPath) BlockedTlpErrors() *Component_Pcie_FatalErrors_BlockedTlpErrorsPath {
	return &Component_Pcie_FatalErrors_BlockedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"blocked-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BlockedTlpErrors (leaf): Number of blocked TLP errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "blocked-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/blocked-tlp-errors"
func (n *Component_Pcie_FatalErrorsPathAny) BlockedTlpErrors() *Component_Pcie_FatalErrors_BlockedTlpErrorsPathAny {
	return &Component_Pcie_FatalErrors_BlockedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"blocked-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionAbortErrors (leaf): Number of completion abort errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-abort-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/completion-abort-errors"
func (n *Component_Pcie_FatalErrorsPath) CompletionAbortErrors() *Component_Pcie_FatalErrors_CompletionAbortErrorsPath {
	return &Component_Pcie_FatalErrors_CompletionAbortErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"completion-abort-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionAbortErrors (leaf): Number of completion abort errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-abort-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/completion-abort-errors"
func (n *Component_Pcie_FatalErrorsPathAny) CompletionAbortErrors() *Component_Pcie_FatalErrors_CompletionAbortErrorsPathAny {
	return &Component_Pcie_FatalErrors_CompletionAbortErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"completion-abort-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionTimeoutErrors (leaf): Number of completion timeout errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-timeout-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/completion-timeout-errors"
func (n *Component_Pcie_FatalErrorsPath) CompletionTimeoutErrors() *Component_Pcie_FatalErrors_CompletionTimeoutErrorsPath {
	return &Component_Pcie_FatalErrors_CompletionTimeoutErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"completion-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionTimeoutErrors (leaf): Number of completion timeout errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-timeout-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/completion-timeout-errors"
func (n *Component_Pcie_FatalErrorsPathAny) CompletionTimeoutErrors() *Component_Pcie_FatalErrors_CompletionTimeoutErrorsPathAny {
	return &Component_Pcie_FatalErrors_CompletionTimeoutErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"completion-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataLinkErrors (leaf): Number of data-link errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "data-link-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/data-link-errors"
func (n *Component_Pcie_FatalErrorsPath) DataLinkErrors() *Component_Pcie_FatalErrors_DataLinkErrorsPath {
	return &Component_Pcie_FatalErrors_DataLinkErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"data-link-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataLinkErrors (leaf): Number of data-link errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "data-link-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/data-link-errors"
func (n *Component_Pcie_FatalErrorsPathAny) DataLinkErrors() *Component_Pcie_FatalErrors_DataLinkErrorsPathAny {
	return &Component_Pcie_FatalErrors_DataLinkErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"data-link-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// EcrcErrors (leaf): Number of ECRC errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "ecrc-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/ecrc-errors"
func (n *Component_Pcie_FatalErrorsPath) EcrcErrors() *Component_Pcie_FatalErrors_EcrcErrorsPath {
	return &Component_Pcie_FatalErrors_EcrcErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"ecrc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// EcrcErrors (leaf): Number of ECRC errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "ecrc-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/ecrc-errors"
func (n *Component_Pcie_FatalErrorsPathAny) EcrcErrors() *Component_Pcie_FatalErrors_EcrcErrorsPathAny {
	return &Component_Pcie_FatalErrors_EcrcErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ecrc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlowControlProtocolErrors (leaf): Number of flow control protocol errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "flow-control-protocol-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/flow-control-protocol-errors"
func (n *Component_Pcie_FatalErrorsPath) FlowControlProtocolErrors() *Component_Pcie_FatalErrors_FlowControlProtocolErrorsPath {
	return &Component_Pcie_FatalErrors_FlowControlProtocolErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flow-control-protocol-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlowControlProtocolErrors (leaf): Number of flow control protocol errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "flow-control-protocol-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/flow-control-protocol-errors"
func (n *Component_Pcie_FatalErrorsPathAny) FlowControlProtocolErrors() *Component_Pcie_FatalErrors_FlowControlProtocolErrorsPathAny {
	return &Component_Pcie_FatalErrors_FlowControlProtocolErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flow-control-protocol-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/internal-errors"
func (n *Component_Pcie_FatalErrorsPath) InternalErrors() *Component_Pcie_FatalErrors_InternalErrorsPath {
	return &Component_Pcie_FatalErrors_InternalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/internal-errors"
func (n *Component_Pcie_FatalErrorsPathAny) InternalErrors() *Component_Pcie_FatalErrors_InternalErrorsPathAny {
	return &Component_Pcie_FatalErrors_InternalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// MalformedTlpErrors (leaf): Number of malformed TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "malformed-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/malformed-tlp-errors"
func (n *Component_Pcie_FatalErrorsPath) MalformedTlpErrors() *Component_Pcie_FatalErrors_MalformedTlpErrorsPath {
	return &Component_Pcie_FatalErrors_MalformedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"malformed-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// MalformedTlpErrors (leaf): Number of malformed TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "malformed-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/malformed-tlp-errors"
func (n *Component_Pcie_FatalErrorsPathAny) MalformedTlpErrors() *Component_Pcie_FatalErrors_MalformedTlpErrorsPathAny {
	return &Component_Pcie_FatalErrors_MalformedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"malformed-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoisonedTlpErrors (leaf): Number of poisoned TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "poisoned-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/poisoned-tlp-errors"
func (n *Component_Pcie_FatalErrorsPath) PoisonedTlpErrors() *Component_Pcie_FatalErrors_PoisonedTlpErrorsPath {
	return &Component_Pcie_FatalErrors_PoisonedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"poisoned-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoisonedTlpErrors (leaf): Number of poisoned TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "poisoned-tlp-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/poisoned-tlp-errors"
func (n *Component_Pcie_FatalErrorsPathAny) PoisonedTlpErrors() *Component_Pcie_FatalErrors_PoisonedTlpErrorsPathAny {
	return &Component_Pcie_FatalErrors_PoisonedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"poisoned-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverOverflowErrors (leaf): Number of receiver overflow errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-overflow-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/receiver-overflow-errors"
func (n *Component_Pcie_FatalErrorsPath) ReceiverOverflowErrors() *Component_Pcie_FatalErrors_ReceiverOverflowErrorsPath {
	return &Component_Pcie_FatalErrors_ReceiverOverflowErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverOverflowErrors (leaf): Number of receiver overflow errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-overflow-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/receiver-overflow-errors"
func (n *Component_Pcie_FatalErrorsPathAny) ReceiverOverflowErrors() *Component_Pcie_FatalErrors_ReceiverOverflowErrorsPathAny {
	return &Component_Pcie_FatalErrors_ReceiverOverflowErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// SurpriseDownErrors (leaf): Number of unexpected link down errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "surprise-down-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/surprise-down-errors"
func (n *Component_Pcie_FatalErrorsPath) SurpriseDownErrors() *Component_Pcie_FatalErrors_SurpriseDownErrorsPath {
	return &Component_Pcie_FatalErrors_SurpriseDownErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"surprise-down-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// SurpriseDownErrors (leaf): Number of unexpected link down errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "surprise-down-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/surprise-down-errors"
func (n *Component_Pcie_FatalErrorsPathAny) SurpriseDownErrors() *Component_Pcie_FatalErrors_SurpriseDownErrorsPathAny {
	return &Component_Pcie_FatalErrors_SurpriseDownErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"surprise-down-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlpPrefixBlockedErrors (leaf): Number of TLP prefix blocked errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "tlp-prefix-blocked-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/tlp-prefix-blocked-errors"
func (n *Component_Pcie_FatalErrorsPath) TlpPrefixBlockedErrors() *Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPath {
	return &Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"tlp-prefix-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlpPrefixBlockedErrors (leaf): Number of TLP prefix blocked errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "tlp-prefix-blocked-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/tlp-prefix-blocked-errors"
func (n *Component_Pcie_FatalErrorsPathAny) TlpPrefixBlockedErrors() *Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPathAny {
	return &Component_Pcie_FatalErrors_TlpPrefixBlockedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlp-prefix-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of uncorrectable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/total-errors"
func (n *Component_Pcie_FatalErrorsPath) TotalErrors() *Component_Pcie_FatalErrors_TotalErrorsPath {
	return &Component_Pcie_FatalErrors_TotalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of uncorrectable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/total-errors"
func (n *Component_Pcie_FatalErrorsPathAny) TotalErrors() *Component_Pcie_FatalErrors_TotalErrorsPathAny {
	return &Component_Pcie_FatalErrors_TotalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UndefinedErrors (leaf): Number of undefined errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "undefined-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/undefined-errors"
func (n *Component_Pcie_FatalErrorsPath) UndefinedErrors() *Component_Pcie_FatalErrors_UndefinedErrorsPath {
	return &Component_Pcie_FatalErrors_UndefinedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UndefinedErrors (leaf): Number of undefined errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "undefined-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/undefined-errors"
func (n *Component_Pcie_FatalErrorsPathAny) UndefinedErrors() *Component_Pcie_FatalErrors_UndefinedErrorsPathAny {
	return &Component_Pcie_FatalErrors_UndefinedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnexpectedCompletionErrors (leaf): Number of unexpected completion errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unexpected-completion-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/unexpected-completion-errors"
func (n *Component_Pcie_FatalErrorsPath) UnexpectedCompletionErrors() *Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPath {
	return &Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"unexpected-completion-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnexpectedCompletionErrors (leaf): Number of unexpected completion errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unexpected-completion-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/unexpected-completion-errors"
func (n *Component_Pcie_FatalErrorsPathAny) UnexpectedCompletionErrors() *Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPathAny {
	return &Component_Pcie_FatalErrors_UnexpectedCompletionErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unexpected-completion-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnsupportedRequestErrors (leaf): Number of unsupported request errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unsupported-request-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/unsupported-request-errors"
func (n *Component_Pcie_FatalErrorsPath) UnsupportedRequestErrors() *Component_Pcie_FatalErrors_UnsupportedRequestErrorsPath {
	return &Component_Pcie_FatalErrors_UnsupportedRequestErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"unsupported-request-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnsupportedRequestErrors (leaf): Number of unsupported request errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unsupported-request-errors"
// Path from root: "/components/component/state/pcie/fatal-errors/unsupported-request-errors"
func (n *Component_Pcie_FatalErrorsPathAny) UnsupportedRequestErrors() *Component_Pcie_FatalErrors_UnsupportedRequestErrorsPathAny {
	return &Component_Pcie_FatalErrors_UnsupportedRequestErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unsupported-request-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Pcie_NonFatalErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors YANG schema element.
type Component_Pcie_NonFatalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors YANG schema element.
type Component_Pcie_NonFatalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_AcsViolationErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/acs-violation-errors YANG schema element.
type Component_Pcie_NonFatalErrors_AcsViolationErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_AcsViolationErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/acs-violation-errors YANG schema element.
type Component_Pcie_NonFatalErrors_AcsViolationErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/atomic-op-blocked-errors YANG schema element.
type Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/atomic-op-blocked-errors YANG schema element.
type Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_BlockedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/blocked-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_BlockedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_BlockedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/blocked-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_BlockedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_CompletionAbortErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/completion-abort-errors YANG schema element.
type Component_Pcie_NonFatalErrors_CompletionAbortErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_CompletionAbortErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/completion-abort-errors YANG schema element.
type Component_Pcie_NonFatalErrors_CompletionAbortErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/completion-timeout-errors YANG schema element.
type Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/completion-timeout-errors YANG schema element.
type Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_DataLinkErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/data-link-errors YANG schema element.
type Component_Pcie_NonFatalErrors_DataLinkErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_DataLinkErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/data-link-errors YANG schema element.
type Component_Pcie_NonFatalErrors_DataLinkErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_EcrcErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/ecrc-errors YANG schema element.
type Component_Pcie_NonFatalErrors_EcrcErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_EcrcErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/ecrc-errors YANG schema element.
type Component_Pcie_NonFatalErrors_EcrcErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/flow-control-protocol-errors YANG schema element.
type Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/flow-control-protocol-errors YANG schema element.
type Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_InternalErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/internal-errors YANG schema element.
type Component_Pcie_NonFatalErrors_InternalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_InternalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/internal-errors YANG schema element.
type Component_Pcie_NonFatalErrors_InternalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_MalformedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/malformed-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_MalformedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_MalformedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/malformed-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_MalformedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/poisoned-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/poisoned-tlp-errors YANG schema element.
type Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/receiver-overflow-errors YANG schema element.
type Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/receiver-overflow-errors YANG schema element.
type Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_SurpriseDownErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/surprise-down-errors YANG schema element.
type Component_Pcie_NonFatalErrors_SurpriseDownErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_SurpriseDownErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/surprise-down-errors YANG schema element.
type Component_Pcie_NonFatalErrors_SurpriseDownErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/tlp-prefix-blocked-errors YANG schema element.
type Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/tlp-prefix-blocked-errors YANG schema element.
type Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_TotalErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/total-errors YANG schema element.
type Component_Pcie_NonFatalErrors_TotalErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_TotalErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/total-errors YANG schema element.
type Component_Pcie_NonFatalErrors_TotalErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UndefinedErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/undefined-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UndefinedErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UndefinedErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/undefined-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UndefinedErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/unexpected-completion-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/unexpected-completion-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPathAny struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPath represents the /openconfig-platform/components/component/state/pcie/non-fatal-errors/unsupported-request-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPath struct {
	*ygot.NodePath
}

// Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPathAny represents the wildcard version of the /openconfig-platform/components/component/state/pcie/non-fatal-errors/unsupported-request-errors YANG schema element.
type Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPathAny struct {
	*ygot.NodePath
}

// AcsViolationErrors (leaf): Number of access control errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "acs-violation-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/acs-violation-errors"
func (n *Component_Pcie_NonFatalErrorsPath) AcsViolationErrors() *Component_Pcie_NonFatalErrors_AcsViolationErrorsPath {
	return &Component_Pcie_NonFatalErrors_AcsViolationErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"acs-violation-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AcsViolationErrors (leaf): Number of access control errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "acs-violation-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/acs-violation-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) AcsViolationErrors() *Component_Pcie_NonFatalErrors_AcsViolationErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_AcsViolationErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"acs-violation-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicOpBlockedErrors (leaf): Number of atomic operation blocked errors detected by PCIe
// device since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "atomic-op-blocked-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/atomic-op-blocked-errors"
func (n *Component_Pcie_NonFatalErrorsPath) AtomicOpBlockedErrors() *Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPath {
	return &Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"atomic-op-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicOpBlockedErrors (leaf): Number of atomic operation blocked errors detected by PCIe
// device since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "atomic-op-blocked-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/atomic-op-blocked-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) AtomicOpBlockedErrors() *Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_AtomicOpBlockedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"atomic-op-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BlockedTlpErrors (leaf): Number of blocked TLP errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "blocked-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/blocked-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPath) BlockedTlpErrors() *Component_Pcie_NonFatalErrors_BlockedTlpErrorsPath {
	return &Component_Pcie_NonFatalErrors_BlockedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"blocked-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// BlockedTlpErrors (leaf): Number of blocked TLP errors detected by PCIe device since
// the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "blocked-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/blocked-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) BlockedTlpErrors() *Component_Pcie_NonFatalErrors_BlockedTlpErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_BlockedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"blocked-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionAbortErrors (leaf): Number of completion abort errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-abort-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/completion-abort-errors"
func (n *Component_Pcie_NonFatalErrorsPath) CompletionAbortErrors() *Component_Pcie_NonFatalErrors_CompletionAbortErrorsPath {
	return &Component_Pcie_NonFatalErrors_CompletionAbortErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"completion-abort-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionAbortErrors (leaf): Number of completion abort errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-abort-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/completion-abort-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) CompletionAbortErrors() *Component_Pcie_NonFatalErrors_CompletionAbortErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_CompletionAbortErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"completion-abort-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionTimeoutErrors (leaf): Number of completion timeout errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-timeout-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/completion-timeout-errors"
func (n *Component_Pcie_NonFatalErrorsPath) CompletionTimeoutErrors() *Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPath {
	return &Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"completion-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// CompletionTimeoutErrors (leaf): Number of completion timeout errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "completion-timeout-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/completion-timeout-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) CompletionTimeoutErrors() *Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_CompletionTimeoutErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"completion-timeout-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataLinkErrors (leaf): Number of data-link errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "data-link-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/data-link-errors"
func (n *Component_Pcie_NonFatalErrorsPath) DataLinkErrors() *Component_Pcie_NonFatalErrors_DataLinkErrorsPath {
	return &Component_Pcie_NonFatalErrors_DataLinkErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"data-link-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataLinkErrors (leaf): Number of data-link errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "data-link-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/data-link-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) DataLinkErrors() *Component_Pcie_NonFatalErrors_DataLinkErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_DataLinkErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"data-link-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// EcrcErrors (leaf): Number of ECRC errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "ecrc-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/ecrc-errors"
func (n *Component_Pcie_NonFatalErrorsPath) EcrcErrors() *Component_Pcie_NonFatalErrors_EcrcErrorsPath {
	return &Component_Pcie_NonFatalErrors_EcrcErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"ecrc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// EcrcErrors (leaf): Number of ECRC errors detected by PCIe device since the system
// booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "ecrc-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/ecrc-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) EcrcErrors() *Component_Pcie_NonFatalErrors_EcrcErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_EcrcErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ecrc-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlowControlProtocolErrors (leaf): Number of flow control protocol errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "flow-control-protocol-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/flow-control-protocol-errors"
func (n *Component_Pcie_NonFatalErrorsPath) FlowControlProtocolErrors() *Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPath {
	return &Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flow-control-protocol-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// FlowControlProtocolErrors (leaf): Number of flow control protocol errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "flow-control-protocol-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/flow-control-protocol-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) FlowControlProtocolErrors() *Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_FlowControlProtocolErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flow-control-protocol-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/internal-errors"
func (n *Component_Pcie_NonFatalErrorsPath) InternalErrors() *Component_Pcie_NonFatalErrors_InternalErrorsPath {
	return &Component_Pcie_NonFatalErrors_InternalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalErrors (leaf): Number of internal errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "internal-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/internal-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) InternalErrors() *Component_Pcie_NonFatalErrors_InternalErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_InternalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"internal-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// MalformedTlpErrors (leaf): Number of malformed TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "malformed-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/malformed-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPath) MalformedTlpErrors() *Component_Pcie_NonFatalErrors_MalformedTlpErrorsPath {
	return &Component_Pcie_NonFatalErrors_MalformedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"malformed-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// MalformedTlpErrors (leaf): Number of malformed TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "malformed-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/malformed-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) MalformedTlpErrors() *Component_Pcie_NonFatalErrors_MalformedTlpErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_MalformedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"malformed-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoisonedTlpErrors (leaf): Number of poisoned TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "poisoned-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/poisoned-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPath) PoisonedTlpErrors() *Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPath {
	return &Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"poisoned-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoisonedTlpErrors (leaf): Number of poisoned TLP errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "poisoned-tlp-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/poisoned-tlp-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) PoisonedTlpErrors() *Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_PoisonedTlpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"poisoned-tlp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverOverflowErrors (leaf): Number of receiver overflow errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-overflow-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/receiver-overflow-errors"
func (n *Component_Pcie_NonFatalErrorsPath) ReceiverOverflowErrors() *Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPath {
	return &Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceiverOverflowErrors (leaf): Number of receiver overflow errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "receiver-overflow-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/receiver-overflow-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) ReceiverOverflowErrors() *Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_ReceiverOverflowErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"receiver-overflow-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// SurpriseDownErrors (leaf): Number of unexpected link down errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "surprise-down-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/surprise-down-errors"
func (n *Component_Pcie_NonFatalErrorsPath) SurpriseDownErrors() *Component_Pcie_NonFatalErrors_SurpriseDownErrorsPath {
	return &Component_Pcie_NonFatalErrors_SurpriseDownErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"surprise-down-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// SurpriseDownErrors (leaf): Number of unexpected link down errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "surprise-down-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/surprise-down-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) SurpriseDownErrors() *Component_Pcie_NonFatalErrors_SurpriseDownErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_SurpriseDownErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"surprise-down-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlpPrefixBlockedErrors (leaf): Number of TLP prefix blocked errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "tlp-prefix-blocked-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/tlp-prefix-blocked-errors"
func (n *Component_Pcie_NonFatalErrorsPath) TlpPrefixBlockedErrors() *Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPath {
	return &Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"tlp-prefix-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlpPrefixBlockedErrors (leaf): Number of TLP prefix blocked errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "tlp-prefix-blocked-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/tlp-prefix-blocked-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) TlpPrefixBlockedErrors() *Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_TlpPrefixBlockedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlp-prefix-blocked-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of uncorrectable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/total-errors"
func (n *Component_Pcie_NonFatalErrorsPath) TotalErrors() *Component_Pcie_NonFatalErrors_TotalErrorsPath {
	return &Component_Pcie_NonFatalErrors_TotalErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalErrors (leaf): Total number of uncorrectable errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "total-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/total-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) TotalErrors() *Component_Pcie_NonFatalErrors_TotalErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_TotalErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"total-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UndefinedErrors (leaf): Number of undefined errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "undefined-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/undefined-errors"
func (n *Component_Pcie_NonFatalErrorsPath) UndefinedErrors() *Component_Pcie_NonFatalErrors_UndefinedErrorsPath {
	return &Component_Pcie_NonFatalErrors_UndefinedErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UndefinedErrors (leaf): Number of undefined errors detected by PCIe device since the
// system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "undefined-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/undefined-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) UndefinedErrors() *Component_Pcie_NonFatalErrors_UndefinedErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_UndefinedErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnexpectedCompletionErrors (leaf): Number of unexpected completion errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unexpected-completion-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/unexpected-completion-errors"
func (n *Component_Pcie_NonFatalErrorsPath) UnexpectedCompletionErrors() *Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPath {
	return &Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"unexpected-completion-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnexpectedCompletionErrors (leaf): Number of unexpected completion errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unexpected-completion-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/unexpected-completion-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) UnexpectedCompletionErrors() *Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_UnexpectedCompletionErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unexpected-completion-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnsupportedRequestErrors (leaf): Number of unsupported request errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unsupported-request-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/unsupported-request-errors"
func (n *Component_Pcie_NonFatalErrorsPath) UnsupportedRequestErrors() *Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPath {
	return &Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"unsupported-request-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnsupportedRequestErrors (leaf): Number of unsupported request errors detected by PCIe device
// since the system booted, according to PCIe AER driver.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "unsupported-request-errors"
// Path from root: "/components/component/state/pcie/non-fatal-errors/unsupported-request-errors"
func (n *Component_Pcie_NonFatalErrorsPathAny) UnsupportedRequestErrors() *Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPathAny {
	return &Component_Pcie_NonFatalErrors_UnsupportedRequestErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unsupported-request-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_PortPath represents the /openconfig-platform/components/component/port YANG schema element.
type Component_PortPath struct {
	*ygot.NodePath
}

// Component_PortPathAny represents the wildcard version of the /openconfig-platform/components/component/port YANG schema element.
type Component_PortPathAny struct {
	*ygot.NodePath
}

// BreakoutMode (container): Top-level container for port breakout-mode data.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "breakout-mode"
// Path from root: "/components/component/port/breakout-mode"
func (n *Component_PortPath) BreakoutMode() *Component_Port_BreakoutModePath {
	return &Component_Port_BreakoutModePath{
		NodePath: ygot.NewNodePath(
			[]string{"breakout-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// BreakoutMode (container): Top-level container for port breakout-mode data.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "breakout-mode"
// Path from root: "/components/component/port/breakout-mode"
func (n *Component_PortPathAny) BreakoutMode() *Component_Port_BreakoutModePathAny {
	return &Component_Port_BreakoutModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"breakout-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Port_BreakoutModePath represents the /openconfig-platform/components/component/port/breakout-mode YANG schema element.
type Component_Port_BreakoutModePath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutModePathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode YANG schema element.
type Component_Port_BreakoutModePathAny struct {
	*ygot.NodePath
}

// GroupAny (list): List of breakout groups.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "groups/group"
// Path from root: "/components/component/port/breakout-mode/groups/group"
// Index (wildcarded): uint8
func (n *Component_Port_BreakoutModePath) GroupAny() *Component_Port_BreakoutMode_GroupPathAny {
	return &Component_Port_BreakoutMode_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"groups", "group"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// GroupAny (list): List of breakout groups.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "groups/group"
// Path from root: "/components/component/port/breakout-mode/groups/group"
// Index (wildcarded): uint8
func (n *Component_Port_BreakoutModePathAny) GroupAny() *Component_Port_BreakoutMode_GroupPathAny {
	return &Component_Port_BreakoutMode_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"groups", "group"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Group (list): List of breakout groups.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "groups/group"
// Path from root: "/components/component/port/breakout-mode/groups/group"
// Index: uint8
func (n *Component_Port_BreakoutModePath) Group(Index uint8) *Component_Port_BreakoutMode_GroupPath {
	return &Component_Port_BreakoutMode_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"groups", "group"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Group (list): List of breakout groups.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "groups/group"
// Path from root: "/components/component/port/breakout-mode/groups/group"
// Index: uint8
func (n *Component_Port_BreakoutModePathAny) Group(Index uint8) *Component_Port_BreakoutMode_GroupPathAny {
	return &Component_Port_BreakoutMode_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"groups", "group"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Component_Port_BreakoutMode_GroupPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group YANG schema element.
type Component_Port_BreakoutMode_GroupPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_GroupPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group YANG schema element.
type Component_Port_BreakoutMode_GroupPathAny struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_BreakoutSpeedPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group/state/breakout-speed YANG schema element.
type Component_Port_BreakoutMode_Group_BreakoutSpeedPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_BreakoutSpeedPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group/state/breakout-speed YANG schema element.
type Component_Port_BreakoutMode_Group_BreakoutSpeedPathAny struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_IndexPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group/state/index YANG schema element.
type Component_Port_BreakoutMode_Group_IndexPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_IndexPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group/state/index YANG schema element.
type Component_Port_BreakoutMode_Group_IndexPathAny struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_NumBreakoutsPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group/state/num-breakouts YANG schema element.
type Component_Port_BreakoutMode_Group_NumBreakoutsPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_NumBreakoutsPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group/state/num-breakouts YANG schema element.
type Component_Port_BreakoutMode_Group_NumBreakoutsPathAny struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_NumPhysicalChannelsPath represents the /openconfig-platform/components/component/port/breakout-mode/groups/group/state/num-physical-channels YANG schema element.
type Component_Port_BreakoutMode_Group_NumPhysicalChannelsPath struct {
	*ygot.NodePath
}

// Component_Port_BreakoutMode_Group_NumPhysicalChannelsPathAny represents the wildcard version of the /openconfig-platform/components/component/port/breakout-mode/groups/group/state/num-physical-channels YANG schema element.
type Component_Port_BreakoutMode_Group_NumPhysicalChannelsPathAny struct {
	*ygot.NodePath
}

// BreakoutSpeed (leaf): Speed of interfaces in this breakout group, supported
// values are defined by the ETHERNET_SPEED identity.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/breakout-speed"
// Path from root: "/components/component/port/breakout-mode/groups/group/state/breakout-speed"
func (n *Component_Port_BreakoutMode_GroupPath) BreakoutSpeed() *Component_Port_BreakoutMode_Group_BreakoutSpeedPath {
	return &Component_Port_BreakoutMode_Group_BreakoutSpeedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "breakout-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// BreakoutSpeed (leaf): Speed of interfaces in this breakout group, supported
// values are defined by the ETHERNET_SPEED identity.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/breakout-speed"
// Path from root: "/components/component/port/breakout-mode/groups/group/state/breakout-speed"
func (n *Component_Port_BreakoutMode_GroupPathAny) BreakoutSpeed() *Component_Port_BreakoutMode_Group_BreakoutSpeedPathAny {
	return &Component_Port_BreakoutMode_Group_BreakoutSpeedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "breakout-speed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Each index specifies breakouts that are identical in
// terms of speed and the number of physical channels.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/index"
// Path from root: "/components/component/port/breakout-mode/groups/group/state/index"
func (n *Component_Port_BreakoutMode_GroupPath) Index() *Component_Port_BreakoutMode_Group_IndexPath {
	return &Component_Port_BreakoutMode_Group_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Each index specifies breakouts that are identical in
// terms of speed and the number of physical channels.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/index"
// Path from root: "/components/component/port/breakout-mode/groups/group/state/index"
func (n *Component_Port_BreakoutMode_GroupPathAny) Index() *Component_Port_BreakoutMode_Group_IndexPathAny {
	return &Component_Port_BreakoutMode_Group_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumBreakouts (leaf): Sets the number of interfaces using this breakout group.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/num-breakouts"
// Path from root: "/components/component/port/breakout-mode/groups/group/state/num-breakouts"
func (n *Component_Port_BreakoutMode_GroupPath) NumBreakouts() *Component_Port_BreakoutMode_Group_NumBreakoutsPath {
	return &Component_Port_BreakoutMode_Group_NumBreakoutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "num-breakouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumBreakouts (leaf): Sets the number of interfaces using this breakout group.
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/num-breakouts"
// Path from root: "/components/component/port/breakout-mode/groups/group/state/num-breakouts"
func (n *Component_Port_BreakoutMode_GroupPathAny) NumBreakouts() *Component_Port_BreakoutMode_Group_NumBreakoutsPathAny {
	return &Component_Port_BreakoutMode_Group_NumBreakoutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "num-breakouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumPhysicalChannels (leaf): Sets the number of lanes or physical channels assigned
// to the interfaces in this breakout group. This leaf need
// not be set if there is only one breakout group where all
// the interfaces are of equal speed and have equal number
// of physical channels
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/num-physical-channels"
// Path from root: "/components/component/port/breakout-mode/groups/group/state/num-physical-channels"
func (n *Component_Port_BreakoutMode_GroupPath) NumPhysicalChannels() *Component_Port_BreakoutMode_Group_NumPhysicalChannelsPath {
	return &Component_Port_BreakoutMode_Group_NumPhysicalChannelsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "num-physical-channels"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumPhysicalChannels (leaf): Sets the number of lanes or physical channels assigned
// to the interfaces in this breakout group. This leaf need
// not be set if there is only one breakout group where all
// the interfaces are of equal speed and have equal number
// of physical channels
// ----------------------------------------
// Defining module: "openconfig-platform-port"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/num-physical-channels"
// Path from root: "/components/component/port/breakout-mode/groups/group/state/num-physical-channels"
func (n *Component_Port_BreakoutMode_GroupPathAny) NumPhysicalChannels() *Component_Port_BreakoutMode_Group_NumPhysicalChannelsPathAny {
	return &Component_Port_BreakoutMode_Group_NumPhysicalChannelsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "num-physical-channels"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_PowerSupplyPath represents the /openconfig-platform/components/component/power-supply YANG schema element.
type Component_PowerSupplyPath struct {
	*ygot.NodePath
}

// Component_PowerSupplyPathAny represents the wildcard version of the /openconfig-platform/components/component/power-supply YANG schema element.
type Component_PowerSupplyPathAny struct {
	*ygot.NodePath
}

// Component_PropertyPath represents the /openconfig-platform/components/component/properties/property YANG schema element.
type Component_PropertyPath struct {
	*ygot.NodePath
}

// Component_PropertyPathAny represents the wildcard version of the /openconfig-platform/components/component/properties/property YANG schema element.
type Component_PropertyPathAny struct {
	*ygot.NodePath
}

// Component_Property_ConfigurablePath represents the /openconfig-platform/components/component/properties/property/state/configurable YANG schema element.
type Component_Property_ConfigurablePath struct {
	*ygot.NodePath
}

// Component_Property_ConfigurablePathAny represents the wildcard version of the /openconfig-platform/components/component/properties/property/state/configurable YANG schema element.
type Component_Property_ConfigurablePathAny struct {
	*ygot.NodePath
}

// Component_Property_NamePath represents the /openconfig-platform/components/component/properties/property/state/name YANG schema element.
type Component_Property_NamePath struct {
	*ygot.NodePath
}

// Component_Property_NamePathAny represents the wildcard version of the /openconfig-platform/components/component/properties/property/state/name YANG schema element.
type Component_Property_NamePathAny struct {
	*ygot.NodePath
}

// Component_Property_ValuePath represents the /openconfig-platform/components/component/properties/property/state/value YANG schema element.
type Component_Property_ValuePath struct {
	*ygot.NodePath
}

// Component_Property_ValuePathAny represents the wildcard version of the /openconfig-platform/components/component/properties/property/state/value YANG schema element.
type Component_Property_ValuePathAny struct {
	*ygot.NodePath
}

// Configurable (leaf): Indication whether the property is user-configurable
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/configurable"
// Path from root: "/components/component/properties/property/state/configurable"
func (n *Component_PropertyPath) Configurable() *Component_Property_ConfigurablePath {
	return &Component_Property_ConfigurablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "configurable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Configurable (leaf): Indication whether the property is user-configurable
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/configurable"
// Path from root: "/components/component/properties/property/state/configurable"
func (n *Component_PropertyPathAny) Configurable() *Component_Property_ConfigurablePathAny {
	return &Component_Property_ConfigurablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "configurable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): System-supplied name of the property -- this is typically
// non-configurable
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/name"
// Path from root: "/components/component/properties/property/state/name"
func (n *Component_PropertyPath) Name() *Component_Property_NamePath {
	return &Component_Property_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): System-supplied name of the property -- this is typically
// non-configurable
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/name"
// Path from root: "/components/component/properties/property/state/name"
func (n *Component_PropertyPathAny) Name() *Component_Property_NamePathAny {
	return &Component_Property_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Property values can take on a variety of types.  Signed and
// unsigned integer types may be provided in smaller sizes,
// e.g., int8, uint16, etc.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/value"
// Path from root: "/components/component/properties/property/state/value"
func (n *Component_PropertyPath) Value() *Component_Property_ValuePath {
	return &Component_Property_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Property values can take on a variety of types.  Signed and
// unsigned integer types may be provided in smaller sizes,
// e.g., int8, uint16, etc.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/value"
// Path from root: "/components/component/properties/property/state/value"
func (n *Component_PropertyPathAny) Value() *Component_Property_ValuePathAny {
	return &Component_Property_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_SoftwareModulePath represents the /openconfig-platform/components/component/software-module YANG schema element.
type Component_SoftwareModulePath struct {
	*ygot.NodePath
}

// Component_SoftwareModulePathAny represents the wildcard version of the /openconfig-platform/components/component/software-module YANG schema element.
type Component_SoftwareModulePathAny struct {
	*ygot.NodePath
}

// Component_SoftwareModule_ModuleTypePath represents the /openconfig-platform/components/component/software-module/state/module-type YANG schema element.
type Component_SoftwareModule_ModuleTypePath struct {
	*ygot.NodePath
}

// Component_SoftwareModule_ModuleTypePathAny represents the wildcard version of the /openconfig-platform/components/component/software-module/state/module-type YANG schema element.
type Component_SoftwareModule_ModuleTypePathAny struct {
	*ygot.NodePath
}

// ModuleType (leaf): Type of the software module
// ----------------------------------------
// Defining module: "openconfig-platform-software"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/module-type"
// Path from root: "/components/component/software-module/state/module-type"
func (n *Component_SoftwareModulePath) ModuleType() *Component_SoftwareModule_ModuleTypePath {
	return &Component_SoftwareModule_ModuleTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "module-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModuleType (leaf): Type of the software module
// ----------------------------------------
// Defining module: "openconfig-platform-software"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/module-type"
// Path from root: "/components/component/software-module/state/module-type"
func (n *Component_SoftwareModulePathAny) ModuleType() *Component_SoftwareModule_ModuleTypePathAny {
	return &Component_SoftwareModule_ModuleTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "module-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_StoragePath represents the /openconfig-platform/components/component/storage YANG schema element.
type Component_StoragePath struct {
	*ygot.NodePath
}

// Component_StoragePathAny represents the wildcard version of the /openconfig-platform/components/component/storage YANG schema element.
type Component_StoragePathAny struct {
	*ygot.NodePath
}

// Component_SubcomponentPath represents the /openconfig-platform/components/component/subcomponents/subcomponent YANG schema element.
type Component_SubcomponentPath struct {
	*ygot.NodePath
}

// Component_SubcomponentPathAny represents the wildcard version of the /openconfig-platform/components/component/subcomponents/subcomponent YANG schema element.
type Component_SubcomponentPathAny struct {
	*ygot.NodePath
}

// Component_Subcomponent_NamePath represents the /openconfig-platform/components/component/subcomponents/subcomponent/state/name YANG schema element.
type Component_Subcomponent_NamePath struct {
	*ygot.NodePath
}

// Component_Subcomponent_NamePathAny represents the wildcard version of the /openconfig-platform/components/component/subcomponents/subcomponent/state/name YANG schema element.
type Component_Subcomponent_NamePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Reference to the name of the subcomponent
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/name"
// Path from root: "/components/component/subcomponents/subcomponent/state/name"
func (n *Component_SubcomponentPath) Name() *Component_Subcomponent_NamePath {
	return &Component_Subcomponent_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the name of the subcomponent
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/name"
// Path from root: "/components/component/subcomponents/subcomponent/state/name"
func (n *Component_SubcomponentPathAny) Name() *Component_Subcomponent_NamePathAny {
	return &Component_Subcomponent_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_TemperaturePath represents the /openconfig-platform/components/component/state/temperature YANG schema element.
type Component_TemperaturePath struct {
	*ygot.NodePath
}

// Component_TemperaturePathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature YANG schema element.
type Component_TemperaturePathAny struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmSeverityPath represents the /openconfig-platform/components/component/state/temperature/alarm-severity YANG schema element.
type Component_Temperature_AlarmSeverityPath struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmSeverityPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/alarm-severity YANG schema element.
type Component_Temperature_AlarmSeverityPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmStatusPath represents the /openconfig-platform/components/component/state/temperature/alarm-status YANG schema element.
type Component_Temperature_AlarmStatusPath struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmStatusPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/alarm-status YANG schema element.
type Component_Temperature_AlarmStatusPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmThresholdPath represents the /openconfig-platform/components/component/state/temperature/alarm-threshold YANG schema element.
type Component_Temperature_AlarmThresholdPath struct {
	*ygot.NodePath
}

// Component_Temperature_AlarmThresholdPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/alarm-threshold YANG schema element.
type Component_Temperature_AlarmThresholdPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_AvgPath represents the /openconfig-platform/components/component/state/temperature/avg YANG schema element.
type Component_Temperature_AvgPath struct {
	*ygot.NodePath
}

// Component_Temperature_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/avg YANG schema element.
type Component_Temperature_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_InstantPath represents the /openconfig-platform/components/component/state/temperature/instant YANG schema element.
type Component_Temperature_InstantPath struct {
	*ygot.NodePath
}

// Component_Temperature_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/instant YANG schema element.
type Component_Temperature_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_IntervalPath represents the /openconfig-platform/components/component/state/temperature/interval YANG schema element.
type Component_Temperature_IntervalPath struct {
	*ygot.NodePath
}

// Component_Temperature_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/interval YANG schema element.
type Component_Temperature_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_MaxPath represents the /openconfig-platform/components/component/state/temperature/max YANG schema element.
type Component_Temperature_MaxPath struct {
	*ygot.NodePath
}

// Component_Temperature_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/max YANG schema element.
type Component_Temperature_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_MaxTimePath represents the /openconfig-platform/components/component/state/temperature/max-time YANG schema element.
type Component_Temperature_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Temperature_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/max-time YANG schema element.
type Component_Temperature_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Temperature_MinPath represents the /openconfig-platform/components/component/state/temperature/min YANG schema element.
type Component_Temperature_MinPath struct {
	*ygot.NodePath
}

// Component_Temperature_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/min YANG schema element.
type Component_Temperature_MinPathAny struct {
	*ygot.NodePath
}

// Component_Temperature_MinTimePath represents the /openconfig-platform/components/component/state/temperature/min-time YANG schema element.
type Component_Temperature_MinTimePath struct {
	*ygot.NodePath
}

// Component_Temperature_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/state/temperature/min-time YANG schema element.
type Component_Temperature_MinTimePathAny struct {
	*ygot.NodePath
}

// AlarmSeverity (leaf): The severity of the current alarm.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-severity"
// Path from root: "/components/component/state/temperature/alarm-severity"
func (n *Component_TemperaturePath) AlarmSeverity() *Component_Temperature_AlarmSeverityPath {
	return &Component_Temperature_AlarmSeverityPath{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmSeverity (leaf): The severity of the current alarm.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-severity"
// Path from root: "/components/component/state/temperature/alarm-severity"
func (n *Component_TemperaturePathAny) AlarmSeverity() *Component_Temperature_AlarmSeverityPathAny {
	return &Component_Temperature_AlarmSeverityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmStatus (leaf): A value of true indicates the alarm has been raised or
// asserted.  The value should be false when the alarm is
// cleared.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-status"
// Path from root: "/components/component/state/temperature/alarm-status"
func (n *Component_TemperaturePath) AlarmStatus() *Component_Temperature_AlarmStatusPath {
	return &Component_Temperature_AlarmStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmStatus (leaf): A value of true indicates the alarm has been raised or
// asserted.  The value should be false when the alarm is
// cleared.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-status"
// Path from root: "/components/component/state/temperature/alarm-status"
func (n *Component_TemperaturePathAny) AlarmStatus() *Component_Temperature_AlarmStatusPathAny {
	return &Component_Temperature_AlarmStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): The threshold value that was crossed for this alarm.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-threshold"
// Path from root: "/components/component/state/temperature/alarm-threshold"
func (n *Component_TemperaturePath) AlarmThreshold() *Component_Temperature_AlarmThresholdPath {
	return &Component_Temperature_AlarmThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): The threshold value that was crossed for this alarm.
// ----------------------------------------
// Defining module: "openconfig-platform"
// Instantiating module: "openconfig-platform"
// Path from parent: "alarm-threshold"
// Path from root: "/components/component/state/temperature/alarm-threshold"
func (n *Component_TemperaturePathAny) AlarmThreshold() *Component_Temperature_AlarmThresholdPathAny {
	return &Component_Temperature_AlarmThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/state/temperature/avg"
func (n *Component_TemperaturePath) Avg() *Component_Temperature_AvgPath {
	return &Component_Temperature_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/state/temperature/avg"
func (n *Component_TemperaturePathAny) Avg() *Component_Temperature_AvgPathAny {
	return &Component_Temperature_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/state/temperature/instant"
func (n *Component_TemperaturePath) Instant() *Component_Temperature_InstantPath {
	return &Component_Temperature_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/state/temperature/instant"
func (n *Component_TemperaturePathAny) Instant() *Component_Temperature_InstantPathAny {
	return &Component_Temperature_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/state/temperature/interval"
func (n *Component_TemperaturePath) Interval() *Component_Temperature_IntervalPath {
	return &Component_Temperature_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/state/temperature/interval"
func (n *Component_TemperaturePathAny) Interval() *Component_Temperature_IntervalPathAny {
	return &Component_Temperature_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/state/temperature/max"
func (n *Component_TemperaturePath) Max() *Component_Temperature_MaxPath {
	return &Component_Temperature_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/state/temperature/max"
func (n *Component_TemperaturePathAny) Max() *Component_Temperature_MaxPathAny {
	return &Component_Temperature_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/state/temperature/max-time"
func (n *Component_TemperaturePath) MaxTime() *Component_Temperature_MaxTimePath {
	return &Component_Temperature_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/state/temperature/max-time"
func (n *Component_TemperaturePathAny) MaxTime() *Component_Temperature_MaxTimePathAny {
	return &Component_Temperature_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/state/temperature/min"
func (n *Component_TemperaturePath) Min() *Component_Temperature_MinPath {
	return &Component_Temperature_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/state/temperature/min"
func (n *Component_TemperaturePathAny) Min() *Component_Temperature_MinPathAny {
	return &Component_Temperature_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/state/temperature/min-time"
func (n *Component_TemperaturePath) MinTime() *Component_Temperature_MinTimePath {
	return &Component_Temperature_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/state/temperature/min-time"
func (n *Component_TemperaturePathAny) MinTime() *Component_Temperature_MinTimePathAny {
	return &Component_Temperature_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_TransceiverPath represents the /openconfig-platform/components/component/transceiver YANG schema element.
type Component_TransceiverPath struct {
	*ygot.NodePath
}

// Component_TransceiverPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver YANG schema element.
type Component_TransceiverPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_ConnectorTypePath represents the /openconfig-platform/components/component/transceiver/state/connector-type YANG schema element.
type Component_Transceiver_ConnectorTypePath struct {
	*ygot.NodePath
}

// Component_Transceiver_ConnectorTypePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/connector-type YANG schema element.
type Component_Transceiver_ConnectorTypePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_DateCodePath represents the /openconfig-platform/components/component/transceiver/state/date-code YANG schema element.
type Component_Transceiver_DateCodePath struct {
	*ygot.NodePath
}

// Component_Transceiver_DateCodePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/date-code YANG schema element.
type Component_Transceiver_DateCodePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_EnabledPath represents the /openconfig-platform/components/component/transceiver/state/enabled YANG schema element.
type Component_Transceiver_EnabledPath struct {
	*ygot.NodePath
}

// Component_Transceiver_EnabledPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/enabled YANG schema element.
type Component_Transceiver_EnabledPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_EthernetPmdPath represents the /openconfig-platform/components/component/transceiver/state/ethernet-pmd YANG schema element.
type Component_Transceiver_EthernetPmdPath struct {
	*ygot.NodePath
}

// Component_Transceiver_EthernetPmdPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/ethernet-pmd YANG schema element.
type Component_Transceiver_EthernetPmdPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_EthernetPmdPreconfPath represents the /openconfig-platform/components/component/transceiver/state/ethernet-pmd-preconf YANG schema element.
type Component_Transceiver_EthernetPmdPreconfPath struct {
	*ygot.NodePath
}

// Component_Transceiver_EthernetPmdPreconfPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/ethernet-pmd-preconf YANG schema element.
type Component_Transceiver_EthernetPmdPreconfPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FaultConditionPath represents the /openconfig-platform/components/component/transceiver/state/fault-condition YANG schema element.
type Component_Transceiver_FaultConditionPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FaultConditionPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fault-condition YANG schema element.
type Component_Transceiver_FaultConditionPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecCorrectedBitsPath represents the /openconfig-platform/components/component/transceiver/state/fec-corrected-bits YANG schema element.
type Component_Transceiver_FecCorrectedBitsPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecCorrectedBitsPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-corrected-bits YANG schema element.
type Component_Transceiver_FecCorrectedBitsPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecCorrectedBytesPath represents the /openconfig-platform/components/component/transceiver/state/fec-corrected-bytes YANG schema element.
type Component_Transceiver_FecCorrectedBytesPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecCorrectedBytesPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-corrected-bytes YANG schema element.
type Component_Transceiver_FecCorrectedBytesPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecModePath represents the /openconfig-platform/components/component/transceiver/state/fec-mode YANG schema element.
type Component_Transceiver_FecModePath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecModePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-mode YANG schema element.
type Component_Transceiver_FecModePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecStatusPath represents the /openconfig-platform/components/component/transceiver/state/fec-status YANG schema element.
type Component_Transceiver_FecStatusPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecStatusPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-status YANG schema element.
type Component_Transceiver_FecStatusPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecUncorrectableBlocksPath represents the /openconfig-platform/components/component/transceiver/state/fec-uncorrectable-blocks YANG schema element.
type Component_Transceiver_FecUncorrectableBlocksPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecUncorrectableBlocksPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-uncorrectable-blocks YANG schema element.
type Component_Transceiver_FecUncorrectableBlocksPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FecUncorrectableWordsPath represents the /openconfig-platform/components/component/transceiver/state/fec-uncorrectable-words YANG schema element.
type Component_Transceiver_FecUncorrectableWordsPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FecUncorrectableWordsPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/fec-uncorrectable-words YANG schema element.
type Component_Transceiver_FecUncorrectableWordsPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FormFactorPath represents the /openconfig-platform/components/component/transceiver/state/form-factor YANG schema element.
type Component_Transceiver_FormFactorPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FormFactorPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/form-factor YANG schema element.
type Component_Transceiver_FormFactorPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_FormFactorPreconfPath represents the /openconfig-platform/components/component/transceiver/state/form-factor-preconf YANG schema element.
type Component_Transceiver_FormFactorPreconfPath struct {
	*ygot.NodePath
}

// Component_Transceiver_FormFactorPreconfPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/form-factor-preconf YANG schema element.
type Component_Transceiver_FormFactorPreconfPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_ModuleFunctionalTypePath represents the /openconfig-platform/components/component/transceiver/state/module-functional-type YANG schema element.
type Component_Transceiver_ModuleFunctionalTypePath struct {
	*ygot.NodePath
}

// Component_Transceiver_ModuleFunctionalTypePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/module-functional-type YANG schema element.
type Component_Transceiver_ModuleFunctionalTypePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OtnComplianceCodePath represents the /openconfig-platform/components/component/transceiver/state/otn-compliance-code YANG schema element.
type Component_Transceiver_OtnComplianceCodePath struct {
	*ygot.NodePath
}

// Component_Transceiver_OtnComplianceCodePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/otn-compliance-code YANG schema element.
type Component_Transceiver_OtnComplianceCodePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PresentPath represents the /openconfig-platform/components/component/transceiver/state/present YANG schema element.
type Component_Transceiver_PresentPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PresentPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/present YANG schema element.
type Component_Transceiver_PresentPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SerialNoPath represents the /openconfig-platform/components/component/transceiver/state/serial-no YANG schema element.
type Component_Transceiver_SerialNoPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SerialNoPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/serial-no YANG schema element.
type Component_Transceiver_SerialNoPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SonetSdhComplianceCodePath represents the /openconfig-platform/components/component/transceiver/state/sonet-sdh-compliance-code YANG schema element.
type Component_Transceiver_SonetSdhComplianceCodePath struct {
	*ygot.NodePath
}

// Component_Transceiver_SonetSdhComplianceCodePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/sonet-sdh-compliance-code YANG schema element.
type Component_Transceiver_SonetSdhComplianceCodePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorPath represents the /openconfig-platform/components/component/transceiver/state/vendor YANG schema element.
type Component_Transceiver_VendorPath struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/vendor YANG schema element.
type Component_Transceiver_VendorPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorPartPath represents the /openconfig-platform/components/component/transceiver/state/vendor-part YANG schema element.
type Component_Transceiver_VendorPartPath struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorPartPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/vendor-part YANG schema element.
type Component_Transceiver_VendorPartPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorRevPath represents the /openconfig-platform/components/component/transceiver/state/vendor-rev YANG schema element.
type Component_Transceiver_VendorRevPath struct {
	*ygot.NodePath
}

// Component_Transceiver_VendorRevPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/vendor-rev YANG schema element.
type Component_Transceiver_VendorRevPathAny struct {
	*ygot.NodePath
}

// ChannelAny (list): List of client channels, keyed by index within a physical
// client port.  A physical port with a single channel would
// have a single zero-indexed element
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "physical-channels/channel"
// Path from root: "/components/component/transceiver/physical-channels/channel"
// Index (wildcarded): uint16
func (n *Component_TransceiverPath) ChannelAny() *Component_Transceiver_ChannelPathAny {
	return &Component_Transceiver_ChannelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"physical-channels", "channel"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// ChannelAny (list): List of client channels, keyed by index within a physical
// client port.  A physical port with a single channel would
// have a single zero-indexed element
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "physical-channels/channel"
// Path from root: "/components/component/transceiver/physical-channels/channel"
// Index (wildcarded): uint16
func (n *Component_TransceiverPathAny) ChannelAny() *Component_Transceiver_ChannelPathAny {
	return &Component_Transceiver_ChannelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"physical-channels", "channel"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Channel (list): List of client channels, keyed by index within a physical
// client port.  A physical port with a single channel would
// have a single zero-indexed element
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "physical-channels/channel"
// Path from root: "/components/component/transceiver/physical-channels/channel"
// Index: uint16
func (n *Component_TransceiverPath) Channel(Index uint16) *Component_Transceiver_ChannelPath {
	return &Component_Transceiver_ChannelPath{
		NodePath: ygot.NewNodePath(
			[]string{"physical-channels", "channel"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Channel (list): List of client channels, keyed by index within a physical
// client port.  A physical port with a single channel would
// have a single zero-indexed element
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "physical-channels/channel"
// Path from root: "/components/component/transceiver/physical-channels/channel"
// Index: uint16
func (n *Component_TransceiverPathAny) Channel(Index uint16) *Component_Transceiver_ChannelPathAny {
	return &Component_Transceiver_ChannelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"physical-channels", "channel"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// ConnectorType (leaf): Connector type used on this port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/connector-type"
// Path from root: "/components/component/transceiver/state/connector-type"
func (n *Component_TransceiverPath) ConnectorType() *Component_Transceiver_ConnectorTypePath {
	return &Component_Transceiver_ConnectorTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connector-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectorType (leaf): Connector type used on this port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/connector-type"
// Path from root: "/components/component/transceiver/state/connector-type"
func (n *Component_TransceiverPathAny) ConnectorType() *Component_Transceiver_ConnectorTypePathAny {
	return &Component_Transceiver_ConnectorTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connector-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DateCode (leaf): Representation of the transceiver date code, typically
// stored as YYMMDD.  The time portion of the value is
// undefined and not intended to be read.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/date-code"
// Path from root: "/components/component/transceiver/state/date-code"
func (n *Component_TransceiverPath) DateCode() *Component_Transceiver_DateCodePath {
	return &Component_Transceiver_DateCodePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "date-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// DateCode (leaf): Representation of the transceiver date code, typically
// stored as YYMMDD.  The time portion of the value is
// undefined and not intended to be read.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/date-code"
// Path from root: "/components/component/transceiver/state/date-code"
func (n *Component_TransceiverPathAny) DateCode() *Component_Transceiver_DateCodePathAny {
	return &Component_Transceiver_DateCodePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "date-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Turns power on / off to the transceiver -- provides a means
// to power on/off the transceiver (in the case of SFP, SFP+,
// QSFP,...) or enable high-power mode (in the case of CFP,
// CFP2, CFP4) and is optionally supported (device can choose to
// always enable).  True = power on / high power, False =
// powered off
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/enabled"
// Path from root: "/components/component/transceiver/state/enabled"
func (n *Component_TransceiverPath) Enabled() *Component_Transceiver_EnabledPath {
	return &Component_Transceiver_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Turns power on / off to the transceiver -- provides a means
// to power on/off the transceiver (in the case of SFP, SFP+,
// QSFP,...) or enable high-power mode (in the case of CFP,
// CFP2, CFP4) and is optionally supported (device can choose to
// always enable).  True = power on / high power, False =
// powered off
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/enabled"
// Path from root: "/components/component/transceiver/state/enabled"
func (n *Component_TransceiverPathAny) Enabled() *Component_Transceiver_EnabledPathAny {
	return &Component_Transceiver_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetPmd (leaf): Ethernet PMD (physical medium dependent sublayer) that the
// transceiver supports. The SFF/QSFP MSAs have registers for
// this and CFP MSA has similar.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/ethernet-pmd"
// Path from root: "/components/component/transceiver/state/ethernet-pmd"
func (n *Component_TransceiverPath) EthernetPmd() *Component_Transceiver_EthernetPmdPath {
	return &Component_Transceiver_EthernetPmdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-pmd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetPmd (leaf): Ethernet PMD (physical medium dependent sublayer) that the
// transceiver supports. The SFF/QSFP MSAs have registers for
// this and CFP MSA has similar.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/ethernet-pmd"
// Path from root: "/components/component/transceiver/state/ethernet-pmd"
func (n *Component_TransceiverPathAny) EthernetPmd() *Component_Transceiver_EthernetPmdPathAny {
	return &Component_Transceiver_EthernetPmdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-pmd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetPmdPreconf (leaf): The Ethernet PMD is a property of the optical transceiver
// used on the port, indicating the type of physical connection.
// It is included in configuration data to allow pre-configuring
// a port/transceiver with the expected PMD.  The actual PMD is
// indicated by the ethernet-pmd state leaf.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/ethernet-pmd-preconf"
// Path from root: "/components/component/transceiver/state/ethernet-pmd-preconf"
func (n *Component_TransceiverPath) EthernetPmdPreconf() *Component_Transceiver_EthernetPmdPreconfPath {
	return &Component_Transceiver_EthernetPmdPreconfPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-pmd-preconf"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetPmdPreconf (leaf): The Ethernet PMD is a property of the optical transceiver
// used on the port, indicating the type of physical connection.
// It is included in configuration data to allow pre-configuring
// a port/transceiver with the expected PMD.  The actual PMD is
// indicated by the ethernet-pmd state leaf.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/ethernet-pmd-preconf"
// Path from root: "/components/component/transceiver/state/ethernet-pmd-preconf"
func (n *Component_TransceiverPathAny) EthernetPmdPreconf() *Component_Transceiver_EthernetPmdPreconfPathAny {
	return &Component_Transceiver_EthernetPmdPreconfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-pmd-preconf"},
			map[string]interface{}{},
			n,
		),
	}
}

// FaultCondition (leaf): Indicates if a fault condition exists in the transceiver
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fault-condition"
// Path from root: "/components/component/transceiver/state/fault-condition"
func (n *Component_TransceiverPath) FaultCondition() *Component_Transceiver_FaultConditionPath {
	return &Component_Transceiver_FaultConditionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fault-condition"},
			map[string]interface{}{},
			n,
		),
	}
}

// FaultCondition (leaf): Indicates if a fault condition exists in the transceiver
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fault-condition"
// Path from root: "/components/component/transceiver/state/fault-condition"
func (n *Component_TransceiverPathAny) FaultCondition() *Component_Transceiver_FaultConditionPathAny {
	return &Component_Transceiver_FaultConditionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fault-condition"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecCorrectedBits (leaf): The number of bits that were corrected by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-corrected-bits"
// Path from root: "/components/component/transceiver/state/fec-corrected-bits"
func (n *Component_TransceiverPath) FecCorrectedBits() *Component_Transceiver_FecCorrectedBitsPath {
	return &Component_Transceiver_FecCorrectedBitsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-corrected-bits"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecCorrectedBits (leaf): The number of bits that were corrected by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-corrected-bits"
// Path from root: "/components/component/transceiver/state/fec-corrected-bits"
func (n *Component_TransceiverPathAny) FecCorrectedBits() *Component_Transceiver_FecCorrectedBitsPathAny {
	return &Component_Transceiver_FecCorrectedBitsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-corrected-bits"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecCorrectedBytes (leaf): The number of bytes that were corrected by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-corrected-bytes"
// Path from root: "/components/component/transceiver/state/fec-corrected-bytes"
func (n *Component_TransceiverPath) FecCorrectedBytes() *Component_Transceiver_FecCorrectedBytesPath {
	return &Component_Transceiver_FecCorrectedBytesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-corrected-bytes"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecCorrectedBytes (leaf): The number of bytes that were corrected by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-corrected-bytes"
// Path from root: "/components/component/transceiver/state/fec-corrected-bytes"
func (n *Component_TransceiverPathAny) FecCorrectedBytes() *Component_Transceiver_FecCorrectedBytesPathAny {
	return &Component_Transceiver_FecCorrectedBytesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-corrected-bytes"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecMode (leaf): The FEC mode indicates the mode of operation for the
// transceiver's FEC. This defines typical operational modes
// and does not aim to specify more granular FEC capabilities.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-mode"
// Path from root: "/components/component/transceiver/state/fec-mode"
func (n *Component_TransceiverPath) FecMode() *Component_Transceiver_FecModePath {
	return &Component_Transceiver_FecModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecMode (leaf): The FEC mode indicates the mode of operation for the
// transceiver's FEC. This defines typical operational modes
// and does not aim to specify more granular FEC capabilities.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-mode"
// Path from root: "/components/component/transceiver/state/fec-mode"
func (n *Component_TransceiverPathAny) FecMode() *Component_Transceiver_FecModePathAny {
	return &Component_Transceiver_FecModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecStatus (leaf): Operational status of FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-status"
// Path from root: "/components/component/transceiver/state/fec-status"
func (n *Component_TransceiverPath) FecStatus() *Component_Transceiver_FecStatusPath {
	return &Component_Transceiver_FecStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecStatus (leaf): Operational status of FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-status"
// Path from root: "/components/component/transceiver/state/fec-status"
func (n *Component_TransceiverPathAny) FecStatus() *Component_Transceiver_FecStatusPathAny {
	return &Component_Transceiver_FecStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecUncorrectableBlocks (leaf): The number of blocks that were uncorrectable by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-uncorrectable-blocks"
// Path from root: "/components/component/transceiver/state/fec-uncorrectable-blocks"
func (n *Component_TransceiverPath) FecUncorrectableBlocks() *Component_Transceiver_FecUncorrectableBlocksPath {
	return &Component_Transceiver_FecUncorrectableBlocksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-uncorrectable-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecUncorrectableBlocks (leaf): The number of blocks that were uncorrectable by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-uncorrectable-blocks"
// Path from root: "/components/component/transceiver/state/fec-uncorrectable-blocks"
func (n *Component_TransceiverPathAny) FecUncorrectableBlocks() *Component_Transceiver_FecUncorrectableBlocksPathAny {
	return &Component_Transceiver_FecUncorrectableBlocksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-uncorrectable-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecUncorrectableWords (leaf): The number of words that were uncorrectable by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-uncorrectable-words"
// Path from root: "/components/component/transceiver/state/fec-uncorrectable-words"
func (n *Component_TransceiverPath) FecUncorrectableWords() *Component_Transceiver_FecUncorrectableWordsPath {
	return &Component_Transceiver_FecUncorrectableWordsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-uncorrectable-words"},
			map[string]interface{}{},
			n,
		),
	}
}

// FecUncorrectableWords (leaf): The number of words that were uncorrectable by the FEC
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/fec-uncorrectable-words"
// Path from root: "/components/component/transceiver/state/fec-uncorrectable-words"
func (n *Component_TransceiverPathAny) FecUncorrectableWords() *Component_Transceiver_FecUncorrectableWordsPathAny {
	return &Component_Transceiver_FecUncorrectableWordsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fec-uncorrectable-words"},
			map[string]interface{}{},
			n,
		),
	}
}

// FormFactor (leaf): Indicates the type of optical transceiver used on this
// port.  If the client port is built into the device and not
// pluggable, then non-pluggable is the corresponding state. If
// a device port supports multiple form factors (e.g. QSFP28
// and QSFP+, then the value of the transceiver installed shall
// be reported. If no transceiver is present, then the value of
// the highest rate form factor shall be reported
// (QSFP28, for example).
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/form-factor"
// Path from root: "/components/component/transceiver/state/form-factor"
func (n *Component_TransceiverPath) FormFactor() *Component_Transceiver_FormFactorPath {
	return &Component_Transceiver_FormFactorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "form-factor"},
			map[string]interface{}{},
			n,
		),
	}
}

// FormFactor (leaf): Indicates the type of optical transceiver used on this
// port.  If the client port is built into the device and not
// pluggable, then non-pluggable is the corresponding state. If
// a device port supports multiple form factors (e.g. QSFP28
// and QSFP+, then the value of the transceiver installed shall
// be reported. If no transceiver is present, then the value of
// the highest rate form factor shall be reported
// (QSFP28, for example).
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/form-factor"
// Path from root: "/components/component/transceiver/state/form-factor"
func (n *Component_TransceiverPathAny) FormFactor() *Component_Transceiver_FormFactorPathAny {
	return &Component_Transceiver_FormFactorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "form-factor"},
			map[string]interface{}{},
			n,
		),
	}
}

// FormFactorPreconf (leaf): Indicates the type of optical transceiver used on this
// port.  If the client port is built into the device and not
// pluggable, then non-pluggable is the corresponding state. If
// a device port supports multiple form factors (e.g. QSFP28
// and QSFP+, then the value of the transceiver installed shall
// be reported. If no transceiver is present, then the value of
// the highest rate form factor shall be reported
// (QSFP28, for example).
//
// The form factor is included in configuration data to allow
// pre-configuring a device with the expected type of
// transceiver ahead of deployment.  The corresponding state
// leaf should reflect the actual transceiver type plugged into
// the system.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/form-factor-preconf"
// Path from root: "/components/component/transceiver/state/form-factor-preconf"
func (n *Component_TransceiverPath) FormFactorPreconf() *Component_Transceiver_FormFactorPreconfPath {
	return &Component_Transceiver_FormFactorPreconfPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "form-factor-preconf"},
			map[string]interface{}{},
			n,
		),
	}
}

// FormFactorPreconf (leaf): Indicates the type of optical transceiver used on this
// port.  If the client port is built into the device and not
// pluggable, then non-pluggable is the corresponding state. If
// a device port supports multiple form factors (e.g. QSFP28
// and QSFP+, then the value of the transceiver installed shall
// be reported. If no transceiver is present, then the value of
// the highest rate form factor shall be reported
// (QSFP28, for example).
//
// The form factor is included in configuration data to allow
// pre-configuring a device with the expected type of
// transceiver ahead of deployment.  The corresponding state
// leaf should reflect the actual transceiver type plugged into
// the system.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/form-factor-preconf"
// Path from root: "/components/component/transceiver/state/form-factor-preconf"
func (n *Component_TransceiverPathAny) FormFactorPreconf() *Component_Transceiver_FormFactorPreconfPathAny {
	return &Component_Transceiver_FormFactorPreconfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "form-factor-preconf"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): The input optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/transceiver/state/input-power"
func (n *Component_TransceiverPath) InputPower() *Component_Transceiver_InputPowerPath {
	return &Component_Transceiver_InputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): The input optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/transceiver/state/input-power"
func (n *Component_TransceiverPathAny) InputPower() *Component_Transceiver_InputPowerPathAny {
	return &Component_Transceiver_InputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrent (container): The current applied by the system to the transmit laser to
// achieve the output power. The current is expressed in mA
// with up to two decimal precision. Values include the
// instantaneous, average, minimum, and maximum statistics.
// If avg/min/max statistics are not supported, the target is
// expected to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current"
// Path from root: "/components/component/transceiver/state/laser-bias-current"
func (n *Component_TransceiverPath) LaserBiasCurrent() *Component_Transceiver_LaserBiasCurrentPath {
	return &Component_Transceiver_LaserBiasCurrentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrent (container): The current applied by the system to the transmit laser to
// achieve the output power. The current is expressed in mA
// with up to two decimal precision. Values include the
// instantaneous, average, minimum, and maximum statistics.
// If avg/min/max statistics are not supported, the target is
// expected to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current"
// Path from root: "/components/component/transceiver/state/laser-bias-current"
func (n *Component_TransceiverPathAny) LaserBiasCurrent() *Component_Transceiver_LaserBiasCurrentPathAny {
	return &Component_Transceiver_LaserBiasCurrentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModuleFunctionalType (leaf): Indicates the module functional type which represents the
// functional capability of the transceiver. For example, this
// would specify the module is a digital coherent optic or a
// standard grey optic that performs on-off keying.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/module-functional-type"
// Path from root: "/components/component/transceiver/state/module-functional-type"
func (n *Component_TransceiverPath) ModuleFunctionalType() *Component_Transceiver_ModuleFunctionalTypePath {
	return &Component_Transceiver_ModuleFunctionalTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "module-functional-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModuleFunctionalType (leaf): Indicates the module functional type which represents the
// functional capability of the transceiver. For example, this
// would specify the module is a digital coherent optic or a
// standard grey optic that performs on-off keying.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/module-functional-type"
// Path from root: "/components/component/transceiver/state/module-functional-type"
func (n *Component_TransceiverPathAny) ModuleFunctionalType() *Component_Transceiver_ModuleFunctionalTypePathAny {
	return &Component_Transceiver_ModuleFunctionalTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "module-functional-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// OtnComplianceCode (leaf): OTN application code supported by the port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/otn-compliance-code"
// Path from root: "/components/component/transceiver/state/otn-compliance-code"
func (n *Component_TransceiverPath) OtnComplianceCode() *Component_Transceiver_OtnComplianceCodePath {
	return &Component_Transceiver_OtnComplianceCodePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "otn-compliance-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// OtnComplianceCode (leaf): OTN application code supported by the port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/otn-compliance-code"
// Path from root: "/components/component/transceiver/state/otn-compliance-code"
func (n *Component_TransceiverPathAny) OtnComplianceCode() *Component_Transceiver_OtnComplianceCodePathAny {
	return &Component_Transceiver_OtnComplianceCodePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "otn-compliance-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): The output optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/transceiver/state/output-power"
func (n *Component_TransceiverPath) OutputPower() *Component_Transceiver_OutputPowerPath {
	return &Component_Transceiver_OutputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): The output optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/transceiver/state/output-power"
func (n *Component_TransceiverPathAny) OutputPower() *Component_Transceiver_OutputPowerPathAny {
	return &Component_Transceiver_OutputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostFecBer (container): Bit error rate after forward error correction -- computed
// value with 18 decimal precision. Note that decimal64
// supports values as small as i x 10^-18 where i is an
// integer. Values smaller than this should be reported as 0
// to inidicate error free or near error free performance.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/post-fec-ber"
// Path from root: "/components/component/transceiver/state/post-fec-ber"
func (n *Component_TransceiverPath) PostFecBer() *Component_Transceiver_PostFecBerPath {
	return &Component_Transceiver_PostFecBerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-fec-ber"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostFecBer (container): Bit error rate after forward error correction -- computed
// value with 18 decimal precision. Note that decimal64
// supports values as small as i x 10^-18 where i is an
// integer. Values smaller than this should be reported as 0
// to inidicate error free or near error free performance.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/post-fec-ber"
// Path from root: "/components/component/transceiver/state/post-fec-ber"
func (n *Component_TransceiverPathAny) PostFecBer() *Component_Transceiver_PostFecBerPathAny {
	return &Component_Transceiver_PostFecBerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-fec-ber"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreFecBer (container): Bit error rate before forward error correction -- computed
// value with 18 decimal precision. Note that decimal64
// supports values as small as i x 10^-18 where i is an
// integer. Values smaller than this should be reported as 0
// to inidicate error free or near error free performance.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/pre-fec-ber"
// Path from root: "/components/component/transceiver/state/pre-fec-ber"
func (n *Component_TransceiverPath) PreFecBer() *Component_Transceiver_PreFecBerPath {
	return &Component_Transceiver_PreFecBerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pre-fec-ber"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreFecBer (container): Bit error rate before forward error correction -- computed
// value with 18 decimal precision. Note that decimal64
// supports values as small as i x 10^-18 where i is an
// integer. Values smaller than this should be reported as 0
// to inidicate error free or near error free performance.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/pre-fec-ber"
// Path from root: "/components/component/transceiver/state/pre-fec-ber"
func (n *Component_TransceiverPathAny) PreFecBer() *Component_Transceiver_PreFecBerPathAny {
	return &Component_Transceiver_PreFecBerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pre-fec-ber"},
			map[string]interface{}{},
			n,
		),
	}
}

// Present (leaf): Indicates whether a transceiver is present in
// the specified client port.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/present"
// Path from root: "/components/component/transceiver/state/present"
func (n *Component_TransceiverPath) Present() *Component_Transceiver_PresentPath {
	return &Component_Transceiver_PresentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "present"},
			map[string]interface{}{},
			n,
		),
	}
}

// Present (leaf): Indicates whether a transceiver is present in
// the specified client port.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/present"
// Path from root: "/components/component/transceiver/state/present"
func (n *Component_TransceiverPathAny) Present() *Component_Transceiver_PresentPathAny {
	return &Component_Transceiver_PresentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "present"},
			map[string]interface{}{},
			n,
		),
	}
}

// SerialNo (leaf): Transceiver serial number. 16-octet field that contains
// ASCII characters, left-aligned and padded on the right with
// ASCII spaces (20h). If part serial number is undefined, all
// 16 octets = 0h
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/serial-no"
// Path from root: "/components/component/transceiver/state/serial-no"
func (n *Component_TransceiverPath) SerialNo() *Component_Transceiver_SerialNoPath {
	return &Component_Transceiver_SerialNoPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "serial-no"},
			map[string]interface{}{},
			n,
		),
	}
}

// SerialNo (leaf): Transceiver serial number. 16-octet field that contains
// ASCII characters, left-aligned and padded on the right with
// ASCII spaces (20h). If part serial number is undefined, all
// 16 octets = 0h
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/serial-no"
// Path from root: "/components/component/transceiver/state/serial-no"
func (n *Component_TransceiverPathAny) SerialNo() *Component_Transceiver_SerialNoPathAny {
	return &Component_Transceiver_SerialNoPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "serial-no"},
			map[string]interface{}{},
			n,
		),
	}
}

// SonetSdhComplianceCode (leaf): SONET/SDH application code supported by the port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/sonet-sdh-compliance-code"
// Path from root: "/components/component/transceiver/state/sonet-sdh-compliance-code"
func (n *Component_TransceiverPath) SonetSdhComplianceCode() *Component_Transceiver_SonetSdhComplianceCodePath {
	return &Component_Transceiver_SonetSdhComplianceCodePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sonet-sdh-compliance-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// SonetSdhComplianceCode (leaf): SONET/SDH application code supported by the port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/sonet-sdh-compliance-code"
// Path from root: "/components/component/transceiver/state/sonet-sdh-compliance-code"
func (n *Component_TransceiverPathAny) SonetSdhComplianceCode() *Component_Transceiver_SonetSdhComplianceCodePathAny {
	return &Component_Transceiver_SonetSdhComplianceCodePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sonet-sdh-compliance-code"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupplyVoltage (container): Supply voltage to the transceiver in volts with 2 decimal
// precision. Values include the instantaneous, average, minimum,
// and maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the instant
// value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/supply-voltage"
// Path from root: "/components/component/transceiver/state/supply-voltage"
func (n *Component_TransceiverPath) SupplyVoltage() *Component_Transceiver_SupplyVoltagePath {
	return &Component_Transceiver_SupplyVoltagePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supply-voltage"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupplyVoltage (container): Supply voltage to the transceiver in volts with 2 decimal
// precision. Values include the instantaneous, average, minimum,
// and maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the instant
// value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/supply-voltage"
// Path from root: "/components/component/transceiver/state/supply-voltage"
func (n *Component_TransceiverPathAny) SupplyVoltage() *Component_Transceiver_SupplyVoltagePathAny {
	return &Component_Transceiver_SupplyVoltagePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supply-voltage"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vendor (leaf): Full name of transceiver vendor. 16-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor"
// Path from root: "/components/component/transceiver/state/vendor"
func (n *Component_TransceiverPath) Vendor() *Component_Transceiver_VendorPath {
	return &Component_Transceiver_VendorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor"},
			map[string]interface{}{},
			n,
		),
	}
}

// Vendor (leaf): Full name of transceiver vendor. 16-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor"
// Path from root: "/components/component/transceiver/state/vendor"
func (n *Component_TransceiverPathAny) Vendor() *Component_Transceiver_VendorPathAny {
	return &Component_Transceiver_VendorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor"},
			map[string]interface{}{},
			n,
		),
	}
}

// VendorPart (leaf): Transceiver vendor's part number. 16-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h). If part number is undefined,
// all 16 octets = 0h
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor-part"
// Path from root: "/components/component/transceiver/state/vendor-part"
func (n *Component_TransceiverPath) VendorPart() *Component_Transceiver_VendorPartPath {
	return &Component_Transceiver_VendorPartPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor-part"},
			map[string]interface{}{},
			n,
		),
	}
}

// VendorPart (leaf): Transceiver vendor's part number. 16-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h). If part number is undefined,
// all 16 octets = 0h
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor-part"
// Path from root: "/components/component/transceiver/state/vendor-part"
func (n *Component_TransceiverPathAny) VendorPart() *Component_Transceiver_VendorPartPathAny {
	return &Component_Transceiver_VendorPartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor-part"},
			map[string]interface{}{},
			n,
		),
	}
}

// VendorRev (leaf): Transceiver vendor's revision number. 2-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor-rev"
// Path from root: "/components/component/transceiver/state/vendor-rev"
func (n *Component_TransceiverPath) VendorRev() *Component_Transceiver_VendorRevPath {
	return &Component_Transceiver_VendorRevPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor-rev"},
			map[string]interface{}{},
			n,
		),
	}
}

// VendorRev (leaf): Transceiver vendor's revision number. 2-octet field that
// contains ASCII characters, left-aligned and padded on the
// right with ASCII spaces (20h)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/vendor-rev"
// Path from root: "/components/component/transceiver/state/vendor-rev"
func (n *Component_TransceiverPathAny) VendorRev() *Component_Transceiver_VendorRevPathAny {
	return &Component_Transceiver_VendorRevPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vendor-rev"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_ChannelPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel YANG schema element.
type Component_Transceiver_ChannelPath struct {
	*ygot.NodePath
}

// Component_Transceiver_ChannelPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel YANG schema element.
type Component_Transceiver_ChannelPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_AssociatedOpticalChannelPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/associated-optical-channel YANG schema element.
type Component_Transceiver_Channel_AssociatedOpticalChannelPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_AssociatedOpticalChannelPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/associated-optical-channel YANG schema element.
type Component_Transceiver_Channel_AssociatedOpticalChannelPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_DescriptionPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/description YANG schema element.
type Component_Transceiver_Channel_DescriptionPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_DescriptionPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/description YANG schema element.
type Component_Transceiver_Channel_DescriptionPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_IndexPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/index YANG schema element.
type Component_Transceiver_Channel_IndexPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_IndexPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/index YANG schema element.
type Component_Transceiver_Channel_IndexPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserAgePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-age YANG schema element.
type Component_Transceiver_Channel_LaserAgePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserAgePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-age YANG schema element.
type Component_Transceiver_Channel_LaserAgePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputFrequencyPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-frequency YANG schema element.
type Component_Transceiver_Channel_OutputFrequencyPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputFrequencyPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-frequency YANG schema element.
type Component_Transceiver_Channel_OutputFrequencyPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetOutputPowerPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-output-power YANG schema element.
type Component_Transceiver_Channel_TargetOutputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetOutputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-output-power YANG schema element.
type Component_Transceiver_Channel_TargetOutputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TxLaserPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tx-laser YANG schema element.
type Component_Transceiver_Channel_TxLaserPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TxLaserPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tx-laser YANG schema element.
type Component_Transceiver_Channel_TxLaserPathAny struct {
	*ygot.NodePath
}

// AssociatedOpticalChannel (leaf): A physical channel may reference an optical channel
// component. If the physical channel does make this optional
// reference, then a limited set of leaves will apply within
// the physical channel to avoid duplication within the optical
// channel.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/associated-optical-channel"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/associated-optical-channel"
func (n *Component_Transceiver_ChannelPath) AssociatedOpticalChannel() *Component_Transceiver_Channel_AssociatedOpticalChannelPath {
	return &Component_Transceiver_Channel_AssociatedOpticalChannelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "associated-optical-channel"},
			map[string]interface{}{},
			n,
		),
	}
}

// AssociatedOpticalChannel (leaf): A physical channel may reference an optical channel
// component. If the physical channel does make this optional
// reference, then a limited set of leaves will apply within
// the physical channel to avoid duplication within the optical
// channel.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/associated-optical-channel"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/associated-optical-channel"
func (n *Component_Transceiver_ChannelPathAny) AssociatedOpticalChannel() *Component_Transceiver_Channel_AssociatedOpticalChannelPathAny {
	return &Component_Transceiver_Channel_AssociatedOpticalChannelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "associated-optical-channel"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): Text description for the client physical channel
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/description"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/description"
func (n *Component_Transceiver_ChannelPath) Description() *Component_Transceiver_Channel_DescriptionPath {
	return &Component_Transceiver_Channel_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): Text description for the client physical channel
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/description"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/description"
func (n *Component_Transceiver_ChannelPathAny) Description() *Component_Transceiver_Channel_DescriptionPathAny {
	return &Component_Transceiver_Channel_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of the physical channnel or lane within a physical
// client port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/index"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/index"
func (n *Component_Transceiver_ChannelPath) Index() *Component_Transceiver_Channel_IndexPath {
	return &Component_Transceiver_Channel_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of the physical channnel or lane within a physical
// client port
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/index"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/index"
func (n *Component_Transceiver_ChannelPathAny) Index() *Component_Transceiver_Channel_IndexPathAny {
	return &Component_Transceiver_Channel_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): The input optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power"
func (n *Component_Transceiver_ChannelPath) InputPower() *Component_Transceiver_Channel_InputPowerPath {
	return &Component_Transceiver_Channel_InputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputPower (container): The input optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/input-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power"
func (n *Component_Transceiver_ChannelPathAny) InputPower() *Component_Transceiver_Channel_InputPowerPathAny {
	return &Component_Transceiver_Channel_InputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserAge (leaf): Laser age (0% at beginning of life, 100% end of life) in integer
// percentage. This term is defined by Common Management Interface
// Specification (CMIS).
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-age"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-age"
func (n *Component_Transceiver_ChannelPath) LaserAge() *Component_Transceiver_Channel_LaserAgePath {
	return &Component_Transceiver_Channel_LaserAgePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-age"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserAge (leaf): Laser age (0% at beginning of life, 100% end of life) in integer
// percentage. This term is defined by Common Management Interface
// Specification (CMIS).
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-age"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-age"
func (n *Component_Transceiver_ChannelPathAny) LaserAge() *Component_Transceiver_Channel_LaserAgePathAny {
	return &Component_Transceiver_Channel_LaserAgePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-age"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrent (container): The current applied by the system to the transmit laser to
// achieve the output power. The current is expressed in mA
// with up to two decimal precision. Values include the
// instantaneous, average, minimum, and maximum statistics.
// If avg/min/max statistics are not supported, the target is
// expected to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"
func (n *Component_Transceiver_ChannelPath) LaserBiasCurrent() *Component_Transceiver_Channel_LaserBiasCurrentPath {
	return &Component_Transceiver_Channel_LaserBiasCurrentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserBiasCurrent (container): The current applied by the system to the transmit laser to
// achieve the output power. The current is expressed in mA
// with up to two decimal precision. Values include the
// instantaneous, average, minimum, and maximum statistics.
// If avg/min/max statistics are not supported, the target is
// expected to just supply the instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-bias-current"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"
func (n *Component_Transceiver_ChannelPathAny) LaserBiasCurrent() *Component_Transceiver_Channel_LaserBiasCurrentPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-bias-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserTemperature (container): Laser temperature for the cooled laser in degrees Celsius with 1
// decimal precision. This term is defined by Common Management
// Interface Specification (CMIS). Values include the instantaneous,
// average, minimum, and maximum statistics. If avg/min/max statistics
// are not supported, the target is expected to just supply the
// instant value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-temperature"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature"
func (n *Component_Transceiver_ChannelPath) LaserTemperature() *Component_Transceiver_Channel_LaserTemperaturePath {
	return &Component_Transceiver_Channel_LaserTemperaturePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-temperature"},
			map[string]interface{}{},
			n,
		),
	}
}

// LaserTemperature (container): Laser temperature for the cooled laser in degrees Celsius with 1
// decimal precision. This term is defined by Common Management
// Interface Specification (CMIS). Values include the instantaneous,
// average, minimum, and maximum statistics. If avg/min/max statistics
// are not supported, the target is expected to just supply the
// instant value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/laser-temperature"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature"
func (n *Component_Transceiver_ChannelPathAny) LaserTemperature() *Component_Transceiver_Channel_LaserTemperaturePathAny {
	return &Component_Transceiver_Channel_LaserTemperaturePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "laser-temperature"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputFrequency (leaf): The frequency in MHz of the individual physical channel
// (e.g. ITU C50 - 195.0THz and would be reported as
// 195,000,000 MHz in this model). This attribute is not
// configurable on most client ports.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-frequency"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-frequency"
func (n *Component_Transceiver_ChannelPath) OutputFrequency() *Component_Transceiver_Channel_OutputFrequencyPath {
	return &Component_Transceiver_Channel_OutputFrequencyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-frequency"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputFrequency (leaf): The frequency in MHz of the individual physical channel
// (e.g. ITU C50 - 195.0THz and would be reported as
// 195,000,000 MHz in this model). This attribute is not
// configurable on most client ports.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-frequency"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-frequency"
func (n *Component_Transceiver_ChannelPathAny) OutputFrequency() *Component_Transceiver_Channel_OutputFrequencyPathAny {
	return &Component_Transceiver_Channel_OutputFrequencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-frequency"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): The output optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power"
func (n *Component_Transceiver_ChannelPath) OutputPower() *Component_Transceiver_Channel_OutputPowerPath {
	return &Component_Transceiver_Channel_OutputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputPower (container): The output optical power of a physical channel in units
// of 0.01dBm, which may be associated with individual
// physical channels, or an aggregate of multiple physical
// channels (i.e., for the overall transceiver). For an
// aggregate, this may be a measurement from a photodetector
// or a a calculation performed on the device by summing up
// all of the related individual physical channels.
// Values include the instantaneous, average, minimum, and
// maximum statistics. If avg/min/max statistics are not
// supported, the target is expected to just supply the
// instant value
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/output-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power"
func (n *Component_Transceiver_ChannelPathAny) OutputPower() *Component_Transceiver_Channel_OutputPowerPathAny {
	return &Component_Transceiver_Channel_OutputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetFrequencyDeviation (container): The difference in MHz with 1 decimal precision between the target
// center frequency and the actual current center frequency . This term
// is defined by Common Management Interface Specification (CMIS) and
// referred to as laser frequency error or laser ferquency deviation.
// Values include the instantaneous, average, minimum, and maximum
// statistics. If avg/min/max statistics are not supported, the target
// is expected to just supply the instant value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/target-frequency-deviation"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation"
func (n *Component_Transceiver_ChannelPath) TargetFrequencyDeviation() *Component_Transceiver_Channel_TargetFrequencyDeviationPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviationPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "target-frequency-deviation"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetFrequencyDeviation (container): The difference in MHz with 1 decimal precision between the target
// center frequency and the actual current center frequency . This term
// is defined by Common Management Interface Specification (CMIS) and
// referred to as laser frequency error or laser ferquency deviation.
// Values include the instantaneous, average, minimum, and maximum
// statistics. If avg/min/max statistics are not supported, the target
// is expected to just supply the instant value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/target-frequency-deviation"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation"
func (n *Component_Transceiver_ChannelPathAny) TargetFrequencyDeviation() *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "target-frequency-deviation"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetOutputPower (leaf): Target output optical power level of the optical channel,
// expressed in increments of 0.01 dBm (decibel-milliwats)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/target-output-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-output-power"
func (n *Component_Transceiver_ChannelPath) TargetOutputPower() *Component_Transceiver_Channel_TargetOutputPowerPath {
	return &Component_Transceiver_Channel_TargetOutputPowerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "target-output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetOutputPower (leaf): Target output optical power level of the optical channel,
// expressed in increments of 0.01 dBm (decibel-milliwats)
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/target-output-power"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-output-power"
func (n *Component_Transceiver_ChannelPathAny) TargetOutputPower() *Component_Transceiver_Channel_TargetOutputPowerPathAny {
	return &Component_Transceiver_Channel_TargetOutputPowerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "target-output-power"},
			map[string]interface{}{},
			n,
		),
	}
}

// TecCurrent (container): The amount of current flowing to the TC of a cooled laser in percentage
// with 2 decimal precision. This term is defined by Common Management
// Interface Specification (CMIS). Values include the instantaneous,
// average, minimum, and maximum statistics. If avg/min/max statistics
// are not supported, the target is expected to just supply the instant
// value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/tec-current"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current"
func (n *Component_Transceiver_ChannelPath) TecCurrent() *Component_Transceiver_Channel_TecCurrentPath {
	return &Component_Transceiver_Channel_TecCurrentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tec-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// TecCurrent (container): The amount of current flowing to the TC of a cooled laser in percentage
// with 2 decimal precision. This term is defined by Common Management
// Interface Specification (CMIS). Values include the instantaneous,
// average, minimum, and maximum statistics. If avg/min/max statistics
// are not supported, the target is expected to just supply the instant
// value.
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/tec-current"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current"
func (n *Component_Transceiver_ChannelPathAny) TecCurrent() *Component_Transceiver_Channel_TecCurrentPathAny {
	return &Component_Transceiver_Channel_TecCurrentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tec-current"},
			map[string]interface{}{},
			n,
		),
	}
}

// TxLaser (leaf): Enable (true) or disable (false) the transmit label for the
// channel
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/tx-laser"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tx-laser"
func (n *Component_Transceiver_ChannelPath) TxLaser() *Component_Transceiver_Channel_TxLaserPath {
	return &Component_Transceiver_Channel_TxLaserPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tx-laser"},
			map[string]interface{}{},
			n,
		),
	}
}

// TxLaser (leaf): Enable (true) or disable (false) the transmit label for the
// channel
// ----------------------------------------
// Defining module: "openconfig-platform-transceiver"
// Instantiating module: "openconfig-platform"
// Path from parent: "state/tx-laser"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tx-laser"
func (n *Component_Transceiver_ChannelPathAny) TxLaser() *Component_Transceiver_Channel_TxLaserPathAny {
	return &Component_Transceiver_Channel_TxLaserPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tx-laser"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_InputPowerPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power YANG schema element.
type Component_Transceiver_Channel_InputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power YANG schema element.
type Component_Transceiver_Channel_InputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/avg YANG schema element.
type Component_Transceiver_Channel_InputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/avg YANG schema element.
type Component_Transceiver_Channel_InputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/instant YANG schema element.
type Component_Transceiver_Channel_InputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/instant YANG schema element.
type Component_Transceiver_Channel_InputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/interval YANG schema element.
type Component_Transceiver_Channel_InputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/interval YANG schema element.
type Component_Transceiver_Channel_InputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/max YANG schema element.
type Component_Transceiver_Channel_InputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/max YANG schema element.
type Component_Transceiver_Channel_InputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/max-time YANG schema element.
type Component_Transceiver_Channel_InputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/max-time YANG schema element.
type Component_Transceiver_Channel_InputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/min YANG schema element.
type Component_Transceiver_Channel_InputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/min YANG schema element.
type Component_Transceiver_Channel_InputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/min-time YANG schema element.
type Component_Transceiver_Channel_InputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_InputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power/min-time YANG schema element.
type Component_Transceiver_Channel_InputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/avg"
func (n *Component_Transceiver_Channel_InputPowerPath) Avg() *Component_Transceiver_Channel_InputPower_AvgPath {
	return &Component_Transceiver_Channel_InputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/avg"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Avg() *Component_Transceiver_Channel_InputPower_AvgPathAny {
	return &Component_Transceiver_Channel_InputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/instant"
func (n *Component_Transceiver_Channel_InputPowerPath) Instant() *Component_Transceiver_Channel_InputPower_InstantPath {
	return &Component_Transceiver_Channel_InputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/instant"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Instant() *Component_Transceiver_Channel_InputPower_InstantPathAny {
	return &Component_Transceiver_Channel_InputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/interval"
func (n *Component_Transceiver_Channel_InputPowerPath) Interval() *Component_Transceiver_Channel_InputPower_IntervalPath {
	return &Component_Transceiver_Channel_InputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/interval"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Interval() *Component_Transceiver_Channel_InputPower_IntervalPathAny {
	return &Component_Transceiver_Channel_InputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/max"
func (n *Component_Transceiver_Channel_InputPowerPath) Max() *Component_Transceiver_Channel_InputPower_MaxPath {
	return &Component_Transceiver_Channel_InputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/max"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Max() *Component_Transceiver_Channel_InputPower_MaxPathAny {
	return &Component_Transceiver_Channel_InputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/max-time"
func (n *Component_Transceiver_Channel_InputPowerPath) MaxTime() *Component_Transceiver_Channel_InputPower_MaxTimePath {
	return &Component_Transceiver_Channel_InputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/max-time"
func (n *Component_Transceiver_Channel_InputPowerPathAny) MaxTime() *Component_Transceiver_Channel_InputPower_MaxTimePathAny {
	return &Component_Transceiver_Channel_InputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/min"
func (n *Component_Transceiver_Channel_InputPowerPath) Min() *Component_Transceiver_Channel_InputPower_MinPath {
	return &Component_Transceiver_Channel_InputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/min"
func (n *Component_Transceiver_Channel_InputPowerPathAny) Min() *Component_Transceiver_Channel_InputPower_MinPathAny {
	return &Component_Transceiver_Channel_InputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/min-time"
func (n *Component_Transceiver_Channel_InputPowerPath) MinTime() *Component_Transceiver_Channel_InputPower_MinTimePath {
	return &Component_Transceiver_Channel_InputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/input-power/min-time"
func (n *Component_Transceiver_Channel_InputPowerPathAny) MinTime() *Component_Transceiver_Channel_InputPower_MinTimePathAny {
	return &Component_Transceiver_Channel_InputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_LaserBiasCurrentPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrentPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrentPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrentPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max-time YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max-time YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min-time YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserBiasCurrent_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min-time YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Avg() *Component_Transceiver_Channel_LaserBiasCurrent_AvgPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Avg() *Component_Transceiver_Channel_LaserBiasCurrent_AvgPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Instant() *Component_Transceiver_Channel_LaserBiasCurrent_InstantPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Instant() *Component_Transceiver_Channel_LaserBiasCurrent_InstantPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Interval() *Component_Transceiver_Channel_LaserBiasCurrent_IntervalPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Interval() *Component_Transceiver_Channel_LaserBiasCurrent_IntervalPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Max() *Component_Transceiver_Channel_LaserBiasCurrent_MaxPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Max() *Component_Transceiver_Channel_LaserBiasCurrent_MaxPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max-time"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) MaxTime() *Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max-time"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) MaxTime() *Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) Min() *Component_Transceiver_Channel_LaserBiasCurrent_MinPath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) Min() *Component_Transceiver_Channel_LaserBiasCurrent_MinPathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min-time"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPath) MinTime() *Component_Transceiver_Channel_LaserBiasCurrent_MinTimePath {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min-time"
func (n *Component_Transceiver_Channel_LaserBiasCurrentPathAny) MinTime() *Component_Transceiver_Channel_LaserBiasCurrent_MinTimePathAny {
	return &Component_Transceiver_Channel_LaserBiasCurrent_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_LaserTemperaturePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature YANG schema element.
type Component_Transceiver_Channel_LaserTemperaturePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperaturePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature YANG schema element.
type Component_Transceiver_Channel_LaserTemperaturePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/avg YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/avg YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/instant YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/instant YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/interval YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/interval YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/max YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/max YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/max-time YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/max-time YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/min YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/min YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/min-time YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_LaserTemperature_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-temperature/min-time YANG schema element.
type Component_Transceiver_Channel_LaserTemperature_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/avg"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Avg() *Component_Transceiver_Channel_LaserTemperature_AvgPath {
	return &Component_Transceiver_Channel_LaserTemperature_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/avg"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Avg() *Component_Transceiver_Channel_LaserTemperature_AvgPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/instant"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Instant() *Component_Transceiver_Channel_LaserTemperature_InstantPath {
	return &Component_Transceiver_Channel_LaserTemperature_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/instant"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Instant() *Component_Transceiver_Channel_LaserTemperature_InstantPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/interval"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Interval() *Component_Transceiver_Channel_LaserTemperature_IntervalPath {
	return &Component_Transceiver_Channel_LaserTemperature_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/interval"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Interval() *Component_Transceiver_Channel_LaserTemperature_IntervalPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/max"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Max() *Component_Transceiver_Channel_LaserTemperature_MaxPath {
	return &Component_Transceiver_Channel_LaserTemperature_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/max"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Max() *Component_Transceiver_Channel_LaserTemperature_MaxPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/max-time"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) MaxTime() *Component_Transceiver_Channel_LaserTemperature_MaxTimePath {
	return &Component_Transceiver_Channel_LaserTemperature_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/max-time"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) MaxTime() *Component_Transceiver_Channel_LaserTemperature_MaxTimePathAny {
	return &Component_Transceiver_Channel_LaserTemperature_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/min"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) Min() *Component_Transceiver_Channel_LaserTemperature_MinPath {
	return &Component_Transceiver_Channel_LaserTemperature_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/min"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) Min() *Component_Transceiver_Channel_LaserTemperature_MinPathAny {
	return &Component_Transceiver_Channel_LaserTemperature_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/min-time"
func (n *Component_Transceiver_Channel_LaserTemperaturePath) MinTime() *Component_Transceiver_Channel_LaserTemperature_MinTimePath {
	return &Component_Transceiver_Channel_LaserTemperature_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/laser-temperature/min-time"
func (n *Component_Transceiver_Channel_LaserTemperaturePathAny) MinTime() *Component_Transceiver_Channel_LaserTemperature_MinTimePathAny {
	return &Component_Transceiver_Channel_LaserTemperature_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_OutputPowerPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power YANG schema element.
type Component_Transceiver_Channel_OutputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power YANG schema element.
type Component_Transceiver_Channel_OutputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/avg YANG schema element.
type Component_Transceiver_Channel_OutputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/avg YANG schema element.
type Component_Transceiver_Channel_OutputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/instant YANG schema element.
type Component_Transceiver_Channel_OutputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/instant YANG schema element.
type Component_Transceiver_Channel_OutputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/interval YANG schema element.
type Component_Transceiver_Channel_OutputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/interval YANG schema element.
type Component_Transceiver_Channel_OutputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/max YANG schema element.
type Component_Transceiver_Channel_OutputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/max YANG schema element.
type Component_Transceiver_Channel_OutputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/max-time YANG schema element.
type Component_Transceiver_Channel_OutputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/max-time YANG schema element.
type Component_Transceiver_Channel_OutputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/min YANG schema element.
type Component_Transceiver_Channel_OutputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/min YANG schema element.
type Component_Transceiver_Channel_OutputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/min-time YANG schema element.
type Component_Transceiver_Channel_OutputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_OutputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power/min-time YANG schema element.
type Component_Transceiver_Channel_OutputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/avg"
func (n *Component_Transceiver_Channel_OutputPowerPath) Avg() *Component_Transceiver_Channel_OutputPower_AvgPath {
	return &Component_Transceiver_Channel_OutputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/avg"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Avg() *Component_Transceiver_Channel_OutputPower_AvgPathAny {
	return &Component_Transceiver_Channel_OutputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/instant"
func (n *Component_Transceiver_Channel_OutputPowerPath) Instant() *Component_Transceiver_Channel_OutputPower_InstantPath {
	return &Component_Transceiver_Channel_OutputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/instant"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Instant() *Component_Transceiver_Channel_OutputPower_InstantPathAny {
	return &Component_Transceiver_Channel_OutputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/interval"
func (n *Component_Transceiver_Channel_OutputPowerPath) Interval() *Component_Transceiver_Channel_OutputPower_IntervalPath {
	return &Component_Transceiver_Channel_OutputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/interval"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Interval() *Component_Transceiver_Channel_OutputPower_IntervalPathAny {
	return &Component_Transceiver_Channel_OutputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/max"
func (n *Component_Transceiver_Channel_OutputPowerPath) Max() *Component_Transceiver_Channel_OutputPower_MaxPath {
	return &Component_Transceiver_Channel_OutputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/max"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Max() *Component_Transceiver_Channel_OutputPower_MaxPathAny {
	return &Component_Transceiver_Channel_OutputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/max-time"
func (n *Component_Transceiver_Channel_OutputPowerPath) MaxTime() *Component_Transceiver_Channel_OutputPower_MaxTimePath {
	return &Component_Transceiver_Channel_OutputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/max-time"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) MaxTime() *Component_Transceiver_Channel_OutputPower_MaxTimePathAny {
	return &Component_Transceiver_Channel_OutputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/min"
func (n *Component_Transceiver_Channel_OutputPowerPath) Min() *Component_Transceiver_Channel_OutputPower_MinPath {
	return &Component_Transceiver_Channel_OutputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/min"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) Min() *Component_Transceiver_Channel_OutputPower_MinPathAny {
	return &Component_Transceiver_Channel_OutputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/min-time"
func (n *Component_Transceiver_Channel_OutputPowerPath) MinTime() *Component_Transceiver_Channel_OutputPower_MinTimePath {
	return &Component_Transceiver_Channel_OutputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/output-power/min-time"
func (n *Component_Transceiver_Channel_OutputPowerPathAny) MinTime() *Component_Transceiver_Channel_OutputPower_MinTimePathAny {
	return &Component_Transceiver_Channel_OutputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_TargetFrequencyDeviationPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviationPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviationPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviationPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/avg YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/avg YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/instant YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/instant YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/interval YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/interval YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max-time YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max-time YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min-time YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min-time YANG schema element.
type Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/avg"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Avg() *Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/avg"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Avg() *Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/instant"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Instant() *Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/instant"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Instant() *Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/interval"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Interval() *Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/interval"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Interval() *Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Max() *Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Max() *Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max-time"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) MaxTime() *Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/max-time"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) MaxTime() *Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) Min() *Component_Transceiver_Channel_TargetFrequencyDeviation_MinPath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) Min() *Component_Transceiver_Channel_TargetFrequencyDeviation_MinPathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min-time"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPath) MinTime() *Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePath {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/target-frequency-deviation/min-time"
func (n *Component_Transceiver_Channel_TargetFrequencyDeviationPathAny) MinTime() *Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePathAny {
	return &Component_Transceiver_Channel_TargetFrequencyDeviation_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_Channel_TecCurrentPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current YANG schema element.
type Component_Transceiver_Channel_TecCurrentPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrentPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current YANG schema element.
type Component_Transceiver_Channel_TecCurrentPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_AvgPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/avg YANG schema element.
type Component_Transceiver_Channel_TecCurrent_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/avg YANG schema element.
type Component_Transceiver_Channel_TecCurrent_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_InstantPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/instant YANG schema element.
type Component_Transceiver_Channel_TecCurrent_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/instant YANG schema element.
type Component_Transceiver_Channel_TecCurrent_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_IntervalPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/interval YANG schema element.
type Component_Transceiver_Channel_TecCurrent_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/interval YANG schema element.
type Component_Transceiver_Channel_TecCurrent_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MaxPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/max YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/max YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MaxTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/max-time YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/max-time YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MinPath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/min YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/min YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MinTimePath represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/min-time YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_Channel_TecCurrent_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/tec-current/min-time YANG schema element.
type Component_Transceiver_Channel_TecCurrent_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/avg"
func (n *Component_Transceiver_Channel_TecCurrentPath) Avg() *Component_Transceiver_Channel_TecCurrent_AvgPath {
	return &Component_Transceiver_Channel_TecCurrent_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/avg"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Avg() *Component_Transceiver_Channel_TecCurrent_AvgPathAny {
	return &Component_Transceiver_Channel_TecCurrent_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/instant"
func (n *Component_Transceiver_Channel_TecCurrentPath) Instant() *Component_Transceiver_Channel_TecCurrent_InstantPath {
	return &Component_Transceiver_Channel_TecCurrent_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/instant"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Instant() *Component_Transceiver_Channel_TecCurrent_InstantPathAny {
	return &Component_Transceiver_Channel_TecCurrent_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/interval"
func (n *Component_Transceiver_Channel_TecCurrentPath) Interval() *Component_Transceiver_Channel_TecCurrent_IntervalPath {
	return &Component_Transceiver_Channel_TecCurrent_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/interval"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Interval() *Component_Transceiver_Channel_TecCurrent_IntervalPathAny {
	return &Component_Transceiver_Channel_TecCurrent_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/max"
func (n *Component_Transceiver_Channel_TecCurrentPath) Max() *Component_Transceiver_Channel_TecCurrent_MaxPath {
	return &Component_Transceiver_Channel_TecCurrent_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/max"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Max() *Component_Transceiver_Channel_TecCurrent_MaxPathAny {
	return &Component_Transceiver_Channel_TecCurrent_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/max-time"
func (n *Component_Transceiver_Channel_TecCurrentPath) MaxTime() *Component_Transceiver_Channel_TecCurrent_MaxTimePath {
	return &Component_Transceiver_Channel_TecCurrent_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/max-time"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) MaxTime() *Component_Transceiver_Channel_TecCurrent_MaxTimePathAny {
	return &Component_Transceiver_Channel_TecCurrent_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/min"
func (n *Component_Transceiver_Channel_TecCurrentPath) Min() *Component_Transceiver_Channel_TecCurrent_MinPath {
	return &Component_Transceiver_Channel_TecCurrent_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/min"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) Min() *Component_Transceiver_Channel_TecCurrent_MinPathAny {
	return &Component_Transceiver_Channel_TecCurrent_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/min-time"
func (n *Component_Transceiver_Channel_TecCurrentPath) MinTime() *Component_Transceiver_Channel_TecCurrent_MinTimePath {
	return &Component_Transceiver_Channel_TecCurrent_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/physical-channels/channel/state/tec-current/min-time"
func (n *Component_Transceiver_Channel_TecCurrentPathAny) MinTime() *Component_Transceiver_Channel_TecCurrent_MinTimePathAny {
	return &Component_Transceiver_Channel_TecCurrent_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_InputPowerPath represents the /openconfig-platform/components/component/transceiver/state/input-power YANG schema element.
type Component_Transceiver_InputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power YANG schema element.
type Component_Transceiver_InputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_AvgPath represents the /openconfig-platform/components/component/transceiver/state/input-power/avg YANG schema element.
type Component_Transceiver_InputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/avg YANG schema element.
type Component_Transceiver_InputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_InstantPath represents the /openconfig-platform/components/component/transceiver/state/input-power/instant YANG schema element.
type Component_Transceiver_InputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/instant YANG schema element.
type Component_Transceiver_InputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/input-power/interval YANG schema element.
type Component_Transceiver_InputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/interval YANG schema element.
type Component_Transceiver_InputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MaxPath represents the /openconfig-platform/components/component/transceiver/state/input-power/max YANG schema element.
type Component_Transceiver_InputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/max YANG schema element.
type Component_Transceiver_InputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/input-power/max-time YANG schema element.
type Component_Transceiver_InputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/max-time YANG schema element.
type Component_Transceiver_InputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MinPath represents the /openconfig-platform/components/component/transceiver/state/input-power/min YANG schema element.
type Component_Transceiver_InputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/min YANG schema element.
type Component_Transceiver_InputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/input-power/min-time YANG schema element.
type Component_Transceiver_InputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_InputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/input-power/min-time YANG schema element.
type Component_Transceiver_InputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/input-power/avg"
func (n *Component_Transceiver_InputPowerPath) Avg() *Component_Transceiver_InputPower_AvgPath {
	return &Component_Transceiver_InputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/input-power/avg"
func (n *Component_Transceiver_InputPowerPathAny) Avg() *Component_Transceiver_InputPower_AvgPathAny {
	return &Component_Transceiver_InputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/input-power/instant"
func (n *Component_Transceiver_InputPowerPath) Instant() *Component_Transceiver_InputPower_InstantPath {
	return &Component_Transceiver_InputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/input-power/instant"
func (n *Component_Transceiver_InputPowerPathAny) Instant() *Component_Transceiver_InputPower_InstantPathAny {
	return &Component_Transceiver_InputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/input-power/interval"
func (n *Component_Transceiver_InputPowerPath) Interval() *Component_Transceiver_InputPower_IntervalPath {
	return &Component_Transceiver_InputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/input-power/interval"
func (n *Component_Transceiver_InputPowerPathAny) Interval() *Component_Transceiver_InputPower_IntervalPathAny {
	return &Component_Transceiver_InputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/input-power/max"
func (n *Component_Transceiver_InputPowerPath) Max() *Component_Transceiver_InputPower_MaxPath {
	return &Component_Transceiver_InputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/input-power/max"
func (n *Component_Transceiver_InputPowerPathAny) Max() *Component_Transceiver_InputPower_MaxPathAny {
	return &Component_Transceiver_InputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/input-power/max-time"
func (n *Component_Transceiver_InputPowerPath) MaxTime() *Component_Transceiver_InputPower_MaxTimePath {
	return &Component_Transceiver_InputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/input-power/max-time"
func (n *Component_Transceiver_InputPowerPathAny) MaxTime() *Component_Transceiver_InputPower_MaxTimePathAny {
	return &Component_Transceiver_InputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/input-power/min"
func (n *Component_Transceiver_InputPowerPath) Min() *Component_Transceiver_InputPower_MinPath {
	return &Component_Transceiver_InputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/input-power/min"
func (n *Component_Transceiver_InputPowerPathAny) Min() *Component_Transceiver_InputPower_MinPathAny {
	return &Component_Transceiver_InputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/input-power/min-time"
func (n *Component_Transceiver_InputPowerPath) MinTime() *Component_Transceiver_InputPower_MinTimePath {
	return &Component_Transceiver_InputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/input-power/min-time"
func (n *Component_Transceiver_InputPowerPathAny) MinTime() *Component_Transceiver_InputPower_MinTimePathAny {
	return &Component_Transceiver_InputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_LaserBiasCurrentPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current YANG schema element.
type Component_Transceiver_LaserBiasCurrentPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrentPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current YANG schema element.
type Component_Transceiver_LaserBiasCurrentPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_AvgPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/avg YANG schema element.
type Component_Transceiver_LaserBiasCurrent_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/avg YANG schema element.
type Component_Transceiver_LaserBiasCurrent_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_InstantPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/instant YANG schema element.
type Component_Transceiver_LaserBiasCurrent_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/instant YANG schema element.
type Component_Transceiver_LaserBiasCurrent_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/interval YANG schema element.
type Component_Transceiver_LaserBiasCurrent_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/interval YANG schema element.
type Component_Transceiver_LaserBiasCurrent_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MaxPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/max YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/max YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/max-time YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/max-time YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MinPath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/min YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/min YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current/min-time YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_LaserBiasCurrent_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/laser-bias-current/min-time YANG schema element.
type Component_Transceiver_LaserBiasCurrent_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/laser-bias-current/avg"
func (n *Component_Transceiver_LaserBiasCurrentPath) Avg() *Component_Transceiver_LaserBiasCurrent_AvgPath {
	return &Component_Transceiver_LaserBiasCurrent_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/laser-bias-current/avg"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Avg() *Component_Transceiver_LaserBiasCurrent_AvgPathAny {
	return &Component_Transceiver_LaserBiasCurrent_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/laser-bias-current/instant"
func (n *Component_Transceiver_LaserBiasCurrentPath) Instant() *Component_Transceiver_LaserBiasCurrent_InstantPath {
	return &Component_Transceiver_LaserBiasCurrent_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/laser-bias-current/instant"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Instant() *Component_Transceiver_LaserBiasCurrent_InstantPathAny {
	return &Component_Transceiver_LaserBiasCurrent_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/laser-bias-current/interval"
func (n *Component_Transceiver_LaserBiasCurrentPath) Interval() *Component_Transceiver_LaserBiasCurrent_IntervalPath {
	return &Component_Transceiver_LaserBiasCurrent_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/laser-bias-current/interval"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Interval() *Component_Transceiver_LaserBiasCurrent_IntervalPathAny {
	return &Component_Transceiver_LaserBiasCurrent_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/laser-bias-current/max"
func (n *Component_Transceiver_LaserBiasCurrentPath) Max() *Component_Transceiver_LaserBiasCurrent_MaxPath {
	return &Component_Transceiver_LaserBiasCurrent_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/laser-bias-current/max"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Max() *Component_Transceiver_LaserBiasCurrent_MaxPathAny {
	return &Component_Transceiver_LaserBiasCurrent_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/laser-bias-current/max-time"
func (n *Component_Transceiver_LaserBiasCurrentPath) MaxTime() *Component_Transceiver_LaserBiasCurrent_MaxTimePath {
	return &Component_Transceiver_LaserBiasCurrent_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/laser-bias-current/max-time"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) MaxTime() *Component_Transceiver_LaserBiasCurrent_MaxTimePathAny {
	return &Component_Transceiver_LaserBiasCurrent_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/laser-bias-current/min"
func (n *Component_Transceiver_LaserBiasCurrentPath) Min() *Component_Transceiver_LaserBiasCurrent_MinPath {
	return &Component_Transceiver_LaserBiasCurrent_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/laser-bias-current/min"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) Min() *Component_Transceiver_LaserBiasCurrent_MinPathAny {
	return &Component_Transceiver_LaserBiasCurrent_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/laser-bias-current/min-time"
func (n *Component_Transceiver_LaserBiasCurrentPath) MinTime() *Component_Transceiver_LaserBiasCurrent_MinTimePath {
	return &Component_Transceiver_LaserBiasCurrent_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/laser-bias-current/min-time"
func (n *Component_Transceiver_LaserBiasCurrentPathAny) MinTime() *Component_Transceiver_LaserBiasCurrent_MinTimePathAny {
	return &Component_Transceiver_LaserBiasCurrent_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_OutputPowerPath represents the /openconfig-platform/components/component/transceiver/state/output-power YANG schema element.
type Component_Transceiver_OutputPowerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPowerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power YANG schema element.
type Component_Transceiver_OutputPowerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_AvgPath represents the /openconfig-platform/components/component/transceiver/state/output-power/avg YANG schema element.
type Component_Transceiver_OutputPower_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/avg YANG schema element.
type Component_Transceiver_OutputPower_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_InstantPath represents the /openconfig-platform/components/component/transceiver/state/output-power/instant YANG schema element.
type Component_Transceiver_OutputPower_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/instant YANG schema element.
type Component_Transceiver_OutputPower_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/output-power/interval YANG schema element.
type Component_Transceiver_OutputPower_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/interval YANG schema element.
type Component_Transceiver_OutputPower_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MaxPath represents the /openconfig-platform/components/component/transceiver/state/output-power/max YANG schema element.
type Component_Transceiver_OutputPower_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/max YANG schema element.
type Component_Transceiver_OutputPower_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/output-power/max-time YANG schema element.
type Component_Transceiver_OutputPower_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/max-time YANG schema element.
type Component_Transceiver_OutputPower_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MinPath represents the /openconfig-platform/components/component/transceiver/state/output-power/min YANG schema element.
type Component_Transceiver_OutputPower_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/min YANG schema element.
type Component_Transceiver_OutputPower_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/output-power/min-time YANG schema element.
type Component_Transceiver_OutputPower_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_OutputPower_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/output-power/min-time YANG schema element.
type Component_Transceiver_OutputPower_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/output-power/avg"
func (n *Component_Transceiver_OutputPowerPath) Avg() *Component_Transceiver_OutputPower_AvgPath {
	return &Component_Transceiver_OutputPower_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/output-power/avg"
func (n *Component_Transceiver_OutputPowerPathAny) Avg() *Component_Transceiver_OutputPower_AvgPathAny {
	return &Component_Transceiver_OutputPower_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/output-power/instant"
func (n *Component_Transceiver_OutputPowerPath) Instant() *Component_Transceiver_OutputPower_InstantPath {
	return &Component_Transceiver_OutputPower_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/output-power/instant"
func (n *Component_Transceiver_OutputPowerPathAny) Instant() *Component_Transceiver_OutputPower_InstantPathAny {
	return &Component_Transceiver_OutputPower_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/output-power/interval"
func (n *Component_Transceiver_OutputPowerPath) Interval() *Component_Transceiver_OutputPower_IntervalPath {
	return &Component_Transceiver_OutputPower_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/output-power/interval"
func (n *Component_Transceiver_OutputPowerPathAny) Interval() *Component_Transceiver_OutputPower_IntervalPathAny {
	return &Component_Transceiver_OutputPower_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/output-power/max"
func (n *Component_Transceiver_OutputPowerPath) Max() *Component_Transceiver_OutputPower_MaxPath {
	return &Component_Transceiver_OutputPower_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/output-power/max"
func (n *Component_Transceiver_OutputPowerPathAny) Max() *Component_Transceiver_OutputPower_MaxPathAny {
	return &Component_Transceiver_OutputPower_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/output-power/max-time"
func (n *Component_Transceiver_OutputPowerPath) MaxTime() *Component_Transceiver_OutputPower_MaxTimePath {
	return &Component_Transceiver_OutputPower_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/output-power/max-time"
func (n *Component_Transceiver_OutputPowerPathAny) MaxTime() *Component_Transceiver_OutputPower_MaxTimePathAny {
	return &Component_Transceiver_OutputPower_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/output-power/min"
func (n *Component_Transceiver_OutputPowerPath) Min() *Component_Transceiver_OutputPower_MinPath {
	return &Component_Transceiver_OutputPower_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/output-power/min"
func (n *Component_Transceiver_OutputPowerPathAny) Min() *Component_Transceiver_OutputPower_MinPathAny {
	return &Component_Transceiver_OutputPower_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/output-power/min-time"
func (n *Component_Transceiver_OutputPowerPath) MinTime() *Component_Transceiver_OutputPower_MinTimePath {
	return &Component_Transceiver_OutputPower_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/output-power/min-time"
func (n *Component_Transceiver_OutputPowerPathAny) MinTime() *Component_Transceiver_OutputPower_MinTimePathAny {
	return &Component_Transceiver_OutputPower_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_PostFecBerPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber YANG schema element.
type Component_Transceiver_PostFecBerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber YANG schema element.
type Component_Transceiver_PostFecBerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_AvgPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/avg YANG schema element.
type Component_Transceiver_PostFecBer_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/avg YANG schema element.
type Component_Transceiver_PostFecBer_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_InstantPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/instant YANG schema element.
type Component_Transceiver_PostFecBer_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/instant YANG schema element.
type Component_Transceiver_PostFecBer_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/interval YANG schema element.
type Component_Transceiver_PostFecBer_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/interval YANG schema element.
type Component_Transceiver_PostFecBer_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MaxPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/max YANG schema element.
type Component_Transceiver_PostFecBer_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/max YANG schema element.
type Component_Transceiver_PostFecBer_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/max-time YANG schema element.
type Component_Transceiver_PostFecBer_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/max-time YANG schema element.
type Component_Transceiver_PostFecBer_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MinPath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/min YANG schema element.
type Component_Transceiver_PostFecBer_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/min YANG schema element.
type Component_Transceiver_PostFecBer_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/post-fec-ber/min-time YANG schema element.
type Component_Transceiver_PostFecBer_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_PostFecBer_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/post-fec-ber/min-time YANG schema element.
type Component_Transceiver_PostFecBer_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/post-fec-ber/avg"
func (n *Component_Transceiver_PostFecBerPath) Avg() *Component_Transceiver_PostFecBer_AvgPath {
	return &Component_Transceiver_PostFecBer_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/post-fec-ber/avg"
func (n *Component_Transceiver_PostFecBerPathAny) Avg() *Component_Transceiver_PostFecBer_AvgPathAny {
	return &Component_Transceiver_PostFecBer_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/post-fec-ber/instant"
func (n *Component_Transceiver_PostFecBerPath) Instant() *Component_Transceiver_PostFecBer_InstantPath {
	return &Component_Transceiver_PostFecBer_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/post-fec-ber/instant"
func (n *Component_Transceiver_PostFecBerPathAny) Instant() *Component_Transceiver_PostFecBer_InstantPathAny {
	return &Component_Transceiver_PostFecBer_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/post-fec-ber/interval"
func (n *Component_Transceiver_PostFecBerPath) Interval() *Component_Transceiver_PostFecBer_IntervalPath {
	return &Component_Transceiver_PostFecBer_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/post-fec-ber/interval"
func (n *Component_Transceiver_PostFecBerPathAny) Interval() *Component_Transceiver_PostFecBer_IntervalPathAny {
	return &Component_Transceiver_PostFecBer_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/post-fec-ber/max"
func (n *Component_Transceiver_PostFecBerPath) Max() *Component_Transceiver_PostFecBer_MaxPath {
	return &Component_Transceiver_PostFecBer_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/post-fec-ber/max"
func (n *Component_Transceiver_PostFecBerPathAny) Max() *Component_Transceiver_PostFecBer_MaxPathAny {
	return &Component_Transceiver_PostFecBer_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/post-fec-ber/max-time"
func (n *Component_Transceiver_PostFecBerPath) MaxTime() *Component_Transceiver_PostFecBer_MaxTimePath {
	return &Component_Transceiver_PostFecBer_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/post-fec-ber/max-time"
func (n *Component_Transceiver_PostFecBerPathAny) MaxTime() *Component_Transceiver_PostFecBer_MaxTimePathAny {
	return &Component_Transceiver_PostFecBer_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/post-fec-ber/min"
func (n *Component_Transceiver_PostFecBerPath) Min() *Component_Transceiver_PostFecBer_MinPath {
	return &Component_Transceiver_PostFecBer_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/post-fec-ber/min"
func (n *Component_Transceiver_PostFecBerPathAny) Min() *Component_Transceiver_PostFecBer_MinPathAny {
	return &Component_Transceiver_PostFecBer_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/post-fec-ber/min-time"
func (n *Component_Transceiver_PostFecBerPath) MinTime() *Component_Transceiver_PostFecBer_MinTimePath {
	return &Component_Transceiver_PostFecBer_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/post-fec-ber/min-time"
func (n *Component_Transceiver_PostFecBerPathAny) MinTime() *Component_Transceiver_PostFecBer_MinTimePathAny {
	return &Component_Transceiver_PostFecBer_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_PreFecBerPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber YANG schema element.
type Component_Transceiver_PreFecBerPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBerPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber YANG schema element.
type Component_Transceiver_PreFecBerPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_AvgPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/avg YANG schema element.
type Component_Transceiver_PreFecBer_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/avg YANG schema element.
type Component_Transceiver_PreFecBer_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_InstantPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/instant YANG schema element.
type Component_Transceiver_PreFecBer_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/instant YANG schema element.
type Component_Transceiver_PreFecBer_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/interval YANG schema element.
type Component_Transceiver_PreFecBer_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/interval YANG schema element.
type Component_Transceiver_PreFecBer_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MaxPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/max YANG schema element.
type Component_Transceiver_PreFecBer_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/max YANG schema element.
type Component_Transceiver_PreFecBer_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/max-time YANG schema element.
type Component_Transceiver_PreFecBer_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/max-time YANG schema element.
type Component_Transceiver_PreFecBer_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MinPath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/min YANG schema element.
type Component_Transceiver_PreFecBer_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/min YANG schema element.
type Component_Transceiver_PreFecBer_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/min-time YANG schema element.
type Component_Transceiver_PreFecBer_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_PreFecBer_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/pre-fec-ber/min-time YANG schema element.
type Component_Transceiver_PreFecBer_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/avg"
func (n *Component_Transceiver_PreFecBerPath) Avg() *Component_Transceiver_PreFecBer_AvgPath {
	return &Component_Transceiver_PreFecBer_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// time interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/avg"
func (n *Component_Transceiver_PreFecBerPathAny) Avg() *Component_Transceiver_PreFecBer_AvgPathAny {
	return &Component_Transceiver_PreFecBer_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/instant"
func (n *Component_Transceiver_PreFecBerPath) Instant() *Component_Transceiver_PreFecBer_InstantPath {
	return &Component_Transceiver_PreFecBer_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/instant"
func (n *Component_Transceiver_PreFecBerPathAny) Instant() *Component_Transceiver_PreFecBer_InstantPathAny {
	return &Component_Transceiver_PreFecBer_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/interval"
func (n *Component_Transceiver_PreFecBerPath) Interval() *Component_Transceiver_PreFecBer_IntervalPath {
	return &Component_Transceiver_PreFecBer_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/interval"
func (n *Component_Transceiver_PreFecBerPathAny) Interval() *Component_Transceiver_PreFecBer_IntervalPathAny {
	return &Component_Transceiver_PreFecBer_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/max"
func (n *Component_Transceiver_PreFecBerPath) Max() *Component_Transceiver_PreFecBer_MaxPath {
	return &Component_Transceiver_PreFecBer_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/max"
func (n *Component_Transceiver_PreFecBerPathAny) Max() *Component_Transceiver_PreFecBer_MaxPathAny {
	return &Component_Transceiver_PreFecBer_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/max-time"
func (n *Component_Transceiver_PreFecBerPath) MaxTime() *Component_Transceiver_PreFecBer_MaxTimePath {
	return &Component_Transceiver_PreFecBer_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/max-time"
func (n *Component_Transceiver_PreFecBerPathAny) MaxTime() *Component_Transceiver_PreFecBer_MaxTimePathAny {
	return &Component_Transceiver_PreFecBer_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/min"
func (n *Component_Transceiver_PreFecBerPath) Min() *Component_Transceiver_PreFecBer_MinPath {
	return &Component_Transceiver_PreFecBer_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the time
// interval.
// ----------------------------------------
// Defining module: "openconfig-transport-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/min"
func (n *Component_Transceiver_PreFecBerPathAny) Min() *Component_Transceiver_PreFecBer_MinPathAny {
	return &Component_Transceiver_PreFecBer_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/min-time"
func (n *Component_Transceiver_PreFecBerPath) MinTime() *Component_Transceiver_PreFecBer_MinTimePath {
	return &Component_Transceiver_PreFecBer_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/pre-fec-ber/min-time"
func (n *Component_Transceiver_PreFecBerPathAny) MinTime() *Component_Transceiver_PreFecBer_MinTimePathAny {
	return &Component_Transceiver_PreFecBer_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Component_Transceiver_SupplyVoltagePath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage YANG schema element.
type Component_Transceiver_SupplyVoltagePath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltagePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage YANG schema element.
type Component_Transceiver_SupplyVoltagePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_AvgPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/avg YANG schema element.
type Component_Transceiver_SupplyVoltage_AvgPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_AvgPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/avg YANG schema element.
type Component_Transceiver_SupplyVoltage_AvgPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_InstantPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/instant YANG schema element.
type Component_Transceiver_SupplyVoltage_InstantPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_InstantPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/instant YANG schema element.
type Component_Transceiver_SupplyVoltage_InstantPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_IntervalPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/interval YANG schema element.
type Component_Transceiver_SupplyVoltage_IntervalPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_IntervalPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/interval YANG schema element.
type Component_Transceiver_SupplyVoltage_IntervalPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MaxPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/max YANG schema element.
type Component_Transceiver_SupplyVoltage_MaxPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MaxPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/max YANG schema element.
type Component_Transceiver_SupplyVoltage_MaxPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MaxTimePath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/max-time YANG schema element.
type Component_Transceiver_SupplyVoltage_MaxTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MaxTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/max-time YANG schema element.
type Component_Transceiver_SupplyVoltage_MaxTimePathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MinPath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/min YANG schema element.
type Component_Transceiver_SupplyVoltage_MinPath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MinPathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/min YANG schema element.
type Component_Transceiver_SupplyVoltage_MinPathAny struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MinTimePath represents the /openconfig-platform/components/component/transceiver/state/supply-voltage/min-time YANG schema element.
type Component_Transceiver_SupplyVoltage_MinTimePath struct {
	*ygot.NodePath
}

// Component_Transceiver_SupplyVoltage_MinTimePathAny represents the wildcard version of the /openconfig-platform/components/component/transceiver/state/supply-voltage/min-time YANG schema element.
type Component_Transceiver_SupplyVoltage_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/supply-voltage/avg"
func (n *Component_Transceiver_SupplyVoltagePath) Avg() *Component_Transceiver_SupplyVoltage_AvgPath {
	return &Component_Transceiver_SupplyVoltage_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the statistic over the
// sampling period.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "avg"
// Path from root: "/components/component/transceiver/state/supply-voltage/avg"
func (n *Component_Transceiver_SupplyVoltagePathAny) Avg() *Component_Transceiver_SupplyVoltage_AvgPathAny {
	return &Component_Transceiver_SupplyVoltage_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/supply-voltage/instant"
func (n *Component_Transceiver_SupplyVoltagePath) Instant() *Component_Transceiver_SupplyVoltage_InstantPath {
	return &Component_Transceiver_SupplyVoltage_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous value of the statistic.
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "instant"
// Path from root: "/components/component/transceiver/state/supply-voltage/instant"
func (n *Component_Transceiver_SupplyVoltagePathAny) Instant() *Component_Transceiver_SupplyVoltage_InstantPathAny {
	return &Component_Transceiver_SupplyVoltage_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/supply-voltage/interval"
func (n *Component_Transceiver_SupplyVoltagePath) Interval() *Component_Transceiver_SupplyVoltage_IntervalPath {
	return &Component_Transceiver_SupplyVoltage_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "interval"
// Path from root: "/components/component/transceiver/state/supply-voltage/interval"
func (n *Component_Transceiver_SupplyVoltagePathAny) Interval() *Component_Transceiver_SupplyVoltage_IntervalPathAny {
	return &Component_Transceiver_SupplyVoltage_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/supply-voltage/max"
func (n *Component_Transceiver_SupplyVoltagePath) Max() *Component_Transceiver_SupplyVoltage_MaxPath {
	return &Component_Transceiver_SupplyVoltage_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max"
// Path from root: "/components/component/transceiver/state/supply-voltage/max"
func (n *Component_Transceiver_SupplyVoltagePathAny) Max() *Component_Transceiver_SupplyVoltage_MaxPathAny {
	return &Component_Transceiver_SupplyVoltage_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/supply-voltage/max-time"
func (n *Component_Transceiver_SupplyVoltagePath) MaxTime() *Component_Transceiver_SupplyVoltage_MaxTimePath {
	return &Component_Transceiver_SupplyVoltage_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "max-time"
// Path from root: "/components/component/transceiver/state/supply-voltage/max-time"
func (n *Component_Transceiver_SupplyVoltagePathAny) MaxTime() *Component_Transceiver_SupplyVoltage_MaxTimePathAny {
	return &Component_Transceiver_SupplyVoltage_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/supply-voltage/min"
func (n *Component_Transceiver_SupplyVoltagePath) Min() *Component_Transceiver_SupplyVoltage_MinPath {
	return &Component_Transceiver_SupplyVoltage_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the statistic over the sampling
// period
// ----------------------------------------
// Defining module: "openconfig-platform-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min"
// Path from root: "/components/component/transceiver/state/supply-voltage/min"
func (n *Component_Transceiver_SupplyVoltagePathAny) Min() *Component_Transceiver_SupplyVoltage_MinPathAny {
	return &Component_Transceiver_SupplyVoltage_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/supply-voltage/min-time"
func (n *Component_Transceiver_SupplyVoltagePath) MinTime() *Component_Transceiver_SupplyVoltage_MinTimePath {
	return &Component_Transceiver_SupplyVoltage_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//  the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-platform"
// Path from parent: "min-time"
// Path from root: "/components/component/transceiver/state/supply-voltage/min-time"
func (n *Component_Transceiver_SupplyVoltagePathAny) MinTime() *Component_Transceiver_SupplyVoltage_MinTimePathAny {
	return &Component_Transceiver_SupplyVoltage_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}
