/*
Package gnmicollectormetadata is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/alexmasi/go/pkg/mod/github.com/openconfig/ygot@v0.23.1/genutil/names.go
using the following YANG input files:
  - gnmi-collector-metadata.yang
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/ate/openconfig-ate-flow.yang
  - public/release/models/ate/openconfig-ate-intf.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/p4rt/openconfig-p4rt.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-fan.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package gnmicollectormetadata

import (
	"github.com/openconfig/ygot/ygot"
)

// Meta_WindowPath represents the /gnmi-collector-metadata/meta/latency/window YANG schema element.
type Meta_WindowPath struct {
	*ygot.NodePath
}

// Meta_WindowPathAny represents the wildcard version of the /gnmi-collector-metadata/meta/latency/window YANG schema element.
type Meta_WindowPathAny struct {
	*ygot.NodePath
}

// Meta_Window_AvgPath represents the /gnmi-collector-metadata/meta/latency/window/avg YANG schema element.
type Meta_Window_AvgPath struct {
	*ygot.NodePath
}

// Meta_Window_AvgPathAny represents the wildcard version of the /gnmi-collector-metadata/meta/latency/window/avg YANG schema element.
type Meta_Window_AvgPathAny struct {
	*ygot.NodePath
}

// Meta_Window_MaxPath represents the /gnmi-collector-metadata/meta/latency/window/max YANG schema element.
type Meta_Window_MaxPath struct {
	*ygot.NodePath
}

// Meta_Window_MaxPathAny represents the wildcard version of the /gnmi-collector-metadata/meta/latency/window/max YANG schema element.
type Meta_Window_MaxPathAny struct {
	*ygot.NodePath
}

// Meta_Window_MinPath represents the /gnmi-collector-metadata/meta/latency/window/min YANG schema element.
type Meta_Window_MinPath struct {
	*ygot.NodePath
}

// Meta_Window_MinPathAny represents the wildcard version of the /gnmi-collector-metadata/meta/latency/window/min YANG schema element.
type Meta_Window_MinPathAny struct {
	*ygot.NodePath
}

// Meta_Window_SizePath represents the /gnmi-collector-metadata/meta/latency/window/state/size YANG schema element.
type Meta_Window_SizePath struct {
	*ygot.NodePath
}

// Meta_Window_SizePathAny represents the wildcard version of the /gnmi-collector-metadata/meta/latency/window/state/size YANG schema element.
type Meta_Window_SizePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): avg is the average latency in nanoseconds of the time window.
// It is calculated and reported per update period.
// ----------------------------------------
// Defining module: "gnmi-collector-metadata"
// Instantiating module: "gnmi-collector-metadata"
// Path from parent: "avg"
// Path from root: "/meta/latency/window/avg"
func (n *Meta_WindowPath) Avg() *Meta_Window_AvgPath {
	return &Meta_Window_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): avg is the average latency in nanoseconds of the time window.
// It is calculated and reported per update period.
// ----------------------------------------
// Defining module: "gnmi-collector-metadata"
// Instantiating module: "gnmi-collector-metadata"
// Path from parent: "avg"
// Path from root: "/meta/latency/window/avg"
func (n *Meta_WindowPathAny) Avg() *Meta_Window_AvgPathAny {
	return &Meta_Window_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): max is the maximum latency in nanoseconds of the time window.
// It is calculated and reported per update period.
// ----------------------------------------
// Defining module: "gnmi-collector-metadata"
// Instantiating module: "gnmi-collector-metadata"
// Path from parent: "max"
// Path from root: "/meta/latency/window/max"
func (n *Meta_WindowPath) Max() *Meta_Window_MaxPath {
	return &Meta_Window_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): max is the maximum latency in nanoseconds of the time window.
// It is calculated and reported per update period.
// ----------------------------------------
// Defining module: "gnmi-collector-metadata"
// Instantiating module: "gnmi-collector-metadata"
// Path from parent: "max"
// Path from root: "/meta/latency/window/max"
func (n *Meta_WindowPathAny) Max() *Meta_Window_MaxPathAny {
	return &Meta_Window_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): min is the minimum latency in nanoseconds of the time window.
// It is calculated and reported per update period.
// ----------------------------------------
// Defining module: "gnmi-collector-metadata"
// Instantiating module: "gnmi-collector-metadata"
// Path from parent: "min"
// Path from root: "/meta/latency/window/min"
func (n *Meta_WindowPath) Min() *Meta_Window_MinPath {
	return &Meta_Window_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): min is the minimum latency in nanoseconds of the time window.
// It is calculated and reported per update period.
// ----------------------------------------
// Defining module: "gnmi-collector-metadata"
// Instantiating module: "gnmi-collector-metadata"
// Path from parent: "min"
// Path from root: "/meta/latency/window/min"
func (n *Meta_WindowPathAny) Min() *Meta_Window_MinPathAny {
	return &Meta_Window_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): A unique string identifying the time window size (e.g. 2s, 5m).
// ----------------------------------------
// Defining module: "gnmi-collector-metadata"
// Instantiating module: "gnmi-collector-metadata"
// Path from parent: "state/size"
// Path from root: "/meta/latency/window/state/size"
func (n *Meta_WindowPath) Size() *Meta_Window_SizePath {
	return &Meta_Window_SizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): A unique string identifying the time window size (e.g. 2s, 5m).
// ----------------------------------------
// Defining module: "gnmi-collector-metadata"
// Instantiating module: "gnmi-collector-metadata"
// Path from parent: "state/size"
// Path from root: "/meta/latency/window/state/size"
func (n *Meta_WindowPathAny) Size() *Meta_Window_SizePathAny {
	return &Meta_Window_SizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}
