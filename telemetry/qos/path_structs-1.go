/*
Package qos is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/alexmasi/go/pkg/mod/github.com/openconfig/ygot@v0.23.1/genutil/names.go
using the following YANG input files:
  - gnmi-collector-metadata.yang
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/ate/openconfig-ate-flow.yang
  - public/release/models/ate/openconfig-ate-intf.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/p4rt/openconfig-p4rt.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-fan.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package qos

import (
	oc "github.com/openconfig/ondatra/telemetry"
	"github.com/openconfig/ygot/ygot"
)

// Qos_Interface_OutputPath represents the /openconfig-qos/qos/interfaces/interface/output YANG schema element.
type Qos_Interface_OutputPath struct {
	*ygot.NodePath
}

// Qos_Interface_OutputPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output YANG schema element.
type Qos_Interface_OutputPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_BufferAllocationProfilePath represents the /openconfig-qos/qos/interfaces/interface/output/state/buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_BufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_BufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/state/buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_BufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_MulticastBufferAllocationProfilePath represents the /openconfig-qos/qos/interfaces/interface/output/state/multicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_MulticastBufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_MulticastBufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/state/multicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_MulticastBufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_UnicastBufferAllocationProfilePath represents the /openconfig-qos/qos/interfaces/interface/output/state/unicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_UnicastBufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_UnicastBufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/state/unicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_UnicastBufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// BufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This leaf is used in deployment cases where the operator or system
// requires common allocation profiles covering unicast and multicast
// packets.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/buffer-allocation-profile"
func (n *Qos_Interface_OutputPath) BufferAllocationProfile() *Qos_Interface_Output_BufferAllocationProfilePath {
	return &Qos_Interface_Output_BufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// BufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This leaf is used in deployment cases where the operator or system
// requires common allocation profiles covering unicast and multicast
// packets.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/buffer-allocation-profile"
func (n *Qos_Interface_OutputPathAny) BufferAllocationProfile() *Qos_Interface_Output_BufferAllocationProfilePathAny {
	return &Qos_Interface_Output_BufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// ClassifierAny (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier"
// Type (wildcarded): oc.E_Input_Classifier_Type
func (n *Qos_Interface_OutputPath) ClassifierAny() *Qos_Interface_Output_ClassifierPathAny {
	return &Qos_Interface_Output_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// ClassifierAny (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier"
// Type (wildcarded): oc.E_Input_Classifier_Type
func (n *Qos_Interface_OutputPathAny) ClassifierAny() *Qos_Interface_Output_ClassifierPathAny {
	return &Qos_Interface_Output_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Classifier (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier"
// Type: oc.E_Input_Classifier_Type
func (n *Qos_Interface_OutputPath) Classifier(Type oc.E_Input_Classifier_Type) *Qos_Interface_Output_ClassifierPath {
	return &Qos_Interface_Output_ClassifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Classifier (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier"
// Type: oc.E_Input_Classifier_Type
func (n *Qos_Interface_OutputPathAny) Classifier(Type oc.E_Input_Classifier_Type) *Qos_Interface_Output_ClassifierPathAny {
	return &Qos_Interface_Output_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interface-ref"
// Path from root: "/qos/interfaces/interface/output/interface-ref"
func (n *Qos_Interface_OutputPath) InterfaceRef() *Qos_Interface_Output_InterfaceRefPath {
	return &Qos_Interface_Output_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interface-ref"
// Path from root: "/qos/interfaces/interface/output/interface-ref"
func (n *Qos_Interface_OutputPathAny) InterfaceRef() *Qos_Interface_Output_InterfaceRefPathAny {
	return &Qos_Interface_Output_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only multicast packets on
// the interface - if specified, the unicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to unicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/multicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/multicast-buffer-allocation-profile"
func (n *Qos_Interface_OutputPath) MulticastBufferAllocationProfile() *Qos_Interface_Output_MulticastBufferAllocationProfilePath {
	return &Qos_Interface_Output_MulticastBufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only multicast packets on
// the interface - if specified, the unicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to unicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/multicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/multicast-buffer-allocation-profile"
func (n *Qos_Interface_OutputPathAny) MulticastBufferAllocationProfile() *Qos_Interface_Output_MulticastBufferAllocationProfilePathAny {
	return &Qos_Interface_Output_MulticastBufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/output/queues/queue"
// Name (wildcarded): string
func (n *Qos_Interface_OutputPath) QueueAny() *Qos_Interface_Output_QueuePathAny {
	return &Qos_Interface_Output_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/output/queues/queue"
// Name (wildcarded): string
func (n *Qos_Interface_OutputPathAny) QueueAny() *Qos_Interface_Output_QueuePathAny {
	return &Qos_Interface_Output_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Queue (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/output/queues/queue"
// Name: string
func (n *Qos_Interface_OutputPath) Queue(Name string) *Qos_Interface_Output_QueuePath {
	return &Qos_Interface_Output_QueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Queue (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/output/queues/queue"
// Name: string
func (n *Qos_Interface_OutputPathAny) Queue(Name string) *Qos_Interface_Output_QueuePathAny {
	return &Qos_Interface_Output_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// SchedulerPolicy (container): Scheduler policy associated with the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policy"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy"
func (n *Qos_Interface_OutputPath) SchedulerPolicy() *Qos_Interface_Output_SchedulerPolicyPath {
	return &Qos_Interface_Output_SchedulerPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SchedulerPolicy (container): Scheduler policy associated with the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policy"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy"
func (n *Qos_Interface_OutputPathAny) SchedulerPolicy() *Qos_Interface_Output_SchedulerPolicyPathAny {
	return &Qos_Interface_Output_SchedulerPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnicastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only unicast packets on
// the interface - if specified, the multicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to multicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/unicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/unicast-buffer-allocation-profile"
func (n *Qos_Interface_OutputPath) UnicastBufferAllocationProfile() *Qos_Interface_Output_UnicastBufferAllocationProfilePath {
	return &Qos_Interface_Output_UnicastBufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnicastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only unicast packets on
// the interface - if specified, the multicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to multicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/unicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/unicast-buffer-allocation-profile"
func (n *Qos_Interface_OutputPathAny) UnicastBufferAllocationProfile() *Qos_Interface_Output_UnicastBufferAllocationProfilePathAny {
	return &Qos_Interface_Output_UnicastBufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Output_ClassifierPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier YANG schema element.
type Qos_Interface_Output_ClassifierPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_ClassifierPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier YANG schema element.
type Qos_Interface_Output_ClassifierPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_NamePath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/state/name YANG schema element.
type Qos_Interface_Output_Classifier_NamePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/state/name YANG schema element.
type Qos_Interface_Output_Classifier_NamePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_TypePath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/state/type YANG schema element.
type Qos_Interface_Output_Classifier_TypePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_TypePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/state/type YANG schema element.
type Qos_Interface_Output_Classifier_TypePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Reference to the classifier to be applied to ingress traffic on
// the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/state/name"
func (n *Qos_Interface_Output_ClassifierPath) Name() *Qos_Interface_Output_Classifier_NamePath {
	return &Qos_Interface_Output_Classifier_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the classifier to be applied to ingress traffic on
// the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/state/name"
func (n *Qos_Interface_Output_ClassifierPathAny) Name() *Qos_Interface_Output_Classifier_NamePathAny {
	return &Qos_Interface_Output_Classifier_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// TermAny (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term"
// Id (wildcarded): string
func (n *Qos_Interface_Output_ClassifierPath) TermAny() *Qos_Interface_Output_Classifier_TermPathAny {
	return &Qos_Interface_Output_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// TermAny (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term"
// Id (wildcarded): string
func (n *Qos_Interface_Output_ClassifierPathAny) TermAny() *Qos_Interface_Output_Classifier_TermPathAny {
	return &Qos_Interface_Output_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Term (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term"
// Id: string
func (n *Qos_Interface_Output_ClassifierPath) Term(Id string) *Qos_Interface_Output_Classifier_TermPath {
	return &Qos_Interface_Output_Classifier_TermPath{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Term (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term"
// Id: string
func (n *Qos_Interface_Output_ClassifierPathAny) Term(Id string) *Qos_Interface_Output_Classifier_TermPathAny {
	return &Qos_Interface_Output_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Type (leaf): Type of packets matched by the classifier.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/state/type"
func (n *Qos_Interface_Output_ClassifierPath) Type() *Qos_Interface_Output_Classifier_TypePath {
	return &Qos_Interface_Output_Classifier_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of packets matched by the classifier.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/state/type"
func (n *Qos_Interface_Output_ClassifierPathAny) Type() *Qos_Interface_Output_Classifier_TypePathAny {
	return &Qos_Interface_Output_Classifier_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Output_Classifier_TermPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term YANG schema element.
type Qos_Interface_Output_Classifier_TermPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_TermPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term YANG schema element.
type Qos_Interface_Output_Classifier_TermPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_IdPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/id YANG schema element.
type Qos_Interface_Output_Classifier_Term_IdPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_IdPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/id YANG schema element.
type Qos_Interface_Output_Classifier_Term_IdPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_MatchedOctetsPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-octets YANG schema element.
type Qos_Interface_Output_Classifier_Term_MatchedOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_MatchedOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-octets YANG schema element.
type Qos_Interface_Output_Classifier_Term_MatchedOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_MatchedPacketsPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-packets YANG schema element.
type Qos_Interface_Output_Classifier_Term_MatchedPacketsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_MatchedPacketsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-packets YANG schema element.
type Qos_Interface_Output_Classifier_Term_MatchedPacketsPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Reference to match terms in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/id"
func (n *Qos_Interface_Output_Classifier_TermPath) Id() *Qos_Interface_Output_Classifier_Term_IdPath {
	return &Qos_Interface_Output_Classifier_Term_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Reference to match terms in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/id"
func (n *Qos_Interface_Output_Classifier_TermPathAny) Id() *Qos_Interface_Output_Classifier_Term_IdPathAny {
	return &Qos_Interface_Output_Classifier_Term_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedOctets (leaf): Count of the number of octets (bytes) matching this
// classifier match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-octets"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-octets"
func (n *Qos_Interface_Output_Classifier_TermPath) MatchedOctets() *Qos_Interface_Output_Classifier_Term_MatchedOctetsPath {
	return &Qos_Interface_Output_Classifier_Term_MatchedOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedOctets (leaf): Count of the number of octets (bytes) matching this
// classifier match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-octets"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-octets"
func (n *Qos_Interface_Output_Classifier_TermPathAny) MatchedOctets() *Qos_Interface_Output_Classifier_Term_MatchedOctetsPathAny {
	return &Qos_Interface_Output_Classifier_Term_MatchedOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedPackets (leaf): Count of the number of packets matching this classifier
// match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-packets"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-packets"
func (n *Qos_Interface_Output_Classifier_TermPath) MatchedPackets() *Qos_Interface_Output_Classifier_Term_MatchedPacketsPath {
	return &Qos_Interface_Output_Classifier_Term_MatchedPacketsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-packets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedPackets (leaf): Count of the number of packets matching this classifier
// match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-packets"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-packets"
func (n *Qos_Interface_Output_Classifier_TermPathAny) MatchedPackets() *Qos_Interface_Output_Classifier_Term_MatchedPacketsPathAny {
	return &Qos_Interface_Output_Classifier_Term_MatchedPacketsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-packets"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Output_InterfaceRefPath represents the /openconfig-qos/qos/interfaces/interface/output/interface-ref YANG schema element.
type Qos_Interface_Output_InterfaceRefPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_InterfaceRefPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/interface-ref YANG schema element.
type Qos_Interface_Output_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_InterfaceRef_InterfacePath represents the /openconfig-qos/qos/interfaces/interface/output/interface-ref/state/interface YANG schema element.
type Qos_Interface_Output_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/interface-ref/state/interface YANG schema element.
type Qos_Interface_Output_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_InterfaceRef_SubinterfacePath represents the /openconfig-qos/qos/interfaces/interface/output/interface-ref/state/subinterface YANG schema element.
type Qos_Interface_Output_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/interface-ref/state/subinterface YANG schema element.
type Qos_Interface_Output_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/interface"
// Path from root: "/qos/interfaces/interface/output/interface-ref/state/interface"
func (n *Qos_Interface_Output_InterfaceRefPath) Interface() *Qos_Interface_Output_InterfaceRef_InterfacePath {
	return &Qos_Interface_Output_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/interface"
// Path from root: "/qos/interfaces/interface/output/interface-ref/state/interface"
func (n *Qos_Interface_Output_InterfaceRefPathAny) Interface() *Qos_Interface_Output_InterfaceRef_InterfacePathAny {
	return &Qos_Interface_Output_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/subinterface"
// Path from root: "/qos/interfaces/interface/output/interface-ref/state/subinterface"
func (n *Qos_Interface_Output_InterfaceRefPath) Subinterface() *Qos_Interface_Output_InterfaceRef_SubinterfacePath {
	return &Qos_Interface_Output_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/subinterface"
// Path from root: "/qos/interfaces/interface/output/interface-ref/state/subinterface"
func (n *Qos_Interface_Output_InterfaceRefPathAny) Subinterface() *Qos_Interface_Output_InterfaceRef_SubinterfacePathAny {
	return &Qos_Interface_Output_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Output_QueuePath represents the /openconfig-qos/qos/interfaces/interface/output/queues/queue YANG schema element.
type Qos_Interface_Output_QueuePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_QueuePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/queues/queue YANG schema element.
type Qos_Interface_Output_QueuePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_AvgQueueLenPath represents the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/avg-queue-len YANG schema element.
type Qos_Interface_Output_Queue_AvgQueueLenPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_AvgQueueLenPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/avg-queue-len YANG schema element.
type Qos_Interface_Output_Queue_AvgQueueLenPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_DroppedPktsPath represents the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Output_Queue_DroppedPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_DroppedPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Output_Queue_DroppedPktsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_MaxQueueLenPath represents the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Output_Queue_MaxQueueLenPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_MaxQueueLenPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Output_Queue_MaxQueueLenPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_NamePath represents the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/name YANG schema element.
type Qos_Interface_Output_Queue_NamePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/name YANG schema element.
type Qos_Interface_Output_Queue_NamePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_QueueManagementProfilePath represents the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/queue-management-profile YANG schema element.
type Qos_Interface_Output_Queue_QueueManagementProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_QueueManagementProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/queue-management-profile YANG schema element.
type Qos_Interface_Output_Queue_QueueManagementProfilePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_TransmitOctetsPath represents the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/transmit-octets YANG schema element.
type Qos_Interface_Output_Queue_TransmitOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_TransmitOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/transmit-octets YANG schema element.
type Qos_Interface_Output_Queue_TransmitOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_TransmitPktsPath represents the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/transmit-pkts YANG schema element.
type Qos_Interface_Output_Queue_TransmitPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Queue_TransmitPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/queues/queue/state/transmit-pkts YANG schema element.
type Qos_Interface_Output_Queue_TransmitPktsPathAny struct {
	*ygot.NodePath
}

// AvgQueueLen (leaf): Average observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/avg-queue-len"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Output_QueuePath) AvgQueueLen() *Qos_Interface_Output_Queue_AvgQueueLenPath {
	return &Qos_Interface_Output_Queue_AvgQueueLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "avg-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvgQueueLen (leaf): Average observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/avg-queue-len"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Output_QueuePathAny) AvgQueueLen() *Qos_Interface_Output_Queue_AvgQueueLenPathAny {
	return &Qos_Interface_Output_Queue_AvgQueueLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "avg-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// DroppedPkts (leaf): Number of packets dropped by the queue due to overrun
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dropped-pkts"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Output_QueuePath) DroppedPkts() *Qos_Interface_Output_Queue_DroppedPktsPath {
	return &Qos_Interface_Output_Queue_DroppedPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// DroppedPkts (leaf): Number of packets dropped by the queue due to overrun
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dropped-pkts"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Output_QueuePathAny) DroppedPkts() *Qos_Interface_Output_Queue_DroppedPktsPathAny {
	return &Qos_Interface_Output_Queue_DroppedPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueLen (leaf): Maximum observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-len"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Output_QueuePath) MaxQueueLen() *Qos_Interface_Output_Queue_MaxQueueLenPath {
	return &Qos_Interface_Output_Queue_MaxQueueLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueLen (leaf): Maximum observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-len"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Output_QueuePathAny) MaxQueueLen() *Qos_Interface_Output_Queue_MaxQueueLenPathAny {
	return &Qos_Interface_Output_Queue_MaxQueueLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the queue associated with this interface.
// A queue may be explicitly configured, or implicitly created
// by the system based on default queues that are instantiated
// by a hardware component, or are assumed to be default on
// the system.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/name"
func (n *Qos_Interface_Output_QueuePath) Name() *Qos_Interface_Output_Queue_NamePath {
	return &Qos_Interface_Output_Queue_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the queue associated with this interface.
// A queue may be explicitly configured, or implicitly created
// by the system based on default queues that are instantiated
// by a hardware component, or are assumed to be default on
// the system.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/name"
func (n *Qos_Interface_Output_QueuePathAny) Name() *Qos_Interface_Output_Queue_NamePathAny {
	return &Qos_Interface_Output_Queue_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueueManagementProfile (leaf): The queue management profile that is to be used for the queue
// on the interface.
//
// For example, the system may use a profile which specifies that
// WRED curves are used for setting an ECN mark in the IP header
// instead of dropping a packet in order to signal impending
// congestion and for determining when there is sufficient
// congestion to tail drop packets.
//
// A single profile is available per queue - which applies to all packets
// that are enqueued to the specified queue, whether they are unicast or
// multicast.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/queue-management-profile"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/queue-management-profile"
func (n *Qos_Interface_Output_QueuePath) QueueManagementProfile() *Qos_Interface_Output_Queue_QueueManagementProfilePath {
	return &Qos_Interface_Output_Queue_QueueManagementProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "queue-management-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueueManagementProfile (leaf): The queue management profile that is to be used for the queue
// on the interface.
//
// For example, the system may use a profile which specifies that
// WRED curves are used for setting an ECN mark in the IP header
// instead of dropping a packet in order to signal impending
// congestion and for determining when there is sufficient
// congestion to tail drop packets.
//
// A single profile is available per queue - which applies to all packets
// that are enqueued to the specified queue, whether they are unicast or
// multicast.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/queue-management-profile"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/queue-management-profile"
func (n *Qos_Interface_Output_QueuePathAny) QueueManagementProfile() *Qos_Interface_Output_Queue_QueueManagementProfilePathAny {
	return &Qos_Interface_Output_Queue_QueueManagementProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "queue-management-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitOctets (leaf): Number of octets trasmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-octets"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Output_QueuePath) TransmitOctets() *Qos_Interface_Output_Queue_TransmitOctetsPath {
	return &Qos_Interface_Output_Queue_TransmitOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitOctets (leaf): Number of octets trasmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-octets"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Output_QueuePathAny) TransmitOctets() *Qos_Interface_Output_Queue_TransmitOctetsPathAny {
	return &Qos_Interface_Output_Queue_TransmitOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitPkts (leaf): Number of packets transmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-pkts"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Output_QueuePath) TransmitPkts() *Qos_Interface_Output_Queue_TransmitPktsPath {
	return &Qos_Interface_Output_Queue_TransmitPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitPkts (leaf): Number of packets transmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-pkts"
// Path from root: "/qos/interfaces/interface/output/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Output_QueuePathAny) TransmitPkts() *Qos_Interface_Output_Queue_TransmitPktsPathAny {
	return &Qos_Interface_Output_Queue_TransmitPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Output_SchedulerPolicyPath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy YANG schema element.
type Qos_Interface_Output_SchedulerPolicyPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicyPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy YANG schema element.
type Qos_Interface_Output_SchedulerPolicyPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_NamePath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/state/name YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_NamePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/state/name YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_NamePathAny struct {
	*ygot.NodePath
}

// Name (leaf): The scheduler policy to be applied to traffic on this interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/state/name"
func (n *Qos_Interface_Output_SchedulerPolicyPath) Name() *Qos_Interface_Output_SchedulerPolicy_NamePath {
	return &Qos_Interface_Output_SchedulerPolicy_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The scheduler policy to be applied to traffic on this interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/state/name"
func (n *Qos_Interface_Output_SchedulerPolicyPathAny) Name() *Qos_Interface_Output_SchedulerPolicy_NamePathAny {
	return &Qos_Interface_Output_SchedulerPolicy_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SchedulerAny (list): List of the schedulers that are part of the scheduler-policy
// specified.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler"
// Sequence (wildcarded): uint32
func (n *Qos_Interface_Output_SchedulerPolicyPath) SchedulerAny() *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny {
	return &Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": "*"},
			n,
		),
	}
}

// SchedulerAny (list): List of the schedulers that are part of the scheduler-policy
// specified.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler"
// Sequence (wildcarded): uint32
func (n *Qos_Interface_Output_SchedulerPolicyPathAny) SchedulerAny() *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny {
	return &Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": "*"},
			n,
		),
	}
}

// Scheduler (list): List of the schedulers that are part of the scheduler-policy
// specified.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler"
// Sequence: uint32
func (n *Qos_Interface_Output_SchedulerPolicyPath) Scheduler(Sequence uint32) *Qos_Interface_Output_SchedulerPolicy_SchedulerPath {
	return &Qos_Interface_Output_SchedulerPolicy_SchedulerPath{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": Sequence},
			n,
		),
	}
}

// Scheduler (list): List of the schedulers that are part of the scheduler-policy
// specified.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler"
// Sequence: uint32
func (n *Qos_Interface_Output_SchedulerPolicyPathAny) Scheduler(Sequence uint32) *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny {
	return &Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": Sequence},
			n,
		),
	}
}

// Qos_Interface_Output_SchedulerPolicy_SchedulerPath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_SchedulerPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingOctetsPath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/conforming-octets YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/conforming-octets YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingPktsPath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/conforming-pkts YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/conforming-pkts YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingPktsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingOctetsPath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/exceeding-octets YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/exceeding-octets YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingPktsPath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/exceeding-pkts YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/exceeding-pkts YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingPktsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_SequencePath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/sequence YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_SequencePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_SequencePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/sequence YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_SequencePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingOctetsPath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/violating-octets YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/violating-octets YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingPktsPath represents the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/violating-pkts YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/violating-pkts YANG schema element.
type Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingPktsPathAny struct {
	*ygot.NodePath
}

// ConformingOctets (leaf): The number of octets in packets that were considered
// conforming by the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/conforming-octets"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/conforming-octets"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPath) ConformingOctets() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingOctetsPath {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "conforming-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformingOctets (leaf): The number of octets in packets that were considered
// conforming by the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/conforming-octets"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/conforming-octets"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny) ConformingOctets() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingOctetsPathAny {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "conforming-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformingPkts (leaf): The number of packets that were considered conforming by
// the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/conforming-pkts"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/conforming-pkts"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPath) ConformingPkts() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingPktsPath {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "conforming-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformingPkts (leaf): The number of packets that were considered conforming by
// the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/conforming-pkts"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/conforming-pkts"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny) ConformingPkts() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingPktsPathAny {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ConformingPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "conforming-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedingOctets (leaf): The number of octets in packets that were considered
// exceeding by the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/exceeding-octets"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/exceeding-octets"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPath) ExceedingOctets() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingOctetsPath {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceeding-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedingOctets (leaf): The number of octets in packets that were considered
// exceeding by the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/exceeding-octets"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/exceeding-octets"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny) ExceedingOctets() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceeding-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedingPkts (leaf): The number of packets that were considered exceeding by
// the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/exceeding-pkts"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/exceeding-pkts"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPath) ExceedingPkts() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingPktsPath {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceeding-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedingPkts (leaf): The number of packets that were considered exceeding by
// the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/exceeding-pkts"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/exceeding-pkts"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny) ExceedingPkts() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingPktsPathAny {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ExceedingPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceeding-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sequence (leaf): Reference to the sequence ID of the scheduler within
// the current scheduler policy.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/sequence"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/sequence"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPath) Sequence() *Qos_Interface_Output_SchedulerPolicy_Scheduler_SequencePath {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_SequencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sequence (leaf): Reference to the sequence ID of the scheduler within
// the current scheduler policy.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/sequence"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/sequence"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny) Sequence() *Qos_Interface_Output_SchedulerPolicy_Scheduler_SequencePathAny {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_SequencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolatingOctets (leaf): The number of octets in packets that were considered
// violating by the policer.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/violating-octets"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/violating-octets"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPath) ViolatingOctets() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingOctetsPath {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "violating-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolatingOctets (leaf): The number of octets in packets that were considered
// violating by the policer.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/violating-octets"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/violating-octets"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny) ViolatingOctets() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "violating-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolatingPkts (leaf): The number of packets that were considered violating by
// the policer.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/violating-pkts"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/violating-pkts"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPath) ViolatingPkts() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingPktsPath {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "violating-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolatingPkts (leaf): The number of packets that were considered violating by
// the policer.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/violating-pkts"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy/schedulers/scheduler/state/violating-pkts"
func (n *Qos_Interface_Output_SchedulerPolicy_SchedulerPathAny) ViolatingPkts() *Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingPktsPathAny {
	return &Qos_Interface_Output_SchedulerPolicy_Scheduler_ViolatingPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "violating-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_QueuePath represents the /openconfig-qos/qos/queues/queue YANG schema element.
type Qos_QueuePath struct {
	*ygot.NodePath
}

// Qos_QueuePathAny represents the wildcard version of the /openconfig-qos/qos/queues/queue YANG schema element.
type Qos_QueuePathAny struct {
	*ygot.NodePath
}

// Qos_Queue_NamePath represents the /openconfig-qos/qos/queues/queue/state/name YANG schema element.
type Qos_Queue_NamePath struct {
	*ygot.NodePath
}

// Qos_Queue_NamePathAny represents the wildcard version of the /openconfig-qos/qos/queues/queue/state/name YANG schema element.
type Qos_Queue_NamePathAny struct {
	*ygot.NodePath
}

// Name (leaf): User-defined name of the queue
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/queues/queue/state/name"
func (n *Qos_QueuePath) Name() *Qos_Queue_NamePath {
	return &Qos_Queue_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): User-defined name of the queue
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/queues/queue/state/name"
func (n *Qos_QueuePathAny) Name() *Qos_Queue_NamePathAny {
	return &Qos_Queue_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_QueueManagementProfilePath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile YANG schema element.
type Qos_QueueManagementProfilePath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfilePathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile YANG schema element.
type Qos_QueueManagementProfilePathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_NamePath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/state/name YANG schema element.
type Qos_QueueManagementProfile_NamePath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_NamePathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/state/name YANG schema element.
type Qos_QueueManagementProfile_NamePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Unique string name used for the queue management profile.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/state/name"
func (n *Qos_QueueManagementProfilePath) Name() *Qos_QueueManagementProfile_NamePath {
	return &Qos_QueueManagementProfile_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Unique string name used for the queue management profile.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/state/name"
func (n *Qos_QueueManagementProfilePathAny) Name() *Qos_QueueManagementProfile_NamePathAny {
	return &Qos_QueueManagementProfile_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Red (container): Configuration and operational state parameters
// relating to Random Early Detection (RED).
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "red"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red"
func (n *Qos_QueueManagementProfilePath) Red() *Qos_QueueManagementProfile_RedPath {
	return &Qos_QueueManagementProfile_RedPath{
		NodePath: ygot.NewNodePath(
			[]string{"red"},
			map[string]interface{}{},
			n,
		),
	}
}

// Red (container): Configuration and operational state parameters
// relating to Random Early Detection (RED).
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "red"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red"
func (n *Qos_QueueManagementProfilePathAny) Red() *Qos_QueueManagementProfile_RedPathAny {
	return &Qos_QueueManagementProfile_RedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"red"},
			map[string]interface{}{},
			n,
		),
	}
}

// Wred (container): Configuration and operational state parameters relating to
// Weighted Random Early Detection (WRED).
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "wred"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred"
func (n *Qos_QueueManagementProfilePath) Wred() *Qos_QueueManagementProfile_WredPath {
	return &Qos_QueueManagementProfile_WredPath{
		NodePath: ygot.NewNodePath(
			[]string{"wred"},
			map[string]interface{}{},
			n,
		),
	}
}

// Wred (container): Configuration and operational state parameters relating to
// Weighted Random Early Detection (WRED).
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "wred"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred"
func (n *Qos_QueueManagementProfilePathAny) Wred() *Qos_QueueManagementProfile_WredPathAny {
	return &Qos_QueueManagementProfile_WredPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"wred"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_QueueManagementProfile_RedPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red YANG schema element.
type Qos_QueueManagementProfile_RedPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_RedPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red YANG schema element.
type Qos_QueueManagementProfile_RedPathAny struct {
	*ygot.NodePath
}

// Uniform (container): Uniform RED parameters. These parameters are applied to all
// the traffic coming into system.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "uniform"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform"
func (n *Qos_QueueManagementProfile_RedPath) Uniform() *Qos_QueueManagementProfile_Red_UniformPath {
	return &Qos_QueueManagementProfile_Red_UniformPath{
		NodePath: ygot.NewNodePath(
			[]string{"uniform"},
			map[string]interface{}{},
			n,
		),
	}
}

// Uniform (container): Uniform RED parameters. These parameters are applied to all
// the traffic coming into system.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "uniform"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform"
func (n *Qos_QueueManagementProfile_RedPathAny) Uniform() *Qos_QueueManagementProfile_Red_UniformPathAny {
	return &Qos_QueueManagementProfile_Red_UniformPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"uniform"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_QueueManagementProfile_Red_UniformPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform YANG schema element.
type Qos_QueueManagementProfile_Red_UniformPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Red_UniformPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform YANG schema element.
type Qos_QueueManagementProfile_Red_UniformPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Red_Uniform_DropPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform/state/drop YANG schema element.
type Qos_QueueManagementProfile_Red_Uniform_DropPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Red_Uniform_DropPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform/state/drop YANG schema element.
type Qos_QueueManagementProfile_Red_Uniform_DropPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Red_Uniform_EnableEcnPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform/state/enable-ecn YANG schema element.
type Qos_QueueManagementProfile_Red_Uniform_EnableEcnPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Red_Uniform_EnableEcnPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform/state/enable-ecn YANG schema element.
type Qos_QueueManagementProfile_Red_Uniform_EnableEcnPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Red_Uniform_MaxThresholdPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform/state/max-threshold YANG schema element.
type Qos_QueueManagementProfile_Red_Uniform_MaxThresholdPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Red_Uniform_MaxThresholdPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform/state/max-threshold YANG schema element.
type Qos_QueueManagementProfile_Red_Uniform_MaxThresholdPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Red_Uniform_MinThresholdPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform/state/min-threshold YANG schema element.
type Qos_QueueManagementProfile_Red_Uniform_MinThresholdPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Red_Uniform_MinThresholdPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/red/uniform/state/min-threshold YANG schema element.
type Qos_QueueManagementProfile_Red_Uniform_MinThresholdPathAny struct {
	*ygot.NodePath
}

// Drop (leaf): When this leaf is true and the packet and if the ECN field in
// the packet indicates that the endpoints are not ECN capable and
// the and the WRED algorithm determines that the packet should
// have been dropped based on the drop probability, the packet
// is dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform/state/drop"
func (n *Qos_QueueManagementProfile_Red_UniformPath) Drop() *Qos_QueueManagementProfile_Red_Uniform_DropPath {
	return &Qos_QueueManagementProfile_Red_Uniform_DropPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Drop (leaf): When this leaf is true and the packet and if the ECN field in
// the packet indicates that the endpoints are not ECN capable and
// the and the WRED algorithm determines that the packet should
// have been dropped based on the drop probability, the packet
// is dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform/state/drop"
func (n *Qos_QueueManagementProfile_Red_UniformPathAny) Drop() *Qos_QueueManagementProfile_Red_Uniform_DropPathAny {
	return &Qos_QueueManagementProfile_Red_Uniform_DropPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableEcn (leaf): When this leaf is true and the number of packets in the queue
// is between the minimum threshold and the maximum threshold, if
// the ECN field on the packet indicates that the endpoints are ECN
// capable (that is, the ECT bit is set to 1 and the CE bit is set
// to 0, or the ECT bit is set to 0 and the CE bit is set to 1) and
// the WRED algorithm determines that the packet should have been
// dropped based on the drop probability, the ECT and CE bits for
// the packet are changed to 1, and the packet is transmitted.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/enable-ecn"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform/state/enable-ecn"
func (n *Qos_QueueManagementProfile_Red_UniformPath) EnableEcn() *Qos_QueueManagementProfile_Red_Uniform_EnableEcnPath {
	return &Qos_QueueManagementProfile_Red_Uniform_EnableEcnPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable-ecn"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableEcn (leaf): When this leaf is true and the number of packets in the queue
// is between the minimum threshold and the maximum threshold, if
// the ECN field on the packet indicates that the endpoints are ECN
// capable (that is, the ECT bit is set to 1 and the CE bit is set
// to 0, or the ECT bit is set to 0 and the CE bit is set to 1) and
// the WRED algorithm determines that the packet should have been
// dropped based on the drop probability, the ECT and CE bits for
// the packet are changed to 1, and the packet is transmitted.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/enable-ecn"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform/state/enable-ecn"
func (n *Qos_QueueManagementProfile_Red_UniformPathAny) EnableEcn() *Qos_QueueManagementProfile_Red_Uniform_EnableEcnPathAny {
	return &Qos_QueueManagementProfile_Red_Uniform_EnableEcnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable-ecn"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxThreshold (leaf): The maximum threshold parameter for a RED-managed queue. When the
// average queue length exceeds the maxth value, all packets are
// dropped (or marked if ECN is enabled).
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-threshold"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform/state/max-threshold"
func (n *Qos_QueueManagementProfile_Red_UniformPath) MaxThreshold() *Qos_QueueManagementProfile_Red_Uniform_MaxThresholdPath {
	return &Qos_QueueManagementProfile_Red_Uniform_MaxThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxThreshold (leaf): The maximum threshold parameter for a RED-managed queue. When the
// average queue length exceeds the maxth value, all packets are
// dropped (or marked if ECN is enabled).
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-threshold"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform/state/max-threshold"
func (n *Qos_QueueManagementProfile_Red_UniformPathAny) MaxThreshold() *Qos_QueueManagementProfile_Red_Uniform_MaxThresholdPathAny {
	return &Qos_QueueManagementProfile_Red_Uniform_MaxThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinThreshold (leaf): The mininum threshold parameter for a RED-managed queue. When the
// average queue length is less than minth, all packets are admitted
// to the queue.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/min-threshold"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform/state/min-threshold"
func (n *Qos_QueueManagementProfile_Red_UniformPath) MinThreshold() *Qos_QueueManagementProfile_Red_Uniform_MinThresholdPath {
	return &Qos_QueueManagementProfile_Red_Uniform_MinThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinThreshold (leaf): The mininum threshold parameter for a RED-managed queue. When the
// average queue length is less than minth, all packets are admitted
// to the queue.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/min-threshold"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/red/uniform/state/min-threshold"
func (n *Qos_QueueManagementProfile_Red_UniformPathAny) MinThreshold() *Qos_QueueManagementProfile_Red_Uniform_MinThresholdPathAny {
	return &Qos_QueueManagementProfile_Red_Uniform_MinThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_QueueManagementProfile_WredPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred YANG schema element.
type Qos_QueueManagementProfile_WredPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_WredPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred YANG schema element.
type Qos_QueueManagementProfile_WredPathAny struct {
	*ygot.NodePath
}

// Uniform (container): Uniform WRED parameters. These parameters are applied to all the
// traffic coming into system.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "uniform"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform"
func (n *Qos_QueueManagementProfile_WredPath) Uniform() *Qos_QueueManagementProfile_Wred_UniformPath {
	return &Qos_QueueManagementProfile_Wred_UniformPath{
		NodePath: ygot.NewNodePath(
			[]string{"uniform"},
			map[string]interface{}{},
			n,
		),
	}
}

// Uniform (container): Uniform WRED parameters. These parameters are applied to all the
// traffic coming into system.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "uniform"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform"
func (n *Qos_QueueManagementProfile_WredPathAny) Uniform() *Qos_QueueManagementProfile_Wred_UniformPathAny {
	return &Qos_QueueManagementProfile_Wred_UniformPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"uniform"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_QueueManagementProfile_Wred_UniformPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform YANG schema element.
type Qos_QueueManagementProfile_Wred_UniformPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_UniformPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform YANG schema element.
type Qos_QueueManagementProfile_Wred_UniformPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_DropPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/drop YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_DropPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_DropPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/drop YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_DropPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_EnableEcnPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/enable-ecn YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_EnableEcnPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_EnableEcnPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/enable-ecn YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_EnableEcnPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_MaxDropProbabilityPercentPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/max-drop-probability-percent YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_MaxDropProbabilityPercentPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_MaxDropProbabilityPercentPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/max-drop-probability-percent YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_MaxDropProbabilityPercentPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_MaxThresholdPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/max-threshold YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_MaxThresholdPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_MaxThresholdPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/max-threshold YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_MaxThresholdPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_MinThresholdPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/min-threshold YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_MinThresholdPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_MinThresholdPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/min-threshold YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_MinThresholdPathAny struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_WeightPath represents the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/weight YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_WeightPath struct {
	*ygot.NodePath
}

// Qos_QueueManagementProfile_Wred_Uniform_WeightPathAny represents the wildcard version of the /openconfig-qos/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/weight YANG schema element.
type Qos_QueueManagementProfile_Wred_Uniform_WeightPathAny struct {
	*ygot.NodePath
}

// Drop (leaf): When this leaf is true and the packet and if the ECN field in
// the packet indicates that the endpoints are not ECN capable and
// the and the WRED algorithm determines that the packet should
// have been dropped based on the drop probability, the packet
// is dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/drop"
func (n *Qos_QueueManagementProfile_Wred_UniformPath) Drop() *Qos_QueueManagementProfile_Wred_Uniform_DropPath {
	return &Qos_QueueManagementProfile_Wred_Uniform_DropPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Drop (leaf): When this leaf is true and the packet and if the ECN field in
// the packet indicates that the endpoints are not ECN capable and
// the and the WRED algorithm determines that the packet should
// have been dropped based on the drop probability, the packet
// is dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/drop"
func (n *Qos_QueueManagementProfile_Wred_UniformPathAny) Drop() *Qos_QueueManagementProfile_Wred_Uniform_DropPathAny {
	return &Qos_QueueManagementProfile_Wred_Uniform_DropPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableEcn (leaf): When this leaf is true and the number of packets in the queue
// is between the minimum threshold and the maximum threshold, if
// the ECN field on the packet indicates that the endpoints are ECN
// capable (that is, the ECT bit is set to 1 and the CE bit is set
// to 0, or the ECT bit is set to 0 and the CE bit is set to 1) and
// the WRED algorithm determines that the packet should have been
// dropped based on the drop probability, the ECT and CE bits for
// the packet are changed to 1, and the packet is transmitted.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/enable-ecn"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/enable-ecn"
func (n *Qos_QueueManagementProfile_Wred_UniformPath) EnableEcn() *Qos_QueueManagementProfile_Wred_Uniform_EnableEcnPath {
	return &Qos_QueueManagementProfile_Wred_Uniform_EnableEcnPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable-ecn"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableEcn (leaf): When this leaf is true and the number of packets in the queue
// is between the minimum threshold and the maximum threshold, if
// the ECN field on the packet indicates that the endpoints are ECN
// capable (that is, the ECT bit is set to 1 and the CE bit is set
// to 0, or the ECT bit is set to 0 and the CE bit is set to 1) and
// the WRED algorithm determines that the packet should have been
// dropped based on the drop probability, the ECT and CE bits for
// the packet are changed to 1, and the packet is transmitted.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/enable-ecn"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/enable-ecn"
func (n *Qos_QueueManagementProfile_Wred_UniformPathAny) EnableEcn() *Qos_QueueManagementProfile_Wred_Uniform_EnableEcnPathAny {
	return &Qos_QueueManagementProfile_Wred_Uniform_EnableEcnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable-ecn"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDropProbabilityPercent (leaf): If the queue depth is between min and max threshold then this
// the probability with which packets are dropped or marked.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-drop-probability-percent"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/max-drop-probability-percent"
func (n *Qos_QueueManagementProfile_Wred_UniformPath) MaxDropProbabilityPercent() *Qos_QueueManagementProfile_Wred_Uniform_MaxDropProbabilityPercentPath {
	return &Qos_QueueManagementProfile_Wred_Uniform_MaxDropProbabilityPercentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-drop-probability-percent"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDropProbabilityPercent (leaf): If the queue depth is between min and max threshold then this
// the probability with which packets are dropped or marked.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-drop-probability-percent"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/max-drop-probability-percent"
func (n *Qos_QueueManagementProfile_Wred_UniformPathAny) MaxDropProbabilityPercent() *Qos_QueueManagementProfile_Wred_Uniform_MaxDropProbabilityPercentPathAny {
	return &Qos_QueueManagementProfile_Wred_Uniform_MaxDropProbabilityPercentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-drop-probability-percent"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxThreshold (leaf): The maximum threshold parameter for a RED-managed queue. When the
// average queue length exceeds the maxth value, all packets are
// dropped (or marked if ECN is enabled).
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-threshold"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/max-threshold"
func (n *Qos_QueueManagementProfile_Wred_UniformPath) MaxThreshold() *Qos_QueueManagementProfile_Wred_Uniform_MaxThresholdPath {
	return &Qos_QueueManagementProfile_Wred_Uniform_MaxThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxThreshold (leaf): The maximum threshold parameter for a RED-managed queue. When the
// average queue length exceeds the maxth value, all packets are
// dropped (or marked if ECN is enabled).
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-threshold"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/max-threshold"
func (n *Qos_QueueManagementProfile_Wred_UniformPathAny) MaxThreshold() *Qos_QueueManagementProfile_Wred_Uniform_MaxThresholdPathAny {
	return &Qos_QueueManagementProfile_Wred_Uniform_MaxThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinThreshold (leaf): The mininum threshold parameter for a RED-managed queue. When the
// average queue length is less than minth, all packets are admitted
// to the queue.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/min-threshold"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/min-threshold"
func (n *Qos_QueueManagementProfile_Wred_UniformPath) MinThreshold() *Qos_QueueManagementProfile_Wred_Uniform_MinThresholdPath {
	return &Qos_QueueManagementProfile_Wred_Uniform_MinThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinThreshold (leaf): The mininum threshold parameter for a RED-managed queue. When the
// average queue length is less than minth, all packets are admitted
// to the queue.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/min-threshold"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/min-threshold"
func (n *Qos_QueueManagementProfile_Wred_UniformPathAny) MinThreshold() *Qos_QueueManagementProfile_Wred_Uniform_MinThresholdPathAny {
	return &Qos_QueueManagementProfile_Wred_Uniform_MinThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The average queue size depends on the previous average as well as
// the current size of the queue.
//
// average queue size = (previous average queue size)*(1-2^{-n})+
//
//	(current queue size)*(2^{-n})
//
// where n is the user-configurable exponential weight factor.
//
// The previous average is more important for high values of n. Peaks
// and lows in queue size are smoothed by a high value. For low values
// of n, the average queue size is close to the current queue size.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/weight"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/weight"
func (n *Qos_QueueManagementProfile_Wred_UniformPath) Weight() *Qos_QueueManagementProfile_Wred_Uniform_WeightPath {
	return &Qos_QueueManagementProfile_Wred_Uniform_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The average queue size depends on the previous average as well as
// the current size of the queue.
//
// average queue size = (previous average queue size)*(1-2^{-n})+
//
//	(current queue size)*(2^{-n})
//
// where n is the user-configurable exponential weight factor.
//
// The previous average is more important for high values of n. Peaks
// and lows in queue size are smoothed by a high value. For low values
// of n, the average queue size is close to the current queue size.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/weight"
// Path from root: "/qos/queue-management-profiles/queue-management-profile/wred/uniform/state/weight"
func (n *Qos_QueueManagementProfile_Wred_UniformPathAny) Weight() *Qos_QueueManagementProfile_Wred_Uniform_WeightPathAny {
	return &Qos_QueueManagementProfile_Wred_Uniform_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicyPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy YANG schema element.
type Qos_SchedulerPolicyPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicyPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy YANG schema element.
type Qos_SchedulerPolicyPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_NamePath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/state/name YANG schema element.
type Qos_SchedulerPolicy_NamePath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_NamePathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/state/name YANG schema element.
type Qos_SchedulerPolicy_NamePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Name for the scheduler policy.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/scheduler-policies/scheduler-policy/state/name"
func (n *Qos_SchedulerPolicyPath) Name() *Qos_SchedulerPolicy_NamePath {
	return &Qos_SchedulerPolicy_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Name for the scheduler policy.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/scheduler-policies/scheduler-policy/state/name"
func (n *Qos_SchedulerPolicyPathAny) Name() *Qos_SchedulerPolicy_NamePathAny {
	return &Qos_SchedulerPolicy_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SchedulerAny (list): List of defined QoS traffic schedulers.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler"
// Sequence (wildcarded): uint32
func (n *Qos_SchedulerPolicyPath) SchedulerAny() *Qos_SchedulerPolicy_SchedulerPathAny {
	return &Qos_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": "*"},
			n,
		),
	}
}

// SchedulerAny (list): List of defined QoS traffic schedulers.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler"
// Sequence (wildcarded): uint32
func (n *Qos_SchedulerPolicyPathAny) SchedulerAny() *Qos_SchedulerPolicy_SchedulerPathAny {
	return &Qos_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": "*"},
			n,
		),
	}
}

// Scheduler (list): List of defined QoS traffic schedulers.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler"
// Sequence: uint32
func (n *Qos_SchedulerPolicyPath) Scheduler(Sequence uint32) *Qos_SchedulerPolicy_SchedulerPath {
	return &Qos_SchedulerPolicy_SchedulerPath{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": Sequence},
			n,
		),
	}
}

// Scheduler (list): List of defined QoS traffic schedulers.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler"
// Sequence: uint32
func (n *Qos_SchedulerPolicyPathAny) Scheduler(Sequence uint32) *Qos_SchedulerPolicy_SchedulerPathAny {
	return &Qos_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": Sequence},
			n,
		),
	}
}

// Qos_SchedulerPolicy_SchedulerPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_SchedulerPolicy_SchedulerPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_SchedulerPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_SchedulerPolicy_SchedulerPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_PriorityPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/priority YANG schema element.
type Qos_SchedulerPolicy_Scheduler_PriorityPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_PriorityPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/priority YANG schema element.
type Qos_SchedulerPolicy_Scheduler_PriorityPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_SequencePath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/sequence YANG schema element.
type Qos_SchedulerPolicy_Scheduler_SequencePath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_SequencePathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/sequence YANG schema element.
type Qos_SchedulerPolicy_Scheduler_SequencePathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TypePath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/type YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TypePath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TypePathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/type YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TypePathAny struct {
	*ygot.NodePath
}

// InputAny (list): List of input sources for the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "inputs/input"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input"
// Id (wildcarded): string
func (n *Qos_SchedulerPolicy_SchedulerPath) InputAny() *Qos_SchedulerPolicy_Scheduler_InputPathAny {
	return &Qos_SchedulerPolicy_Scheduler_InputPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inputs", "input"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InputAny (list): List of input sources for the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "inputs/input"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input"
// Id (wildcarded): string
func (n *Qos_SchedulerPolicy_SchedulerPathAny) InputAny() *Qos_SchedulerPolicy_Scheduler_InputPathAny {
	return &Qos_SchedulerPolicy_Scheduler_InputPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inputs", "input"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Input (list): List of input sources for the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "inputs/input"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input"
// Id: string
func (n *Qos_SchedulerPolicy_SchedulerPath) Input(Id string) *Qos_SchedulerPolicy_Scheduler_InputPath {
	return &Qos_SchedulerPolicy_Scheduler_InputPath{
		NodePath: ygot.NewNodePath(
			[]string{"inputs", "input"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Input (list): List of input sources for the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "inputs/input"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input"
// Id: string
func (n *Qos_SchedulerPolicy_SchedulerPathAny) Input(Id string) *Qos_SchedulerPolicy_Scheduler_InputPathAny {
	return &Qos_SchedulerPolicy_Scheduler_InputPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inputs", "input"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// OneRateTwoColor (container): Top-level container for data related to a 1 rate, 2 color
// shaper.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "one-rate-two-color"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color"
func (n *Qos_SchedulerPolicy_SchedulerPath) OneRateTwoColor() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath{
		NodePath: ygot.NewNodePath(
			[]string{"one-rate-two-color"},
			map[string]interface{}{},
			n,
		),
	}
}

// OneRateTwoColor (container): Top-level container for data related to a 1 rate, 2 color
// shaper.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "one-rate-two-color"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color"
func (n *Qos_SchedulerPolicy_SchedulerPathAny) OneRateTwoColor() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"one-rate-two-color"},
			map[string]interface{}{},
			n,
		),
	}
}

// Output (container): Top-level container for scheduler output data
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "output"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output"
func (n *Qos_SchedulerPolicy_SchedulerPath) Output() *Qos_SchedulerPolicy_Scheduler_OutputPath {
	return &Qos_SchedulerPolicy_Scheduler_OutputPath{
		NodePath: ygot.NewNodePath(
			[]string{"output"},
			map[string]interface{}{},
			n,
		),
	}
}

// Output (container): Top-level container for scheduler output data
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "output"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output"
func (n *Qos_SchedulerPolicy_SchedulerPathAny) Output() *Qos_SchedulerPolicy_Scheduler_OutputPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OutputPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"output"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Priority of the scheduler within the scheduler policy.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/priority"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/priority"
func (n *Qos_SchedulerPolicy_SchedulerPath) Priority() *Qos_SchedulerPolicy_Scheduler_PriorityPath {
	return &Qos_SchedulerPolicy_Scheduler_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Priority of the scheduler within the scheduler policy.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/priority"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/priority"
func (n *Qos_SchedulerPolicy_SchedulerPathAny) Priority() *Qos_SchedulerPolicy_Scheduler_PriorityPathAny {
	return &Qos_SchedulerPolicy_Scheduler_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sequence (leaf): Sequence number for the scheduler within the scheduler
// policy. Schedulers are processed from lowest sequence
// to highest.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/sequence"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/sequence"
func (n *Qos_SchedulerPolicy_SchedulerPath) Sequence() *Qos_SchedulerPolicy_Scheduler_SequencePath {
	return &Qos_SchedulerPolicy_Scheduler_SequencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sequence (leaf): Sequence number for the scheduler within the scheduler
// policy. Schedulers are processed from lowest sequence
// to highest.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/sequence"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/sequence"
func (n *Qos_SchedulerPolicy_SchedulerPathAny) Sequence() *Qos_SchedulerPolicy_Scheduler_SequencePathAny {
	return &Qos_SchedulerPolicy_Scheduler_SequencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence"},
			map[string]interface{}{},
			n,
		),
	}
}

// TwoRateThreeColor (container): Top-level container for data for a 2 rate, 3 color policer.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "two-rate-three-color"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color"
func (n *Qos_SchedulerPolicy_SchedulerPath) TwoRateThreeColor() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath{
		NodePath: ygot.NewNodePath(
			[]string{"two-rate-three-color"},
			map[string]interface{}{},
			n,
		),
	}
}

// TwoRateThreeColor (container): Top-level container for data for a 2 rate, 3 color policer.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "two-rate-three-color"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color"
func (n *Qos_SchedulerPolicy_SchedulerPathAny) TwoRateThreeColor() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"two-rate-three-color"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Sets the type of scheduler, i.e. the scheduling algorithm
// used to serve inputs.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/type"
func (n *Qos_SchedulerPolicy_SchedulerPath) Type() *Qos_SchedulerPolicy_Scheduler_TypePath {
	return &Qos_SchedulerPolicy_Scheduler_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Sets the type of scheduler, i.e. the scheduling algorithm
// used to serve inputs.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/state/type"
func (n *Qos_SchedulerPolicy_SchedulerPathAny) Type() *Qos_SchedulerPolicy_Scheduler_TypePathAny {
	return &Qos_SchedulerPolicy_Scheduler_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicy_Scheduler_InputPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input YANG schema element.
type Qos_SchedulerPolicy_Scheduler_InputPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_InputPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input YANG schema element.
type Qos_SchedulerPolicy_Scheduler_InputPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Input_IdPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/id YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Input_IdPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Input_IdPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/id YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Input_IdPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Input_InputTypePath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/input-type YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Input_InputTypePath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Input_InputTypePathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/input-type YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Input_InputTypePathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Input_QueuePath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/queue YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Input_QueuePath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Input_QueuePathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/queue YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Input_QueuePathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Input_WeightPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/weight YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Input_WeightPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Input_WeightPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/weight YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Input_WeightPathAny struct {
	*ygot.NodePath
}

// Id (leaf): User-defined identifier for the scheduler input
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/id"
func (n *Qos_SchedulerPolicy_Scheduler_InputPath) Id() *Qos_SchedulerPolicy_Scheduler_Input_IdPath {
	return &Qos_SchedulerPolicy_Scheduler_Input_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): User-defined identifier for the scheduler input
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/id"
func (n *Qos_SchedulerPolicy_Scheduler_InputPathAny) Id() *Qos_SchedulerPolicy_Scheduler_Input_IdPathAny {
	return &Qos_SchedulerPolicy_Scheduler_Input_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputType (leaf): Describes the type of input source for the scheduler
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/input-type"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/input-type"
func (n *Qos_SchedulerPolicy_Scheduler_InputPath) InputType() *Qos_SchedulerPolicy_Scheduler_Input_InputTypePath {
	return &Qos_SchedulerPolicy_Scheduler_Input_InputTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// InputType (leaf): Describes the type of input source for the scheduler
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/input-type"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/input-type"
func (n *Qos_SchedulerPolicy_Scheduler_InputPathAny) InputType() *Qos_SchedulerPolicy_Scheduler_Input_InputTypePathAny {
	return &Qos_SchedulerPolicy_Scheduler_Input_InputTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "input-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Queue (leaf): Reference to a queue that is an input source for the
// scheduler
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/queue"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/queue"
func (n *Qos_SchedulerPolicy_Scheduler_InputPath) Queue() *Qos_SchedulerPolicy_Scheduler_Input_QueuePath {
	return &Qos_SchedulerPolicy_Scheduler_Input_QueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "queue"},
			map[string]interface{}{},
			n,
		),
	}
}

// Queue (leaf): Reference to a queue that is an input source for the
// scheduler
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/queue"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/queue"
func (n *Qos_SchedulerPolicy_Scheduler_InputPathAny) Queue() *Qos_SchedulerPolicy_Scheduler_Input_QueuePathAny {
	return &Qos_SchedulerPolicy_Scheduler_Input_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "queue"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): For priority schedulers, this indicates the priority of
// the corresponding input.  Higher values indicate higher
// priority.  For weighted round-robin schedulers, this leaf
// indicates the weight of the corresponding input.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/weight"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/weight"
func (n *Qos_SchedulerPolicy_Scheduler_InputPath) Weight() *Qos_SchedulerPolicy_Scheduler_Input_WeightPath {
	return &Qos_SchedulerPolicy_Scheduler_Input_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): For priority schedulers, this indicates the priority of
// the corresponding input.  Higher values indicate higher
// priority.  For weighted round-robin schedulers, this leaf
// indicates the weight of the corresponding input.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/weight"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/inputs/input/state/weight"
func (n *Qos_SchedulerPolicy_Scheduler_InputPathAny) Weight() *Qos_SchedulerPolicy_Scheduler_Input_WeightPathAny {
	return &Qos_SchedulerPolicy_Scheduler_Input_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_BcPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/bc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_BcPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_BcPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/bc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_BcPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir-pct YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir-pct YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctRemainingPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir-pct-remaining YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctRemainingPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctRemainingPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir-pct-remaining YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctRemainingPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthBytesPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-bytes YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthBytesPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthBytesPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-bytes YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthBytesPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPacketsPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-packets YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPacketsPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPacketsPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-packets YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPacketsPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPercentPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-percent YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPercentPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPercentPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-percent YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPercentPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_QueuingBehaviorPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/queuing-behavior YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_QueuingBehaviorPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_QueuingBehaviorPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/queuing-behavior YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_QueuingBehaviorPathAny struct {
	*ygot.NodePath
}

// Bc (leaf): Committed burst size for the single-rate token bucket
// scheduler.  This value represents the depth of the token
// bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/bc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/bc"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) Bc() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_BcPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_BcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bc"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bc (leaf): Committed burst size for the single-rate token bucket
// scheduler.  This value represents the depth of the token
// bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/bc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/bc"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) Bc() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_BcPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_BcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bc"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cir (leaf): Committed information rate for the single-rate token
// bucket scheduler.  This value represents the rate at which
// tokens are added to the bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) Cir() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cir (leaf): Committed information rate for the single-rate token
// bucket scheduler.  This value represents the rate at which
// tokens are added to the bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) Cir() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir"},
			map[string]interface{}{},
			n,
		),
	}
}

// CirPct (leaf): Committed information rate for the single-rate token
// bucket scheduler. This value represents the rate at which
// tokens are added to the bucket. It is expressed as a
// percentage of the total bandwidth allocated to the
// context in which the scheduler is referenced.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir-pct"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir-pct"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) CirPct() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// CirPct (leaf): Committed information rate for the single-rate token
// bucket scheduler. This value represents the rate at which
// tokens are added to the bucket. It is expressed as a
// percentage of the total bandwidth allocated to the
// context in which the scheduler is referenced.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir-pct"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir-pct"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) CirPct() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// CirPctRemaining (leaf): Committed information rate for the single-rate token
// bucket scheduler. This value represents the rate at which
// tokens are added to the bucket. It is expressed as a
// percentage of the unallocated bandwidth available in the
// context in which the scheduled is referenced.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir-pct-remaining"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir-pct-remaining"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) CirPctRemaining() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctRemainingPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctRemainingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir-pct-remaining"},
			map[string]interface{}{},
			n,
		),
	}
}

// CirPctRemaining (leaf): Committed information rate for the single-rate token
// bucket scheduler. This value represents the rate at which
// tokens are added to the bucket. It is expressed as a
// percentage of the unallocated bandwidth available in the
// context in which the scheduled is referenced.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir-pct-remaining"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/cir-pct-remaining"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) CirPctRemaining() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctRemainingPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_CirPctRemainingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir-pct-remaining"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformAction (container): Action to be applied to packets that are scheduled within the
// CIR of the one-rate, two-colour scheduler. Packets that receive
// a token from the in-CIR bucket are said to be conforming and
// have all of the specified actions applied.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "conform-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) ConformAction() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPath{
		NodePath: ygot.NewNodePath(
			[]string{"conform-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformAction (container): Action to be applied to packets that are scheduled within the
// CIR of the one-rate, two-colour scheduler. Packets that receive
// a token from the in-CIR bucket are said to be conforming and
// have all of the specified actions applied.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "conform-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) ConformAction() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"conform-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedAction (container): Action to be applied to packets that are scheduled above the CIR
// of the one-rate, two-colour shaper. Packets that do not receive a
// token from the in-CIR bucket are said to be exceeding, and have
// all of the specified actions applied.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "exceed-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) ExceedAction() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPath{
		NodePath: ygot.NewNodePath(
			[]string{"exceed-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedAction (container): Action to be applied to packets that are scheduled above the CIR
// of the one-rate, two-colour shaper. Packets that do not receive a
// token from the in-CIR bucket are said to be exceeding, and have
// all of the specified actions applied.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "exceed-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) ExceedAction() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"exceed-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueDepthBytes (leaf): When the scheduler is specified to be a shaper - the
// maximum depth of the queue in bytes is the value
// specified by this leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-depth-bytes"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-bytes"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) MaxQueueDepthBytes() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthBytesPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthBytesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-depth-bytes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueDepthBytes (leaf): When the scheduler is specified to be a shaper - the
// maximum depth of the queue in bytes is the value
// specified by this leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-depth-bytes"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-bytes"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) MaxQueueDepthBytes() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthBytesPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthBytesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-depth-bytes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueDepthPackets (leaf): When the scheduler is specified to be a shaper - the
// maximum depth of the queue in packets is the value
// specified by this leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-depth-packets"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-packets"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) MaxQueueDepthPackets() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPacketsPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPacketsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-depth-packets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueDepthPackets (leaf): When the scheduler is specified to be a shaper - the
// maximum depth of the queue in packets is the value
// specified by this leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-depth-packets"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-packets"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) MaxQueueDepthPackets() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPacketsPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPacketsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-depth-packets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueDepthPercent (leaf): The queue depth specified as a percentage of the total
// available buffer that is avaialble.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-depth-percent"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-percent"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) MaxQueueDepthPercent() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPercentPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPercentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-depth-percent"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueDepthPercent (leaf): The queue depth specified as a percentage of the total
// available buffer that is avaialble.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-depth-percent"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/max-queue-depth-percent"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) MaxQueueDepthPercent() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPercentPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_MaxQueueDepthPercentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-depth-percent"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueuingBehavior (leaf): The type of scheduler that is being configured.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/queuing-behavior"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/queuing-behavior"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPath) QueuingBehavior() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_QueuingBehaviorPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_QueuingBehaviorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "queuing-behavior"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueuingBehavior (leaf): The type of scheduler that is being configured.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/queuing-behavior"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/state/queuing-behavior"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColorPathAny) QueuingBehavior() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_QueuingBehaviorPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_QueuingBehaviorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "queuing-behavior"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDot1PPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDot1PPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDot1PPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDot1PPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDscpPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDscpPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDscpPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDscpPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetMplsTcPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetMplsTcPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetMplsTcPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetMplsTcPathAny struct {
	*ygot.NodePath
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPath) SetDot1P() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDot1PPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDot1PPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPathAny) SetDot1P() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDot1PPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDot1PPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPath) SetDscp() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDscpPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPathAny) SetDscp() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDscpPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetDscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPath) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetMplsTcPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetMplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/conform-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformActionPathAny) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetMplsTcPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ConformAction_SetMplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_DropPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/drop YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_DropPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_DropPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/drop YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_DropPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDot1PPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDot1PPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDot1PPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDot1PPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDscpPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDscpPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDscpPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDscpPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetMplsTcPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetMplsTcPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetMplsTcPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetMplsTcPathAny struct {
	*ygot.NodePath
}

// Drop (leaf): If set to true, packets within this context are dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/drop"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPath) Drop() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_DropPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_DropPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Drop (leaf): If set to true, packets within this context are dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/drop"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPathAny) Drop() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_DropPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_DropPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPath) SetDot1P() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDot1PPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDot1PPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPathAny) SetDot1P() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDot1PPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDot1PPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPath) SetDscp() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDscpPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPathAny) SetDscp() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDscpPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetDscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPath) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetMplsTcPath {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetMplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/one-rate-two-color/exceed-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedActionPathAny) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetMplsTcPathAny {
	return &Qos_SchedulerPolicy_Scheduler_OneRateTwoColor_ExceedAction_SetMplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicy_Scheduler_OutputPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OutputPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_OutputPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output YANG schema element.
type Qos_SchedulerPolicy_Scheduler_OutputPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Output_ChildSchedulerPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/child-scheduler YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Output_ChildSchedulerPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Output_ChildSchedulerPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/child-scheduler YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Output_ChildSchedulerPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Output_OutputFwdGroupPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/output-fwd-group YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Output_OutputFwdGroupPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Output_OutputFwdGroupPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/output-fwd-group YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Output_OutputFwdGroupPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Output_OutputTypePath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/output-type YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Output_OutputTypePath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_Output_OutputTypePathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/output-type YANG schema element.
type Qos_SchedulerPolicy_Scheduler_Output_OutputTypePathAny struct {
	*ygot.NodePath
}

// ChildScheduler (leaf): When the scheduler output type is a child scheduler,
// this leaf provides a reference to the downstream
// scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/child-scheduler"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/child-scheduler"
func (n *Qos_SchedulerPolicy_Scheduler_OutputPath) ChildScheduler() *Qos_SchedulerPolicy_Scheduler_Output_ChildSchedulerPath {
	return &Qos_SchedulerPolicy_Scheduler_Output_ChildSchedulerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "child-scheduler"},
			map[string]interface{}{},
			n,
		),
	}
}

// ChildScheduler (leaf): When the scheduler output type is a child scheduler,
// this leaf provides a reference to the downstream
// scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/child-scheduler"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/child-scheduler"
func (n *Qos_SchedulerPolicy_Scheduler_OutputPathAny) ChildScheduler() *Qos_SchedulerPolicy_Scheduler_Output_ChildSchedulerPathAny {
	return &Qos_SchedulerPolicy_Scheduler_Output_ChildSchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "child-scheduler"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputFwdGroup (leaf): When the scheduler output type is a forwarding group,
// this leaf provides a reference to the forwarding group.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/output-fwd-group"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/output-fwd-group"
func (n *Qos_SchedulerPolicy_Scheduler_OutputPath) OutputFwdGroup() *Qos_SchedulerPolicy_Scheduler_Output_OutputFwdGroupPath {
	return &Qos_SchedulerPolicy_Scheduler_Output_OutputFwdGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-fwd-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputFwdGroup (leaf): When the scheduler output type is a forwarding group,
// this leaf provides a reference to the forwarding group.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/output-fwd-group"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/output-fwd-group"
func (n *Qos_SchedulerPolicy_Scheduler_OutputPathAny) OutputFwdGroup() *Qos_SchedulerPolicy_Scheduler_Output_OutputFwdGroupPathAny {
	return &Qos_SchedulerPolicy_Scheduler_Output_OutputFwdGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-fwd-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputType (leaf): Describes the type of output sink for the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/output-type"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/output-type"
func (n *Qos_SchedulerPolicy_Scheduler_OutputPath) OutputType() *Qos_SchedulerPolicy_Scheduler_Output_OutputTypePath {
	return &Qos_SchedulerPolicy_Scheduler_Output_OutputTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputType (leaf): Describes the type of output sink for the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/output-type"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/output/state/output-type"
func (n *Qos_SchedulerPolicy_Scheduler_OutputPathAny) OutputType() *Qos_SchedulerPolicy_Scheduler_Output_OutputTypePathAny {
	return &Qos_SchedulerPolicy_Scheduler_Output_OutputTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BcPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/bc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BcPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BcPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/bc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BcPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BePath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/be YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BePath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BePathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/be YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BePathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir-pct YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir-pct YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctRemainingPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir-pct-remaining YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctRemainingPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctRemainingPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir-pct-remaining YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctRemainingPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir-pct YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir-pct YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctRemainingPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir-pct-remaining YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctRemainingPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctRemainingPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir-pct-remaining YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctRemainingPathAny struct {
	*ygot.NodePath
}

// Bc (leaf): Committed burst size for the dual-rate token bucket
// policer.  This value represents the depth of the token
// bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/bc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/bc"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) Bc() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BcPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bc"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bc (leaf): Committed burst size for the dual-rate token bucket
// policer.  This value represents the depth of the token
// bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/bc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/bc"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) Bc() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BcPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bc"},
			map[string]interface{}{},
			n,
		),
	}
}

// Be (leaf): Excess burst size for the dual-rate token bucket policer.
// This value represents the depth of the secondary bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/be"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/be"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) Be() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BePath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "be"},
			map[string]interface{}{},
			n,
		),
	}
}

// Be (leaf): Excess burst size for the dual-rate token bucket policer.
// This value represents the depth of the secondary bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/be"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/be"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) Be() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BePathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_BePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "be"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cir (leaf): Committed information rate for the dual-rate token
// bucket policer.  This value represents the rate at which
// tokens are added to the primary bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) Cir() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cir (leaf): Committed information rate for the dual-rate token
// bucket policer.  This value represents the rate at which
// tokens are added to the primary bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) Cir() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir"},
			map[string]interface{}{},
			n,
		),
	}
}

// CirPct (leaf): Committed information rate for the dual-rate token bucket
// policer. This value represents the rate at which tokens
// are added to the primary bucket. It is expressed as a
// percentage of the total bandwidth available within the
// context the scheduler is instantiated.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir-pct"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir-pct"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) CirPct() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// CirPct (leaf): Committed information rate for the dual-rate token bucket
// policer. This value represents the rate at which tokens
// are added to the primary bucket. It is expressed as a
// percentage of the total bandwidth available within the
// context the scheduler is instantiated.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir-pct"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir-pct"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) CirPct() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// CirPctRemaining (leaf): Committed information rate for the dual-rate token
// bucket policer. This value represents the rate at which
// tokens are added to the primary bucket. It is expressed
// as a percentage of the remaining bandwidth within the
// context the scheduler is instantiated.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir-pct-remaining"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir-pct-remaining"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) CirPctRemaining() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctRemainingPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctRemainingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir-pct-remaining"},
			map[string]interface{}{},
			n,
		),
	}
}

// CirPctRemaining (leaf): Committed information rate for the dual-rate token
// bucket policer. This value represents the rate at which
// tokens are added to the primary bucket. It is expressed
// as a percentage of the remaining bandwidth within the
// context the scheduler is instantiated.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/cir-pct-remaining"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/cir-pct-remaining"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) CirPctRemaining() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctRemainingPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_CirPctRemainingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cir-pct-remaining"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformAction (container): Action to be applied to the packets that are scheduled
// within the CIR of the policer. All packets that receive
// a token from this bucket have all actions specified
// applied to them
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "conform-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) ConformAction() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPath{
		NodePath: ygot.NewNodePath(
			[]string{"conform-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformAction (container): Action to be applied to the packets that are scheduled
// within the CIR of the policer. All packets that receive
// a token from this bucket have all actions specified
// applied to them
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "conform-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) ConformAction() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"conform-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedAction (container): Action to be applied to the packets that are scheduled
// within the PIR of the policer. Packets that receive a
// token from within the PIR allocation have all the
// specified actions applied to them
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "exceed-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) ExceedAction() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPath{
		NodePath: ygot.NewNodePath(
			[]string{"exceed-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedAction (container): Action to be applied to the packets that are scheduled
// within the PIR of the policer. Packets that receive a
// token from within the PIR allocation have all the
// specified actions applied to them
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "exceed-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) ExceedAction() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"exceed-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// Pir (leaf): Peak information rate for the dual-rate token bucket
// policer.  This value represents the rate at which tokens
// are added to the secondary bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/pir"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) Pir() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pir"},
			map[string]interface{}{},
			n,
		),
	}
}

// Pir (leaf): Peak information rate for the dual-rate token bucket
// policer.  This value represents the rate at which tokens
// are added to the secondary bucket.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/pir"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) Pir() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pir"},
			map[string]interface{}{},
			n,
		),
	}
}

// PirPct (leaf): Peak information rate for the dual-rate token bucket
// policer. This value represents the rate at which tokens
// are added to the secondary bucket. The value is expressed
// as a percentage of the total bandwidth available in the
// context in which the scheduler is instantiated.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/pir-pct"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir-pct"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) PirPct() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pir-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// PirPct (leaf): Peak information rate for the dual-rate token bucket
// policer. This value represents the rate at which tokens
// are added to the secondary bucket. The value is expressed
// as a percentage of the total bandwidth available in the
// context in which the scheduler is instantiated.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/pir-pct"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir-pct"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) PirPct() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pir-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// PirPctRemaining (leaf): Peak information rate for the dual-rate token
// bucket policer. This value represents the rate at which
// tokens are added to the secondary bucket. It is expressed
// as a percentage of the remaining bandwidth within the
// context the scheduler is instantiated.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/pir-pct-remaining"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir-pct-remaining"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) PirPctRemaining() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctRemainingPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctRemainingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pir-pct-remaining"},
			map[string]interface{}{},
			n,
		),
	}
}

// PirPctRemaining (leaf): Peak information rate for the dual-rate token
// bucket policer. This value represents the rate at which
// tokens are added to the secondary bucket. It is expressed
// as a percentage of the remaining bandwidth within the
// context the scheduler is instantiated.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/pir-pct-remaining"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/state/pir-pct-remaining"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) PirPctRemaining() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctRemainingPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_PirPctRemainingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pir-pct-remaining"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolateAction (container): Action to be applied to the packets that are scheduled
// above the PIR of the policer. Packets that do not receive
// a token from either bucket have all specified actions
// applied to them.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "violate-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPath) ViolateAction() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPath{
		NodePath: ygot.NewNodePath(
			[]string{"violate-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolateAction (container): Action to be applied to the packets that are scheduled
// above the PIR of the policer. Packets that do not receive
// a token from either bucket have all specified actions
// applied to them.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "violate-action"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColorPathAny) ViolateAction() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"violate-action"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDot1PPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDot1PPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDot1PPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDot1PPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDscpPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDscpPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDscpPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDscpPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetMplsTcPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetMplsTcPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetMplsTcPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetMplsTcPathAny struct {
	*ygot.NodePath
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPath) SetDot1P() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDot1PPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDot1PPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPathAny) SetDot1P() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDot1PPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDot1PPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPath) SetDscp() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDscpPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPathAny) SetDscp() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDscpPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetDscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPath) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetMplsTcPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetMplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/conform-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformActionPathAny) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetMplsTcPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ConformAction_SetMplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_DropPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/drop YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_DropPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_DropPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/drop YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_DropPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDot1PPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDot1PPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDot1PPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDot1PPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDscpPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDscpPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDscpPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDscpPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetMplsTcPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetMplsTcPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetMplsTcPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetMplsTcPathAny struct {
	*ygot.NodePath
}

// Drop (leaf): If set to true, packets within this context are dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/drop"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPath) Drop() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_DropPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_DropPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Drop (leaf): If set to true, packets within this context are dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/drop"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPathAny) Drop() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_DropPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_DropPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPath) SetDot1P() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDot1PPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDot1PPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPathAny) SetDot1P() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDot1PPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDot1PPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPath) SetDscp() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDscpPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPathAny) SetDscp() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDscpPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetDscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPath) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetMplsTcPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetMplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/exceed-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedActionPathAny) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetMplsTcPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ExceedAction_SetMplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_DropPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/drop YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_DropPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_DropPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/drop YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_DropPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDot1PPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDot1PPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDot1PPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-dot1p YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDot1PPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDscpPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDscpPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDscpPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-dscp YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDscpPathAny struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetMplsTcPath represents the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetMplsTcPath struct {
	*ygot.NodePath
}

// Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetMplsTcPathAny represents the wildcard version of the /openconfig-qos/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-mpls-tc YANG schema element.
type Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetMplsTcPathAny struct {
	*ygot.NodePath
}

// Drop (leaf): If set to true, packets within this context are dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/drop"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPath) Drop() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_DropPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_DropPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Drop (leaf): If set to true, packets within this context are dropped.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/drop"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/drop"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPathAny) Drop() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_DropPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_DropPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "drop"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPath) SetDot1P() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDot1PPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDot1PPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-dot1p"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPathAny) SetDot1P() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDot1PPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDot1PPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPath) SetDscp() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDscpPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-dscp"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPathAny) SetDscp() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDscpPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetDscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPath) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetMplsTcPath {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetMplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/scheduler-policies/scheduler-policy/schedulers/scheduler/two-rate-three-color/violate-action/state/set-mpls-tc"
func (n *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateActionPathAny) SetMplsTc() *Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetMplsTcPathAny {
	return &Qos_SchedulerPolicy_Scheduler_TwoRateThreeColor_ViolateAction_SetMplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}
