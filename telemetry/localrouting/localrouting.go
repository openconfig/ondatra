/*
Package localrouting is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /home/athena/go/pkg/mod/github.com/openconfig/ygot@v0.15.1/genutil/names.go
using the following YANG input files:
	- gnmi-collector-metadata.yang
	- public/release/models/acl/openconfig-acl.yang
	- public/release/models/acl/openconfig-packet-match.yang
	- public/release/models/aft/openconfig-aft.yang
	- public/release/models/ate/openconfig-ate-flow.yang
	- public/release/models/ate/openconfig-ate-intf.yang
	- public/release/models/bfd/openconfig-bfd.yang
	- public/release/models/bgp/openconfig-bgp-policy.yang
	- public/release/models/bgp/openconfig-bgp-types.yang
	- public/release/models/interfaces/openconfig-if-aggregate.yang
	- public/release/models/interfaces/openconfig-if-ethernet.yang
	- public/release/models/interfaces/openconfig-if-ip-ext.yang
	- public/release/models/interfaces/openconfig-if-ip.yang
	- public/release/models/interfaces/openconfig-interfaces.yang
	- public/release/models/isis/openconfig-isis.yang
	- public/release/models/lacp/openconfig-lacp.yang
	- public/release/models/lldp/openconfig-lldp-types.yang
	- public/release/models/lldp/openconfig-lldp.yang
	- public/release/models/local-routing/openconfig-local-routing.yang
	- public/release/models/mpls/openconfig-mpls-types.yang
	- public/release/models/multicast/openconfig-pim.yang
	- public/release/models/network-instance/openconfig-network-instance.yang
	- public/release/models/openconfig-extensions.yang
	- public/release/models/optical-transport/openconfig-transport-types.yang
	- public/release/models/ospf/openconfig-ospfv2.yang
	- public/release/models/platform/openconfig-platform-cpu.yang
	- public/release/models/platform/openconfig-platform-integrated-circuit.yang
	- public/release/models/platform/openconfig-platform-software.yang
	- public/release/models/platform/openconfig-platform-transceiver.yang
	- public/release/models/platform/openconfig-platform.yang
	- public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
	- public/release/models/policy/openconfig-policy-types.yang
	- public/release/models/qos/openconfig-qos-elements.yang
	- public/release/models/qos/openconfig-qos-interfaces.yang
	- public/release/models/qos/openconfig-qos-types.yang
	- public/release/models/qos/openconfig-qos.yang
	- public/release/models/rib/openconfig-rib-bgp.yang
	- public/release/models/segment-routing/openconfig-segment-routing-types.yang
	- public/release/models/system/openconfig-system.yang
	- public/release/models/types/openconfig-inet-types.yang
	- public/release/models/types/openconfig-types.yang
	- public/release/models/types/openconfig-yang-types.yang
	- public/release/models/vlan/openconfig-vlan.yang
	- public/third_party/ietf/iana-if-type.yang
	- public/third_party/ietf/ietf-inet-types.yang
	- public/third_party/ietf/ietf-interfaces.yang
	- public/third_party/ietf/ietf-yang-types.yang
Imported modules were sourced from:
	- public/release/models/...
	- public/third_party/ietf/...
*/
package localrouting

import (
	"github.com/openconfig/ygot/ygot"
)

// LocalRoutesPath represents the /openconfig-local-routing/local-routes YANG schema element.
type LocalRoutesPath struct {
	*ygot.NodePath
}

// LocalRoutesPathAny represents the wildcard version of the /openconfig-local-routing/local-routes YANG schema element.
type LocalRoutesPathAny struct {
	*ygot.NodePath
}

// AggregateAny (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/local-routes/local-aggregates/aggregate"
// Prefix (wildcarded): string
func (n *LocalRoutesPath) AggregateAny() *LocalRoutes_AggregatePathAny {
	return &LocalRoutes_AggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// AggregateAny (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/local-routes/local-aggregates/aggregate"
// Prefix (wildcarded): string
func (n *LocalRoutesPathAny) AggregateAny() *LocalRoutes_AggregatePathAny {
	return &LocalRoutes_AggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Aggregate (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/local-routes/local-aggregates/aggregate"
// Prefix: string
func (n *LocalRoutesPath) Aggregate(Prefix string) *LocalRoutes_AggregatePath {
	return &LocalRoutes_AggregatePath{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Aggregate (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/local-routes/local-aggregates/aggregate"
// Prefix: string
func (n *LocalRoutesPathAny) Aggregate(Prefix string) *LocalRoutes_AggregatePathAny {
	return &LocalRoutes_AggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// StaticAny (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "static-routes/static"
// Path from root: "/local-routes/static-routes/static"
// Prefix (wildcarded): string
func (n *LocalRoutesPath) StaticAny() *LocalRoutes_StaticPathAny {
	return &LocalRoutes_StaticPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// StaticAny (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "static-routes/static"
// Path from root: "/local-routes/static-routes/static"
// Prefix (wildcarded): string
func (n *LocalRoutesPathAny) StaticAny() *LocalRoutes_StaticPathAny {
	return &LocalRoutes_StaticPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Static (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "static-routes/static"
// Path from root: "/local-routes/static-routes/static"
// Prefix: string
func (n *LocalRoutesPath) Static(Prefix string) *LocalRoutes_StaticPath {
	return &LocalRoutes_StaticPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Static (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "static-routes/static"
// Path from root: "/local-routes/static-routes/static"
// Prefix: string
func (n *LocalRoutesPathAny) Static(Prefix string) *LocalRoutes_StaticPathAny {
	return &LocalRoutes_StaticPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// LocalRoutes_AggregatePath represents the /openconfig-local-routing/local-routes/local-aggregates/aggregate YANG schema element.
type LocalRoutes_AggregatePath struct {
	*ygot.NodePath
}

// LocalRoutes_AggregatePathAny represents the wildcard version of the /openconfig-local-routing/local-routes/local-aggregates/aggregate YANG schema element.
type LocalRoutes_AggregatePathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Aggregate_DescriptionPath represents the /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/description YANG schema element.
type LocalRoutes_Aggregate_DescriptionPath struct {
	*ygot.NodePath
}

// LocalRoutes_Aggregate_DescriptionPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/description YANG schema element.
type LocalRoutes_Aggregate_DescriptionPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Aggregate_DiscardPath represents the /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/discard YANG schema element.
type LocalRoutes_Aggregate_DiscardPath struct {
	*ygot.NodePath
}

// LocalRoutes_Aggregate_DiscardPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/discard YANG schema element.
type LocalRoutes_Aggregate_DiscardPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Aggregate_PrefixPath represents the /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/prefix YANG schema element.
type LocalRoutes_Aggregate_PrefixPath struct {
	*ygot.NodePath
}

// LocalRoutes_Aggregate_PrefixPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/prefix YANG schema element.
type LocalRoutes_Aggregate_PrefixPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Aggregate_SetTagPath represents the /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/set-tag YANG schema element.
type LocalRoutes_Aggregate_SetTagPath struct {
	*ygot.NodePath
}

// LocalRoutes_Aggregate_SetTagPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/local-aggregates/aggregate/state/set-tag YANG schema element.
type LocalRoutes_Aggregate_SetTagPathAny struct {
	*ygot.NodePath
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/description"
// Path from root: "/local-routes/local-aggregates/aggregate/state/description"
func (n *LocalRoutes_AggregatePath) Description() *LocalRoutes_Aggregate_DescriptionPath {
	return &LocalRoutes_Aggregate_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/description"
// Path from root: "/local-routes/local-aggregates/aggregate/state/description"
func (n *LocalRoutes_AggregatePathAny) Description() *LocalRoutes_Aggregate_DescriptionPathAny {
	return &LocalRoutes_Aggregate_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When true, install the aggregate route with a discard
// next-hop -- traffic destined to the aggregate will be
// discarded with no ICMP message generated.  When false,
// traffic destined to an aggregate address when no
// constituent routes are present will generate an ICMP
// unreachable message.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/discard"
// Path from root: "/local-routes/local-aggregates/aggregate/state/discard"
func (n *LocalRoutes_AggregatePath) Discard() *LocalRoutes_Aggregate_DiscardPath {
	return &LocalRoutes_Aggregate_DiscardPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When true, install the aggregate route with a discard
// next-hop -- traffic destined to the aggregate will be
// discarded with no ICMP message generated.  When false,
// traffic destined to an aggregate address when no
// constituent routes are present will generate an ICMP
// unreachable message.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/discard"
// Path from root: "/local-routes/local-aggregates/aggregate/state/discard"
func (n *LocalRoutes_AggregatePathAny) Discard() *LocalRoutes_Aggregate_DiscardPathAny {
	return &LocalRoutes_Aggregate_DiscardPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Aggregate prefix to be advertised
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/prefix"
// Path from root: "/local-routes/local-aggregates/aggregate/state/prefix"
func (n *LocalRoutes_AggregatePath) Prefix() *LocalRoutes_Aggregate_PrefixPath {
	return &LocalRoutes_Aggregate_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Aggregate prefix to be advertised
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/prefix"
// Path from root: "/local-routes/local-aggregates/aggregate/state/prefix"
func (n *LocalRoutes_AggregatePathAny) Prefix() *LocalRoutes_Aggregate_PrefixPathAny {
	return &LocalRoutes_Aggregate_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/set-tag"
// Path from root: "/local-routes/local-aggregates/aggregate/state/set-tag"
func (n *LocalRoutes_AggregatePath) SetTag() *LocalRoutes_Aggregate_SetTagPath {
	return &LocalRoutes_Aggregate_SetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/set-tag"
// Path from root: "/local-routes/local-aggregates/aggregate/state/set-tag"
func (n *LocalRoutes_AggregatePathAny) SetTag() *LocalRoutes_Aggregate_SetTagPathAny {
	return &LocalRoutes_Aggregate_SetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalRoutes_StaticPath represents the /openconfig-local-routing/local-routes/static-routes/static YANG schema element.
type LocalRoutes_StaticPath struct {
	*ygot.NodePath
}

// LocalRoutes_StaticPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static YANG schema element.
type LocalRoutes_StaticPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_DescriptionPath represents the /openconfig-local-routing/local-routes/static-routes/static/state/description YANG schema element.
type LocalRoutes_Static_DescriptionPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_DescriptionPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/state/description YANG schema element.
type LocalRoutes_Static_DescriptionPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_PrefixPath represents the /openconfig-local-routing/local-routes/static-routes/static/state/prefix YANG schema element.
type LocalRoutes_Static_PrefixPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_PrefixPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/state/prefix YANG schema element.
type LocalRoutes_Static_PrefixPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_SetTagPath represents the /openconfig-local-routing/local-routes/static-routes/static/state/set-tag YANG schema element.
type LocalRoutes_Static_SetTagPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_SetTagPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/state/set-tag YANG schema element.
type LocalRoutes_Static_SetTagPathAny struct {
	*ygot.NodePath
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/description"
// Path from root: "/local-routes/static-routes/static/state/description"
func (n *LocalRoutes_StaticPath) Description() *LocalRoutes_Static_DescriptionPath {
	return &LocalRoutes_Static_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/description"
// Path from root: "/local-routes/static-routes/static/state/description"
func (n *LocalRoutes_StaticPathAny) Description() *LocalRoutes_Static_DescriptionPathAny {
	return &LocalRoutes_Static_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "next-hops/next-hop"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *LocalRoutes_StaticPath) NextHopAny() *LocalRoutes_Static_NextHopPathAny {
	return &LocalRoutes_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "next-hops/next-hop"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *LocalRoutes_StaticPathAny) NextHopAny() *LocalRoutes_Static_NextHopPathAny {
	return &LocalRoutes_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "next-hops/next-hop"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop"
// Index: string
func (n *LocalRoutes_StaticPath) NextHop(Index string) *LocalRoutes_Static_NextHopPath {
	return &LocalRoutes_Static_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "next-hops/next-hop"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop"
// Index: string
func (n *LocalRoutes_StaticPathAny) NextHop(Index string) *LocalRoutes_Static_NextHopPathAny {
	return &LocalRoutes_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/prefix"
// Path from root: "/local-routes/static-routes/static/state/prefix"
func (n *LocalRoutes_StaticPath) Prefix() *LocalRoutes_Static_PrefixPath {
	return &LocalRoutes_Static_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/prefix"
// Path from root: "/local-routes/static-routes/static/state/prefix"
func (n *LocalRoutes_StaticPathAny) Prefix() *LocalRoutes_Static_PrefixPathAny {
	return &LocalRoutes_Static_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/set-tag"
// Path from root: "/local-routes/static-routes/static/state/set-tag"
func (n *LocalRoutes_StaticPath) SetTag() *LocalRoutes_Static_SetTagPath {
	return &LocalRoutes_Static_SetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/set-tag"
// Path from root: "/local-routes/static-routes/static/state/set-tag"
func (n *LocalRoutes_StaticPathAny) SetTag() *LocalRoutes_Static_SetTagPathAny {
	return &LocalRoutes_Static_SetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalRoutes_Static_NextHopPath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop YANG schema element.
type LocalRoutes_Static_NextHopPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHopPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop YANG schema element.
type LocalRoutes_Static_NextHopPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_IndexPath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/index YANG schema element.
type LocalRoutes_Static_NextHop_IndexPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_IndexPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/index YANG schema element.
type LocalRoutes_Static_NextHop_IndexPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_MetricPath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/metric YANG schema element.
type LocalRoutes_Static_NextHop_MetricPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_MetricPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/metric YANG schema element.
type LocalRoutes_Static_NextHop_MetricPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_NextHopPath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/next-hop YANG schema element.
type LocalRoutes_Static_NextHop_NextHopPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_NextHopPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/next-hop YANG schema element.
type LocalRoutes_Static_NextHop_NextHopPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_RecursePath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/recurse YANG schema element.
type LocalRoutes_Static_NextHop_RecursePath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_RecursePathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/state/recurse YANG schema element.
type LocalRoutes_Static_NextHop_RecursePathAny struct {
	*ygot.NodePath
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "enable-bfd"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *LocalRoutes_Static_NextHopPath) EnableBfd() *LocalRoutes_Static_NextHop_EnableBfdPath {
	return &LocalRoutes_Static_NextHop_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "enable-bfd"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *LocalRoutes_Static_NextHopPathAny) EnableBfd() *LocalRoutes_Static_NextHop_EnableBfdPathAny {
	return &LocalRoutes_Static_NextHop_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/index"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/state/index"
func (n *LocalRoutes_Static_NextHopPath) Index() *LocalRoutes_Static_NextHop_IndexPath {
	return &LocalRoutes_Static_NextHop_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/index"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/state/index"
func (n *LocalRoutes_Static_NextHopPathAny) Index() *LocalRoutes_Static_NextHop_IndexPathAny {
	return &LocalRoutes_Static_NextHop_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "interface-ref"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/interface-ref"
func (n *LocalRoutes_Static_NextHopPath) InterfaceRef() *LocalRoutes_Static_NextHop_InterfaceRefPath {
	return &LocalRoutes_Static_NextHop_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "interface-ref"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/interface-ref"
func (n *LocalRoutes_Static_NextHopPathAny) InterfaceRef() *LocalRoutes_Static_NextHop_InterfaceRefPathAny {
	return &LocalRoutes_Static_NextHop_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric which is utilised to specify the preference of
// the next-hop entry when it is injected into the RIB. The
// lower the metric, the more preferable the prefix is. When
// this value is not specified the metric is inherited from
// the default metric utilised for static routes within the
// network instance that the static routes are being
// instantiated. When multiple next-hops are specified for a
// static route, the metric is utilised to determine which of
// the next-hops is to be installed in the RIB. When multiple
// next-hops have the same metric (be it specified, or simply
// the default) then these next-hops should all be installed
// in the RIB
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/metric"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/state/metric"
func (n *LocalRoutes_Static_NextHopPath) Metric() *LocalRoutes_Static_NextHop_MetricPath {
	return &LocalRoutes_Static_NextHop_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric which is utilised to specify the preference of
// the next-hop entry when it is injected into the RIB. The
// lower the metric, the more preferable the prefix is. When
// this value is not specified the metric is inherited from
// the default metric utilised for static routes within the
// network instance that the static routes are being
// instantiated. When multiple next-hops are specified for a
// static route, the metric is utilised to determine which of
// the next-hops is to be installed in the RIB. When multiple
// next-hops have the same metric (be it specified, or simply
// the default) then these next-hops should all be installed
// in the RIB
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/metric"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/state/metric"
func (n *LocalRoutes_Static_NextHopPathAny) Metric() *LocalRoutes_Static_NextHop_MetricPathAny {
	return &LocalRoutes_Static_NextHop_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/next-hop"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/state/next-hop"
func (n *LocalRoutes_Static_NextHopPath) NextHop() *LocalRoutes_Static_NextHop_NextHopPath {
	return &LocalRoutes_Static_NextHop_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/next-hop"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/state/next-hop"
func (n *LocalRoutes_Static_NextHopPathAny) NextHop() *LocalRoutes_Static_NextHop_NextHopPathAny {
	return &LocalRoutes_Static_NextHop_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/recurse"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/state/recurse"
func (n *LocalRoutes_Static_NextHopPath) Recurse() *LocalRoutes_Static_NextHop_RecursePath {
	return &LocalRoutes_Static_NextHop_RecursePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/recurse"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/state/recurse"
func (n *LocalRoutes_Static_NextHopPathAny) Recurse() *LocalRoutes_Static_NextHop_RecursePathAny {
	return &LocalRoutes_Static_NextHop_RecursePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalRoutes_Static_NextHop_EnableBfdPath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type LocalRoutes_Static_NextHop_EnableBfdPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_EnableBfdPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type LocalRoutes_Static_NextHop_EnableBfdPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_EnableBfd_EnabledPath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled YANG schema element.
type LocalRoutes_Static_NextHop_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled YANG schema element.
type LocalRoutes_Static_NextHop_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/enabled"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled"
func (n *LocalRoutes_Static_NextHop_EnableBfdPath) Enabled() *LocalRoutes_Static_NextHop_EnableBfd_EnabledPath {
	return &LocalRoutes_Static_NextHop_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/enabled"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled"
func (n *LocalRoutes_Static_NextHop_EnableBfdPathAny) Enabled() *LocalRoutes_Static_NextHop_EnableBfd_EnabledPathAny {
	return &LocalRoutes_Static_NextHop_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalRoutes_Static_NextHop_InterfaceRefPath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type LocalRoutes_Static_NextHop_InterfaceRefPath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_InterfaceRefPathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type LocalRoutes_Static_NextHop_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_InterfaceRef_InterfacePath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type LocalRoutes_Static_NextHop_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type LocalRoutes_Static_NextHop_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_InterfaceRef_SubinterfacePath represents the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type LocalRoutes_Static_NextHop_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// LocalRoutes_Static_NextHop_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-local-routing/local-routes/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type LocalRoutes_Static_NextHop_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/interface"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/interface-ref/state/interface"
func (n *LocalRoutes_Static_NextHop_InterfaceRefPath) Interface() *LocalRoutes_Static_NextHop_InterfaceRef_InterfacePath {
	return &LocalRoutes_Static_NextHop_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/interface"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/interface-ref/state/interface"
func (n *LocalRoutes_Static_NextHop_InterfaceRefPathAny) Interface() *LocalRoutes_Static_NextHop_InterfaceRef_InterfacePathAny {
	return &LocalRoutes_Static_NextHop_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/subinterface"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface"
func (n *LocalRoutes_Static_NextHop_InterfaceRefPath) Subinterface() *LocalRoutes_Static_NextHop_InterfaceRef_SubinterfacePath {
	return &LocalRoutes_Static_NextHop_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-local-routing"
// Path from parent: "state/subinterface"
// Path from root: "/local-routes/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface"
func (n *LocalRoutes_Static_NextHop_InterfaceRefPathAny) Subinterface() *LocalRoutes_Static_NextHop_InterfaceRef_SubinterfacePathAny {
	return &LocalRoutes_Static_NextHop_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}
