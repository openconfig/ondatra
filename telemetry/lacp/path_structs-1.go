/*
Package lacp is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/alexmasi/go/pkg/mod/github.com/openconfig/ygot@v0.23.1/genutil/names.go
using the following YANG input files:
  - gnmi-collector-metadata.yang
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/ate/openconfig-ate-flow.yang
  - public/release/models/ate/openconfig-ate-intf.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/p4rt/openconfig-p4rt.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-fan.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package lacp

import (
	"github.com/openconfig/ygot/ygot"
)

// Lacp_Interface_MemberPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member YANG schema element.
type Lacp_Interface_MemberPath struct {
	*ygot.NodePath
}

// Lacp_Interface_MemberPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member YANG schema element.
type Lacp_Interface_MemberPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_ActivityPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/activity YANG schema element.
type Lacp_Interface_Member_ActivityPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_ActivityPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/activity YANG schema element.
type Lacp_Interface_Member_ActivityPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_AggregatablePath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/aggregatable YANG schema element.
type Lacp_Interface_Member_AggregatablePath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_AggregatablePathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/aggregatable YANG schema element.
type Lacp_Interface_Member_AggregatablePathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_CollectingPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/collecting YANG schema element.
type Lacp_Interface_Member_CollectingPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_CollectingPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/collecting YANG schema element.
type Lacp_Interface_Member_CollectingPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_DistributingPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/distributing YANG schema element.
type Lacp_Interface_Member_DistributingPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_DistributingPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/distributing YANG schema element.
type Lacp_Interface_Member_DistributingPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_InterfacePath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/interface YANG schema element.
type Lacp_Interface_Member_InterfacePath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_InterfacePathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/interface YANG schema element.
type Lacp_Interface_Member_InterfacePathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_LastChangePath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/last-change YANG schema element.
type Lacp_Interface_Member_LastChangePath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_LastChangePathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/last-change YANG schema element.
type Lacp_Interface_Member_LastChangePathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_OperKeyPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/oper-key YANG schema element.
type Lacp_Interface_Member_OperKeyPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_OperKeyPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/oper-key YANG schema element.
type Lacp_Interface_Member_OperKeyPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_PartnerIdPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/partner-id YANG schema element.
type Lacp_Interface_Member_PartnerIdPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_PartnerIdPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/partner-id YANG schema element.
type Lacp_Interface_Member_PartnerIdPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_PartnerKeyPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/partner-key YANG schema element.
type Lacp_Interface_Member_PartnerKeyPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_PartnerKeyPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/partner-key YANG schema element.
type Lacp_Interface_Member_PartnerKeyPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_PartnerPortNumPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/partner-port-num YANG schema element.
type Lacp_Interface_Member_PartnerPortNumPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_PartnerPortNumPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/partner-port-num YANG schema element.
type Lacp_Interface_Member_PartnerPortNumPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_PortNumPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/port-num YANG schema element.
type Lacp_Interface_Member_PortNumPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_PortNumPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/port-num YANG schema element.
type Lacp_Interface_Member_PortNumPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_SynchronizationPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/synchronization YANG schema element.
type Lacp_Interface_Member_SynchronizationPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_SynchronizationPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/synchronization YANG schema element.
type Lacp_Interface_Member_SynchronizationPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_SystemIdPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/system-id YANG schema element.
type Lacp_Interface_Member_SystemIdPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_SystemIdPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/system-id YANG schema element.
type Lacp_Interface_Member_SystemIdPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_TimeoutPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/timeout YANG schema element.
type Lacp_Interface_Member_TimeoutPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_TimeoutPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/timeout YANG schema element.
type Lacp_Interface_Member_TimeoutPathAny struct {
	*ygot.NodePath
}

// Activity (leaf): Indicates participant is active or passive
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/activity"
// Path from root: "/lacp/interfaces/interface/members/member/state/activity"
func (n *Lacp_Interface_MemberPath) Activity() *Lacp_Interface_Member_ActivityPath {
	return &Lacp_Interface_Member_ActivityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "activity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Activity (leaf): Indicates participant is active or passive
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/activity"
// Path from root: "/lacp/interfaces/interface/members/member/state/activity"
func (n *Lacp_Interface_MemberPathAny) Activity() *Lacp_Interface_Member_ActivityPathAny {
	return &Lacp_Interface_Member_ActivityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "activity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aggregatable (leaf): A true value indicates that the participant will allow
// the link to be used as part of the aggregate. A false
// value indicates the link should be used as an individual
// link
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/aggregatable"
// Path from root: "/lacp/interfaces/interface/members/member/state/aggregatable"
func (n *Lacp_Interface_MemberPath) Aggregatable() *Lacp_Interface_Member_AggregatablePath {
	return &Lacp_Interface_Member_AggregatablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "aggregatable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aggregatable (leaf): A true value indicates that the participant will allow
// the link to be used as part of the aggregate. A false
// value indicates the link should be used as an individual
// link
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/aggregatable"
// Path from root: "/lacp/interfaces/interface/members/member/state/aggregatable"
func (n *Lacp_Interface_MemberPathAny) Aggregatable() *Lacp_Interface_Member_AggregatablePathAny {
	return &Lacp_Interface_Member_AggregatablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "aggregatable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Collecting (leaf): If true, the participant is collecting incoming frames
// on the link, otherwise false
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/collecting"
// Path from root: "/lacp/interfaces/interface/members/member/state/collecting"
func (n *Lacp_Interface_MemberPath) Collecting() *Lacp_Interface_Member_CollectingPath {
	return &Lacp_Interface_Member_CollectingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "collecting"},
			map[string]interface{}{},
			n,
		),
	}
}

// Collecting (leaf): If true, the participant is collecting incoming frames
// on the link, otherwise false
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/collecting"
// Path from root: "/lacp/interfaces/interface/members/member/state/collecting"
func (n *Lacp_Interface_MemberPathAny) Collecting() *Lacp_Interface_Member_CollectingPathAny {
	return &Lacp_Interface_Member_CollectingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "collecting"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): LACP protocol counters
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/counters"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters"
func (n *Lacp_Interface_MemberPath) Counters() *Lacp_Interface_Member_CountersPath {
	return &Lacp_Interface_Member_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): LACP protocol counters
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/counters"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters"
func (n *Lacp_Interface_MemberPathAny) Counters() *Lacp_Interface_Member_CountersPathAny {
	return &Lacp_Interface_Member_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Distributing (leaf): When true, the participant is distributing outgoing
// frames; when false, distribution is disabled
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/distributing"
// Path from root: "/lacp/interfaces/interface/members/member/state/distributing"
func (n *Lacp_Interface_MemberPath) Distributing() *Lacp_Interface_Member_DistributingPath {
	return &Lacp_Interface_Member_DistributingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "distributing"},
			map[string]interface{}{},
			n,
		),
	}
}

// Distributing (leaf): When true, the participant is distributing outgoing
// frames; when false, distribution is disabled
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/distributing"
// Path from root: "/lacp/interfaces/interface/members/member/state/distributing"
func (n *Lacp_Interface_MemberPathAny) Distributing() *Lacp_Interface_Member_DistributingPathAny {
	return &Lacp_Interface_Member_DistributingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "distributing"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to interface member of the LACP aggregate
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/interface"
// Path from root: "/lacp/interfaces/interface/members/member/state/interface"
func (n *Lacp_Interface_MemberPath) Interface() *Lacp_Interface_Member_InterfacePath {
	return &Lacp_Interface_Member_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to interface member of the LACP aggregate
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/interface"
// Path from root: "/lacp/interfaces/interface/members/member/state/interface"
func (n *Lacp_Interface_MemberPathAny) Interface() *Lacp_Interface_Member_InterfacePathAny {
	return &Lacp_Interface_Member_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastChange (leaf): The timestamp indicates the absolute time of the last state
// change of a LACP timeout. The last state change of the LACP
// timeout is defined as what is reported as the operating state
// to the system. The state change is both a timeout event and
// when the timeout event is no longer active. The value is the
// timestamp in nanoseconds relative to the Unix Epoch
// (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/last-change"
// Path from root: "/lacp/interfaces/interface/members/member/state/last-change"
func (n *Lacp_Interface_MemberPath) LastChange() *Lacp_Interface_Member_LastChangePath {
	return &Lacp_Interface_Member_LastChangePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-change"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastChange (leaf): The timestamp indicates the absolute time of the last state
// change of a LACP timeout. The last state change of the LACP
// timeout is defined as what is reported as the operating state
// to the system. The state change is both a timeout event and
// when the timeout event is no longer active. The value is the
// timestamp in nanoseconds relative to the Unix Epoch
// (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/last-change"
// Path from root: "/lacp/interfaces/interface/members/member/state/last-change"
func (n *Lacp_Interface_MemberPathAny) LastChange() *Lacp_Interface_Member_LastChangePathAny {
	return &Lacp_Interface_Member_LastChangePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-change"},
			map[string]interface{}{},
			n,
		),
	}
}

// OperKey (leaf): Current operational value of the key for the aggregate
// interface
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/oper-key"
// Path from root: "/lacp/interfaces/interface/members/member/state/oper-key"
func (n *Lacp_Interface_MemberPath) OperKey() *Lacp_Interface_Member_OperKeyPath {
	return &Lacp_Interface_Member_OperKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "oper-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// OperKey (leaf): Current operational value of the key for the aggregate
// interface
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/oper-key"
// Path from root: "/lacp/interfaces/interface/members/member/state/oper-key"
func (n *Lacp_Interface_MemberPathAny) OperKey() *Lacp_Interface_Member_OperKeyPathAny {
	return &Lacp_Interface_Member_OperKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "oper-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartnerId (leaf): MAC address representing the protocol partner's interface
// system ID
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/partner-id"
// Path from root: "/lacp/interfaces/interface/members/member/state/partner-id"
func (n *Lacp_Interface_MemberPath) PartnerId() *Lacp_Interface_Member_PartnerIdPath {
	return &Lacp_Interface_Member_PartnerIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partner-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartnerId (leaf): MAC address representing the protocol partner's interface
// system ID
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/partner-id"
// Path from root: "/lacp/interfaces/interface/members/member/state/partner-id"
func (n *Lacp_Interface_MemberPathAny) PartnerId() *Lacp_Interface_Member_PartnerIdPathAny {
	return &Lacp_Interface_Member_PartnerIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partner-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartnerKey (leaf): Operational value of the protocol partner's key
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/partner-key"
// Path from root: "/lacp/interfaces/interface/members/member/state/partner-key"
func (n *Lacp_Interface_MemberPath) PartnerKey() *Lacp_Interface_Member_PartnerKeyPath {
	return &Lacp_Interface_Member_PartnerKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partner-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartnerKey (leaf): Operational value of the protocol partner's key
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/partner-key"
// Path from root: "/lacp/interfaces/interface/members/member/state/partner-key"
func (n *Lacp_Interface_MemberPathAny) PartnerKey() *Lacp_Interface_Member_PartnerKeyPathAny {
	return &Lacp_Interface_Member_PartnerKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partner-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartnerPortNum (leaf): Port number of the partner (remote) port for this member
// port
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/partner-port-num"
// Path from root: "/lacp/interfaces/interface/members/member/state/partner-port-num"
func (n *Lacp_Interface_MemberPath) PartnerPortNum() *Lacp_Interface_Member_PartnerPortNumPath {
	return &Lacp_Interface_Member_PartnerPortNumPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partner-port-num"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartnerPortNum (leaf): Port number of the partner (remote) port for this member
// port
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/partner-port-num"
// Path from root: "/lacp/interfaces/interface/members/member/state/partner-port-num"
func (n *Lacp_Interface_MemberPathAny) PartnerPortNum() *Lacp_Interface_Member_PartnerPortNumPathAny {
	return &Lacp_Interface_Member_PartnerPortNumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partner-port-num"},
			map[string]interface{}{},
			n,
		),
	}
}

// PortNum (leaf): Port number of the local (actor) aggregation member
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/port-num"
// Path from root: "/lacp/interfaces/interface/members/member/state/port-num"
func (n *Lacp_Interface_MemberPath) PortNum() *Lacp_Interface_Member_PortNumPath {
	return &Lacp_Interface_Member_PortNumPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "port-num"},
			map[string]interface{}{},
			n,
		),
	}
}

// PortNum (leaf): Port number of the local (actor) aggregation member
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/port-num"
// Path from root: "/lacp/interfaces/interface/members/member/state/port-num"
func (n *Lacp_Interface_MemberPathAny) PortNum() *Lacp_Interface_Member_PortNumPathAny {
	return &Lacp_Interface_Member_PortNumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "port-num"},
			map[string]interface{}{},
			n,
		),
	}
}

// Synchronization (leaf): Indicates whether the participant is in-sync or
// out-of-sync
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/synchronization"
// Path from root: "/lacp/interfaces/interface/members/member/state/synchronization"
func (n *Lacp_Interface_MemberPath) Synchronization() *Lacp_Interface_Member_SynchronizationPath {
	return &Lacp_Interface_Member_SynchronizationPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "synchronization"},
			map[string]interface{}{},
			n,
		),
	}
}

// Synchronization (leaf): Indicates whether the participant is in-sync or
// out-of-sync
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/synchronization"
// Path from root: "/lacp/interfaces/interface/members/member/state/synchronization"
func (n *Lacp_Interface_MemberPathAny) Synchronization() *Lacp_Interface_Member_SynchronizationPathAny {
	return &Lacp_Interface_Member_SynchronizationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "synchronization"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): MAC address that defines the local system ID for the
// aggregate interface
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/system-id"
// Path from root: "/lacp/interfaces/interface/members/member/state/system-id"
func (n *Lacp_Interface_MemberPath) SystemId() *Lacp_Interface_Member_SystemIdPath {
	return &Lacp_Interface_Member_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): MAC address that defines the local system ID for the
// aggregate interface
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/system-id"
// Path from root: "/lacp/interfaces/interface/members/member/state/system-id"
func (n *Lacp_Interface_MemberPathAny) SystemId() *Lacp_Interface_Member_SystemIdPathAny {
	return &Lacp_Interface_Member_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The timeout type (short or long) used by the
// participant
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/timeout"
// Path from root: "/lacp/interfaces/interface/members/member/state/timeout"
func (n *Lacp_Interface_MemberPath) Timeout() *Lacp_Interface_Member_TimeoutPath {
	return &Lacp_Interface_Member_TimeoutPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The timeout type (short or long) used by the
// participant
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/timeout"
// Path from root: "/lacp/interfaces/interface/members/member/state/timeout"
func (n *Lacp_Interface_MemberPathAny) Timeout() *Lacp_Interface_Member_TimeoutPathAny {
	return &Lacp_Interface_Member_TimeoutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lacp_Interface_Member_CountersPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters YANG schema element.
type Lacp_Interface_Member_CountersPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_CountersPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters YANG schema element.
type Lacp_Interface_Member_CountersPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpErrorsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpErrorsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpErrorsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpErrorsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpInPktsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts YANG schema element.
type Lacp_Interface_Member_Counters_LacpInPktsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpInPktsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts YANG schema element.
type Lacp_Interface_Member_Counters_LacpInPktsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpOutPktsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts YANG schema element.
type Lacp_Interface_Member_Counters_LacpOutPktsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpOutPktsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts YANG schema element.
type Lacp_Interface_Member_Counters_LacpOutPktsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpRxErrorsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpRxErrorsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpRxErrorsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpRxErrorsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-timeout-transitions YANG schema element.
type Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-timeout-transitions YANG schema element.
type Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpTxErrorsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpTxErrorsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpTxErrorsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpTxErrorsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpUnknownErrorsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpUnknownErrorsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpUnknownErrorsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpUnknownErrorsPathAny struct {
	*ygot.NodePath
}

// LacpErrors (leaf): Number of LACPDU illegal packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-errors"
func (n *Lacp_Interface_Member_CountersPath) LacpErrors() *Lacp_Interface_Member_Counters_LacpErrorsPath {
	return &Lacp_Interface_Member_Counters_LacpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpErrors (leaf): Number of LACPDU illegal packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-errors"
func (n *Lacp_Interface_Member_CountersPathAny) LacpErrors() *Lacp_Interface_Member_Counters_LacpErrorsPathAny {
	return &Lacp_Interface_Member_Counters_LacpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpInPkts (leaf): Number of LACPDUs received
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-in-pkts"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts"
func (n *Lacp_Interface_Member_CountersPath) LacpInPkts() *Lacp_Interface_Member_Counters_LacpInPktsPath {
	return &Lacp_Interface_Member_Counters_LacpInPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpInPkts (leaf): Number of LACPDUs received
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-in-pkts"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts"
func (n *Lacp_Interface_Member_CountersPathAny) LacpInPkts() *Lacp_Interface_Member_Counters_LacpInPktsPathAny {
	return &Lacp_Interface_Member_Counters_LacpInPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpOutPkts (leaf): Number of LACPDUs transmitted
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-out-pkts"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts"
func (n *Lacp_Interface_Member_CountersPath) LacpOutPkts() *Lacp_Interface_Member_Counters_LacpOutPktsPath {
	return &Lacp_Interface_Member_Counters_LacpOutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpOutPkts (leaf): Number of LACPDUs transmitted
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-out-pkts"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts"
func (n *Lacp_Interface_Member_CountersPathAny) LacpOutPkts() *Lacp_Interface_Member_Counters_LacpOutPktsPathAny {
	return &Lacp_Interface_Member_Counters_LacpOutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpRxErrors (leaf): Number of LACPDU receive packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-rx-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors"
func (n *Lacp_Interface_Member_CountersPath) LacpRxErrors() *Lacp_Interface_Member_Counters_LacpRxErrorsPath {
	return &Lacp_Interface_Member_Counters_LacpRxErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-rx-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpRxErrors (leaf): Number of LACPDU receive packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-rx-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors"
func (n *Lacp_Interface_Member_CountersPathAny) LacpRxErrors() *Lacp_Interface_Member_Counters_LacpRxErrorsPathAny {
	return &Lacp_Interface_Member_Counters_LacpRxErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-rx-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpTimeoutTransitions (leaf): Number of times the LACP state has transitioned
// with a timeout since the time the device restarted
// or the interface was brought up, whichever is most
// recent. The last state change of the LACP timeout
// is defined as what is reported as the operating state
// to the system. The state change is both a timeout
// event and when the timeout event is no longer active.
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-timeout-transitions"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-timeout-transitions"
func (n *Lacp_Interface_Member_CountersPath) LacpTimeoutTransitions() *Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPath {
	return &Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-timeout-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpTimeoutTransitions (leaf): Number of times the LACP state has transitioned
// with a timeout since the time the device restarted
// or the interface was brought up, whichever is most
// recent. The last state change of the LACP timeout
// is defined as what is reported as the operating state
// to the system. The state change is both a timeout
// event and when the timeout event is no longer active.
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-timeout-transitions"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-timeout-transitions"
func (n *Lacp_Interface_Member_CountersPathAny) LacpTimeoutTransitions() *Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPathAny {
	return &Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-timeout-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpTxErrors (leaf): Number of LACPDU transmit packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-tx-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors"
func (n *Lacp_Interface_Member_CountersPath) LacpTxErrors() *Lacp_Interface_Member_Counters_LacpTxErrorsPath {
	return &Lacp_Interface_Member_Counters_LacpTxErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-tx-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpTxErrors (leaf): Number of LACPDU transmit packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-tx-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors"
func (n *Lacp_Interface_Member_CountersPathAny) LacpTxErrors() *Lacp_Interface_Member_Counters_LacpTxErrorsPathAny {
	return &Lacp_Interface_Member_Counters_LacpTxErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-tx-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpUnknownErrors (leaf): Number of LACPDU unknown packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-unknown-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors"
func (n *Lacp_Interface_Member_CountersPath) LacpUnknownErrors() *Lacp_Interface_Member_Counters_LacpUnknownErrorsPath {
	return &Lacp_Interface_Member_Counters_LacpUnknownErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-unknown-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpUnknownErrors (leaf): Number of LACPDU unknown packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-unknown-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors"
func (n *Lacp_Interface_Member_CountersPathAny) LacpUnknownErrors() *Lacp_Interface_Member_Counters_LacpUnknownErrorsPathAny {
	return &Lacp_Interface_Member_Counters_LacpUnknownErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-unknown-errors"},
			map[string]interface{}{},
			n,
		),
	}
}
