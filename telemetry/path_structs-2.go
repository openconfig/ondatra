/*
Package telemetry is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /home/athena/go/pkg/mod/github.com/openconfig/ygot@v0.17.0/genutil/names.go
using the following YANG input files:
	- gnmi-collector-metadata.yang
	- public/release/models/acl/openconfig-acl.yang
	- public/release/models/acl/openconfig-packet-match.yang
	- public/release/models/aft/openconfig-aft.yang
	- public/release/models/ate/openconfig-ate-flow.yang
	- public/release/models/ate/openconfig-ate-intf.yang
	- public/release/models/bfd/openconfig-bfd.yang
	- public/release/models/bgp/openconfig-bgp-policy.yang
	- public/release/models/bgp/openconfig-bgp-types.yang
	- public/release/models/interfaces/openconfig-if-aggregate.yang
	- public/release/models/interfaces/openconfig-if-ethernet.yang
	- public/release/models/interfaces/openconfig-if-ip-ext.yang
	- public/release/models/interfaces/openconfig-if-ip.yang
	- public/release/models/interfaces/openconfig-interfaces.yang
	- public/release/models/isis/openconfig-isis.yang
	- public/release/models/lacp/openconfig-lacp.yang
	- public/release/models/lldp/openconfig-lldp-types.yang
	- public/release/models/lldp/openconfig-lldp.yang
	- public/release/models/local-routing/openconfig-local-routing.yang
	- public/release/models/mpls/openconfig-mpls-types.yang
	- public/release/models/multicast/openconfig-pim.yang
	- public/release/models/network-instance/openconfig-network-instance.yang
	- public/release/models/openconfig-extensions.yang
	- public/release/models/optical-transport/openconfig-transport-types.yang
	- public/release/models/ospf/openconfig-ospfv2.yang
	- public/release/models/platform/openconfig-platform-cpu.yang
	- public/release/models/platform/openconfig-platform-fan.yang
	- public/release/models/platform/openconfig-platform-integrated-circuit.yang
	- public/release/models/platform/openconfig-platform-software.yang
	- public/release/models/platform/openconfig-platform-transceiver.yang
	- public/release/models/platform/openconfig-platform.yang
	- public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
	- public/release/models/policy/openconfig-policy-types.yang
	- public/release/models/qos/openconfig-qos-elements.yang
	- public/release/models/qos/openconfig-qos-interfaces.yang
	- public/release/models/qos/openconfig-qos-types.yang
	- public/release/models/qos/openconfig-qos.yang
	- public/release/models/rib/openconfig-rib-bgp.yang
	- public/release/models/segment-routing/openconfig-segment-routing-types.yang
	- public/release/models/system/openconfig-system.yang
	- public/release/models/types/openconfig-inet-types.yang
	- public/release/models/types/openconfig-types.yang
	- public/release/models/types/openconfig-yang-types.yang
	- public/release/models/vlan/openconfig-vlan.yang
	- public/third_party/ietf/iana-if-type.yang
	- public/third_party/ietf/ietf-inet-types.yang
	- public/third_party/ietf/ietf-interfaces.yang
	- public/third_party/ietf/ietf-yang-types.yang
Imported modules were sourced from:
	- public/release/models/...
	- public/third_party/ietf/...
*/
package telemetry

import (
	"github.com/openconfig/ygot/ygot"
)

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/exclude-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/exclude-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/include-all-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/include-all-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/include-any-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/include-any-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPathAny struct {
	*ygot.NodePath
}

// ExcludeGroup (leaf): list of references to named admin-groups to exclude in
// path calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exclude-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/exclude-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath) ExcludeGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exclude-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExcludeGroup (leaf): list of references to named admin-groups to exclude in
// path calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exclude-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/exclude-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny) ExcludeGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_ExcludeGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exclude-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAllGroup (leaf): list of references to named admin-groups of which all must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include-all-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/include-all-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath) IncludeAllGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include-all-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAllGroup (leaf): list of references to named admin-groups of which all must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include-all-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/include-all-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny) IncludeAllGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAllGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include-all-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAnyGroup (leaf): list of references to named admin-groups of which one must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include-any-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/include-any-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPath) IncludeAnyGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include-any-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAnyGroup (leaf): list of references to named admin-groups of which one must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include-any-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/admin-groups/state/include-any-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroupsPathAny) IncludeAnyGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_AdminGroups_IncludeAnyGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include-any-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_ActivePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/active YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_ActivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_ActivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/active YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_ActivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPathAny struct {
	*ygot.NodePath
}

// Active (leaf): Indicates the current active path option that has
// been selected of the candidate secondary paths
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/active"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath) Active() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_ActivePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_ActivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// Active (leaf): Indicates the current active path option that has
// been selected of the candidate secondary paths
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/active"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny) Active() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_ActivePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_ActivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The priority of the specified secondary path option. Higher
// priority options are less preferable - such that a secondary
// path reference with a priority of 0 is the most preferred
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath) Priority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The priority of the specified secondary path option. Higher
// priority options are less preferable - such that a secondary
// path reference with a priority of 0 is the most preferred
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny) Priority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecondaryPath (leaf): A reference to the secondary path that should be utilised
// when the containing primary path option is in use
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/secondary-path"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPath) SecondaryPath() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secondary-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecondaryPath (leaf): A reference to the secondary path that should be utilised
// when the containing primary path option is in use
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/secondary-path"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/candidate-secondary-paths/candidate-secondary-path/state/secondary-path"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPathPathAny) SecondaryPath() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_CandidateSecondaryPath_SecondaryPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secondary-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/metric-upper-bound YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/metric-upper-bound YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePathAny struct {
	*ygot.NodePath
}

// MetricUpperBound (leaf): Upper bound on end-to-end path metric. A zero indicate
// an unbounded upper limit for the specific metric-type.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-upper-bound"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/metric-upper-bound"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath) MetricUpperBound() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricUpperBound (leaf): Upper bound on end-to-end path metric. A zero indicate
// an unbounded upper limit for the specific metric-type.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-upper-bound"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/metric-upper-bound"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny) MetricUpperBound() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Identifies an entry in the list of metric-types
// bound for the TE path.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPath) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Identifies an entry in the list of metric-types
// bound for the TE path.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-primary-path/p2p-primary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraintPathAny) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PPrimaryPath_PathMetricBoundConstraint_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AssociatedRsvpSessionsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/associated-rsvp-sessions YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AssociatedRsvpSessionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AssociatedRsvpSessionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/associated-rsvp-sessions YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AssociatedRsvpSessionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfMetricPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/cspf-metric YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/cspf-metric YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/cspf-tiebreaker YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/cspf-tiebreaker YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/explicit-path-name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/explicit-path-name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/hold-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/hold-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/name YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/path-computation-method YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/path-computation-method YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/path-computation-server YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/path-computation-server YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/preference YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/preference YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/retry-timer YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/retry-timer YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/setup-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/setup-priority YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SpfMetricPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/spf-metric YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SpfMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SpfMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/spf-metric YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SpfMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/use-cspf YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/use-cspf YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPathAny struct {
	*ygot.NodePath
}

// AdminGroups (container): Top-level container for include/exclude constraints for
// link affinities
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-groups"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) AdminGroups() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroups (container): Top-level container for include/exclude constraints for
// link affinities
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-groups"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) AdminGroups() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// AssociatedRsvpSessions (leaf): If the signalling protocol specified for this path is
// RSVP-TE, this leaf-list provides a reference to the associated
// sessions within the RSVP-TE protocol sessions list, such
// that details of the signaling can be retrieved. More than
// one session may exist during re-signalling such as
// make-before-break.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/associated-rsvp-sessions"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/associated-rsvp-sessions"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) AssociatedRsvpSessions() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AssociatedRsvpSessionsPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AssociatedRsvpSessionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "associated-rsvp-sessions"},
			map[string]interface{}{},
			n,
		),
	}
}

// AssociatedRsvpSessions (leaf): If the signalling protocol specified for this path is
// RSVP-TE, this leaf-list provides a reference to the associated
// sessions within the RSVP-TE protocol sessions list, such
// that details of the signaling can be retrieved. More than
// one session may exist during re-signalling such as
// make-before-break.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/associated-rsvp-sessions"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/associated-rsvp-sessions"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) AssociatedRsvpSessions() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AssociatedRsvpSessionsPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AssociatedRsvpSessionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "associated-rsvp-sessions"},
			map[string]interface{}{},
			n,
		),
	}
}

// CspfMetric (leaf): The IGP metric of the path currently used by the LSP.
// This value is used to represent the metric of the path
// used by the LSP following the execution of the CSPF
// algorithm and signalling of the LSP.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cspf-metric"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/cspf-metric"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) CspfMetric() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfMetricPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cspf-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// CspfMetric (leaf): The IGP metric of the path currently used by the LSP.
// This value is used to represent the metric of the path
// used by the LSP following the execution of the CSPF
// algorithm and signalling of the LSP.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cspf-metric"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/cspf-metric"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) CspfMetric() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfMetricPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cspf-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// CspfTiebreaker (leaf): Determine the tie-breaking method to choose between
// equally desirable paths during CSFP computation
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cspf-tiebreaker"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/cspf-tiebreaker"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) CspfTiebreaker() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cspf-tiebreaker"},
			map[string]interface{}{},
			n,
		),
	}
}

// CspfTiebreaker (leaf): Determine the tie-breaking method to choose between
// equally desirable paths during CSFP computation
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cspf-tiebreaker"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/cspf-tiebreaker"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) CspfTiebreaker() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_CspfTiebreakerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cspf-tiebreaker"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitPathName (leaf): reference to a defined path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/explicit-path-name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/explicit-path-name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) ExplicitPathName() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "explicit-path-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitPathName (leaf): reference to a defined path
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/explicit-path-name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/explicit-path-name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) ExplicitPathName() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_ExplicitPathNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "explicit-path-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldPriority (leaf): preemption priority once the LSP is established,
// lower is higher priority; default 0 indicates other LSPs
// will not preempt the LSPs once established
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hold-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/hold-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) HoldPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hold-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldPriority (leaf): preemption priority once the LSP is established,
// lower is higher priority; default 0 indicates other LSPs
// will not preempt the LSPs once established
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hold-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/hold-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) HoldPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_HoldPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hold-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Path name
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Path name
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/name"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) Name() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationMethod (leaf): The method used for computing the path, either
// locally computed, queried from a server or not
// computed at all (explicitly configured).
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/path-computation-method"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/path-computation-method"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) PathComputationMethod() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-computation-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationMethod (leaf): The method used for computing the path, either
// locally computed, queried from a server or not
// computed at all (explicitly configured).
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/path-computation-method"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/path-computation-method"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) PathComputationMethod() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationMethodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-computation-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationServer (leaf): Address of the external path computation
// server
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/path-computation-server"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/path-computation-server"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) PathComputationServer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-computation-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathComputationServer (leaf): Address of the external path computation
// server
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/path-computation-server"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/path-computation-server"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) PathComputationServer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathComputationServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-computation-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathMetricBoundConstraintAny (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type (wildcarded): E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) PathMetricBoundConstraintAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// PathMetricBoundConstraintAny (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type (wildcarded): E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) PathMetricBoundConstraintAny() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// PathMetricBoundConstraint (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type: E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) PathMetricBoundConstraint(Type E_MplsTypes_PATH_METRIC_TYPE) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// PathMetricBoundConstraint (list): A list of metric bounds that are applied as constraints to the LSP.
// It act as a logical AND, hence all of them must be satisfied.
// If not, it will return an error.
// Constraints within this list may be applicable to either
// the local CSPF process (where data is available to the local device)
// or be communicated to a PCE for calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-metric-bound-constraints/path-metric-bound-constraint"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint"
// Type: E_MplsTypes_PATH_METRIC_TYPE
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) PathMetricBoundConstraint(Type E_MplsTypes_PATH_METRIC_TYPE) *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-metric-bound-constraints", "path-metric-bound-constraint"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Preference (leaf): Specifies a preference for this path. The lower the
// number higher the preference
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/preference"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) Preference() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Specifies a preference for this path. The lower the
// number higher the preference
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/preference"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) Preference() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetryTimer (leaf): sets the time between attempts to establish the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retry-timer"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/retry-timer"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) RetryTimer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retry-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetryTimer (leaf): sets the time between attempts to establish the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retry-timer"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/retry-timer"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) RetryTimer() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_RetryTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retry-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriority (leaf): RSVP-TE preemption priority during LSP setup, lower is
// higher priority; default 7 indicates that LSP will not
// preempt established LSPs during setup
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/setup-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/setup-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) SetupPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "setup-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriority (leaf): RSVP-TE preemption priority during LSP setup, lower is
// higher priority; default 7 indicates that LSP will not
// preempt established LSPs during setup
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/setup-priority"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/setup-priority"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) SetupPriority() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "setup-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfMetric (leaf): The IGP metric of the shortest path to the LSP destination.
// This value is used to compare the current metric of the
// constrained path to the shortest path that is available in
// the network topology.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-metric"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/spf-metric"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) SpfMetric() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SpfMetricPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SpfMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfMetric (leaf): The IGP metric of the shortest path to the LSP destination.
// This value is used to compare the current metric of the
// constrained path to the shortest path that is available in
// the network topology.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-metric"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/spf-metric"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) SpfMetric() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SpfMetricPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_SpfMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseCspf (leaf): Flag to enable CSPF for locally computed LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/use-cspf"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/use-cspf"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPath) UseCspf() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "use-cspf"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseCspf (leaf): Flag to enable CSPF for locally computed LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/use-cspf"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/state/use-cspf"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPathPathAny) UseCspf() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_UseCspfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "use-cspf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/exclude-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/exclude-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/include-all-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/include-all-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/include-any-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/include-any-group YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPathAny struct {
	*ygot.NodePath
}

// ExcludeGroup (leaf): list of references to named admin-groups to exclude in
// path calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exclude-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/exclude-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath) ExcludeGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exclude-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExcludeGroup (leaf): list of references to named admin-groups to exclude in
// path calculation.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exclude-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/exclude-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny) ExcludeGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_ExcludeGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exclude-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAllGroup (leaf): list of references to named admin-groups of which all must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include-all-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/include-all-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath) IncludeAllGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include-all-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAllGroup (leaf): list of references to named admin-groups of which all must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include-all-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/include-all-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny) IncludeAllGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAllGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include-all-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAnyGroup (leaf): list of references to named admin-groups of which one must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include-any-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/include-any-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPath) IncludeAnyGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include-any-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncludeAnyGroup (leaf): list of references to named admin-groups of which one must
// be included
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include-any-group"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/admin-groups/state/include-any-group"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroupsPathAny) IncludeAnyGroup() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_AdminGroups_IncludeAnyGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include-any-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/metric-upper-bound YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/metric-upper-bound YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/type YANG schema element.
type NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePathAny struct {
	*ygot.NodePath
}

// MetricUpperBound (leaf): Upper bound on end-to-end path metric. A zero indicate
// an unbounded upper limit for the specific metric-type.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-upper-bound"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/metric-upper-bound"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath) MetricUpperBound() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricUpperBound (leaf): Upper bound on end-to-end path metric. A zero indicate
// an unbounded upper limit for the specific metric-type.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-upper-bound"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/metric-upper-bound"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny) MetricUpperBound() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_MetricUpperBoundPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-upper-bound"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Identifies an entry in the list of metric-types
// bound for the TE path.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPath) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePath {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Identifies an entry in the list of metric-types
// bound for the TE path.
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/mpls/lsps/constrained-path/tunnels/tunnel/p2p-tunnel-attributes/p2p-secondary-paths/p2p-secondary-path/path-metric-bound-constraints/path-metric-bound-constraint/state/type"
func (n *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraintPathAny) Type() *NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePathAny {
	return &NetworkInstance_Mpls_Lsps_ConstrainedPath_Tunnel_P2PTunnelAttributes_P2PSecondaryPath_PathMetricBoundConstraint_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_StaticLspPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_NamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/state/name YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/state/name YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_NamePathAny struct {
	*ygot.NodePath
}

// Egress (container): Static LSPs for which the router is an
//  egress node
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "egress"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPath) Egress() *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath{
		NodePath: ygot.NewNodePath(
			[]string{"egress"},
			map[string]interface{}{},
			n,
		),
	}
}

// Egress (container): Static LSPs for which the router is an
//  egress node
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "egress"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPathAny) Egress() *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"egress"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ingress (container): Static LSPs for which the router is an
//  ingress node
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ingress"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPath) Ingress() *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ingress"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ingress (container): Static LSPs for which the router is an
//  ingress node
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ingress"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPathAny) Ingress() *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ingress"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): name to identify the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/state/name"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPath) Name() *NetworkInstance_Mpls_Lsps_StaticLsp_NamePath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): name to identify the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/state/name"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPathAny) Name() *NetworkInstance_Mpls_Lsps_StaticLsp_NamePathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transit (container): Static LSPs for which the router is an
//  transit node
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transit"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPath) Transit() *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath{
		NodePath: ygot.NewNodePath(
			[]string{"transit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transit (container): Static LSPs for which the router is an
//  transit node
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transit"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit"
func (n *NetworkInstance_Mpls_Lsps_StaticLspPathAny) Transit() *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPathAny struct {
	*ygot.NodePath
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_IncomingLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPath) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/egress/state/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_EgressPathAny) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Egress_PushLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPathAny struct {
	*ygot.NodePath
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_IncomingLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPath) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/ingress/state/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_IngressPathAny) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Ingress_PushLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/next-hop YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/push-label YANG schema element.
type NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPathAny struct {
	*ygot.NodePath
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// IncomingLabel (leaf): label value on the incoming packet
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/incoming-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/incoming-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny) IncomingLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_IncomingLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "incoming-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): next hop IP address for the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/next-hop"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny) NextHop() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPath) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPath {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushLabel (leaf): label value to push at the current hop for the
// LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-static"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/push-label"
// Path from root: "/network-instances/network-instance/mpls/lsps/static-lsps/static-lsp/transit/state/push-label"
func (n *NetworkInstance_Mpls_Lsps_StaticLsp_TransitPathAny) PushLabel() *NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPathAny {
	return &NetworkInstance_Mpls_Lsps_StaticLsp_Transit_PushLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "push-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPathPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPathPathAny struct {
	*ygot.NodePath
}

// PathSetupProtocol (container): select and configure the signaling method for
//  the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-igp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-setup-protocol"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol"
func (n *NetworkInstance_Mpls_Lsps_UnconstrainedPathPath) PathSetupProtocol() *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-setup-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathSetupProtocol (container): select and configure the signaling method for
//  the LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-igp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-setup-protocol"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol"
func (n *NetworkInstance_Mpls_Lsps_UnconstrainedPathPathAny) PathSetupProtocol() *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-setup-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny struct {
	*ygot.NodePath
}

// Ldp (container): LDP signaling setup for IGP-congruent LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ldp"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol/ldp"
func (n *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPath) Ldp() *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPath {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ldp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ldp (container): LDP signaling setup for IGP-congruent LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ldp"
// Path from root: "/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol/ldp"
func (n *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocolPathAny) Ldp() *NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPathAny {
	return &NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ldp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol/ldp YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/lsps/unconstrained-path/path-setup-protocol/ldp YANG schema element.
type NetworkInstance_Mpls_Lsps_UnconstrainedPath_PathSetupProtocol_LdpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocolsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols YANG schema element.
type NetworkInstance_Mpls_SignalingProtocolsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocolsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols YANG schema element.
type NetworkInstance_Mpls_SignalingProtocolsPathAny struct {
	*ygot.NodePath
}

// Ldp (container): LDP global signaling configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ldp"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp"
func (n *NetworkInstance_Mpls_SignalingProtocolsPath) Ldp() *NetworkInstance_Mpls_SignalingProtocols_LdpPath {
	return &NetworkInstance_Mpls_SignalingProtocols_LdpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ldp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ldp (container): LDP global signaling configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ldp"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp"
func (n *NetworkInstance_Mpls_SignalingProtocolsPathAny) Ldp() *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_LdpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ldp"},
			map[string]interface{}{},
			n,
		),
	}
}

// RsvpTe (container): RSVP-TE global signaling protocol configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rsvp-te"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te"
func (n *NetworkInstance_Mpls_SignalingProtocolsPath) RsvpTe() *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTePath{
		NodePath: ygot.NewNodePath(
			[]string{"rsvp-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// RsvpTe (container): RSVP-TE global signaling protocol configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rsvp-te"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te"
func (n *NetworkInstance_Mpls_SignalingProtocolsPathAny) RsvpTe() *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rsvp-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): MPLS-specific Segment Routing configuration and operational state
// parameters
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing"
func (n *NetworkInstance_Mpls_SignalingProtocolsPath) SegmentRouting() *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): MPLS-specific Segment Routing configuration and operational state
// parameters
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing"
func (n *NetworkInstance_Mpls_SignalingProtocolsPathAny) SegmentRouting() *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_LdpPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_LdpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_LdpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_LdpPathAny struct {
	*ygot.NodePath
}

// Global (container): Platform wide LDP configuration and state
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) Global() *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Platform wide LDP configuration and state
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) Global() *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAttributes (container): Container including attributes for LDP-enabled
// interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) InterfaceAttributes() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAttributes (container): Container including attributes for LDP-enabled
// interfaces
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) InterfaceAttributes() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId (wildcarded): string
// LabelSpaceId (wildcarded): uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) NeighborAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": "*", "label-space-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId (wildcarded): string
// LabelSpaceId (wildcarded): uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) NeighborAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": "*", "label-space-id": "*"},
			n,
		),
	}
}

// NeighborAnyLabelSpaceId (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId: string
// LabelSpaceId (wildcarded): uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) NeighborAnyLabelSpaceId(LsrId string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": LsrId, "label-space-id": "*"},
			n,
		),
	}
}

// NeighborAnyLabelSpaceId (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId: string
// LabelSpaceId (wildcarded): uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) NeighborAnyLabelSpaceId(LsrId string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": LsrId, "label-space-id": "*"},
			n,
		),
	}
}

// NeighborAnyLsrId (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId (wildcarded): string
// LabelSpaceId: uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) NeighborAnyLsrId(LabelSpaceId uint16) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": "*", "label-space-id": LabelSpaceId},
			n,
		),
	}
}

// NeighborAnyLsrId (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId (wildcarded): string
// LabelSpaceId: uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) NeighborAnyLsrId(LabelSpaceId uint16) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": "*", "label-space-id": LabelSpaceId},
			n,
		),
	}
}

// Neighbor (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId: string
// LabelSpaceId: uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) Neighbor(LsrId string, LabelSpaceId uint16) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": LsrId, "label-space-id": LabelSpaceId},
			n,
		),
	}
}

// Neighbor (list): List of LDP neighbors and their attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor"
// LsrId: string
// LabelSpaceId: uint16
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) Neighbor(LsrId string, LabelSpaceId uint16) *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"lsr-id": LsrId, "label-space-id": LabelSpaceId},
			n,
		),
	}
}

// Targeted (container): Top container for targeted LDP state and configuration
// attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targeted"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPath) Targeted() *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath{
		NodePath: ygot.NewNodePath(
			[]string{"targeted"},
			map[string]interface{}{},
			n,
		),
	}
}

// Targeted (container): Top container for targeted LDP state and configuration
// attributes.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targeted"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted"
func (n *NetworkInstance_Mpls_SignalingProtocols_LdpPathAny) Targeted() *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targeted"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/state/lsr-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/state/lsr-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPathAny struct {
	*ygot.NodePath
}

// Authentication (container): Global LDP authentication
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath) Authentication() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Global LDP authentication
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny) Authentication() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Top container for LDP graceful-restart attributes
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath) GracefulRestart() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Top container for LDP graceful-restart attributes
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny) GracefulRestart() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsrId (leaf): Global label switch router identifier
// configuration.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsr-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/state/lsr-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPath) LsrId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsr-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsrId (leaf): Global label switch router identifier
// configuration.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsr-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/state/lsr-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_GlobalPathAny) LsrId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_LsrIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsr-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): authenticate LDP signaling
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/state/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): authenticate LDP signaling
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/state/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables LDP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables LDP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/authentication/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_AuthenticationPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_Authentication_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/forwarding-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/forwarding-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/helper-enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/helper-enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/reconnect-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/reconnect-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/recovery-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/recovery-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingHoldtime (leaf): Time that defines the interval for keeping the
// node in recovery mode.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/forwarding-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) ForwardingHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingHoldtime (leaf): Time that defines the interval for keeping the
// node in recovery mode.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/forwarding-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) ForwardingHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ForwardingHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperEnable (leaf): Enables the graceful restart helper for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/helper-enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) HelperEnable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperEnable (leaf): Enables the graceful restart helper for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/helper-enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) HelperEnable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_HelperEnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReconnectTime (leaf): Interval for which the remote LDP peers
// will wait for the local node to reconnect after a
// failure
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reconnect-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/reconnect-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) ReconnectTime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reconnect-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReconnectTime (leaf): Interval for which the remote LDP peers
// will wait for the local node to reconnect after a
// failure
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reconnect-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/reconnect-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) ReconnectTime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_ReconnectTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reconnect-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RecoveryTime (leaf): Interval used to specify the time for the remote
// peer to maintain the MPLS forwarding state after
// the local node has succesfully reconnected
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recovery-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/recovery-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPath) RecoveryTime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recovery-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RecoveryTime (leaf): Interval used to specify the time for the remote
// peer to maintain the MPLS forwarding state after
// the local node has succesfully reconnected
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recovery-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/global/graceful-restart/state/recovery-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestartPathAny) RecoveryTime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Global_GracefulRestart_RecoveryTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recovery-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/state/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/state/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/state/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/state/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): list of per-interface LDP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): list of per-interface LDP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): list of per-interface LDP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPath) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): list of per-interface LDP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributesPathAny) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// AddressFamilyAny (list): List for attributes related to address-families for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family"
// AfiName (wildcarded): E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) AddressFamilyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AddressFamilyAny (list): List for attributes related to address-families for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family"
// AfiName (wildcarded): E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) AddressFamilyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AddressFamily (list): List for attributes related to address-families for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family"
// AfiName: E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) AddressFamily(AfiName E_MplsLdp_MplsLdpAfi) *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// AddressFamily (list): List for attributes related to address-families for LDP.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family"
// AfiName: E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) AddressFamily(AfiName E_MplsLdp_MplsLdpAfi) *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// Counters (container): Interface specific LDP statistics and counters
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/counters"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) Counters() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_CountersPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Interface specific LDP statistics and counters
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/counters"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) Counters() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_CountersPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePath) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_InterfacePathAny) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/state/afi-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/state/afi-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/state/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/state/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Adress-family name atttibute (IPv4, IPv6).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/state/afi-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath) AfiName() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Adress-family name atttibute (IPv4, IPv6).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/state/afi-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny) AfiName() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/state/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPath) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/address-families/address-family/state/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamilyPathAny) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_AddressFamily_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/counters YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/state/counters YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath) Interface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/interface-attributes/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_InterfaceAttributes_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/label-space-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/label-space-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/lsr-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/lsr-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_SessionStatePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/session-state YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_SessionStatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_SessionStatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/session-state YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_SessionStatePathAny struct {
	*ygot.NodePath
}

// Authentication (container): Global LDP authentication
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) Authentication() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Global LDP authentication
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) Authentication() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAdjacencyAny (list): List of hello adjacencies for a given LDP
// neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-adjacencies/hello-adjacency"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency"
// RemoteAddress (wildcarded): string
// LocalAddress (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) HelloAdjacencyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-adjacencies", "hello-adjacency"},
			map[string]interface{}{"remote-address": "*", "local-address": "*"},
			n,
		),
	}
}

// HelloAdjacencyAny (list): List of hello adjacencies for a given LDP
// neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-adjacencies/hello-adjacency"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency"
// RemoteAddress (wildcarded): string
// LocalAddress (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) HelloAdjacencyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-adjacencies", "hello-adjacency"},
			map[string]interface{}{"remote-address": "*", "local-address": "*"},
			n,
		),
	}
}

// HelloAdjacencyAnyLocalAddress (list): List of hello adjacencies for a given LDP
// neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-adjacencies/hello-adjacency"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency"
// RemoteAddress: string
// LocalAddress (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) HelloAdjacencyAnyLocalAddress(RemoteAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-adjacencies", "hello-adjacency"},
			map[string]interface{}{"remote-address": RemoteAddress, "local-address": "*"},
			n,
		),
	}
}

// HelloAdjacencyAnyLocalAddress (list): List of hello adjacencies for a given LDP
// neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-adjacencies/hello-adjacency"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency"
// RemoteAddress: string
// LocalAddress (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) HelloAdjacencyAnyLocalAddress(RemoteAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-adjacencies", "hello-adjacency"},
			map[string]interface{}{"remote-address": RemoteAddress, "local-address": "*"},
			n,
		),
	}
}

// HelloAdjacencyAnyRemoteAddress (list): List of hello adjacencies for a given LDP
// neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-adjacencies/hello-adjacency"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency"
// RemoteAddress (wildcarded): string
// LocalAddress: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) HelloAdjacencyAnyRemoteAddress(LocalAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-adjacencies", "hello-adjacency"},
			map[string]interface{}{"remote-address": "*", "local-address": LocalAddress},
			n,
		),
	}
}

// HelloAdjacencyAnyRemoteAddress (list): List of hello adjacencies for a given LDP
// neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-adjacencies/hello-adjacency"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency"
// RemoteAddress (wildcarded): string
// LocalAddress: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) HelloAdjacencyAnyRemoteAddress(LocalAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-adjacencies", "hello-adjacency"},
			map[string]interface{}{"remote-address": "*", "local-address": LocalAddress},
			n,
		),
	}
}

// HelloAdjacency (list): List of hello adjacencies for a given LDP
// neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-adjacencies/hello-adjacency"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency"
// RemoteAddress: string
// LocalAddress: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) HelloAdjacency(RemoteAddress string, LocalAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-adjacencies", "hello-adjacency"},
			map[string]interface{}{"remote-address": RemoteAddress, "local-address": LocalAddress},
			n,
		),
	}
}

// HelloAdjacency (list): List of hello adjacencies for a given LDP
// neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-adjacencies/hello-adjacency"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency"
// RemoteAddress: string
// LocalAddress: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) HelloAdjacency(RemoteAddress string, LocalAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-adjacencies", "hello-adjacency"},
			map[string]interface{}{"remote-address": RemoteAddress, "local-address": LocalAddress},
			n,
		),
	}
}

// LabelSpaceId (leaf): Label space ID of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-space-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/label-space-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) LabelSpaceId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-space-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelSpaceId (leaf): Label space ID of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-space-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/label-space-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) LabelSpaceId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LabelSpaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-space-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsrId (leaf): Neighbor label switch router identifier.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsr-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/lsr-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) LsrId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsr-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsrId (leaf): Neighbor label switch router identifier.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsr-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/lsr-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) LsrId() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_LsrIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsr-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SessionState (leaf): Operational status of the LDP session,
// based on the state machine for session
// negotiation behavior.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/session-state"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/session-state"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPath) SessionState() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_SessionStatePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_SessionStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "session-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// SessionState (leaf): Operational status of the LDP session,
// based on the state machine for session
// negotiation behavior.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/session-state"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/state/session-state"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_NeighborPathAny) SessionState() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_SessionStatePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_SessionStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "session-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): authenticate LDP signaling
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/state/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): authenticate LDP signaling
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/state/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables LDP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables LDP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/authentication/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_AuthenticationPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_Authentication_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_AdjacencyTypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/adjacency-type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_AdjacencyTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_AdjacencyTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/adjacency-type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_AdjacencyTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloDroppedPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/hello-dropped YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloDroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloDroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/hello-dropped YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloDroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/hello-received YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/hello-received YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LastClearPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/last-clear YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LastClearPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LastClearPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/last-clear YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LastClearPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LocalAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/local-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LocalAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LocalAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/local-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LocalAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_RemoteAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/remote-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_RemoteAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_RemoteAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/remote-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_RemoteAddressPathAny struct {
	*ygot.NodePath
}

// AdjacencyType (leaf): This attributes defines if the LDP
// adjacency is from a direct link or from
// targeted discovery.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/adjacency-type"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath) AdjacencyType() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_AdjacencyTypePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_AdjacencyTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyType (leaf): This attributes defines if the LDP
// adjacency is from a direct link or from
// targeted discovery.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/adjacency-type"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny) AdjacencyType() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_AdjacencyTypePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_AdjacencyTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloDropped (leaf): Number of Hello messaged dropped by the device
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-dropped"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/hello-dropped"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath) HelloDropped() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloDroppedPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloDroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloDropped (leaf): Number of Hello messaged dropped by the device
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-dropped"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/hello-dropped"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny) HelloDropped() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloDroppedPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloDroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (container): Specifies the time the sending LSR will
// maintain its record of Hellos from the
// receiving LSR
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (container): Specifies the time the sending LSR will
// maintain its record of Hellos from the
// receiving LSR
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloReceived (leaf): Number of Hello messaged received by the device
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-received"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/hello-received"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath) HelloReceived() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloReceivedPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloReceived (leaf): Number of Hello messaged received by the device
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-received"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/hello-received"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny) HelloReceived() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloReceivedPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastClear (leaf): Timestamp of the last time the interface counters
// were cleared expressed relative to the Unix Epoch
// (January 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-clear"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/last-clear"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath) LastClear() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LastClearPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LastClearPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-clear"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastClear (leaf): Timestamp of the last time the interface counters
// were cleared expressed relative to the Unix Epoch
// (January 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-clear"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/last-clear"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny) LastClear() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LastClearPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LastClearPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-clear"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Within the LDP adjacency, this attribute
// shows the local address.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/local-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath) LocalAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LocalAddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LocalAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Within the LDP adjacency, this attribute
// shows the local address.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/local-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny) LocalAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LocalAddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_LocalAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteAddress (leaf): Within the LDP adjacency, this attribute
// shows the neighbor address.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/remote-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPath) RemoteAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_RemoteAddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_RemoteAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteAddress (leaf): Within the LDP adjacency, this attribute
// shows the neighbor address.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/state/remote-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacencyPathAny) RemoteAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_RemoteAddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_RemoteAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_AdjacentPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/adjacent YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_AdjacentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_AdjacentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/adjacent YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_AdjacentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_HelloExpirationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/hello-expiration YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_HelloExpirationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_HelloExpirationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/hello-expiration YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_HelloExpirationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NegotiatedPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/negotiated YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NegotiatedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NegotiatedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/negotiated YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NegotiatedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NextHelloPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/next-hello YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NextHelloPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NextHelloPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/next-hello YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NextHelloPathAny struct {
	*ygot.NodePath
}

// Adjacent (leaf): Hello holdtime attribute learned from the
// LDP neighbor
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacent"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/adjacent"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePath) Adjacent() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_AdjacentPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_AdjacentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Adjacent (leaf): Hello holdtime attribute learned from the
// LDP neighbor
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacent"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/adjacent"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePathAny) Adjacent() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_AdjacentPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_AdjacentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacent"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloExpiration (leaf): Expiration time for the hello holdtime.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-expiration"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/hello-expiration"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePath) HelloExpiration() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_HelloExpirationPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_HelloExpirationPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-expiration"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloExpiration (leaf): Expiration time for the hello holdtime.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-expiration"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/hello-expiration"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePathAny) HelloExpiration() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_HelloExpirationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_HelloExpirationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-expiration"},
			map[string]interface{}{},
			n,
		),
	}
}

// Negotiated (leaf): Hello holdtime attribute negotiated between
// the LDP neighbor and the local router.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/negotiated"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/negotiated"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePath) Negotiated() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NegotiatedPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NegotiatedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "negotiated"},
			map[string]interface{}{},
			n,
		),
	}
}

// Negotiated (leaf): Hello holdtime attribute negotiated between
// the LDP neighbor and the local router.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/negotiated"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/negotiated"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePathAny) Negotiated() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NegotiatedPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NegotiatedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "negotiated"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHello (leaf): Time when the next LDP hello will be sent to
// the adjacent neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hello"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/next-hello"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePath) NextHello() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NextHelloPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NextHelloPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hello"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHello (leaf): Time when the next LDP hello will be sent to
// the adjacent neighbor.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hello"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/hello-holdtime/state/next-hello"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtimePathAny) NextHello() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NextHelloPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_HelloHoldtime_NextHelloPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hello"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref/state/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref/state/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref/state/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPath) Interface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref/state/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPathAny) Interface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref/state/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPath) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/neighbors/neighbor/hello-adjacencies/hello-adjacency/interface-ref/state/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRefPathAny) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Neighbor_HelloAdjacency_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-accept YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-accept YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// AddressFamilyAny (list): List of address families for targeted LDP
// configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family"
// AfiName (wildcarded): E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) AddressFamilyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AddressFamilyAny (list): List of address families for targeted LDP
// configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family"
// AfiName (wildcarded): E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) AddressFamilyAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AddressFamily (list): List of address families for targeted LDP
// configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family"
// AfiName: E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) AddressFamily(AfiName E_MplsLdp_MplsLdpAfi) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// AddressFamily (list): List of address families for targeted LDP
// configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "address-families/address-family"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family"
// AfiName: E_MplsLdp_MplsLdpAfi
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) AddressFamily(AfiName E_MplsLdp_MplsLdpAfi) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"address-families", "address-family"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// HelloAccept (leaf): Enables or disables the acceptance of targeted LDP
// hello messages.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-accept"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-accept"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) HelloAccept() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-accept"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAccept (leaf): Enables or disables the acceptance of targeted LDP
// hello messages.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-accept"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-accept"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) HelloAccept() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloAcceptPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-accept"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_TargetedPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/state/afi-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/state/afi-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Adress-family name atttibute (IPv4, IPv6).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/state/afi-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath) AfiName() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Adress-family name atttibute (IPv4, IPv6).
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/state/afi-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny) AfiName() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetAny (list): List of LDP targets configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target"
// RemoteAddress (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath) TargetAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"remote-address": "*"},
			n,
		),
	}
}

// TargetAny (list): List of LDP targets configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target"
// RemoteAddress (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny) TargetAny() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"remote-address": "*"},
			n,
		),
	}
}

// Target (list): List of LDP targets configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target"
// RemoteAddress: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPath) Target(RemoteAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"remote-address": RemoteAddress},
			n,
		),
	}
}

// Target (list): List of LDP targets configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target"
// RemoteAddress: string
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamilyPathAny) Target(RemoteAddress string) *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"remote-address": RemoteAddress},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/enabled YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/hello-holdtime YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/local-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/local-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/remote-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/remote-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/enabled"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) Enabled() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloHoldtime (leaf): Defines the time for which a neighbor adjacency will
// be kept by the router while it waits for a new link
// Hello message.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-holdtime"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/hello-holdtime"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) HelloHoldtime() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloHoldtimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-holdtime"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Defines the interval for sending Hello messages on
// each link LDP adjacency.
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Local IP address of the LDP adjacency
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/local-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) LocalAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Local IP address of the LDP adjacency
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/local-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) LocalAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_LocalAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteAddress (leaf): Neighbor address of the targeted LDP adjacency
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/remote-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPath) RemoteAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteAddress (leaf): Neighbor address of the targeted LDP adjacency
// ----------------------------------------
// Defining module: "openconfig-mpls-ldp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/ldp/targeted/address-families/address-family/targets/target/state/remote-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_TargetPathAny) RemoteAddress() *NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_Ldp_Targeted_AddressFamily_Target_RemoteAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny struct {
	*ygot.NodePath
}

// Global (container): Platform wide RSVP configuration and state
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) Global() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Platform wide RSVP configuration and state
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) Global() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): list of per-interface RSVP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): list of per-interface RSVP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): list of per-interface RSVP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): list of per-interface RSVP configurations
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-attributes/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-attributes", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NeighborAny (list): List of RSVP neighbors of the local system
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor"
// Address (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) NeighborAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// NeighborAny (list): List of RSVP neighbors of the local system
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor"
// Address (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) NeighborAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// Neighbor (list): List of RSVP neighbors of the local system
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor"
// Address: string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) Neighbor(Address string) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Neighbor (list): List of RSVP neighbors of the local system
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor"
// Address: string
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) Neighbor(Address string) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// SessionAny (list): List of RSVP sessions
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sessions/session"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session"
// LocalIndex (wildcarded): uint64
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) SessionAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sessions", "session"},
			map[string]interface{}{"local-index": "*"},
			n,
		),
	}
}

// SessionAny (list): List of RSVP sessions
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sessions/session"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session"
// LocalIndex (wildcarded): uint64
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) SessionAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sessions", "session"},
			map[string]interface{}{"local-index": "*"},
			n,
		),
	}
}

// Session (list): List of RSVP sessions
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sessions/session"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session"
// LocalIndex: uint64
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePath) Session(LocalIndex uint64) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath{
		NodePath: ygot.NewNodePath(
			[]string{"sessions", "session"},
			map[string]interface{}{"local-index": LocalIndex},
			n,
		),
	}
}

// Session (list): List of RSVP sessions
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sessions/session"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session"
// LocalIndex: uint64
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTePathAny) Session(LocalIndex uint64) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sessions", "session"},
			map[string]interface{}{"local-index": LocalIndex},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny struct {
	*ygot.NodePath
}

// Counters (container): Platform wide RSVP statistics and counters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath) Counters() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Platform wide RSVP statistics and counters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny) Counters() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Operational state and configuration parameters relating to
// graceful-restart for RSVP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath) GracefulRestart() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Operational state and configuration parameters relating to
// graceful-restart for RSVP
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny) GracefulRestart() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hellos (container): Top level container for RSVP hello parameters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hellos"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath) Hellos() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath{
		NodePath: ygot.NewNodePath(
			[]string{"hellos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hellos (container): Top level container for RSVP hello parameters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hellos"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny) Hellos() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hellos"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemption (container): Protocol options relating to RSVP
// soft preemption
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "soft-preemption"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPath) SoftPreemption() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"soft-preemption"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemption (container): Protocol options relating to RSVP
// soft preemption
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "soft-preemption"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_GlobalPathAny) SoftPreemption() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"soft-preemption"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InAckMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-ack-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InAckMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InAckMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-ack-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InAckMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InHelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-hello-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InHelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InHelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-hello-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InHelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathErrorMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathErrorMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathErrorMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathErrorMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathTearMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathTearMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathTearMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathTearMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationErrorMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationErrorMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationErrorMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationErrorMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationTearMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationTearMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationTearMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationTearMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InSrefreshMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-srefresh-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InSrefreshMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InSrefreshMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-srefresh-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InSrefreshMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutAckMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-ack-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutAckMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutAckMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-ack-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutAckMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutHelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-hello-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutHelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutHelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-hello-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutHelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathErrorMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathErrorMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathErrorMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathErrorMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathTearMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathTearMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathTearMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathTearMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationErrorMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationErrorMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationErrorMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationErrorMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationTearMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationTearMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationTearMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationTearMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutSrefreshMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-srefresh-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutSrefreshMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutSrefreshMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-srefresh-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutSrefreshMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_PathTimeoutsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/path-timeouts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_PathTimeoutsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_PathTimeoutsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/path-timeouts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_PathTimeoutsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_RateLimitedMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/rate-limited-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_RateLimitedMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_RateLimitedMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/rate-limited-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_RateLimitedMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ReservationTimeoutsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/reservation-timeouts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ReservationTimeoutsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ReservationTimeoutsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/reservation-timeouts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ReservationTimeoutsPathAny struct {
	*ygot.NodePath
}

// Errors (container): Error counters associated with the global RSVP-TE
// instance.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "errors"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) Errors() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Errors (container): Error counters associated with the global RSVP-TE
// instance.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "errors"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) Errors() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InAckMessages (leaf): Number of received RSVP refresh reduction ack
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-ack-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-ack-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) InAckMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InAckMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InAckMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-ack-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InAckMessages (leaf): Number of received RSVP refresh reduction ack
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-ack-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-ack-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) InAckMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InAckMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InAckMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-ack-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InHelloMessages (leaf): Number of received RSVP hello messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-hello-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-hello-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) InHelloMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InHelloMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InHelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InHelloMessages (leaf): Number of received RSVP hello messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-hello-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-hello-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) InHelloMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InHelloMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InHelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathErrorMessages (leaf): Number of received RSVP Path Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) InPathErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathErrorMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathErrorMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathErrorMessages (leaf): Number of received RSVP Path Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) InPathErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathErrorMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathErrorMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathMessages (leaf): Number of received RSVP Path messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) InPathMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathMessages (leaf): Number of received RSVP Path messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) InPathMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathTearMessages (leaf): Number of received RSVP Path Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) InPathTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathTearMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathTearMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathTearMessages (leaf): Number of received RSVP Path Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-path-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) InPathTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathTearMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InPathTearMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationErrorMessages (leaf): Number of received RSVP Resv Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) InReservationErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationErrorMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationErrorMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationErrorMessages (leaf): Number of received RSVP Resv Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) InReservationErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationErrorMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationErrorMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationMessages (leaf): Number of received RSVP Resv messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) InReservationMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationMessages (leaf): Number of received RSVP Resv messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) InReservationMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationTearMessages (leaf): Number of received RSVP Resv Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) InReservationTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationTearMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationTearMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationTearMessages (leaf): Number of received RSVP Resv Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-reservation-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) InReservationTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationTearMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InReservationTearMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InSrefreshMessages (leaf): Number of received RSVP summary refresh messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-srefresh-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-srefresh-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) InSrefreshMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InSrefreshMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InSrefreshMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-srefresh-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InSrefreshMessages (leaf): Number of received RSVP summary refresh messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-srefresh-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/in-srefresh-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) InSrefreshMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InSrefreshMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_InSrefreshMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-srefresh-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutAckMessages (leaf): Number of sent RSVP refresh reduction ack messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-ack-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-ack-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) OutAckMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutAckMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutAckMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-ack-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutAckMessages (leaf): Number of sent RSVP refresh reduction ack messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-ack-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-ack-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) OutAckMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutAckMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutAckMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-ack-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutHelloMessages (leaf): Number of sent RSVP hello messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-hello-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-hello-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) OutHelloMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutHelloMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutHelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutHelloMessages (leaf): Number of sent RSVP hello messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-hello-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-hello-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) OutHelloMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutHelloMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutHelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathErrorMessages (leaf): Number of sent RSVP Path Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) OutPathErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathErrorMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathErrorMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathErrorMessages (leaf): Number of sent RSVP Path Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) OutPathErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathErrorMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathErrorMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathMessages (leaf): Number of sent RSVP PATH messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) OutPathMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathMessages (leaf): Number of sent RSVP PATH messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) OutPathMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathTearMessages (leaf): Number of sent RSVP Path Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) OutPathTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathTearMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathTearMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathTearMessages (leaf): Number of sent RSVP Path Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-path-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) OutPathTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathTearMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutPathTearMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationErrorMessages (leaf): Number of sent RSVP Resv Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) OutReservationErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationErrorMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationErrorMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationErrorMessages (leaf): Number of sent RSVP Resv Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) OutReservationErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationErrorMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationErrorMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationMessages (leaf): Number of sent RSVP Resv messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) OutReservationMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationMessages (leaf): Number of sent RSVP Resv messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) OutReservationMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationTearMessages (leaf): Number of sent RSVP Resv Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) OutReservationTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationTearMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationTearMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationTearMessages (leaf): Number of sent RSVP Resv Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-reservation-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) OutReservationTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationTearMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutReservationTearMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutSrefreshMessages (leaf): Number of sent RSVP summary refresh messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-srefresh-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-srefresh-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) OutSrefreshMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutSrefreshMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutSrefreshMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-srefresh-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutSrefreshMessages (leaf): Number of sent RSVP summary refresh messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-srefresh-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/out-srefresh-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) OutSrefreshMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutSrefreshMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_OutSrefreshMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-srefresh-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathTimeouts (leaf): The number of Path State Blocks (PSBs) that
// have been timed out by the local system.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-timeouts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/path-timeouts"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) PathTimeouts() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_PathTimeoutsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_PathTimeoutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-timeouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathTimeouts (leaf): The number of Path State Blocks (PSBs) that
// have been timed out by the local system.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-timeouts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/path-timeouts"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) PathTimeouts() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_PathTimeoutsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_PathTimeoutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-timeouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// RateLimitedMessages (leaf): RSVP messages dropped due to rate limiting
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rate-limited-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/rate-limited-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) RateLimitedMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_RateLimitedMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_RateLimitedMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"rate-limited-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// RateLimitedMessages (leaf): RSVP messages dropped due to rate limiting
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rate-limited-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/rate-limited-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) RateLimitedMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_RateLimitedMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_RateLimitedMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rate-limited-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReservationTimeouts (leaf): The number of Reservation State Blocks (RSBs) that
// have been timed out by the local system.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reservation-timeouts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/reservation-timeouts"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPath) ReservationTimeouts() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ReservationTimeoutsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ReservationTimeoutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"reservation-timeouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReservationTimeouts (leaf): The number of Reservation State Blocks (RSBs) that
// have been timed out by the local system.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reservation-timeouts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/reservation-timeouts"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_CountersPathAny) ReservationTimeouts() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ReservationTimeoutsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ReservationTimeoutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reservation-timeouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_AuthenticationFailPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/authentication-fail YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_AuthenticationFailPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_AuthenticationFailPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/authentication-fail YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_AuthenticationFailPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadChecksumPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-checksum YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadChecksumPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadChecksumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-checksum YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadChecksumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketFormatPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-packet-format YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketFormatPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketFormatPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-packet-format YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketFormatPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketLengthPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-packet-length YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-packet-length YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_OutOfOrderPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/out-of-order YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_OutOfOrderPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_OutOfOrderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/out-of-order YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_OutOfOrderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_ReceivedNackPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/received-nack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_ReceivedNackPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_ReceivedNackPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/received-nack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_ReceivedNackPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitFailurePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/transmit-failure YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitFailurePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitFailurePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/transmit-failure YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitFailurePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitQueueFullPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/transmit-queue-full YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitQueueFullPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitQueueFullPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/transmit-queue-full YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitQueueFullPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownAckPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/unknown-ack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownAckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownAckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/unknown-ack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownAckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownNackPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/unknown-nack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownNackPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownNackPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/unknown-nack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownNackPathAny struct {
	*ygot.NodePath
}

// AuthenticationFail (leaf): The number of packets received that have failed RSVP-TE
// authentication checks in the specified context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication-fail"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/authentication-fail"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) AuthenticationFail() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_AuthenticationFailPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_AuthenticationFailPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication-fail"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationFail (leaf): The number of packets received that have failed RSVP-TE
// authentication checks in the specified context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication-fail"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/authentication-fail"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) AuthenticationFail() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_AuthenticationFailPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_AuthenticationFailPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication-fail"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadChecksum (leaf): The number of packets received that have an incorrect RSVP-TE
// checksum in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-checksum"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-checksum"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) BadChecksum() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadChecksumPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadChecksumPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadChecksum (leaf): The number of packets received that have an incorrect RSVP-TE
// checksum in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-checksum"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-checksum"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) BadChecksum() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadChecksumPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadChecksumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadPacketFormat (leaf): The number of packets received that were dropped due to being
// badly formed in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-packet-format"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-packet-format"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) BadPacketFormat() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketFormatPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketFormatPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-packet-format"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadPacketFormat (leaf): The number of packets received that were dropped due to being
// badly formed in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-packet-format"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-packet-format"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) BadPacketFormat() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketFormatPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketFormatPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-packet-format"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadPacketLength (leaf): The number of packets received that were dropped due to having
// an invalid length specified in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-packet-length"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-packet-length"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) BadPacketLength() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketLengthPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-packet-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadPacketLength (leaf): The number of packets received that were dropped due to having
// an invalid length specified in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-packet-length"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/bad-packet-length"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) BadPacketLength() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketLengthPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_BadPacketLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-packet-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOfOrder (leaf): The number of messages received out of order in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-of-order"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/out-of-order"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) OutOfOrder() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_OutOfOrderPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_OutOfOrderPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-of-order"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOfOrder (leaf): The number of messages received out of order in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-of-order"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/out-of-order"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) OutOfOrder() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_OutOfOrderPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_OutOfOrderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-of-order"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceivedNack (leaf): The number of NACK RESV messages received in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received-nack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/received-nack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) ReceivedNack() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_ReceivedNackPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_ReceivedNackPath{
		NodePath: ygot.NewNodePath(
			[]string{"received-nack"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceivedNack (leaf): The number of NACK RESV messages received in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received-nack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/received-nack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) ReceivedNack() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_ReceivedNackPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_ReceivedNackPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"received-nack"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitFailure (leaf): The total number of packets dropped on transmit in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transmit-failure"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/transmit-failure"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) TransmitFailure() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitFailurePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitFailurePath{
		NodePath: ygot.NewNodePath(
			[]string{"transmit-failure"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitFailure (leaf): The total number of packets dropped on transmit in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transmit-failure"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/transmit-failure"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) TransmitFailure() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitFailurePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitFailurePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transmit-failure"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitQueueFull (leaf): The number of packets dropped due to the transmit queue being
// full in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transmit-queue-full"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/transmit-queue-full"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) TransmitQueueFull() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitQueueFullPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitQueueFullPath{
		NodePath: ygot.NewNodePath(
			[]string{"transmit-queue-full"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitQueueFull (leaf): The number of packets dropped due to the transmit queue being
// full in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transmit-queue-full"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/transmit-queue-full"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) TransmitQueueFull() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitQueueFullPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_TransmitQueueFullPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transmit-queue-full"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownAck (leaf): The number of packets received containing an ACK for an unknown
// message ID in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-ack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/unknown-ack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) UnknownAck() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownAckPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownAckPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-ack"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownAck (leaf): The number of packets received containing an ACK for an unknown
// message ID in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-ack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/unknown-ack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) UnknownAck() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownAckPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownAckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-ack"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownNack (leaf): The number of packets received containing a NACK for an unknown
// message ID in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-nack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/unknown-nack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPath) UnknownNack() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownNackPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownNackPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-nack"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownNack (leaf): The number of packets received containing a NACK for an unknown
// message ID in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-nack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/state/counters/errors/unknown-nack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_ErrorsPathAny) UnknownNack() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownNackPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Counters_Errors_UnknownNackPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-nack"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/recovery-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/recovery-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/restart-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/restart-time YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePathAny struct {
	*ygot.NodePath
}

// Enable (leaf): Enables graceful restart on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables graceful restart on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// RecoveryTime (leaf): RSVP state recovery time
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recovery-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/recovery-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath) RecoveryTime() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recovery-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RecoveryTime (leaf): RSVP state recovery time
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recovery-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/recovery-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny) RecoveryTime() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RecoveryTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recovery-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Graceful restart time (seconds).
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/restart-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPath) RestartTime() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Graceful restart time (seconds).
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-time"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/graceful-restart/state/restart-time"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestartPathAny) RestartTime() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_GracefulRestart_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/state/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/state/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPathAny struct {
	*ygot.NodePath
}

// HelloInterval (leaf): set the interval in ms between RSVP hello
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): set the interval in ms between RSVP hello
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): enables all RSVP refresh reduction message
// bundling, RSVP message ID, reliable message delivery
// and summary refresh
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/state/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPath) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): enables all RSVP refresh reduction message
// bundling, RSVP message ID, reliable message delivery
// and summary refresh
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/hellos/state/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_HellosPathAny) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_Hellos_RefreshReductionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/state/soft-preemption-timeout YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/state/soft-preemption-timeout YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPathAny struct {
	*ygot.NodePath
}

// Enable (leaf): Enables soft preemption on a node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables soft preemption on a node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemptionTimeout (leaf): Timeout value for soft preemption to revert
// to hard preemption. The default timeout for
// soft-preemption is 30 seconds - after which
// the local system reverts to hard pre-emption.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/soft-preemption-timeout"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/state/soft-preemption-timeout"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPath) SoftPreemptionTimeout() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "soft-preemption-timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftPreemptionTimeout (leaf): Timeout value for soft preemption to revert
// to hard preemption. The default timeout for
// soft-preemption is 30 seconds - after which
// the local system reverts to hard pre-emption.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/soft-preemption-timeout"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/global/soft-preemption/state/soft-preemption-timeout"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemptionPathAny) SoftPreemptionTimeout() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Global_SoftPreemption_SoftPreemptionTimeoutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "soft-preemption-timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_MaxLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/max-link-bandwidth YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_MaxLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_MaxLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/max-link-bandwidth YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_MaxLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// Authentication (container): Configuration and state parameters relating to RSVP
// authentication as per RFC2747
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) Authentication() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Configuration and state parameters relating to RSVP
// authentication as per RFC2747
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) Authentication() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// BandwidthReservationAny (list): Available and reserved bandwidth by priority on
// the interface.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-reservations/bandwidth-reservation"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation"
// Priority (wildcarded): [UnionUint8, E_BandwidthReservation_Priority_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) BandwidthReservationAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-reservations", "bandwidth-reservation"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// BandwidthReservationAny (list): Available and reserved bandwidth by priority on
// the interface.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-reservations/bandwidth-reservation"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation"
// Priority (wildcarded): [UnionUint8, E_BandwidthReservation_Priority_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) BandwidthReservationAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-reservations", "bandwidth-reservation"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// BandwidthReservation (list): Available and reserved bandwidth by priority on
// the interface.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-reservations/bandwidth-reservation"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation"
// Priority: [UnionUint8, E_BandwidthReservation_Priority_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) BandwidthReservation(Priority NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_Priority_Union) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPath{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-reservations", "bandwidth-reservation"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// BandwidthReservation (list): Available and reserved bandwidth by priority on
// the interface.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-reservations/bandwidth-reservation"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation"
// Priority: [UnionUint8, E_BandwidthReservation_Priority_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) BandwidthReservation(Priority NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_Priority_Union) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-reservations", "bandwidth-reservation"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// Counters (container): Interface specific RSVP statistics and counters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) Counters() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Interface specific RSVP statistics and counters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) Counters() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hellos (container): Top level container for RSVP hello parameters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hellos"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) Hellos() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath{
		NodePath: ygot.NewNodePath(
			[]string{"hellos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hellos (container): Top level container for RSVP hello parameters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hellos"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) Hellos() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hellos"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (leaf): The maximum link bandwidth expressed in kilobits
// per second. This value should be the same (other than
// the units) as the value that is advertised into the
// IGP traffic engineering database.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-link-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/max-link-bandwidth"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) MaxLinkBandwidth() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_MaxLinkBandwidthPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_MaxLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (leaf): The maximum link bandwidth expressed in kilobits
// per second. This value should be the same (other than
// the units) as the value that is advertised into the
// IGP traffic engineering database.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-link-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/max-link-bandwidth"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) MaxLinkBandwidth() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_MaxLinkBandwidthPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_MaxLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protection (container): link-protection (NHOP) related configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protection"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) Protection() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protection (container): link-protection (NHOP) related configuration
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "protection"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) Protection() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subscription (container): Bandwidth percentage reservable by RSVP
// on an interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subscription"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePath) Subscription() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"subscription"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subscription (container): Bandwidth percentage reservable by RSVP
// on an interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subscription"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_InterfacePathAny) Subscription() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subscription"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/authentication-type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/authentication-type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/enable YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): Authenticate RSVP signaling messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): Authenticate RSVP signaling messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/authentication-key"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationType (leaf): RSVP message authentication algorithm type
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/authentication-type"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath) AuthenticationType() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationType (leaf): RSVP message authentication algorithm type
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/authentication-type"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny) AuthenticationType() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_AuthenticationTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables RSVP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPath) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables RSVP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/authentication/state/enable"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_AuthenticationPathAny) Enable() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Authentication_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ActiveReservationsCountPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/active-reservations-count YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ActiveReservationsCountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ActiveReservationsCountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/active-reservations-count YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ActiveReservationsCountPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_AvailableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/available-bandwidth YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_AvailableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_AvailableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/available-bandwidth YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_AvailableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_HighwaterMarkPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/highwater-mark YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_HighwaterMarkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_HighwaterMarkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/highwater-mark YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_HighwaterMarkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/priority YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/priority YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ReservedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/reserved-bandwidth YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ReservedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ReservedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/reserved-bandwidth YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ReservedBandwidthPathAny struct {
	*ygot.NodePath
}

// ActiveReservationsCount (leaf): Number of active RSVP reservations in the associated
// priority, or the sum of all reservations when the priority
// level is set to ALL
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-reservations-count"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/active-reservations-count"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPath) ActiveReservationsCount() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ActiveReservationsCountPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ActiveReservationsCountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-reservations-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveReservationsCount (leaf): Number of active RSVP reservations in the associated
// priority, or the sum of all reservations when the priority
// level is set to ALL
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-reservations-count"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/active-reservations-count"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny) ActiveReservationsCount() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ActiveReservationsCountPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ActiveReservationsCountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-reservations-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (leaf): Bandwidth currently available with the priority level,
// or for the entire interface when the priority is set to
// ALL
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/available-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/available-bandwidth"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPath) AvailableBandwidth() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_AvailableBandwidthPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_AvailableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (leaf): Bandwidth currently available with the priority level,
// or for the entire interface when the priority is set to
// ALL
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/available-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/available-bandwidth"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny) AvailableBandwidth() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_AvailableBandwidthPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_AvailableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// HighwaterMark (leaf): Maximum bandwidth reserved on the interface within the
// priority, or across all priorities in the case that the
// priority level is set to ALL
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/highwater-mark"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/highwater-mark"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPath) HighwaterMark() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_HighwaterMarkPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_HighwaterMarkPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "highwater-mark"},
			map[string]interface{}{},
			n,
		),
	}
}

// HighwaterMark (leaf): Maximum bandwidth reserved on the interface within the
// priority, or across all priorities in the case that the
// priority level is set to ALL
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/highwater-mark"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/highwater-mark"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny) HighwaterMark() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_HighwaterMarkPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_HighwaterMarkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "highwater-mark"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): RSVP priority level for LSPs traversing the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/priority"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPath) Priority() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_PriorityPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): RSVP priority level for LSPs traversing the interface
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/priority"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny) Priority() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_PriorityPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReservedBandwidth (leaf): Bandwidth currently reserved within the priority level,
// or the sum of all priority levels when the keyword is set
// to ALL
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reserved-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/reserved-bandwidth"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPath) ReservedBandwidth() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ReservedBandwidthPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ReservedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reserved-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReservedBandwidth (leaf): Bandwidth currently reserved within the priority level,
// or the sum of all priority levels when the keyword is set
// to ALL
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reserved-bandwidth"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/bandwidth-reservations/bandwidth-reservation/state/reserved-bandwidth"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservationPathAny) ReservedBandwidth() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ReservedBandwidthPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_BandwidthReservation_ReservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reserved-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InAckMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-ack-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InAckMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InAckMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-ack-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InAckMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InHelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-hello-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InHelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InHelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-hello-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InHelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathErrorMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathErrorMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathErrorMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathErrorMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathTearMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathTearMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathTearMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathTearMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationErrorMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationErrorMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationErrorMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationErrorMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationTearMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationTearMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationTearMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationTearMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InSrefreshMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-srefresh-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InSrefreshMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InSrefreshMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-srefresh-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InSrefreshMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutAckMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-ack-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutAckMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutAckMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-ack-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutAckMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutHelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-hello-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutHelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutHelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-hello-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutHelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathErrorMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathErrorMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathErrorMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathErrorMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathTearMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathTearMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathTearMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathTearMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationErrorMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationErrorMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationErrorMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-error-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationErrorMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationTearMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationTearMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationTearMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-tear-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationTearMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutSrefreshMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-srefresh-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutSrefreshMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutSrefreshMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-srefresh-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutSrefreshMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_RateLimitedMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/rate-limited-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_RateLimitedMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_RateLimitedMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/rate-limited-messages YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_RateLimitedMessagesPathAny struct {
	*ygot.NodePath
}

// Errors (container): Interface specific RSVP error counters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "errors"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) Errors() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Errors (container): Interface specific RSVP error counters
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "errors"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) Errors() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// InAckMessages (leaf): Number of received RSVP refresh reduction ack
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-ack-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-ack-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) InAckMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InAckMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InAckMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-ack-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InAckMessages (leaf): Number of received RSVP refresh reduction ack
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-ack-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-ack-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) InAckMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InAckMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InAckMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-ack-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InHelloMessages (leaf): Number of received RSVP hello messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-hello-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-hello-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) InHelloMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InHelloMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InHelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InHelloMessages (leaf): Number of received RSVP hello messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-hello-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-hello-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) InHelloMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InHelloMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InHelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathErrorMessages (leaf): Number of received RSVP Path Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) InPathErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathErrorMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathErrorMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathErrorMessages (leaf): Number of received RSVP Path Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) InPathErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathErrorMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathErrorMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathMessages (leaf): Number of received RSVP Path messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) InPathMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathMessages (leaf): Number of received RSVP Path messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) InPathMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathTearMessages (leaf): Number of received RSVP Path Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) InPathTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathTearMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathTearMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPathTearMessages (leaf): Number of received RSVP Path Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-path-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-path-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) InPathTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathTearMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InPathTearMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-path-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationErrorMessages (leaf): Number of received RSVP Resv Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) InReservationErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationErrorMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationErrorMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationErrorMessages (leaf): Number of received RSVP Resv Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) InReservationErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationErrorMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationErrorMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationMessages (leaf): Number of received RSVP Resv messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) InReservationMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationMessages (leaf): Number of received RSVP Resv messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) InReservationMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationTearMessages (leaf): Number of received RSVP Resv Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) InReservationTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationTearMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationTearMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InReservationTearMessages (leaf): Number of received RSVP Resv Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-reservation-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-reservation-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) InReservationTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationTearMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InReservationTearMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-reservation-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InSrefreshMessages (leaf): Number of received RSVP summary refresh messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-srefresh-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-srefresh-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) InSrefreshMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InSrefreshMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InSrefreshMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-srefresh-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// InSrefreshMessages (leaf): Number of received RSVP summary refresh messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-srefresh-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/in-srefresh-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) InSrefreshMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InSrefreshMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_InSrefreshMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-srefresh-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutAckMessages (leaf): Number of sent RSVP refresh reduction ack messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-ack-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-ack-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) OutAckMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutAckMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutAckMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-ack-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutAckMessages (leaf): Number of sent RSVP refresh reduction ack messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-ack-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-ack-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) OutAckMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutAckMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutAckMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-ack-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutHelloMessages (leaf): Number of sent RSVP hello messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-hello-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-hello-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) OutHelloMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutHelloMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutHelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutHelloMessages (leaf): Number of sent RSVP hello messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-hello-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-hello-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) OutHelloMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutHelloMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutHelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathErrorMessages (leaf): Number of sent RSVP Path Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) OutPathErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathErrorMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathErrorMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathErrorMessages (leaf): Number of sent RSVP Path Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) OutPathErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathErrorMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathErrorMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathMessages (leaf): Number of sent RSVP PATH messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) OutPathMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathMessages (leaf): Number of sent RSVP PATH messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) OutPathMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathTearMessages (leaf): Number of sent RSVP Path Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) OutPathTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathTearMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathTearMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPathTearMessages (leaf): Number of sent RSVP Path Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-path-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-path-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) OutPathTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathTearMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutPathTearMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-path-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationErrorMessages (leaf): Number of sent RSVP Resv Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) OutReservationErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationErrorMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationErrorMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationErrorMessages (leaf): Number of sent RSVP Resv Error messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-error-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-error-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) OutReservationErrorMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationErrorMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationErrorMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-error-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationMessages (leaf): Number of sent RSVP Resv messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) OutReservationMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationMessages (leaf): Number of sent RSVP Resv messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) OutReservationMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationTearMessages (leaf): Number of sent RSVP Resv Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) OutReservationTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationTearMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationTearMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutReservationTearMessages (leaf): Number of sent RSVP Resv Tear messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-reservation-tear-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-reservation-tear-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) OutReservationTearMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationTearMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutReservationTearMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-reservation-tear-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutSrefreshMessages (leaf): Number of sent RSVP summary refresh messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-srefresh-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-srefresh-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) OutSrefreshMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutSrefreshMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutSrefreshMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-srefresh-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutSrefreshMessages (leaf): Number of sent RSVP summary refresh messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-srefresh-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/out-srefresh-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) OutSrefreshMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutSrefreshMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_OutSrefreshMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-srefresh-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// RateLimitedMessages (leaf): RSVP messages dropped due to rate limiting
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rate-limited-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/rate-limited-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPath) RateLimitedMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_RateLimitedMessagesPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_RateLimitedMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"rate-limited-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// RateLimitedMessages (leaf): RSVP messages dropped due to rate limiting
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rate-limited-messages"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/rate-limited-messages"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_CountersPathAny) RateLimitedMessages() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_RateLimitedMessagesPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_RateLimitedMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rate-limited-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_AuthenticationFailPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/authentication-fail YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_AuthenticationFailPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_AuthenticationFailPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/authentication-fail YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_AuthenticationFailPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadChecksumPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-checksum YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadChecksumPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadChecksumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-checksum YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadChecksumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketFormatPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-packet-format YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketFormatPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketFormatPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-packet-format YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketFormatPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketLengthPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-packet-length YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-packet-length YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_OutOfOrderPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/out-of-order YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_OutOfOrderPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_OutOfOrderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/out-of-order YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_OutOfOrderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_ReceivedNackPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/received-nack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_ReceivedNackPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_ReceivedNackPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/received-nack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_ReceivedNackPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitFailurePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/transmit-failure YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitFailurePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitFailurePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/transmit-failure YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitFailurePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitQueueFullPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/transmit-queue-full YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitQueueFullPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitQueueFullPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/transmit-queue-full YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitQueueFullPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownAckPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/unknown-ack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownAckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownAckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/unknown-ack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownAckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownNackPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/unknown-nack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownNackPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownNackPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/unknown-nack YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownNackPathAny struct {
	*ygot.NodePath
}

// AuthenticationFail (leaf): The number of packets received that have failed RSVP-TE
// authentication checks in the specified context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication-fail"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/authentication-fail"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) AuthenticationFail() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_AuthenticationFailPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_AuthenticationFailPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication-fail"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationFail (leaf): The number of packets received that have failed RSVP-TE
// authentication checks in the specified context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication-fail"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/authentication-fail"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) AuthenticationFail() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_AuthenticationFailPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_AuthenticationFailPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication-fail"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadChecksum (leaf): The number of packets received that have an incorrect RSVP-TE
// checksum in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-checksum"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-checksum"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) BadChecksum() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadChecksumPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadChecksumPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadChecksum (leaf): The number of packets received that have an incorrect RSVP-TE
// checksum in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-checksum"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-checksum"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) BadChecksum() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadChecksumPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadChecksumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadPacketFormat (leaf): The number of packets received that were dropped due to being
// badly formed in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-packet-format"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-packet-format"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) BadPacketFormat() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketFormatPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketFormatPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-packet-format"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadPacketFormat (leaf): The number of packets received that were dropped due to being
// badly formed in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-packet-format"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-packet-format"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) BadPacketFormat() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketFormatPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketFormatPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-packet-format"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadPacketLength (leaf): The number of packets received that were dropped due to having
// an invalid length specified in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-packet-length"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-packet-length"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) BadPacketLength() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketLengthPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"bad-packet-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// BadPacketLength (leaf): The number of packets received that were dropped due to having
// an invalid length specified in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bad-packet-length"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/bad-packet-length"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) BadPacketLength() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketLengthPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_BadPacketLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bad-packet-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOfOrder (leaf): The number of messages received out of order in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-of-order"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/out-of-order"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) OutOfOrder() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_OutOfOrderPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_OutOfOrderPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-of-order"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOfOrder (leaf): The number of messages received out of order in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-of-order"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/out-of-order"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) OutOfOrder() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_OutOfOrderPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_OutOfOrderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-of-order"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceivedNack (leaf): The number of NACK RESV messages received in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received-nack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/received-nack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) ReceivedNack() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_ReceivedNackPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_ReceivedNackPath{
		NodePath: ygot.NewNodePath(
			[]string{"received-nack"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceivedNack (leaf): The number of NACK RESV messages received in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received-nack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/received-nack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) ReceivedNack() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_ReceivedNackPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_ReceivedNackPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"received-nack"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitFailure (leaf): The total number of packets dropped on transmit in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transmit-failure"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/transmit-failure"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) TransmitFailure() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitFailurePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitFailurePath{
		NodePath: ygot.NewNodePath(
			[]string{"transmit-failure"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitFailure (leaf): The total number of packets dropped on transmit in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transmit-failure"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/transmit-failure"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) TransmitFailure() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitFailurePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitFailurePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transmit-failure"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitQueueFull (leaf): The number of packets dropped due to the transmit queue being
// full in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transmit-queue-full"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/transmit-queue-full"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) TransmitQueueFull() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitQueueFullPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitQueueFullPath{
		NodePath: ygot.NewNodePath(
			[]string{"transmit-queue-full"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitQueueFull (leaf): The number of packets dropped due to the transmit queue being
// full in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transmit-queue-full"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/transmit-queue-full"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) TransmitQueueFull() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitQueueFullPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_TransmitQueueFullPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transmit-queue-full"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownAck (leaf): The number of packets received containing an ACK for an unknown
// message ID in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-ack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/unknown-ack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) UnknownAck() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownAckPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownAckPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-ack"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownAck (leaf): The number of packets received containing an ACK for an unknown
// message ID in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-ack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/unknown-ack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) UnknownAck() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownAckPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownAckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-ack"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownNack (leaf): The number of packets received containing a NACK for an unknown
// message ID in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-nack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/unknown-nack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPath) UnknownNack() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownNackPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownNackPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-nack"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownNack (leaf): The number of packets received containing a NACK for an unknown
// message ID in the context.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-nack"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/state/counters/errors/unknown-nack"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_ErrorsPathAny) UnknownNack() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownNackPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Counters_Errors_UnknownNackPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-nack"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/state/hello-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/state/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/state/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPathAny struct {
	*ygot.NodePath
}

// HelloInterval (leaf): set the interval in ms between RSVP hello
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): set the interval in ms between RSVP hello
// messages
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/state/hello-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny) HelloInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): enables all RSVP refresh reduction message
// bundling, RSVP message ID, reliable message delivery
// and summary refresh
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/state/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPath) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): enables all RSVP refresh reduction message
// bundling, RSVP message ID, reliable message delivery
// and summary refresh
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/hellos/state/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_HellosPathAny) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Hellos_RefreshReductionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/state/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath) Interface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/state/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/state/bypass-optimize-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/state/bypass-optimize-interval YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/state/link-protection-style-requested YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/state/link-protection-style-requested YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPathAny struct {
	*ygot.NodePath
}

// BypassOptimizeInterval (leaf): interval between periodic optimization
// of the bypass LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bypass-optimize-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/state/bypass-optimize-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath) BypassOptimizeInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bypass-optimize-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// BypassOptimizeInterval (leaf): interval between periodic optimization
// of the bypass LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bypass-optimize-interval"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/state/bypass-optimize-interval"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny) BypassOptimizeInterval() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_BypassOptimizeIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bypass-optimize-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionStyleRequested (leaf): Style of mpls frr protection desired:
// link, link-node, or unprotected
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-protection-style-requested"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/state/link-protection-style-requested"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPath) LinkProtectionStyleRequested() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-protection-style-requested"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionStyleRequested (leaf): Style of mpls frr protection desired:
// link, link-node, or unprotected
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-protection-style-requested"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/protection/state/link-protection-style-requested"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_ProtectionPathAny) LinkProtectionStyleRequested() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Protection_LinkProtectionStyleRequestedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-protection-style-requested"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_CalculatedAbsoluteSubscriptionBwPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/state/calculated-absolute-subscription-bw YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_CalculatedAbsoluteSubscriptionBwPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_CalculatedAbsoluteSubscriptionBwPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/state/calculated-absolute-subscription-bw YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_CalculatedAbsoluteSubscriptionBwPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/state/subscription YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/state/subscription YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPathAny struct {
	*ygot.NodePath
}

// CalculatedAbsoluteSubscriptionBw (leaf): The calculated absolute value of the bandwidth
// which is reservable to RSVP-TE on the interface
// prior to any adjustments that may be made from
// external sources.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/calculated-absolute-subscription-bw"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/state/calculated-absolute-subscription-bw"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath) CalculatedAbsoluteSubscriptionBw() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_CalculatedAbsoluteSubscriptionBwPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_CalculatedAbsoluteSubscriptionBwPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "calculated-absolute-subscription-bw"},
			map[string]interface{}{},
			n,
		),
	}
}

// CalculatedAbsoluteSubscriptionBw (leaf): The calculated absolute value of the bandwidth
// which is reservable to RSVP-TE on the interface
// prior to any adjustments that may be made from
// external sources.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/calculated-absolute-subscription-bw"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/state/calculated-absolute-subscription-bw"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny) CalculatedAbsoluteSubscriptionBw() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_CalculatedAbsoluteSubscriptionBwPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_CalculatedAbsoluteSubscriptionBwPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "calculated-absolute-subscription-bw"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subscription (leaf): percentage of the interface bandwidth that
// RSVP can reserve
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subscription"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/state/subscription"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPath) Subscription() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subscription"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subscription (leaf): percentage of the interface bandwidth that
// RSVP can reserve
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subscription"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/interface-attributes/interface/subscription/state/subscription"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_SubscriptionPathAny) Subscription() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Interface_Subscription_SubscriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subscription"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_DetectedInterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/detected-interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_DetectedInterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_DetectedInterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/detected-interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_DetectedInterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_NeighborStatusPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/neighbor-status YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_NeighborStatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_NeighborStatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/neighbor-status YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_NeighborStatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_RefreshReductionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_RefreshReductionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_RefreshReductionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/refresh-reduction YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_RefreshReductionPathAny struct {
	*ygot.NodePath
}

// Address (leaf): Address of RSVP neighbor
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/address"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPath) Address() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_AddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): Address of RSVP neighbor
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/address"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny) Address() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_AddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DetectedInterface (leaf): Interface where RSVP neighbor was detected
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/detected-interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/detected-interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPath) DetectedInterface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_DetectedInterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_DetectedInterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "detected-interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// DetectedInterface (leaf): Interface where RSVP neighbor was detected
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/detected-interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/detected-interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny) DetectedInterface() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_DetectedInterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_DetectedInterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "detected-interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborStatus (leaf): Enumuration of possible RSVP neighbor states
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-status"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/neighbor-status"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPath) NeighborStatus() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_NeighborStatusPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_NeighborStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborStatus (leaf): Enumuration of possible RSVP neighbor states
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-status"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/neighbor-status"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny) NeighborStatus() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_NeighborStatusPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_NeighborStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): Suppport of neighbor for RSVP refresh reduction
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPath) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_RefreshReductionPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_RefreshReductionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// RefreshReduction (leaf): Suppport of neighbor for RSVP refresh reduction
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/refresh-reduction"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/neighbors/neighbor/state/refresh-reduction"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_NeighborPathAny) RefreshReduction() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_RefreshReductionPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Neighbor_RefreshReductionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "refresh-reduction"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_DestinationAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/destination-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_DestinationAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_DestinationAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/destination-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_DestinationAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelInPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelInPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelInPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelInPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelOutPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelOutPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelOutPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelOutPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LocalIndexPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/local-index YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LocalIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LocalIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/local-index YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LocalIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LspIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/lsp-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LspIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LspIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/lsp-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LspIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ProtectionRequestedPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/protection-requested YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ProtectionRequestedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ProtectionRequestedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/protection-requested YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ProtectionRequestedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SessionNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/session-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SessionNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SessionNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/session-name YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SessionNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SourceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/source-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SourceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SourceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/source-address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SourceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_StatusPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/status YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_StatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_StatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/status YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_StatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TunnelIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/tunnel-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TunnelIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TunnelIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/tunnel-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TunnelIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TypePathAny struct {
	*ygot.NodePath
}

// DestinationAddress (leaf): Destination address of RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/destination-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) DestinationAddress() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_DestinationAddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_DestinationAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationAddress (leaf): Destination address of RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/destination-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) DestinationAddress() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_DestinationAddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_DestinationAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitRouteObjectAny (list): Read-only list of explicit route objects associated with the
// traffic-engineered tunnel. Each entry in the list contains
// a hop IP address, and the MPLS label allocated at the hop.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "explicit-route-objects/explicit-route-object"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object"
// Index (wildcarded): uint64
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) ExplicitRouteObjectAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"explicit-route-objects", "explicit-route-object"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// ExplicitRouteObjectAny (list): Read-only list of explicit route objects associated with the
// traffic-engineered tunnel. Each entry in the list contains
// a hop IP address, and the MPLS label allocated at the hop.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "explicit-route-objects/explicit-route-object"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object"
// Index (wildcarded): uint64
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) ExplicitRouteObjectAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"explicit-route-objects", "explicit-route-object"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// ExplicitRouteObject (list): Read-only list of explicit route objects associated with the
// traffic-engineered tunnel. Each entry in the list contains
// a hop IP address, and the MPLS label allocated at the hop.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "explicit-route-objects/explicit-route-object"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object"
// Index: uint64
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) ExplicitRouteObject(Index uint64) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath{
		NodePath: ygot.NewNodePath(
			[]string{"explicit-route-objects", "explicit-route-object"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// ExplicitRouteObject (list): Read-only list of explicit route objects associated with the
// traffic-engineered tunnel. Each entry in the list contains
// a hop IP address, and the MPLS label allocated at the hop.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "explicit-route-objects/explicit-route-object"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object"
// Index: uint64
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) ExplicitRouteObject(Index uint64) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"explicit-route-objects", "explicit-route-object"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// LabelIn (leaf): Incoming MPLS label associated with this RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-in"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) LabelIn() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelInPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelInPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-in"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelIn (leaf): Incoming MPLS label associated with this RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-in"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-in"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) LabelIn() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelInPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelInPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-in"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelOut (leaf): Outgoing MPLS label associated with this RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-out"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) LabelOut() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelOutPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelOutPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-out"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelOut (leaf): Outgoing MPLS label associated with this RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-out"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/label-out"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) LabelOut() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelOutPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LabelOutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-out"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIndex (leaf): The index used to identify the RSVP session
// on the local network element. This index is
// generated by the device and is unique only
// to the local network element.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-index"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/local-index"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) LocalIndex() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LocalIndexPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LocalIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIndex (leaf): The index used to identify the RSVP session
// on the local network element. This index is
// generated by the device and is unique only
// to the local network element.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-index"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/local-index"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) LocalIndex() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LocalIndexPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LocalIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspId (leaf): The LSP ID distinguishes between two LSPs
// originated from the same headend, and is
// commonly used to distinguish RSVP sessions
// during make before break operations.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/lsp-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) LspId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LspIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LspIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspId (leaf): The LSP ID distinguishes between two LSPs
// originated from the same headend, and is
// commonly used to distinguish RSVP sessions
// during make before break operations.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/lsp-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) LspId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LspIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_LspIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionRequested (leaf): The type of protection requested for the RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protection-requested"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/protection-requested"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) ProtectionRequested() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ProtectionRequestedPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ProtectionRequestedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protection-requested"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionRequested (leaf): The type of protection requested for the RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protection-requested"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/protection-requested"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) ProtectionRequested() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ProtectionRequestedPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ProtectionRequestedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protection-requested"},
			map[string]interface{}{},
			n,
		),
	}
}

// RecordRouteObjectAny (list): Read-only list of record route objects associated with the
// traffic engineered tunnel. Each entry in the list
// may contain a hop IP address, MPLS label allocated
// at the hop, and the flags associated with the entry.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "record-route-objects/record-route-object"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object"
// Index (wildcarded): uint8
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) RecordRouteObjectAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"record-route-objects", "record-route-object"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// RecordRouteObjectAny (list): Read-only list of record route objects associated with the
// traffic engineered tunnel. Each entry in the list
// may contain a hop IP address, MPLS label allocated
// at the hop, and the flags associated with the entry.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "record-route-objects/record-route-object"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object"
// Index (wildcarded): uint8
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) RecordRouteObjectAny() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"record-route-objects", "record-route-object"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// RecordRouteObject (list): Read-only list of record route objects associated with the
// traffic engineered tunnel. Each entry in the list
// may contain a hop IP address, MPLS label allocated
// at the hop, and the flags associated with the entry.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "record-route-objects/record-route-object"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object"
// Index: uint8
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) RecordRouteObject(Index uint8) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPath{
		NodePath: ygot.NewNodePath(
			[]string{"record-route-objects", "record-route-object"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// RecordRouteObject (list): Read-only list of record route objects associated with the
// traffic engineered tunnel. Each entry in the list
// may contain a hop IP address, MPLS label allocated
// at the hop, and the flags associated with the entry.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "record-route-objects/record-route-object"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object"
// Index: uint8
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) RecordRouteObject(Index uint8) *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"record-route-objects", "record-route-object"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// SenderTspec (container): Operational state statistics relating to the SENDER_TSPEC
// received for the RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sender-tspec"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) SenderTspec() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sender-tspec"},
			map[string]interface{}{},
			n,
		),
	}
}

// SenderTspec (container): Operational state statistics relating to the SENDER_TSPEC
// received for the RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sender-tspec"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) SenderTspec() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sender-tspec"},
			map[string]interface{}{},
			n,
		),
	}
}

// SessionName (leaf): The signaled name of this RSVP session.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/session-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/session-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) SessionName() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SessionNamePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SessionNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "session-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SessionName (leaf): The signaled name of this RSVP session.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/session-name"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/session-name"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) SessionName() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SessionNamePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SessionNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "session-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Origin address of RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/source-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) SourceAddress() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SourceAddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Origin address of RSVP session
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/source-address"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) SourceAddress() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SourceAddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Enumeration of RSVP session states
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/status"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/status"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) Status() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_StatusPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_StatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Enumeration of RSVP session states
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/status"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/status"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) Status() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_StatusPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_StatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// TunnelId (leaf): The tunnel ID is an identifier used in the
// RSVP session, which remains constant over
// the life of the tunnel.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tunnel-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/tunnel-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) TunnelId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TunnelIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TunnelIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tunnel-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// TunnelId (leaf): The tunnel ID is an identifier used in the
// RSVP session, which remains constant over
// the life of the tunnel.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tunnel-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/tunnel-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) TunnelId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TunnelIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TunnelIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tunnel-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type/role of the RSVP session, signifing
// the session's role on the current device, such as
// a transit session vs. an ingress session.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/type"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPath) Type() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TypePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type/role of the RSVP session, signifing
// the session's role on the current device, such as
// a transit session vs. an ingress session.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/type"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_SessionPathAny) Type() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TypePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_AsnPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/asn YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_AsnPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_AsnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/asn YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_AsnPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/index YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/index YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IpPrefixPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/ip-prefix YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IpPrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IpPrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/ip-prefix YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IpPrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/label YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/label YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LoosePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/loose YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LoosePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LoosePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/loose YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LoosePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_TypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/type YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_TypePathAny struct {
	*ygot.NodePath
}

// Asn (leaf): The autonomous system number indicated by the ERO. Specified
// only when the ERO hop is an 2 or 4-byte AS number.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/asn"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/asn"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath) Asn() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_AsnPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_AsnPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "asn"},
			map[string]interface{}{},
			n,
		),
	}
}

// Asn (leaf): The autonomous system number indicated by the ERO. Specified
// only when the ERO hop is an 2 or 4-byte AS number.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/asn"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/asn"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny) Asn() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_AsnPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_AsnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "asn"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of the entry in the ERO. Entries are ordered in
// ascending order from the source to destination of the
// LSP.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/index"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath) Index() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IndexPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of the entry in the ERO. Entries are ordered in
// ascending order from the source to destination of the
// LSP.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/index"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny) Index() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IndexPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): The interface ID for an unnumbered interface. Specified only
// when the ERO hop is a unnumbered interface.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_InterfaceIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): The interface ID for an unnumbered interface. Specified only
// when the ERO hop is a unnumbered interface.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_InterfaceIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpPrefix (leaf): The IPv4 or IPv6 prefix indicated by the ERO. Specified
// only when the ERO hop is an IPv4 or IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-prefix"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/ip-prefix"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath) IpPrefix() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IpPrefixPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IpPrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpPrefix (leaf): The IPv4 or IPv6 prefix indicated by the ERO. Specified
// only when the ERO hop is an IPv4 or IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-prefix"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/ip-prefix"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny) IpPrefix() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IpPrefixPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_IpPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): The MPLS label specified in the ERO hop. Specified only when
// the hop is an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/label"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath) Label() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LabelPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): The MPLS label specified in the ERO hop. Specified only when
// the hop is an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/label"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny) Label() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LabelPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Loose (leaf): When set to true, indicates that the hop of the ERO is
// a loose hop within the explicit route. If unset, indicates
// that the hop must explicitly traverse the entity specified
// in the ERO hop as the next-entity.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/loose"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/loose"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath) Loose() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LoosePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LoosePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "loose"},
			map[string]interface{}{},
			n,
		),
	}
}

// Loose (leaf): When set to true, indicates that the hop of the ERO is
// a loose hop within the explicit route. If unset, indicates
// that the hop must explicitly traverse the entity specified
// in the ERO hop as the next-entity.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/loose"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/loose"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny) Loose() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LoosePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_LoosePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "loose"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of hop indicated by the ERO entry.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/type"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPath) Type() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_TypePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of hop indicated by the ERO entry.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/explicit-route-objects/explicit-route-object/state/type"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObjectPathAny) Type() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_TypePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_ExplicitRouteObject_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/address YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/index YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/index YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedFlagsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-flags YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedFlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedFlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-flags YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedFlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedLabelPathAny struct {
	*ygot.NodePath
}

// Address (leaf): IP router hop for RRO entry
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/address"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPath) Address() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_AddressPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): IP router hop for RRO entry
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/address"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny) Address() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_AddressPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of object in the list. Used for ordering.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/index"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPath) Index() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_IndexPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of object in the list. Used for ordering.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/index"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny) Index() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_IndexPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReportedFlags (leaf): Subobject flags for MPLS label
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reported-flags"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-flags"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPath) ReportedFlags() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedFlagsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedFlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reported-flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReportedFlags (leaf): Subobject flags for MPLS label
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reported-flags"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-flags"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny) ReportedFlags() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedFlagsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedFlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reported-flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReportedLabel (leaf): Label reported for RRO hop
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reported-label"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPath) ReportedLabel() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedLabelPath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reported-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReportedLabel (leaf): Label reported for RRO hop
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reported-label"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/record-route-objects/record-route-object/state/reported-label"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObjectPathAny) ReportedLabel() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedLabelPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_RecordRouteObject_ReportedLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reported-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_PeakDataRatePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_PeakDataRatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_PeakDataRatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_PeakDataRatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_RatePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/rate YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_RatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_RatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/rate YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_RatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_SizePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/size YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_SizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_SizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/size YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_SizePathAny struct {
	*ygot.NodePath
}

// PeakDataRate (leaf): The maximum traffic generation rate that the head-end
// device sends traffic at.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peak-data-rate"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPath) PeakDataRate() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_PeakDataRatePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_PeakDataRatePath{
		NodePath: ygot.NewNodePath(
			[]string{"peak-data-rate"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeakDataRate (leaf): The maximum traffic generation rate that the head-end
// device sends traffic at.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peak-data-rate"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/peak-data-rate"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPathAny) PeakDataRate() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_PeakDataRatePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_PeakDataRatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"peak-data-rate"},
			map[string]interface{}{},
			n,
		),
	}
}

// Rate (leaf): The rate at which the head-end device generates traffic,
// expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rate"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/rate"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPath) Rate() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_RatePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_RatePath{
		NodePath: ygot.NewNodePath(
			[]string{"rate"},
			map[string]interface{}{},
			n,
		),
	}
}

// Rate (leaf): The rate at which the head-end device generates traffic,
// expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rate"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/rate"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPathAny) Rate() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_RatePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_RatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rate"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The size of the token bucket that is used to determine
// the rate at which the head-end device generates traffic,
// expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "size"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/size"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPath) Size() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_SizePath {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_SizePath{
		NodePath: ygot.NewNodePath(
			[]string{"size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The size of the token bucket that is used to determine
// the rate at which the head-end device generates traffic,
// expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-mpls-rsvp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "size"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/rsvp-te/sessions/session/state/sender-tspec/size"
func (n *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspecPathAny) Size() *NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_SizePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_RsvpTe_Session_SenderTspec_SizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"size"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// AggregateSidCounterAny (list): Counters aggregated across all of the interfaces of the local
// system corresponding to traffic received or forwarded with a
// particular SID
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "aggregate-sid-counters/aggregate-sid-counter"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter"
// MplsLabel (wildcarded): [UnionUint32, E_MplsTypes_MplsLabel_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath) AggregateSidCounterAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"aggregate-sid-counters", "aggregate-sid-counter"},
			map[string]interface{}{"mpls-label": "*"},
			n,
		),
	}
}

// AggregateSidCounterAny (list): Counters aggregated across all of the interfaces of the local
// system corresponding to traffic received or forwarded with a
// particular SID
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "aggregate-sid-counters/aggregate-sid-counter"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter"
// MplsLabel (wildcarded): [UnionUint32, E_MplsTypes_MplsLabel_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny) AggregateSidCounterAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"aggregate-sid-counters", "aggregate-sid-counter"},
			map[string]interface{}{"mpls-label": "*"},
			n,
		),
	}
}

// AggregateSidCounter (list): Counters aggregated across all of the interfaces of the local
// system corresponding to traffic received or forwarded with a
// particular SID
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "aggregate-sid-counters/aggregate-sid-counter"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter"
// MplsLabel: [UnionUint32, E_MplsTypes_MplsLabel_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath) AggregateSidCounter(MplsLabel NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabel_Union) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPath{
		NodePath: ygot.NewNodePath(
			[]string{"aggregate-sid-counters", "aggregate-sid-counter"},
			map[string]interface{}{"mpls-label": MplsLabel},
			n,
		),
	}
}

// AggregateSidCounter (list): Counters aggregated across all of the interfaces of the local
// system corresponding to traffic received or forwarded with a
// particular SID
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "aggregate-sid-counters/aggregate-sid-counter"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter"
// MplsLabel: [UnionUint32, E_MplsTypes_MplsLabel_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny) AggregateSidCounter(MplsLabel NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabel_Union) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"aggregate-sid-counters", "aggregate-sid-counter"},
			map[string]interface{}{"mpls-label": MplsLabel},
			n,
		),
	}
}

// InterfaceAny (list): Parameters and MPLS-specific configuration relating to Segment
// Routing on an interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): Parameters and MPLS-specific configuration relating to Segment
// Routing on an interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny) InterfaceAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): Parameters and MPLS-specific configuration relating to Segment
// Routing on an interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPath) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): Parameters and MPLS-specific configuration relating to Segment
// Routing on an interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRoutingPathAny) Interface(InterfaceId string) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/in-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/in-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InPktsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/in-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/in-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/mpls-label YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/mpls-label YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/out-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/out-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/out-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/out-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutPktsPathAny struct {
	*ygot.NodePath
}

// InOctets (leaf): The cumulative counter of the total bytes received within the context
// which have matched a label corresponding to an SR Segment Identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/in-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPath) InOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InOctetsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total bytes received within the context
// which have matched a label corresponding to an SR Segment Identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/in-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny) InOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InOctetsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the packets received within the context
// which have matched a label corresponding to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/in-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPath) InPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InPktsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the packets received within the context
// which have matched a label corresponding to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/in-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny) InPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InPktsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_InPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabel (leaf): The MPLS label used for the segment identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/mpls-label"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPath) MplsLabel() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabelPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabel (leaf): The MPLS label used for the segment identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/mpls-label"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny) MplsLabel() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabelPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_MplsLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): A cumulative counter of the total bytes transmitted by the local
// system within the context which have a label imported that
// corresponds to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/out-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPath) OutOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutOctetsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): A cumulative counter of the total bytes transmitted by the local
// system within the context which have a label imported that
// corresponds to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/out-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny) OutOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutOctetsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the total number of packets transmitted by
// the local system within the context which have a label imposed that
// corresponds to an Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/out-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPath) OutPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutPktsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the total number of packets transmitted by
// the local system within the context which have a label imposed that
// corresponds to an Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/aggregate-sid-counters/aggregate-sid-counter/state/out-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounterPathAny) OutPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutPktsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_AggregateSidCounter_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/in-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/in-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InPktsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/in-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/in-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/out-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/out-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/out-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/out-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutPktsPathAny struct {
	*ygot.NodePath
}

// InOctets (leaf): The cumulative counter of the total bytes received within the context
// which have matched a label corresponding to an SR Segment Identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/in-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) InOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InOctetsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total bytes received within the context
// which have matched a label corresponding to an SR Segment Identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/in-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) InOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InOctetsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the packets received within the context
// which have matched a label corresponding to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/in-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) InPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InPktsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the packets received within the context
// which have matched a label corresponding to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/in-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) InPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InPktsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): A unique identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): A unique identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) InterfaceId() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) InterfaceRef() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): A cumulative counter of the total bytes transmitted by the local
// system within the context which have a label imported that
// corresponds to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/out-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) OutOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutOctetsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): A cumulative counter of the total bytes transmitted by the local
// system within the context which have a label imported that
// corresponds to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/out-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) OutOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutOctetsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the total number of packets transmitted by
// the local system within the context which have a label imposed that
// corresponds to an Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/out-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) OutPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutPktsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the total number of packets transmitted by
// the local system within the context which have a label imposed that
// corresponds to an Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/state/out-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) OutPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutPktsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidCounterAny (list): Per segment identifier counters for the MPLS dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-counters/sid-counter"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter"
// MplsLabel (wildcarded): [UnionUint32, E_MplsTypes_MplsLabel_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) SidCounterAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-counters", "sid-counter"},
			map[string]interface{}{"mpls-label": "*"},
			n,
		),
	}
}

// SidCounterAny (list): Per segment identifier counters for the MPLS dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-counters/sid-counter"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter"
// MplsLabel (wildcarded): [UnionUint32, E_MplsTypes_MplsLabel_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) SidCounterAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-counters", "sid-counter"},
			map[string]interface{}{"mpls-label": "*"},
			n,
		),
	}
}

// SidCounter (list): Per segment identifier counters for the MPLS dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-counters/sid-counter"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter"
// MplsLabel: [UnionUint32, E_MplsTypes_MplsLabel_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePath) SidCounter(MplsLabel NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabel_Union) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath{
		NodePath: ygot.NewNodePath(
			[]string{"sid-counters", "sid-counter"},
			map[string]interface{}{"mpls-label": MplsLabel},
			n,
		),
	}
}

// SidCounter (list): Per segment identifier counters for the MPLS dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-counters/sid-counter"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter"
// MplsLabel: [UnionUint32, E_MplsTypes_MplsLabel_Enum]
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_InterfacePathAny) SidCounter(MplsLabel NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabel_Union) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-counters", "sid-counter"},
			map[string]interface{}{"mpls-label": MplsLabel},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath) Interface() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/in-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/in-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InPktsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/in-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/in-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabelPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/mpls-label YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/mpls-label YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/out-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/out-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/out-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/out-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutPktsPathAny struct {
	*ygot.NodePath
}

// ForwardingClassAny (list): SID entries for the forwarding class associated with the
// referenced MPLS EXP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "forwarding-classes/forwarding-class"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class"
// Exp (wildcarded): uint8
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath) ForwardingClassAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"forwarding-classes", "forwarding-class"},
			map[string]interface{}{"exp": "*"},
			n,
		),
	}
}

// ForwardingClassAny (list): SID entries for the forwarding class associated with the
// referenced MPLS EXP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "forwarding-classes/forwarding-class"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class"
// Exp (wildcarded): uint8
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny) ForwardingClassAny() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"forwarding-classes", "forwarding-class"},
			map[string]interface{}{"exp": "*"},
			n,
		),
	}
}

// ForwardingClass (list): SID entries for the forwarding class associated with the
// referenced MPLS EXP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "forwarding-classes/forwarding-class"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class"
// Exp: uint8
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath) ForwardingClass(Exp uint8) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPath{
		NodePath: ygot.NewNodePath(
			[]string{"forwarding-classes", "forwarding-class"},
			map[string]interface{}{"exp": Exp},
			n,
		),
	}
}

// ForwardingClass (list): SID entries for the forwarding class associated with the
// referenced MPLS EXP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "forwarding-classes/forwarding-class"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class"
// Exp: uint8
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny) ForwardingClass(Exp uint8) *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"forwarding-classes", "forwarding-class"},
			map[string]interface{}{"exp": Exp},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total bytes received within the context
// which have matched a label corresponding to an SR Segment Identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/in-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath) InOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InOctetsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total bytes received within the context
// which have matched a label corresponding to an SR Segment Identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/in-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny) InOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InOctetsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the packets received within the context
// which have matched a label corresponding to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/in-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath) InPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InPktsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the packets received within the context
// which have matched a label corresponding to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/in-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny) InPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InPktsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_InPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabel (leaf): The MPLS label used for the segment identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/mpls-label"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath) MplsLabel() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabelPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabel (leaf): The MPLS label used for the segment identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/mpls-label"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny) MplsLabel() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabelPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_MplsLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): A cumulative counter of the total bytes transmitted by the local
// system within the context which have a label imported that
// corresponds to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/out-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath) OutOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutOctetsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): A cumulative counter of the total bytes transmitted by the local
// system within the context which have a label imported that
// corresponds to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/out-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny) OutOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutOctetsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the total number of packets transmitted by
// the local system within the context which have a label imposed that
// corresponds to an Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/out-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPath) OutPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutPktsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the total number of packets transmitted by
// the local system within the context which have a label imposed that
// corresponds to an Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/state/out-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounterPathAny) OutPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutPktsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_ExpPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/exp YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_ExpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_ExpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/exp YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_ExpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/in-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/in-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InPktsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/in-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/in-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/out-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/out-octets YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/out-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/out-pkts YANG schema element.
type NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutPktsPathAny struct {
	*ygot.NodePath
}

// Exp (leaf): The value of the MPLS EXP (experimental) or Traffic Class bits that the
// SID statistics relate to. Packets received with a MPLS label value
// equal to the SID's MPLS label and EXP bits equal to the this value
// should be counted towards the associated ingress statistics. Packets
// that are forwarded to the destination MPLS label corresponding to the
// SID should be counted towards this value. In the egress direction, where
// forwarding follows a SID value that requires PHP at the local node,
// packets should still be counted towards the egress counters.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exp"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/exp"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPath) Exp() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_ExpPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_ExpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Exp (leaf): The value of the MPLS EXP (experimental) or Traffic Class bits that the
// SID statistics relate to. Packets received with a MPLS label value
// equal to the SID's MPLS label and EXP bits equal to the this value
// should be counted towards the associated ingress statistics. Packets
// that are forwarded to the destination MPLS label corresponding to the
// SID should be counted towards this value. In the egress direction, where
// forwarding follows a SID value that requires PHP at the local node,
// packets should still be counted towards the egress counters.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exp"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/exp"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny) Exp() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_ExpPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_ExpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exp"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total bytes received within the context
// which have matched a label corresponding to an SR Segment Identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/in-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPath) InOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InOctetsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total bytes received within the context
// which have matched a label corresponding to an SR Segment Identifier
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/in-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny) InOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InOctetsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the packets received within the context
// which have matched a label corresponding to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/in-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPath) InPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InPktsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the packets received within the context
// which have matched a label corresponding to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/in-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/in-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny) InPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InPktsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_InPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): A cumulative counter of the total bytes transmitted by the local
// system within the context which have a label imported that
// corresponds to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/out-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPath) OutOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutOctetsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): A cumulative counter of the total bytes transmitted by the local
// system within the context which have a label imported that
// corresponds to an SR Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-octets"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/out-octets"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny) OutOctets() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutOctetsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the total number of packets transmitted by
// the local system within the context which have a label imposed that
// corresponds to an Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/out-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPath) OutPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutPktsPath {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the total number of packets transmitted by
// the local system within the context which have a label imposed that
// corresponds to an Segment Identifier.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/out-pkts"
// Path from root: "/network-instances/network-instance/mpls/signaling-protocols/segment-routing/interfaces/interface/sid-counters/sid-counter/forwarding-classes/forwarding-class/state/out-pkts"
func (n *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClassPathAny) OutPkts() *NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutPktsPathAny {
	return &NetworkInstance_Mpls_SignalingProtocols_SegmentRouting_Interface_SidCounter_ForwardingClass_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributesPathAny struct {
	*ygot.NodePath
}

// AdminGroupAny (list): configuration of value to name mapping
// for mpls affinities/admin-groups
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls-admin-groups/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group"
// AdminGroupName (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) AdminGroupAny() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls-admin-groups", "admin-group"},
			map[string]interface{}{"admin-group-name": "*"},
			n,
		),
	}
}

// AdminGroupAny (list): configuration of value to name mapping
// for mpls affinities/admin-groups
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls-admin-groups/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group"
// AdminGroupName (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) AdminGroupAny() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls-admin-groups", "admin-group"},
			map[string]interface{}{"admin-group-name": "*"},
			n,
		),
	}
}

// AdminGroup (list): configuration of value to name mapping
// for mpls affinities/admin-groups
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls-admin-groups/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group"
// AdminGroupName: string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) AdminGroup(AdminGroupName string) *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls-admin-groups", "admin-group"},
			map[string]interface{}{"admin-group-name": AdminGroupName},
			n,
		),
	}
}

// AdminGroup (list): configuration of value to name mapping
// for mpls affinities/admin-groups
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls-admin-groups/admin-group"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group"
// AdminGroupName: string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) AdminGroup(AdminGroupName string) *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls-admin-groups", "admin-group"},
			map[string]interface{}{"admin-group-name": AdminGroupName},
			n,
		),
	}
}

// SrlgAny (list): List of shared risk link groups
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlgs/srlg"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) SrlgAny() *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlgs", "srlg"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// SrlgAny (list): List of shared risk link groups
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlgs/srlg"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg"
// Name (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) SrlgAny() *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlgs", "srlg"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Srlg (list): List of shared risk link groups
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlgs/srlg"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg"
// Name: string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) Srlg(Name string) *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath{
		NodePath: ygot.NewNodePath(
			[]string{"srlgs", "srlg"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Srlg (list): List of shared risk link groups
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlgs/srlg"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg"
// Name: string
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) Srlg(Name string) *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlgs", "srlg"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// TeLspTimers (container): Definition for delays associated with setup
// and cleanup of TE LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-lsp-timers"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers"
func (n *NetworkInstance_Mpls_TeGlobalAttributesPath) TeLspTimers() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-lsp-timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeLspTimers (container): Definition for delays associated with setup
// and cleanup of TE LSPs
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-lsp-timers"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers"
func (n *NetworkInstance_Mpls_TeGlobalAttributesPathAny) TeLspTimers() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-lsp-timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/state/admin-group-name YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/state/admin-group-name YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/state/bit-position YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/state/bit-position YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPathAny struct {
	*ygot.NodePath
}

// AdminGroupName (leaf): name for mpls admin-group
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group-name"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/state/admin-group-name"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath) AdminGroupName() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroupName (leaf): name for mpls admin-group
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group-name"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/state/admin-group-name"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny) AdminGroupName() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_AdminGroupNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// BitPosition (leaf): bit-position value for mpls admin-group. The value
// for the admin group is an integer that represents one
// of the bit positions in the admin-group bitmask. Values
// between 0 and 31 are interpreted as the original limit
// of 32 admin groups. Values >=32 are interpreted as
// extended admin group values as per RFC7308.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bit-position"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/state/bit-position"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPath) BitPosition() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bit-position"},
			map[string]interface{}{},
			n,
		),
	}
}

// BitPosition (leaf): bit-position value for mpls admin-group. The value
// for the admin group is an integer that represents one
// of the bit positions in the admin-group bitmask. Values
// between 0 and 31 are interpreted as the original limit
// of 32 admin groups. Values >=32 are interpreted as
// extended admin group values as per RFC7308.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bit-position"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/mpls-admin-groups/admin-group/state/bit-position"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroupPathAny) BitPosition() *NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_AdminGroup_BitPositionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bit-position"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/cost YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/cost YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/flooding-type YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/flooding-type YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/name YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/name YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/value YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/value YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePathAny struct {
	*ygot.NodePath
}

// Cost (leaf): The cost of the SRLG to the computation
// algorithm
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cost"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/cost"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) Cost() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cost"},
			map[string]interface{}{},
			n,
		),
	}
}

// Cost (leaf): The cost of the SRLG to the computation
// algorithm
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cost"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/cost"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) Cost() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_CostPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cost"},
			map[string]interface{}{},
			n,
		),
	}
}

// FloodingType (leaf): The type of SRLG, either flooded in the IGP or
// statically configured
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flooding-type"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/flooding-type"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) FloodingType() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flooding-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// FloodingType (leaf): The type of SRLG, either flooded in the IGP or
// statically configured
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flooding-type"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/flooding-type"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) FloodingType() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_FloodingTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flooding-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MembersListAny (list): List of SRLG members, which are expressed
// as IP address endpoints of links contained in the
// SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-srlg-members/members-list"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list"
// FromAddress (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) MembersListAny() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-srlg-members", "members-list"},
			map[string]interface{}{"from-address": "*"},
			n,
		),
	}
}

// MembersListAny (list): List of SRLG members, which are expressed
// as IP address endpoints of links contained in the
// SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-srlg-members/members-list"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list"
// FromAddress (wildcarded): string
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) MembersListAny() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-srlg-members", "members-list"},
			map[string]interface{}{"from-address": "*"},
			n,
		),
	}
}

// MembersList (list): List of SRLG members, which are expressed
// as IP address endpoints of links contained in the
// SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-srlg-members/members-list"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list"
// FromAddress: string
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) MembersList(FromAddress string) *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-srlg-members", "members-list"},
			map[string]interface{}{"from-address": FromAddress},
			n,
		),
	}
}

// MembersList (list): List of SRLG members, which are expressed
// as IP address endpoints of links contained in the
// SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-srlg-members/members-list"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list"
// FromAddress: string
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) MembersList(FromAddress string) *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-srlg-members", "members-list"},
			map[string]interface{}{"from-address": FromAddress},
			n,
		),
	}
}

// Name (leaf): SRLG group identifier
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/name"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) Name() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): SRLG group identifier
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/name"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) Name() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): group ID for the SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/value"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPath) Value() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): group ID for the SRLG
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/state/value"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_SrlgPathAny) Value() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/state/from-address YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/state/from-address YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/state/to-address YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/state/to-address YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPathAny struct {
	*ygot.NodePath
}

// FromAddress (leaf): IP address of the a-side of the SRLG link
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/from-address"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/state/from-address"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath) FromAddress() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "from-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// FromAddress (leaf): IP address of the a-side of the SRLG link
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/from-address"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/state/from-address"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny) FromAddress() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_FromAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "from-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ToAddress (leaf): IP address of the z-side of the SRLG link
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/to-address"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/state/to-address"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPath) ToAddress() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "to-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ToAddress (leaf): IP address of the z-side of the SRLG link
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/to-address"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/srlgs/srlg/static-srlg-members/members-list/state/to-address"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersListPathAny) ToAddress() *NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_Srlg_MembersList_ToAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "to-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/cleanup-delay YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/cleanup-delay YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/install-delay YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/install-delay YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPath represents the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/reoptimize-timer YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/reoptimize-timer YANG schema element.
type NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPathAny struct {
	*ygot.NodePath
}

// CleanupDelay (leaf): delay the removal of old te lsp for a specified
// amount of time
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cleanup-delay"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/cleanup-delay"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath) CleanupDelay() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cleanup-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// CleanupDelay (leaf): delay the removal of old te lsp for a specified
// amount of time
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cleanup-delay"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/cleanup-delay"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny) CleanupDelay() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_CleanupDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cleanup-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstallDelay (leaf): delay the use of newly installed te lsp for a
// specified amount of time.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/install-delay"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/install-delay"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath) InstallDelay() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "install-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstallDelay (leaf): delay the use of newly installed te lsp for a
// specified amount of time.
// ----------------------------------------
// Defining module: "openconfig-mpls"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/install-delay"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/install-delay"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny) InstallDelay() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_InstallDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "install-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReoptimizeTimer (leaf): frequency of reoptimization of
// a traffic engineered LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reoptimize-timer"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/reoptimize-timer"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPath) ReoptimizeTimer() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPath {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reoptimize-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReoptimizeTimer (leaf): frequency of reoptimization of
// a traffic engineered LSP
// ----------------------------------------
// Defining module: "openconfig-mpls-te"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reoptimize-timer"
// Path from root: "/network-instances/network-instance/mpls/te-global-attributes/te-lsp-timers/state/reoptimize-timer"
func (n *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimersPathAny) ReoptimizeTimer() *NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPathAny {
	return &NetworkInstance_Mpls_TeGlobalAttributes_TeLspTimers_ReoptimizeTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reoptimize-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwardingPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding YANG schema element.
type NetworkInstance_PolicyForwardingPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwardingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding YANG schema element.
type NetworkInstance_PolicyForwardingPathAny struct {
	*ygot.NodePath
}

// InterfaceAny (list): Configuration and operationals state relating to the
// relationship between interfaces and policy-based forwarding
// rules.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPath) InterfaceAny() *NetworkInstance_PolicyForwarding_InterfacePathAny {
	return &NetworkInstance_PolicyForwarding_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): Configuration and operationals state relating to the
// relationship between interfaces and policy-based forwarding
// rules.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPathAny) InterfaceAny() *NetworkInstance_PolicyForwarding_InterfacePathAny {
	return &NetworkInstance_PolicyForwarding_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): Configuration and operationals state relating to the
// relationship between interfaces and policy-based forwarding
// rules.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_PolicyForwardingPath) Interface(InterfaceId string) *NetworkInstance_PolicyForwarding_InterfacePath {
	return &NetworkInstance_PolicyForwarding_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): Configuration and operationals state relating to the
// relationship between interfaces and policy-based forwarding
// rules.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_PolicyForwardingPathAny) Interface(InterfaceId string) *NetworkInstance_PolicyForwarding_InterfacePathAny {
	return &NetworkInstance_PolicyForwarding_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// PathSelectionGroupAny (list): A path selection group is a set of forwarding resources,
// which are grouped as eligible paths for a particular
// policy-based forwarding rule. A policy rule may select a
// path-selection-group as the egress for a particular type of
// traffic (e.g., DSCP value). The system then utilises its
// standard forwarding lookup mechanism to select from the
// paths that are specified within the group - for IP packets,
// the destination IP address is used such that the packet is
// routed to the entity within the path-selection-group that
// corresponds to the next-hop for the destination IP address
// of the packet; for L2 packets, the selection is based on the
// destination MAC address. If multiple paths within the
// selection group are eligible to be used for forwarding,
// the packets are load-balanced between them according to
// the system's usual load balancing logic.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-selection-groups/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group"
// GroupId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPath) PathSelectionGroupAny() *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-selection-groups", "path-selection-group"},
			map[string]interface{}{"group-id": "*"},
			n,
		),
	}
}

// PathSelectionGroupAny (list): A path selection group is a set of forwarding resources,
// which are grouped as eligible paths for a particular
// policy-based forwarding rule. A policy rule may select a
// path-selection-group as the egress for a particular type of
// traffic (e.g., DSCP value). The system then utilises its
// standard forwarding lookup mechanism to select from the
// paths that are specified within the group - for IP packets,
// the destination IP address is used such that the packet is
// routed to the entity within the path-selection-group that
// corresponds to the next-hop for the destination IP address
// of the packet; for L2 packets, the selection is based on the
// destination MAC address. If multiple paths within the
// selection group are eligible to be used for forwarding,
// the packets are load-balanced between them according to
// the system's usual load balancing logic.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-selection-groups/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group"
// GroupId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPathAny) PathSelectionGroupAny() *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-selection-groups", "path-selection-group"},
			map[string]interface{}{"group-id": "*"},
			n,
		),
	}
}

// PathSelectionGroup (list): A path selection group is a set of forwarding resources,
// which are grouped as eligible paths for a particular
// policy-based forwarding rule. A policy rule may select a
// path-selection-group as the egress for a particular type of
// traffic (e.g., DSCP value). The system then utilises its
// standard forwarding lookup mechanism to select from the
// paths that are specified within the group - for IP packets,
// the destination IP address is used such that the packet is
// routed to the entity within the path-selection-group that
// corresponds to the next-hop for the destination IP address
// of the packet; for L2 packets, the selection is based on the
// destination MAC address. If multiple paths within the
// selection group are eligible to be used for forwarding,
// the packets are load-balanced between them according to
// the system's usual load balancing logic.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-selection-groups/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group"
// GroupId: string
func (n *NetworkInstance_PolicyForwardingPath) PathSelectionGroup(GroupId string) *NetworkInstance_PolicyForwarding_PathSelectionGroupPath {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-selection-groups", "path-selection-group"},
			map[string]interface{}{"group-id": GroupId},
			n,
		),
	}
}

// PathSelectionGroup (list): A path selection group is a set of forwarding resources,
// which are grouped as eligible paths for a particular
// policy-based forwarding rule. A policy rule may select a
// path-selection-group as the egress for a particular type of
// traffic (e.g., DSCP value). The system then utilises its
// standard forwarding lookup mechanism to select from the
// paths that are specified within the group - for IP packets,
// the destination IP address is used such that the packet is
// routed to the entity within the path-selection-group that
// corresponds to the next-hop for the destination IP address
// of the packet; for L2 packets, the selection is based on the
// destination MAC address. If multiple paths within the
// selection group are eligible to be used for forwarding,
// the packets are load-balanced between them according to
// the system's usual load balancing logic.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-selection-groups/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group"
// GroupId: string
func (n *NetworkInstance_PolicyForwardingPathAny) PathSelectionGroup(GroupId string) *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-selection-groups", "path-selection-group"},
			map[string]interface{}{"group-id": GroupId},
			n,
		),
	}
}

// PolicyAny (list): A forwarding policy is defined to have a set of match
// criteria, allowing particular fields of a packet's header to
// be matched, and a set of forwarding actions which determines
// how the local system should forward the packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policies/policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy"
// PolicyId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPath) PolicyAny() *NetworkInstance_PolicyForwarding_PolicyPathAny {
	return &NetworkInstance_PolicyForwarding_PolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"policies", "policy"},
			map[string]interface{}{"policy-id": "*"},
			n,
		),
	}
}

// PolicyAny (list): A forwarding policy is defined to have a set of match
// criteria, allowing particular fields of a packet's header to
// be matched, and a set of forwarding actions which determines
// how the local system should forward the packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policies/policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy"
// PolicyId (wildcarded): string
func (n *NetworkInstance_PolicyForwardingPathAny) PolicyAny() *NetworkInstance_PolicyForwarding_PolicyPathAny {
	return &NetworkInstance_PolicyForwarding_PolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"policies", "policy"},
			map[string]interface{}{"policy-id": "*"},
			n,
		),
	}
}

// Policy (list): A forwarding policy is defined to have a set of match
// criteria, allowing particular fields of a packet's header to
// be matched, and a set of forwarding actions which determines
// how the local system should forward the packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policies/policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy"
// PolicyId: string
func (n *NetworkInstance_PolicyForwardingPath) Policy(PolicyId string) *NetworkInstance_PolicyForwarding_PolicyPath {
	return &NetworkInstance_PolicyForwarding_PolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"policies", "policy"},
			map[string]interface{}{"policy-id": PolicyId},
			n,
		),
	}
}

// Policy (list): A forwarding policy is defined to have a set of match
// criteria, allowing particular fields of a packet's header to
// be matched, and a set of forwarding actions which determines
// how the local system should forward the packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "policies/policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy"
// PolicyId: string
func (n *NetworkInstance_PolicyForwardingPathAny) Policy(PolicyId string) *NetworkInstance_PolicyForwarding_PolicyPathAny {
	return &NetworkInstance_PolicyForwarding_PolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"policies", "policy"},
			map[string]interface{}{"policy-id": PolicyId},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface YANG schema element.
type NetworkInstance_PolicyForwarding_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface YANG schema element.
type NetworkInstance_PolicyForwarding_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/state/apply-forwarding-policy YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/state/apply-forwarding-policy YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/state/apply-vrf-selection-policy YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/state/apply-vrf-selection-policy YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// ApplyForwardingPolicy (leaf): The policy to be applied on the interface. Packets ingress on
// the referenced interface should be compared to the match
// criteria within the specified policy, and in the case that
// these criteria are met, the forwarding actions specified
// applied. These policies should be applied following quality of
// service classification, and ACL actions if such entities are
// referenced by the corresponding interface.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/apply-forwarding-policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/state/apply-forwarding-policy"
func (n *NetworkInstance_PolicyForwarding_InterfacePath) ApplyForwardingPolicy() *NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPath {
	return &NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "apply-forwarding-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyForwardingPolicy (leaf): The policy to be applied on the interface. Packets ingress on
// the referenced interface should be compared to the match
// criteria within the specified policy, and in the case that
// these criteria are met, the forwarding actions specified
// applied. These policies should be applied following quality of
// service classification, and ACL actions if such entities are
// referenced by the corresponding interface.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/apply-forwarding-policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/state/apply-forwarding-policy"
func (n *NetworkInstance_PolicyForwarding_InterfacePathAny) ApplyForwardingPolicy() *NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPathAny {
	return &NetworkInstance_PolicyForwarding_Interface_ApplyForwardingPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "apply-forwarding-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyVrfSelectionPolicy (leaf): Apply the specific VRF selection policy on the interface. The referenced policy
// MUST be of type VRF_SELECTION_POLICY. The VRF selection policy may coexist with
// a policy-forwarding policy.
//
// The policy specified in this leaf is used to specifically choose the L3VRF network
// instance that is used for specific input criteria of packets.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/apply-vrf-selection-policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/state/apply-vrf-selection-policy"
func (n *NetworkInstance_PolicyForwarding_InterfacePath) ApplyVrfSelectionPolicy() *NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPath {
	return &NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "apply-vrf-selection-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyVrfSelectionPolicy (leaf): Apply the specific VRF selection policy on the interface. The referenced policy
// MUST be of type VRF_SELECTION_POLICY. The VRF selection policy may coexist with
// a policy-forwarding policy.
//
// The policy specified in this leaf is used to specifically choose the L3VRF network
// instance that is used for specific input criteria of packets.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/apply-vrf-selection-policy"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/state/apply-vrf-selection-policy"
func (n *NetworkInstance_PolicyForwarding_InterfacePathAny) ApplyVrfSelectionPolicy() *NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPathAny {
	return &NetworkInstance_PolicyForwarding_Interface_ApplyVrfSelectionPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "apply-vrf-selection-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): A unique identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/state/interface-id"
func (n *NetworkInstance_PolicyForwarding_InterfacePath) InterfaceId() *NetworkInstance_PolicyForwarding_Interface_InterfaceIdPath {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): A unique identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-pf-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/state/interface-id"
func (n *NetworkInstance_PolicyForwarding_InterfacePathAny) InterfaceId() *NetworkInstance_PolicyForwarding_Interface_InterfaceIdPathAny {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref"
func (n *NetworkInstance_PolicyForwarding_InterfacePath) InterfaceRef() *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref"
func (n *NetworkInstance_PolicyForwarding_InterfacePathAny) InterfaceRef() *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath) Interface() *NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/policy-forwarding/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_PolicyForwarding_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_PolicyForwarding_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_PathSelectionGroupPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/state/group-id YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/state/group-id YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/state/mpls-lsp YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/state/mpls-lsp YANG schema element.
type NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPathAny struct {
	*ygot.NodePath
}

// GroupId (leaf): A unique name for the path-selection-group
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/state/group-id"
func (n *NetworkInstance_PolicyForwarding_PathSelectionGroupPath) GroupId() *NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPath {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// GroupId (leaf): A unique name for the path-selection-group
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/state/group-id"
func (n *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny) GroupId() *NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroup_GroupIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLsp (leaf): A set of MPLS constrained-path LSPs which should be
// considered for the policy forwarding next-hop. In order to
// select between the LSPs within the path-selection-group, the
// system should determine which LSP provides the best path to
// the next-hop for the routed packet.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-lsp"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/state/mpls-lsp"
func (n *NetworkInstance_PolicyForwarding_PathSelectionGroupPath) MplsLsp() *NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPath {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLsp (leaf): A set of MPLS constrained-path LSPs which should be
// considered for the policy forwarding next-hop. In order to
// select between the LSPs within the path-selection-group, the
// system should determine which LSP provides the best path to
// the next-hop for the routed packet.
// ----------------------------------------
// Defining module: "openconfig-pf-path-groups"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-lsp"
// Path from root: "/network-instances/network-instance/policy-forwarding/path-selection-groups/path-selection-group/state/mpls-lsp"
func (n *NetworkInstance_PolicyForwarding_PathSelectionGroupPathAny) MplsLsp() *NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPathAny {
	return &NetworkInstance_PolicyForwarding_PathSelectionGroup_MplsLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_PolicyPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy YANG schema element.
type NetworkInstance_PolicyForwarding_PolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_PolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy YANG schema element.
type NetworkInstance_PolicyForwarding_PolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_PolicyIdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/state/policy-id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_PolicyIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_PolicyIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/state/policy-id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_PolicyIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_TypePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/state/type YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/state/type YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_TypePathAny struct {
	*ygot.NodePath
}

// PolicyId (leaf): A unique name identifying the forwarding policy. This name is
// used when applying the policy to a particular interface.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/policy-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/state/policy-id"
func (n *NetworkInstance_PolicyForwarding_PolicyPath) PolicyId() *NetworkInstance_PolicyForwarding_Policy_PolicyIdPath {
	return &NetworkInstance_PolicyForwarding_Policy_PolicyIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "policy-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PolicyId (leaf): A unique name identifying the forwarding policy. This name is
// used when applying the policy to a particular interface.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/policy-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/state/policy-id"
func (n *NetworkInstance_PolicyForwarding_PolicyPathAny) PolicyId() *NetworkInstance_PolicyForwarding_Policy_PolicyIdPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_PolicyIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "policy-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RuleAny (list): A match rule for the policy. In the case that multiple
// criteria are specified within a single rule, all criteria
// must be met for the rule to be applied to a packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rules/rule"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule"
// SequenceId (wildcarded): uint32
func (n *NetworkInstance_PolicyForwarding_PolicyPath) RuleAny() *NetworkInstance_PolicyForwarding_Policy_RulePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_RulePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rules", "rule"},
			map[string]interface{}{"sequence-id": "*"},
			n,
		),
	}
}

// RuleAny (list): A match rule for the policy. In the case that multiple
// criteria are specified within a single rule, all criteria
// must be met for the rule to be applied to a packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rules/rule"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule"
// SequenceId (wildcarded): uint32
func (n *NetworkInstance_PolicyForwarding_PolicyPathAny) RuleAny() *NetworkInstance_PolicyForwarding_Policy_RulePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_RulePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rules", "rule"},
			map[string]interface{}{"sequence-id": "*"},
			n,
		),
	}
}

// Rule (list): A match rule for the policy. In the case that multiple
// criteria are specified within a single rule, all criteria
// must be met for the rule to be applied to a packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rules/rule"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule"
// SequenceId: uint32
func (n *NetworkInstance_PolicyForwarding_PolicyPath) Rule(SequenceId uint32) *NetworkInstance_PolicyForwarding_Policy_RulePath {
	return &NetworkInstance_PolicyForwarding_Policy_RulePath{
		NodePath: ygot.NewNodePath(
			[]string{"rules", "rule"},
			map[string]interface{}{"sequence-id": SequenceId},
			n,
		),
	}
}

// Rule (list): A match rule for the policy. In the case that multiple
// criteria are specified within a single rule, all criteria
// must be met for the rule to be applied to a packet.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rules/rule"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule"
// SequenceId: uint32
func (n *NetworkInstance_PolicyForwarding_PolicyPathAny) Rule(SequenceId uint32) *NetworkInstance_PolicyForwarding_Policy_RulePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_RulePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rules", "rule"},
			map[string]interface{}{"sequence-id": SequenceId},
			n,
		),
	}
}

// Type (leaf): The type of the policy. By default policies are generally usable for policy-based
// routing, and have no restrictions on their implementation. Where there are alternate
// policy types, this leaf specifies that a policy is expected to conform with a subset
// of the functionality as described in the specified type.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/state/type"
func (n *NetworkInstance_PolicyForwarding_PolicyPath) Type() *NetworkInstance_PolicyForwarding_Policy_TypePath {
	return &NetworkInstance_PolicyForwarding_Policy_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the policy. By default policies are generally usable for policy-based
// routing, and have no restrictions on their implementation. Where there are alternate
// policy types, this leaf specifies that a policy is expected to conform with a subset
// of the functionality as described in the specified type.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/state/type"
func (n *NetworkInstance_PolicyForwarding_PolicyPathAny) Type() *NetworkInstance_PolicyForwarding_Policy_TypePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_RulePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_RulePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_RulePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_RulePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_MatchedOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/matched-octets YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_MatchedOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_MatchedOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/matched-octets YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_MatchedOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_MatchedPktsPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/matched-pkts YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_MatchedPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_MatchedPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/matched-pkts YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_MatchedPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/sequence-id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/sequence-id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPathAny struct {
	*ygot.NodePath
}

// Action (container): The forwarding policy action to be applied for
// packets matching the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "action"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) Action() *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath{
		NodePath: ygot.NewNodePath(
			[]string{"action"},
			map[string]interface{}{},
			n,
		),
	}
}

// Action (container): The forwarding policy action to be applied for
// packets matching the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "action"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) Action() *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"action"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4 (container): Top level container for IPv4 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) Ipv4() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4 (container): Top level container for IPv4 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) Ipv4() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6 (container): Top-level container for IPv6 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) Ipv6() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6 (container): Top-level container for IPv6 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) Ipv6() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2 (container): Ethernet header fields
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) L2() *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2Path{
		NodePath: ygot.NewNodePath(
			[]string{"l2"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2 (container): Ethernet header fields
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) L2() *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedOctets (leaf): Bytes matched by the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/matched-octets"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/matched-octets"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) MatchedOctets() *NetworkInstance_PolicyForwarding_Policy_Rule_MatchedOctetsPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_MatchedOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedOctets (leaf): Bytes matched by the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/matched-octets"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/matched-octets"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) MatchedOctets() *NetworkInstance_PolicyForwarding_Policy_Rule_MatchedOctetsPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_MatchedOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedPkts (leaf): Number of packets matched by the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/matched-pkts"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/matched-pkts"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) MatchedPkts() *NetworkInstance_PolicyForwarding_Policy_Rule_MatchedPktsPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_MatchedPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedPkts (leaf): Number of packets matched by the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/matched-pkts"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/matched-pkts"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) MatchedPkts() *NetworkInstance_PolicyForwarding_Policy_Rule_MatchedPktsPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_MatchedPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceId (leaf): Unique sequence number for the policy rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/sequence-id"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) SequenceId() *NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceId (leaf): Unique sequence number for the policy rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/state/sequence-id"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) SequenceId() *NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_SequenceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport fields container
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePath) Transport() *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport fields container
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport"
func (n *NetworkInstance_PolicyForwarding_Policy_RulePathAny) Transport() *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-gre YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-gre YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-gue YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-gue YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-mpls-in-udp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-mpls-in-udp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/discard YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/discard YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/network-instance YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/network-instance YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/next-hop YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/next-hop YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/path-selection-group YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/path-selection-group YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPathAny struct {
	*ygot.NodePath
}

// DecapsulateGre (leaf): When this leaf is set to true, the local system should remove
// the GRE header from the packet matching the rule. Following
// the decapsulation it should subsequently forward the
// encapsulated packet according to the relevant lookup (e.g., if
// the encapsulated packet is IP, the packet should be routed
// according to the IP destination).
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-gre"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-gre"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) DecapsulateGre() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-gre"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateGre (leaf): When this leaf is set to true, the local system should remove
// the GRE header from the packet matching the rule. Following
// the decapsulation it should subsequently forward the
// encapsulated packet according to the relevant lookup (e.g., if
// the encapsulated packet is IP, the packet should be routed
// according to the IP destination).
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-gre"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-gre"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) DecapsulateGre() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGrePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-gre"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateGue (leaf): When this leaf is set to true, the local system should remove
// the Generic UDP Encapsulation (GUE) header from the packet matching
// the rule. Following the decapsulation it should subsequently forward the
// encapsulated packet according to the underlying IPv4 or IPv6 header.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-gue"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-gue"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) DecapsulateGue() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-gue"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateGue (leaf): When this leaf is set to true, the local system should remove
// the Generic UDP Encapsulation (GUE) header from the packet matching
// the rule. Following the decapsulation it should subsequently forward the
// encapsulated packet according to the underlying IPv4 or IPv6 header.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-gue"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-gue"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) DecapsulateGue() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateGuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-gue"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateMplsInUdp (leaf): When this leaf is set to true, the local system should remove
// the UDP header from the packet matching the rule.
// Following the decapsulation it should subsequently forward the
// encapsulated packet according to the underlying MPLS label.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-mpls-in-udp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-mpls-in-udp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) DecapsulateMplsInUdp() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-mpls-in-udp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateMplsInUdp (leaf): When this leaf is set to true, the local system should remove
// the UDP header from the packet matching the rule.
// Following the decapsulation it should subsequently forward the
// encapsulated packet according to the underlying MPLS label.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-mpls-in-udp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/decapsulate-mpls-in-udp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) DecapsulateMplsInUdp() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DecapsulateMplsInUdpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-mpls-in-udp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When this leaf is set to true, the local system should drop
// packets that match the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discard"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/discard"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) Discard() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When this leaf is set to true, the local system should drop
// packets that match the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discard"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/discard"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) Discard() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_DiscardPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateGre (container): Packets matching the policy rule should be GRE encapsulated
// towards the set of targets defined within the target list. Where
// more than one target is specified, or the target subnet expands
// to more than one endpoint, packets should be load-balanced across
// the destination addresses within the subnets.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "encapsulate-gre"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) EncapsulateGre() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath{
		NodePath: ygot.NewNodePath(
			[]string{"encapsulate-gre"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateGre (container): Packets matching the policy rule should be GRE encapsulated
// towards the set of targets defined within the target list. Where
// more than one target is specified, or the target subnet expands
// to more than one endpoint, packets should be load-balanced across
// the destination addresses within the subnets.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "encapsulate-gre"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) EncapsulateGre() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"encapsulate-gre"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance (leaf): When this leaf is set, packets matching the match criteria
// for the forwarding rule should be looked up in the
// network-instance that is referenced rather than the
// network-instance with which the interface is associated.
// Such configuration allows policy-routing into multiple
// sub-topologies from a single ingress access interface, or
// different send and receive contexts for a particular
// interface (sometimes referred to as half-duplex VRF).
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-instance"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/network-instance"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) NetworkInstance() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance (leaf): When this leaf is set, packets matching the match criteria
// for the forwarding rule should be looked up in the
// network-instance that is referenced rather than the
// network-instance with which the interface is associated.
// Such configuration allows policy-routing into multiple
// sub-topologies from a single ingress access interface, or
// different send and receive contexts for a particular
// interface (sometimes referred to as half-duplex VRF).
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-instance"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/network-instance"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) NetworkInstance() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_NetworkInstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): When an IP next-hop is specified in the next-hop field,
// packets matching the match criteria for the forwarding rule
// should be forwarded to the next-hop IP address, bypassing any
// lookup on the local system.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/next-hop"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) NextHop() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): When an IP next-hop is specified in the next-hop field,
// packets matching the match criteria for the forwarding rule
// should be forwarded to the next-hop IP address, bypassing any
// lookup on the local system.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/next-hop"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) NextHop() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathSelectionGroup (leaf): When path-selection-group is set, packets matching the
// match criteria for the forwarding rule should be forwarded
// only via one of the paths that is specified within the
// referenced path-selection-group. The next-hop of the packet
// within the routing context should be used to determine between
// multiple paths that are specified within the group.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/path-selection-group"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPath) PathSelectionGroup() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-selection-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathSelectionGroup (leaf): When path-selection-group is set, packets matching the
// match criteria for the forwarding rule should be forwarded
// only via one of the paths that is specified within the
// referenced path-selection-group. The next-hop of the packet
// within the routing context should be used to determine between
// multiple paths that are specified within the group.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/path-selection-group"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/state/path-selection-group"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_ActionPathAny) PathSelectionGroup() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_PathSelectionGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-selection-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/state/identifying-prefix YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/state/identifying-prefix YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPathAny struct {
	*ygot.NodePath
}

// IdentifyingPrefix (leaf): An IP prefix that can be used to identify the group of
// GRE endpoints that are being encapsulated towards. Systems
// that require an IP identifier for the tunnel set
// should use this prefix as the next-hop identifier.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifying-prefix"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/state/identifying-prefix"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath) IdentifyingPrefix() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifying-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdentifyingPrefix (leaf): An IP prefix that can be used to identify the group of
// GRE endpoints that are being encapsulated towards. Systems
// that require an IP identifier for the tunnel set
// should use this prefix as the next-hop identifier.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifying-prefix"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/state/identifying-prefix"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny) IdentifyingPrefix() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_IdentifyingPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifying-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetAny (list): Each target specified within this list should be treated as a
// endpoint to which packets should be GRE encapsulated. Where the
// set of destinations described within a single entry expands to
// more than one destination IP address, packets should be load
// shared across the destination using the local system's ECMP hashing
// mechanisms.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target"
// Id (wildcarded): string
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath) TargetAny() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// TargetAny (list): Each target specified within this list should be treated as a
// endpoint to which packets should be GRE encapsulated. Where the
// set of destinations described within a single entry expands to
// more than one destination IP address, packets should be load
// shared across the destination using the local system's ECMP hashing
// mechanisms.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target"
// Id (wildcarded): string
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny) TargetAny() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Target (list): Each target specified within this list should be treated as a
// endpoint to which packets should be GRE encapsulated. Where the
// set of destinations described within a single entry expands to
// more than one destination IP address, packets should be load
// shared across the destination using the local system's ECMP hashing
// mechanisms.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target"
// Id: string
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePath) Target(Id string) *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Target (list): Each target specified within this list should be treated as a
// endpoint to which packets should be GRE encapsulated. Where the
// set of destinations described within a single entry expands to
// more than one destination IP address, packets should be load
// shared across the destination using the local system's ECMP hashing
// mechanisms.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "targets/target"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target"
// Id: string
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGrePathAny) Target(Id string) *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"targets", "target"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/destination YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/destination YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/id YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/ip-ttl YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/ip-ttl YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/source YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/source YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePathAny struct {
	*ygot.NodePath
}

// Destination (leaf): The set of destination addresses that should be encapsulated towards.
// Where a subnet is specified, each address within the subnet should be
// treated as an independent destination for encapsulated traffic. Packets
// should be distributed with ECMP across the set of tunnel destination
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/destination"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath) Destination() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination"},
			map[string]interface{}{},
			n,
		),
	}
}

// Destination (leaf): The set of destination addresses that should be encapsulated towards.
// Where a subnet is specified, each address within the subnet should be
// treated as an independent destination for encapsulated traffic. Packets
// should be distributed with ECMP across the set of tunnel destination
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/destination"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny) Destination() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_DestinationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique identifier for the target.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/id"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath) Id() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique identifier for the target.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/id"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny) Id() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpTtl (leaf): The TTL that should be specified in the IP header of the GRE packet
// encapsulating the packet matching the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-ttl"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/ip-ttl"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath) IpTtl() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpTtl (leaf): The TTL that should be specified in the IP header of the GRE packet
// encapsulating the packet matching the rule.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-ttl"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/ip-ttl"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny) IpTtl() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_IpTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): The source IP address that should be used when encapsulating
// packets from the local system.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/source"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPath) Source() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): The source IP address that should be used when encapsulating
// packets from the local system.
// ----------------------------------------
// Defining module: "openconfig-pf-forwarding-policies"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/action/encapsulate-gre/targets/target/state/source"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_TargetPathAny) Source() *NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Action_EncapsulateGre_Target_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/destination-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/destination-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/dscp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/dscp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/dscp-set YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/dscp-set YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/hop-limit YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/hop-limit YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/protocol YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/protocol YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/source-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/source-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPathAny struct {
	*ygot.NodePath
}

// DestinationAddress (leaf): Destination IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/destination-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) DestinationAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationAddress (leaf): Destination IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/destination-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) DestinationAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DestinationAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dscp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/dscp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) Dscp() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dscp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/dscp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) Dscp() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dscp-set"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/dscp-set"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) DscpSet() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dscp-set"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/dscp-set"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) DscpSet() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_DscpSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hop-limit"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/hop-limit"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) HopLimit() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hop-limit"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/hop-limit"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) HopLimit() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_HopLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/protocol"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) Protocol() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/protocol"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) Protocol() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/source-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4Path) SourceAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv4/state/source-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4PathAny) SourceAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv4_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/destination-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/destination-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/destination-flow-label YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/destination-flow-label YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/dscp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/dscp YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/dscp-set YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/dscp-set YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/hop-limit YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/hop-limit YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/protocol YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/protocol YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/source-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/source-address YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/source-flow-label YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/source-flow-label YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPathAny struct {
	*ygot.NodePath
}

// DestinationAddress (leaf): Destination IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/destination-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) DestinationAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationAddress (leaf): Destination IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/destination-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) DestinationAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationFlowLabel (leaf): Destination IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-flow-label"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/destination-flow-label"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) DestinationFlowLabel() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationFlowLabel (leaf): Destination IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-flow-label"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/destination-flow-label"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) DestinationFlowLabel() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DestinationFlowLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dscp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/dscp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) Dscp() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dscp"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/dscp"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) Dscp() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dscp-set"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/dscp-set"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) DscpSet() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dscp-set"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/dscp-set"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) DscpSet() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_DscpSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hop-limit"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/hop-limit"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) HopLimit() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hop-limit"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/hop-limit"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) HopLimit() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_HopLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/protocol"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) Protocol() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/protocol"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) Protocol() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/source-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) SourceAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/source-address"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) SourceAddress() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceFlowLabel (leaf): Source IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-flow-label"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/source-flow-label"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6Path) SourceFlowLabel() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceFlowLabel (leaf): Source IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-flow-label"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/ipv6/state/source-flow-label"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6PathAny) SourceFlowLabel() *NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Ipv6_SourceFlowLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2Path represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2Path struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2 YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/destination-mac YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/destination-mac YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/destination-mac-mask YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/destination-mac-mask YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/ethertype YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/ethertype YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/source-mac YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/source-mac YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/source-mac-mask YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/source-mac-mask YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPathAny struct {
	*ygot.NodePath
}

// DestinationMac (leaf): Destination IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-mac"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/destination-mac"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) DestinationMac() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationMac (leaf): Destination IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-mac"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/destination-mac"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) DestinationMac() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationMacMask (leaf): Destination IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-mac-mask"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/destination-mac-mask"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) DestinationMacMask() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationMacMask (leaf): Destination IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-mac-mask"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/destination-mac-mask"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) DestinationMacMask() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_DestinationMacMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ethertype (leaf): Ethertype field to match in Ethernet packets
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ethertype"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/ethertype"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) Ethertype() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethertype"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ethertype (leaf): Ethertype field to match in Ethernet packets
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ethertype"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/ethertype"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) Ethertype() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_EthertypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethertype"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMac (leaf): Source IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-mac"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/source-mac"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) SourceMac() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMac (leaf): Source IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-mac"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/source-mac"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) SourceMac() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMacMask (leaf): Source IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-mac-mask"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/source-mac-mask"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2Path) SourceMacMask() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMacMask (leaf): Source IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-mac-mask"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/l2/state/source-mac-mask"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_L2PathAny) SourceMacMask() *NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_L2_SourceMacMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/destination-port YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/destination-port YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/source-port YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/source-port YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPath represents the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/tcp-flags YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/tcp-flags YANG schema element.
type NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPathAny struct {
	*ygot.NodePath
}

// DestinationPort (leaf): Destination port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-port"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/destination-port"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath) DestinationPort() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationPort (leaf): Destination port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/destination-port"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/destination-port"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny) DestinationPort() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_DestinationPortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourcePort (leaf): Source port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-port"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/source-port"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath) SourcePort() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourcePort (leaf): Source port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-port"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/source-port"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny) SourcePort() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_SourcePortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpFlags (leaf): List of TCP flags to match
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tcp-flags"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/tcp-flags"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPath) TcpFlags() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPath {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tcp-flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpFlags (leaf): List of TCP flags to match
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tcp-flags"
// Path from root: "/network-instances/network-instance/policy-forwarding/policies/policy/rules/rule/transport/state/tcp-flags"
func (n *NetworkInstance_PolicyForwarding_Policy_Rule_TransportPathAny) TcpFlags() *NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPathAny {
	return &NetworkInstance_PolicyForwarding_Policy_Rule_Transport_TcpFlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tcp-flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol YANG schema element.
type NetworkInstance_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol YANG schema element.
type NetworkInstance_ProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_DefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/state/default-metric YANG schema element.
type NetworkInstance_Protocol_DefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_DefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/state/default-metric YANG schema element.
type NetworkInstance_Protocol_DefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/state/enabled YANG schema element.
type NetworkInstance_Protocol_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/state/enabled YANG schema element.
type NetworkInstance_Protocol_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/state/identifier YANG schema element.
type NetworkInstance_Protocol_IdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/state/identifier YANG schema element.
type NetworkInstance_Protocol_IdentifierPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_NamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/state/name YANG schema element.
type NetworkInstance_Protocol_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/state/name YANG schema element.
type NetworkInstance_Protocol_NamePathAny struct {
	*ygot.NodePath
}

// AggregateAny (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate"
// Prefix (wildcarded): string
func (n *NetworkInstance_ProtocolPath) AggregateAny() *NetworkInstance_Protocol_AggregatePathAny {
	return &NetworkInstance_Protocol_AggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// AggregateAny (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate"
// Prefix (wildcarded): string
func (n *NetworkInstance_ProtocolPathAny) AggregateAny() *NetworkInstance_Protocol_AggregatePathAny {
	return &NetworkInstance_Protocol_AggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Aggregate (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate"
// Prefix: string
func (n *NetworkInstance_ProtocolPath) Aggregate(Prefix string) *NetworkInstance_Protocol_AggregatePath {
	return &NetworkInstance_Protocol_AggregatePath{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Aggregate (list): List of aggregates
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "local-aggregates/aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate"
// Prefix: string
func (n *NetworkInstance_ProtocolPathAny) Aggregate(Prefix string) *NetworkInstance_Protocol_AggregatePathAny {
	return &NetworkInstance_Protocol_AggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"local-aggregates", "aggregate"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Bgp (container): Top-level configuration and state for the BGP router
// ----------------------------------------
// Defining module: "openconfig-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp"
func (n *NetworkInstance_ProtocolPath) Bgp() *NetworkInstance_Protocol_BgpPath {
	return &NetworkInstance_Protocol_BgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"bgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bgp (container): Top-level configuration and state for the BGP router
// ----------------------------------------
// Defining module: "openconfig-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp"
func (n *NetworkInstance_ProtocolPathAny) Bgp() *NetworkInstance_Protocol_BgpPathAny {
	return &NetworkInstance_Protocol_BgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultMetric (leaf): The default metric within the RIB for entries that are
// installed by this protocol instance. This value may
// be overridden by protocol specific configuration options.
// The lower the metric specified the more preferable the RIB
// entry is to be selected for use within the network instance.
// Where multiple entries have the same metric value then these
// equal cost paths should be treated according to the specified
// ECMP path selection behaviour for the instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/state/default-metric"
func (n *NetworkInstance_ProtocolPath) DefaultMetric() *NetworkInstance_Protocol_DefaultMetricPath {
	return &NetworkInstance_Protocol_DefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultMetric (leaf): The default metric within the RIB for entries that are
// installed by this protocol instance. This value may
// be overridden by protocol specific configuration options.
// The lower the metric specified the more preferable the RIB
// entry is to be selected for use within the network instance.
// Where multiple entries have the same metric value then these
// equal cost paths should be treated according to the specified
// ECMP path selection behaviour for the instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/state/default-metric"
func (n *NetworkInstance_ProtocolPathAny) DefaultMetric() *NetworkInstance_Protocol_DefaultMetricPathAny {
	return &NetworkInstance_Protocol_DefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): A boolean value indicating whether the local protocol
// instance is enabled.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/state/enabled"
func (n *NetworkInstance_ProtocolPath) Enabled() *NetworkInstance_Protocol_EnabledPath {
	return &NetworkInstance_Protocol_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): A boolean value indicating whether the local protocol
// instance is enabled.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/state/enabled"
func (n *NetworkInstance_ProtocolPathAny) Enabled() *NetworkInstance_Protocol_EnabledPathAny {
	return &NetworkInstance_Protocol_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): The protocol identifier for the instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/state/identifier"
func (n *NetworkInstance_ProtocolPath) Identifier() *NetworkInstance_Protocol_IdentifierPath {
	return &NetworkInstance_Protocol_IdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): The protocol identifier for the instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/state/identifier"
func (n *NetworkInstance_ProtocolPathAny) Identifier() *NetworkInstance_Protocol_IdentifierPathAny {
	return &NetworkInstance_Protocol_IdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Igmp (container): Top-level IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igmp"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp"
func (n *NetworkInstance_ProtocolPath) Igmp() *NetworkInstance_Protocol_IgmpPath {
	return &NetworkInstance_Protocol_IgmpPath{
		NodePath: ygot.NewNodePath(
			[]string{"igmp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Igmp (container): Top-level IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igmp"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp"
func (n *NetworkInstance_ProtocolPathAny) Igmp() *NetworkInstance_Protocol_IgmpPathAny {
	return &NetworkInstance_Protocol_IgmpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igmp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Isis (container): This container defines top-level ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "isis"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis"
func (n *NetworkInstance_ProtocolPath) Isis() *NetworkInstance_Protocol_IsisPath {
	return &NetworkInstance_Protocol_IsisPath{
		NodePath: ygot.NewNodePath(
			[]string{"isis"},
			map[string]interface{}{},
			n,
		),
	}
}

// Isis (container): This container defines top-level ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "isis"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis"
func (n *NetworkInstance_ProtocolPathAny) Isis() *NetworkInstance_Protocol_IsisPathAny {
	return &NetworkInstance_Protocol_IsisPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"isis"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): A unique name for the protocol instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/protocols/protocol/state/name"
func (n *NetworkInstance_ProtocolPath) Name() *NetworkInstance_Protocol_NamePath {
	return &NetworkInstance_Protocol_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): A unique name for the protocol instance
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/protocols/protocol/state/name"
func (n *NetworkInstance_ProtocolPathAny) Name() *NetworkInstance_Protocol_NamePathAny {
	return &NetworkInstance_Protocol_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ospfv2 (container): Top-level configuration and operational state for
// Open Shortest Path First (OSPF) v2
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ospfv2"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2"
func (n *NetworkInstance_ProtocolPath) Ospfv2() *NetworkInstance_Protocol_Ospfv2Path {
	return &NetworkInstance_Protocol_Ospfv2Path{
		NodePath: ygot.NewNodePath(
			[]string{"ospfv2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ospfv2 (container): Top-level configuration and operational state for
// Open Shortest Path First (OSPF) v2
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ospfv2"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2"
func (n *NetworkInstance_ProtocolPathAny) Ospfv2() *NetworkInstance_Protocol_Ospfv2PathAny {
	return &NetworkInstance_Protocol_Ospfv2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ospfv2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Pim (container): Top-level PIM configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "pim"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim"
func (n *NetworkInstance_ProtocolPath) Pim() *NetworkInstance_Protocol_PimPath {
	return &NetworkInstance_Protocol_PimPath{
		NodePath: ygot.NewNodePath(
			[]string{"pim"},
			map[string]interface{}{},
			n,
		),
	}
}

// Pim (container): Top-level PIM configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "pim"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim"
func (n *NetworkInstance_ProtocolPathAny) Pim() *NetworkInstance_Protocol_PimPathAny {
	return &NetworkInstance_Protocol_PimPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"pim"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticAny (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-routes/static"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static"
// Prefix (wildcarded): string
func (n *NetworkInstance_ProtocolPath) StaticAny() *NetworkInstance_Protocol_StaticPathAny {
	return &NetworkInstance_Protocol_StaticPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// StaticAny (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-routes/static"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static"
// Prefix (wildcarded): string
func (n *NetworkInstance_ProtocolPathAny) StaticAny() *NetworkInstance_Protocol_StaticPathAny {
	return &NetworkInstance_Protocol_StaticPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Static (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-routes/static"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static"
// Prefix: string
func (n *NetworkInstance_ProtocolPath) Static(Prefix string) *NetworkInstance_Protocol_StaticPath {
	return &NetworkInstance_Protocol_StaticPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Static (list): List of locally configured static routes
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-routes/static"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static"
// Prefix: string
func (n *NetworkInstance_ProtocolPathAny) Static(Prefix string) *NetworkInstance_Protocol_StaticPathAny {
	return &NetworkInstance_Protocol_StaticPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-routes", "static"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_AggregatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate YANG schema element.
type NetworkInstance_Protocol_AggregatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_AggregatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate YANG schema element.
type NetworkInstance_Protocol_AggregatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/description YANG schema element.
type NetworkInstance_Protocol_Aggregate_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/description YANG schema element.
type NetworkInstance_Protocol_Aggregate_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_DiscardPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/discard YANG schema element.
type NetworkInstance_Protocol_Aggregate_DiscardPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_DiscardPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/discard YANG schema element.
type NetworkInstance_Protocol_Aggregate_DiscardPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/prefix YANG schema element.
type NetworkInstance_Protocol_Aggregate_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/prefix YANG schema element.
type NetworkInstance_Protocol_Aggregate_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_SetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/set-tag YANG schema element.
type NetworkInstance_Protocol_Aggregate_SetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Aggregate_SetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/set-tag YANG schema element.
type NetworkInstance_Protocol_Aggregate_SetTagPathAny struct {
	*ygot.NodePath
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/description"
func (n *NetworkInstance_Protocol_AggregatePath) Description() *NetworkInstance_Protocol_Aggregate_DescriptionPath {
	return &NetworkInstance_Protocol_Aggregate_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/description"
func (n *NetworkInstance_Protocol_AggregatePathAny) Description() *NetworkInstance_Protocol_Aggregate_DescriptionPathAny {
	return &NetworkInstance_Protocol_Aggregate_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When true, install the aggregate route with a discard
// next-hop -- traffic destined to the aggregate will be
// discarded with no ICMP message generated.  When false,
// traffic destined to an aggregate address when no
// constituent routes are present will generate an ICMP
// unreachable message.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discard"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/discard"
func (n *NetworkInstance_Protocol_AggregatePath) Discard() *NetworkInstance_Protocol_Aggregate_DiscardPath {
	return &NetworkInstance_Protocol_Aggregate_DiscardPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discard (leaf): When true, install the aggregate route with a discard
// next-hop -- traffic destined to the aggregate will be
// discarded with no ICMP message generated.  When false,
// traffic destined to an aggregate address when no
// constituent routes are present will generate an ICMP
// unreachable message.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discard"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/discard"
func (n *NetworkInstance_Protocol_AggregatePathAny) Discard() *NetworkInstance_Protocol_Aggregate_DiscardPathAny {
	return &NetworkInstance_Protocol_Aggregate_DiscardPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discard"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Aggregate prefix to be advertised
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/prefix"
func (n *NetworkInstance_Protocol_AggregatePath) Prefix() *NetworkInstance_Protocol_Aggregate_PrefixPath {
	return &NetworkInstance_Protocol_Aggregate_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Aggregate prefix to be advertised
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/prefix"
func (n *NetworkInstance_Protocol_AggregatePathAny) Prefix() *NetworkInstance_Protocol_Aggregate_PrefixPathAny {
	return &NetworkInstance_Protocol_Aggregate_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/set-tag"
func (n *NetworkInstance_Protocol_AggregatePath) SetTag() *NetworkInstance_Protocol_Aggregate_SetTagPath {
	return &NetworkInstance_Protocol_Aggregate_SetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/local-aggregates/aggregate/state/set-tag"
func (n *NetworkInstance_Protocol_AggregatePathAny) SetTag() *NetworkInstance_Protocol_Aggregate_SetTagPathAny {
	return &NetworkInstance_Protocol_Aggregate_SetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_BgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp YANG schema element.
type NetworkInstance_Protocol_BgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_BgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp YANG schema element.
type NetworkInstance_Protocol_BgpPathAny struct {
	*ygot.NodePath
}

// Global (container): Global configuration for the BGP router
// ----------------------------------------
// Defining module: "openconfig-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global"
func (n *NetworkInstance_Protocol_BgpPath) Global() *NetworkInstance_Protocol_Bgp_GlobalPath {
	return &NetworkInstance_Protocol_Bgp_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Global configuration for the BGP router
// ----------------------------------------
// Defining module: "openconfig-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global"
func (n *NetworkInstance_Protocol_BgpPathAny) Global() *NetworkInstance_Protocol_Bgp_GlobalPathAny {
	return &NetworkInstance_Protocol_Bgp_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): List of BGP neighbors configured on the local system,
// uniquely identified by peer IPv[46] address
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_BgpPath) NeighborAny() *NetworkInstance_Protocol_Bgp_NeighborPathAny {
	return &NetworkInstance_Protocol_Bgp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// NeighborAny (list): List of BGP neighbors configured on the local system,
// uniquely identified by peer IPv[46] address
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_BgpPathAny) NeighborAny() *NetworkInstance_Protocol_Bgp_NeighborPathAny {
	return &NetworkInstance_Protocol_Bgp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// Neighbor (list): List of BGP neighbors configured on the local system,
// uniquely identified by peer IPv[46] address
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_BgpPath) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Bgp_NeighborPath {
	return &NetworkInstance_Protocol_Bgp_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// Neighbor (list): List of BGP neighbors configured on the local system,
// uniquely identified by peer IPv[46] address
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_BgpPathAny) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Bgp_NeighborPathAny {
	return &NetworkInstance_Protocol_Bgp_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// PeerGroupAny (list): List of BGP peer-groups configured on the local system -
// uniquely identified by peer-group name
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peer-groups/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group"
// PeerGroupName (wildcarded): string
func (n *NetworkInstance_Protocol_BgpPath) PeerGroupAny() *NetworkInstance_Protocol_Bgp_PeerGroupPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"peer-groups", "peer-group"},
			map[string]interface{}{"peer-group-name": "*"},
			n,
		),
	}
}

// PeerGroupAny (list): List of BGP peer-groups configured on the local system -
// uniquely identified by peer-group name
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peer-groups/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group"
// PeerGroupName (wildcarded): string
func (n *NetworkInstance_Protocol_BgpPathAny) PeerGroupAny() *NetworkInstance_Protocol_Bgp_PeerGroupPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"peer-groups", "peer-group"},
			map[string]interface{}{"peer-group-name": "*"},
			n,
		),
	}
}

// PeerGroup (list): List of BGP peer-groups configured on the local system -
// uniquely identified by peer-group name
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peer-groups/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group"
// PeerGroupName: string
func (n *NetworkInstance_Protocol_BgpPath) PeerGroup(PeerGroupName string) *NetworkInstance_Protocol_Bgp_PeerGroupPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"peer-groups", "peer-group"},
			map[string]interface{}{"peer-group-name": PeerGroupName},
			n,
		),
	}
}

// PeerGroup (list): List of BGP peer-groups configured on the local system -
// uniquely identified by peer-group name
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "peer-groups/peer-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group"
// PeerGroupName: string
func (n *NetworkInstance_Protocol_BgpPathAny) PeerGroup(PeerGroupName string) *NetworkInstance_Protocol_Bgp_PeerGroupPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"peer-groups", "peer-group"},
			map[string]interface{}{"peer-group-name": PeerGroupName},
			n,
		),
	}
}

// Rib (container): Top level container for BGP RIBs
// ----------------------------------------
// Defining module: "openconfig-rib-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rib"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib"
func (n *NetworkInstance_Protocol_BgpPath) Rib() *NetworkInstance_Protocol_Bgp_RibPath {
	return &NetworkInstance_Protocol_Bgp_RibPath{
		NodePath: ygot.NewNodePath(
			[]string{"rib"},
			map[string]interface{}{},
			n,
		),
	}
}

// Rib (container): Top level container for BGP RIBs
// ----------------------------------------
// Defining module: "openconfig-rib-bgp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rib"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib"
func (n *NetworkInstance_Protocol_BgpPathAny) Rib() *NetworkInstance_Protocol_Bgp_RibPathAny {
	return &NetworkInstance_Protocol_Bgp_RibPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rib"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global YANG schema element.
type NetworkInstance_Protocol_Bgp_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global YANG schema element.
type NetworkInstance_Protocol_Bgp_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/state/router-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/state/router-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_TotalPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/state/total-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_TotalPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_TotalPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/state/total-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_TotalPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_TotalPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/state/total-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_TotalPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_TotalPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/state/total-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_TotalPrefixesPathAny struct {
	*ygot.NodePath
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi"
// AfiSafiName (wildcarded): E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) AfiSafiAny() *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi"
// AfiSafiName (wildcarded): E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) AfiSafiAny() *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi"
// AfiSafiName: E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) AfiSafi(AfiSafiName E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafiPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi"
// AfiSafiName: E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) AfiSafi(AfiSafiName E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// As (leaf): Local autonomous system number of the router.  Uses
// the 32-bit as-number type from the model in RFC 6991.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/state/as"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) As() *NetworkInstance_Protocol_Bgp_Global_AsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// As (leaf): Local autonomous system number of the router.  Uses
// the 32-bit as-number type from the model in RFC 6991.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/state/as"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) As() *NetworkInstance_Protocol_Bgp_Global_AsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// Confederation (container): Parameters indicating whether the local system acts as part
// of a BGP confederation
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "confederation"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/confederation"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) Confederation() *NetworkInstance_Protocol_Bgp_Global_ConfederationPath {
	return &NetworkInstance_Protocol_Bgp_Global_ConfederationPath{
		NodePath: ygot.NewNodePath(
			[]string{"confederation"},
			map[string]interface{}{},
			n,
		),
	}
}

// Confederation (container): Parameters indicating whether the local system acts as part
// of a BGP confederation
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "confederation"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/confederation"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) Confederation() *NetworkInstance_Protocol_Bgp_Global_ConfederationPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_ConfederationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"confederation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultRouteDistance (container): Administrative distance (or preference) assigned to
// routes received from different sources
// (external, internal, and local).
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-route-distance"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) DefaultRouteDistance() *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePath {
	return &NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePath{
		NodePath: ygot.NewNodePath(
			[]string{"default-route-distance"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultRouteDistance (container): Administrative distance (or preference) assigned to
// routes received from different sources
// (external, internal, and local).
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-route-distance"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/default-route-distance"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) DefaultRouteDistance() *NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DefaultRouteDistancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"default-route-distance"},
			map[string]interface{}{},
			n,
		),
	}
}

// DynamicNeighborPrefixAny (list): An individual prefix from which dynamic neighbor
// connections are allowed.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) DynamicNeighborPrefixAny() *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"dynamic-neighbor-prefixes", "dynamic-neighbor-prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// DynamicNeighborPrefixAny (list): An individual prefix from which dynamic neighbor
// connections are allowed.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) DynamicNeighborPrefixAny() *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"dynamic-neighbor-prefixes", "dynamic-neighbor-prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// DynamicNeighborPrefix (list): An individual prefix from which dynamic neighbor
// connections are allowed.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) DynamicNeighborPrefix(Prefix string) *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPath {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"dynamic-neighbor-prefixes", "dynamic-neighbor-prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// DynamicNeighborPrefix (list): An individual prefix from which dynamic neighbor
// connections are allowed.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/dynamic-neighbor-prefixes/dynamic-neighbor-prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) DynamicNeighborPrefix(Prefix string) *NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_DynamicNeighborPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"dynamic-neighbor-prefixes", "dynamic-neighbor-prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteSelectionOptions (container): Parameters relating to options for route selection
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-selection-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) RouteSelectionOptions() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"route-selection-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteSelectionOptions (container): Parameters relating to options for route selection
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-selection-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/route-selection-options"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) RouteSelectionOptions() *NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouteSelectionOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-selection-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): Router id of the router - an unsigned 32-bit integer
// expressed in dotted quad notation.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/state/router-id"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) RouterId() *NetworkInstance_Protocol_Bgp_Global_RouterIdPath {
	return &NetworkInstance_Protocol_Bgp_Global_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): Router id of the router - an unsigned 32-bit integer
// expressed in dotted quad notation.
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/state/router-id"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) RouterId() *NetworkInstance_Protocol_Bgp_Global_RouterIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalPaths (leaf): Total number of BGP paths within the context
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/total-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/state/total-paths"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) TotalPaths() *NetworkInstance_Protocol_Bgp_Global_TotalPathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_TotalPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalPaths (leaf): Total number of BGP paths within the context
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/total-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/state/total-paths"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) TotalPaths() *NetworkInstance_Protocol_Bgp_Global_TotalPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_TotalPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalPrefixes (leaf): Total number of BGP prefixes received within the context
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/total-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/state/total-prefixes"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) TotalPrefixes() *NetworkInstance_Protocol_Bgp_Global_TotalPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_TotalPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalPrefixes (leaf): Total number of BGP prefixes received within the context
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/total-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/state/total-prefixes"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) TotalPrefixes() *NetworkInstance_Protocol_Bgp_Global_TotalPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_TotalPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_GlobalPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_GlobalPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/total-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/total-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/total-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/total-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPrefixesPathAny struct {
	*ygot.NodePath
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) AddPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) AddPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) AfiSafiName() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) AfiSafiName() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AfiSafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L2VpnVpls() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L2VpnVpls() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteSelectionOptions (container): Parameters relating to options for route selection
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-selection-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) RouteSelectionOptions() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"route-selection-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteSelectionOptions (container): Parameters relating to options for route selection
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-selection-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/route-selection-options"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) RouteSelectionOptions() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_RouteSelectionOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-selection-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4Path {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4PathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6Path {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6PathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_SrtePolicyIpv6PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalPaths (leaf): Total number of BGP paths within the context
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/total-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/total-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) TotalPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalPaths (leaf): Total number of BGP paths within the context
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/total-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/total-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) TotalPaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalPrefixes (leaf): Total number of BGP prefixes received within the context
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/total-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/total-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) TotalPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// TotalPrefixes (leaf): Total number of BGP prefixes received within the context
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/total-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/state/total-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) TotalPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_TotalPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafiPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/send YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/send YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPathAny struct {
	*ygot.NodePath
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/receive"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath) Receive() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/receive"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny) Receive() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_ReceivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/send"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath) Send() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/send"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny) Send() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/send-max"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPath) SendMax() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/add-paths/state/send-max"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPathsPathAny) SendMax() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_AddPaths_SendMaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/state/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/state/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/state/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/state/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/state/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/state/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/state/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/state/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpnPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVplsPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PrefixLimitExceededPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PrefixLimitExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PrefixLimitExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/prefix-limit-exceeded YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PrefixLimitExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PrefixLimitExceededPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PrefixLimitExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitExceeded (leaf): If set to true, the prefix-limit has been exceeded.  When the
// prefix-limit has been exceeded, the value of true must be retained
// until the restart-time has expired.  Prior to session re-establishment,
// the value must be reset to false
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-limit-exceeded"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/prefix-limit-exceeded"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) PrefixLimitExceeded() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PrefixLimitExceededPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PrefixLimitExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-limit-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/state/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/global/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Global_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}
