/*
Package system is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/alexmasi/go/pkg/mod/github.com/openconfig/ygot@v0.23.1/genutil/names.go
using the following YANG input files:
  - gnmi-collector-metadata.yang
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/ate/openconfig-ate-flow.yang
  - public/release/models/ate/openconfig-ate-intf.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/p4rt/openconfig-p4rt.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-fan.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package system

import (
	oc "github.com/openconfig/ondatra/telemetry"
	"github.com/openconfig/ygot/ygot"
)

// SystemPath represents the /openconfig-system/system YANG schema element.
type SystemPath struct {
	*ygot.NodePath
}

// SystemPathAny represents the wildcard version of the /openconfig-system/system YANG schema element.
type SystemPathAny struct {
	*ygot.NodePath
}

// System_BootTimePath represents the /openconfig-system/system/state/boot-time YANG schema element.
type System_BootTimePath struct {
	*ygot.NodePath
}

// System_BootTimePathAny represents the wildcard version of the /openconfig-system/system/state/boot-time YANG schema element.
type System_BootTimePathAny struct {
	*ygot.NodePath
}

// System_CurrentDatetimePath represents the /openconfig-system/system/state/current-datetime YANG schema element.
type System_CurrentDatetimePath struct {
	*ygot.NodePath
}

// System_CurrentDatetimePathAny represents the wildcard version of the /openconfig-system/system/state/current-datetime YANG schema element.
type System_CurrentDatetimePathAny struct {
	*ygot.NodePath
}

// System_DomainNamePath represents the /openconfig-system/system/state/domain-name YANG schema element.
type System_DomainNamePath struct {
	*ygot.NodePath
}

// System_DomainNamePathAny represents the wildcard version of the /openconfig-system/system/state/domain-name YANG schema element.
type System_DomainNamePathAny struct {
	*ygot.NodePath
}

// System_HostnamePath represents the /openconfig-system/system/state/hostname YANG schema element.
type System_HostnamePath struct {
	*ygot.NodePath
}

// System_HostnamePathAny represents the wildcard version of the /openconfig-system/system/state/hostname YANG schema element.
type System_HostnamePathAny struct {
	*ygot.NodePath
}

// System_LoginBannerPath represents the /openconfig-system/system/state/login-banner YANG schema element.
type System_LoginBannerPath struct {
	*ygot.NodePath
}

// System_LoginBannerPathAny represents the wildcard version of the /openconfig-system/system/state/login-banner YANG schema element.
type System_LoginBannerPathAny struct {
	*ygot.NodePath
}

// System_MotdBannerPath represents the /openconfig-system/system/state/motd-banner YANG schema element.
type System_MotdBannerPath struct {
	*ygot.NodePath
}

// System_MotdBannerPathAny represents the wildcard version of the /openconfig-system/system/state/motd-banner YANG schema element.
type System_MotdBannerPathAny struct {
	*ygot.NodePath
}

// Aaa (container): Top-level container for AAA services
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "aaa"
// Path from root: "/system/aaa"
func (n *SystemPath) Aaa() *System_AaaPath {
	return &System_AaaPath{
		NodePath: ygot.NewNodePath(
			[]string{"aaa"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aaa (container): Top-level container for AAA services
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "aaa"
// Path from root: "/system/aaa"
func (n *SystemPathAny) Aaa() *System_AaaPathAny {
	return &System_AaaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"aaa"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmAny (list): List of alarms, keyed by a unique id
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "alarms/alarm"
// Path from root: "/system/alarms/alarm"
// Id (wildcarded): string
func (n *SystemPath) AlarmAny() *System_AlarmPathAny {
	return &System_AlarmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"alarms", "alarm"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// AlarmAny (list): List of alarms, keyed by a unique id
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "alarms/alarm"
// Path from root: "/system/alarms/alarm"
// Id (wildcarded): string
func (n *SystemPathAny) AlarmAny() *System_AlarmPathAny {
	return &System_AlarmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"alarms", "alarm"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Alarm (list): List of alarms, keyed by a unique id
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "alarms/alarm"
// Path from root: "/system/alarms/alarm"
// Id: string
func (n *SystemPath) Alarm(Id string) *System_AlarmPath {
	return &System_AlarmPath{
		NodePath: ygot.NewNodePath(
			[]string{"alarms", "alarm"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Alarm (list): List of alarms, keyed by a unique id
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "alarms/alarm"
// Path from root: "/system/alarms/alarm"
// Id: string
func (n *SystemPathAny) Alarm(Id string) *System_AlarmPathAny {
	return &System_AlarmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"alarms", "alarm"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// BootTime (leaf): This timestamp indicates the time that the system was last
// restarted.  The value is the timestamp in nanoseconds relative
// to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/boot-time"
// Path from root: "/system/state/boot-time"
func (n *SystemPath) BootTime() *System_BootTimePath {
	return &System_BootTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "boot-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// BootTime (leaf): This timestamp indicates the time that the system was last
// restarted.  The value is the timestamp in nanoseconds relative
// to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/boot-time"
// Path from root: "/system/state/boot-time"
func (n *SystemPathAny) BootTime() *System_BootTimePathAny {
	return &System_BootTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "boot-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Clock (container): Top-level container for clock configuration data
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "clock"
// Path from root: "/system/clock"
func (n *SystemPath) Clock() *System_ClockPath {
	return &System_ClockPath{
		NodePath: ygot.NewNodePath(
			[]string{"clock"},
			map[string]interface{}{},
			n,
		),
	}
}

// Clock (container): Top-level container for clock configuration data
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "clock"
// Path from root: "/system/clock"
func (n *SystemPathAny) Clock() *System_ClockPathAny {
	return &System_ClockPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"clock"},
			map[string]interface{}{},
			n,
		),
	}
}

// CpuAny (list): List of CPU cores on the system (including logical CPUs
// on hyperthreaded systems), keyed by either a numerical
// index, or the ALL value for an entry representing the
// aggregation across all CPUs.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "cpus/cpu"
// Path from root: "/system/cpus/cpu"
// Index (wildcarded): [oc.E_Cpu_Index_Enum, oc.UnionUint32]
func (n *SystemPath) CpuAny() *System_CpuPathAny {
	return &System_CpuPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"cpus", "cpu"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// CpuAny (list): List of CPU cores on the system (including logical CPUs
// on hyperthreaded systems), keyed by either a numerical
// index, or the ALL value for an entry representing the
// aggregation across all CPUs.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "cpus/cpu"
// Path from root: "/system/cpus/cpu"
// Index (wildcarded): [oc.E_Cpu_Index_Enum, oc.UnionUint32]
func (n *SystemPathAny) CpuAny() *System_CpuPathAny {
	return &System_CpuPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"cpus", "cpu"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Cpu (list): List of CPU cores on the system (including logical CPUs
// on hyperthreaded systems), keyed by either a numerical
// index, or the ALL value for an entry representing the
// aggregation across all CPUs.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "cpus/cpu"
// Path from root: "/system/cpus/cpu"
// Index: [oc.E_Cpu_Index_Enum, oc.UnionUint32]
func (n *SystemPath) Cpu(Index oc.System_Cpu_Index_Union) *System_CpuPath {
	return &System_CpuPath{
		NodePath: ygot.NewNodePath(
			[]string{"cpus", "cpu"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Cpu (list): List of CPU cores on the system (including logical CPUs
// on hyperthreaded systems), keyed by either a numerical
// index, or the ALL value for an entry representing the
// aggregation across all CPUs.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "cpus/cpu"
// Path from root: "/system/cpus/cpu"
// Index: [oc.E_Cpu_Index_Enum, oc.UnionUint32]
func (n *SystemPathAny) Cpu(Index oc.System_Cpu_Index_Union) *System_CpuPathAny {
	return &System_CpuPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"cpus", "cpu"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// CurrentDatetime (leaf): The current system date and time.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/current-datetime"
// Path from root: "/system/state/current-datetime"
func (n *SystemPath) CurrentDatetime() *System_CurrentDatetimePath {
	return &System_CurrentDatetimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "current-datetime"},
			map[string]interface{}{},
			n,
		),
	}
}

// CurrentDatetime (leaf): The current system date and time.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/current-datetime"
// Path from root: "/system/state/current-datetime"
func (n *SystemPathAny) CurrentDatetime() *System_CurrentDatetimePathAny {
	return &System_CurrentDatetimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "current-datetime"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dns (container): Enclosing container for DNS resolver data
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "dns"
// Path from root: "/system/dns"
func (n *SystemPath) Dns() *System_DnsPath {
	return &System_DnsPath{
		NodePath: ygot.NewNodePath(
			[]string{"dns"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dns (container): Enclosing container for DNS resolver data
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "dns"
// Path from root: "/system/dns"
func (n *SystemPathAny) Dns() *System_DnsPathAny {
	return &System_DnsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"dns"},
			map[string]interface{}{},
			n,
		),
	}
}

// DomainName (leaf): Specifies the domain name used to form fully qualified name
// for unqualified hostnames.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/domain-name"
// Path from root: "/system/state/domain-name"
func (n *SystemPath) DomainName() *System_DomainNamePath {
	return &System_DomainNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "domain-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// DomainName (leaf): Specifies the domain name used to form fully qualified name
// for unqualified hostnames.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/domain-name"
// Path from root: "/system/state/domain-name"
func (n *SystemPathAny) DomainName() *System_DomainNamePathAny {
	return &System_DomainNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "domain-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// GrpcServerAny (list): The list of gRPC servers that are running on the device. Each
// instance within this list corresponds to an individual gRPC listener
// that listens on a single TCP port on the specified addresses.
// Where there are multiple services that run on a single port, these
// are enabled through the service leaf-list which uses the GRPC_SERVICE
// identity to list the supported service types.
// ----------------------------------------
// Defining module: "openconfig-system-grpc"
// Instantiating module: "openconfig-system"
// Path from parent: "grpc-servers/grpc-server"
// Path from root: "/system/grpc-servers/grpc-server"
// Name (wildcarded): string
func (n *SystemPath) GrpcServerAny() *System_GrpcServerPathAny {
	return &System_GrpcServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"grpc-servers", "grpc-server"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// GrpcServerAny (list): The list of gRPC servers that are running on the device. Each
// instance within this list corresponds to an individual gRPC listener
// that listens on a single TCP port on the specified addresses.
// Where there are multiple services that run on a single port, these
// are enabled through the service leaf-list which uses the GRPC_SERVICE
// identity to list the supported service types.
// ----------------------------------------
// Defining module: "openconfig-system-grpc"
// Instantiating module: "openconfig-system"
// Path from parent: "grpc-servers/grpc-server"
// Path from root: "/system/grpc-servers/grpc-server"
// Name (wildcarded): string
func (n *SystemPathAny) GrpcServerAny() *System_GrpcServerPathAny {
	return &System_GrpcServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"grpc-servers", "grpc-server"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// GrpcServer (list): The list of gRPC servers that are running on the device. Each
// instance within this list corresponds to an individual gRPC listener
// that listens on a single TCP port on the specified addresses.
// Where there are multiple services that run on a single port, these
// are enabled through the service leaf-list which uses the GRPC_SERVICE
// identity to list the supported service types.
// ----------------------------------------
// Defining module: "openconfig-system-grpc"
// Instantiating module: "openconfig-system"
// Path from parent: "grpc-servers/grpc-server"
// Path from root: "/system/grpc-servers/grpc-server"
// Name: string
func (n *SystemPath) GrpcServer(Name string) *System_GrpcServerPath {
	return &System_GrpcServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"grpc-servers", "grpc-server"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// GrpcServer (list): The list of gRPC servers that are running on the device. Each
// instance within this list corresponds to an individual gRPC listener
// that listens on a single TCP port on the specified addresses.
// Where there are multiple services that run on a single port, these
// are enabled through the service leaf-list which uses the GRPC_SERVICE
// identity to list the supported service types.
// ----------------------------------------
// Defining module: "openconfig-system-grpc"
// Instantiating module: "openconfig-system"
// Path from parent: "grpc-servers/grpc-server"
// Path from root: "/system/grpc-servers/grpc-server"
// Name: string
func (n *SystemPathAny) GrpcServer(Name string) *System_GrpcServerPathAny {
	return &System_GrpcServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"grpc-servers", "grpc-server"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Hostname (leaf): The hostname of the device -- should be a single domain
// label, without the domain.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/hostname"
// Path from root: "/system/state/hostname"
func (n *SystemPath) Hostname() *System_HostnamePath {
	return &System_HostnamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hostname"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hostname (leaf): The hostname of the device -- should be a single domain
// label, without the domain.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/hostname"
// Path from root: "/system/state/hostname"
func (n *SystemPathAny) Hostname() *System_HostnamePathAny {
	return &System_HostnamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hostname"},
			map[string]interface{}{},
			n,
		),
	}
}

// License (container): Container for license model
// ----------------------------------------
// Defining module: "openconfig-license"
// Instantiating module: "openconfig-system"
// Path from parent: "license"
// Path from root: "/system/license"
func (n *SystemPath) License() *System_LicensePath {
	return &System_LicensePath{
		NodePath: ygot.NewNodePath(
			[]string{"license"},
			map[string]interface{}{},
			n,
		),
	}
}

// License (container): Container for license model
// ----------------------------------------
// Defining module: "openconfig-license"
// Instantiating module: "openconfig-system"
// Path from parent: "license"
// Path from root: "/system/license"
func (n *SystemPathAny) License() *System_LicensePathAny {
	return &System_LicensePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"license"},
			map[string]interface{}{},
			n,
		),
	}
}

// Logging (container): Top-level container for data related to logging / syslog
// ----------------------------------------
// Defining module: "openconfig-system-logging"
// Instantiating module: "openconfig-system"
// Path from parent: "logging"
// Path from root: "/system/logging"
func (n *SystemPath) Logging() *System_LoggingPath {
	return &System_LoggingPath{
		NodePath: ygot.NewNodePath(
			[]string{"logging"},
			map[string]interface{}{},
			n,
		),
	}
}

// Logging (container): Top-level container for data related to logging / syslog
// ----------------------------------------
// Defining module: "openconfig-system-logging"
// Instantiating module: "openconfig-system"
// Path from parent: "logging"
// Path from root: "/system/logging"
func (n *SystemPathAny) Logging() *System_LoggingPathAny {
	return &System_LoggingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"logging"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoginBanner (leaf): The console login message displayed before the login prompt,
// i.e., before a user logs into the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/login-banner"
// Path from root: "/system/state/login-banner"
func (n *SystemPath) LoginBanner() *System_LoginBannerPath {
	return &System_LoginBannerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "login-banner"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoginBanner (leaf): The console login message displayed before the login prompt,
// i.e., before a user logs into the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/login-banner"
// Path from root: "/system/state/login-banner"
func (n *SystemPathAny) LoginBanner() *System_LoginBannerPathAny {
	return &System_LoginBannerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "login-banner"},
			map[string]interface{}{},
			n,
		),
	}
}

// Memory (container): Top-level container for system memory data
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "memory"
// Path from root: "/system/memory"
func (n *SystemPath) Memory() *System_MemoryPath {
	return &System_MemoryPath{
		NodePath: ygot.NewNodePath(
			[]string{"memory"},
			map[string]interface{}{},
			n,
		),
	}
}

// Memory (container): Top-level container for system memory data
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "memory"
// Path from root: "/system/memory"
func (n *SystemPathAny) Memory() *System_MemoryPathAny {
	return &System_MemoryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"memory"},
			map[string]interface{}{},
			n,
		),
	}
}

// Messages (container): Top-level container for Syslog messages.
// ----------------------------------------
// Defining module: "openconfig-messages"
// Instantiating module: "openconfig-system"
// Path from parent: "messages"
// Path from root: "/system/messages"
func (n *SystemPath) Messages() *System_MessagesPath {
	return &System_MessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// Messages (container): Top-level container for Syslog messages.
// ----------------------------------------
// Defining module: "openconfig-messages"
// Instantiating module: "openconfig-system"
// Path from parent: "messages"
// Path from root: "/system/messages"
func (n *SystemPathAny) Messages() *System_MessagesPathAny {
	return &System_MessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// MotdBanner (leaf): The console message displayed after a user logs into the
// system.  They system may append additional standard
// information such as the current system date and time, uptime,
// last login timestamp, etc.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/motd-banner"
// Path from root: "/system/state/motd-banner"
func (n *SystemPath) MotdBanner() *System_MotdBannerPath {
	return &System_MotdBannerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "motd-banner"},
			map[string]interface{}{},
			n,
		),
	}
}

// MotdBanner (leaf): The console message displayed after a user logs into the
// system.  They system may append additional standard
// information such as the current system date and time, uptime,
// last login timestamp, etc.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/motd-banner"
// Path from root: "/system/state/motd-banner"
func (n *SystemPathAny) MotdBanner() *System_MotdBannerPathAny {
	return &System_MotdBannerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "motd-banner"},
			map[string]interface{}{},
			n,
		),
	}
}

// MountPointAny (list): List of mount points in the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "mount-points/mount-point"
// Path from root: "/system/mount-points/mount-point"
// Name (wildcarded): string
func (n *SystemPath) MountPointAny() *System_MountPointPathAny {
	return &System_MountPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mount-points", "mount-point"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// MountPointAny (list): List of mount points in the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "mount-points/mount-point"
// Path from root: "/system/mount-points/mount-point"
// Name (wildcarded): string
func (n *SystemPathAny) MountPointAny() *System_MountPointPathAny {
	return &System_MountPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mount-points", "mount-point"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// MountPoint (list): List of mount points in the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "mount-points/mount-point"
// Path from root: "/system/mount-points/mount-point"
// Name: string
func (n *SystemPath) MountPoint(Name string) *System_MountPointPath {
	return &System_MountPointPath{
		NodePath: ygot.NewNodePath(
			[]string{"mount-points", "mount-point"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// MountPoint (list): List of mount points in the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "mount-points/mount-point"
// Path from root: "/system/mount-points/mount-point"
// Name: string
func (n *SystemPathAny) MountPoint(Name string) *System_MountPointPathAny {
	return &System_MountPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mount-points", "mount-point"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Ntp (container): Top-level container for NTP configuration and state
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "ntp"
// Path from root: "/system/ntp"
func (n *SystemPath) Ntp() *System_NtpPath {
	return &System_NtpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ntp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ntp (container): Top-level container for NTP configuration and state
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "ntp"
// Path from root: "/system/ntp"
func (n *SystemPathAny) Ntp() *System_NtpPathAny {
	return &System_NtpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ntp"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProcessAny (list): List of monitored processes
// ----------------------------------------
// Defining module: "openconfig-procmon"
// Instantiating module: "openconfig-system"
// Path from parent: "processes/process"
// Path from root: "/system/processes/process"
// Pid (wildcarded): uint64
func (n *SystemPath) ProcessAny() *System_ProcessPathAny {
	return &System_ProcessPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"processes", "process"},
			map[string]interface{}{"pid": "*"},
			n,
		),
	}
}

// ProcessAny (list): List of monitored processes
// ----------------------------------------
// Defining module: "openconfig-procmon"
// Instantiating module: "openconfig-system"
// Path from parent: "processes/process"
// Path from root: "/system/processes/process"
// Pid (wildcarded): uint64
func (n *SystemPathAny) ProcessAny() *System_ProcessPathAny {
	return &System_ProcessPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"processes", "process"},
			map[string]interface{}{"pid": "*"},
			n,
		),
	}
}

// Process (list): List of monitored processes
// ----------------------------------------
// Defining module: "openconfig-procmon"
// Instantiating module: "openconfig-system"
// Path from parent: "processes/process"
// Path from root: "/system/processes/process"
// Pid: uint64
func (n *SystemPath) Process(Pid uint64) *System_ProcessPath {
	return &System_ProcessPath{
		NodePath: ygot.NewNodePath(
			[]string{"processes", "process"},
			map[string]interface{}{"pid": Pid},
			n,
		),
	}
}

// Process (list): List of monitored processes
// ----------------------------------------
// Defining module: "openconfig-procmon"
// Instantiating module: "openconfig-system"
// Path from parent: "processes/process"
// Path from root: "/system/processes/process"
// Pid: uint64
func (n *SystemPathAny) Process(Pid uint64) *System_ProcessPathAny {
	return &System_ProcessPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"processes", "process"},
			map[string]interface{}{"pid": Pid},
			n,
		),
	}
}

// SshServer (container): Top-level container for ssh server
// ----------------------------------------
// Defining module: "openconfig-system-terminal"
// Instantiating module: "openconfig-system"
// Path from parent: "ssh-server"
// Path from root: "/system/ssh-server"
func (n *SystemPath) SshServer() *System_SshServerPath {
	return &System_SshServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssh-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// SshServer (container): Top-level container for ssh server
// ----------------------------------------
// Defining module: "openconfig-system-terminal"
// Instantiating module: "openconfig-system"
// Path from parent: "ssh-server"
// Path from root: "/system/ssh-server"
func (n *SystemPathAny) SshServer() *System_SshServerPathAny {
	return &System_SshServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssh-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// TelnetServer (container): Top-level container for telnet terminal servers
// ----------------------------------------
// Defining module: "openconfig-system-terminal"
// Instantiating module: "openconfig-system"
// Path from parent: "telnet-server"
// Path from root: "/system/telnet-server"
func (n *SystemPath) TelnetServer() *System_TelnetServerPath {
	return &System_TelnetServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"telnet-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// TelnetServer (container): Top-level container for telnet terminal servers
// ----------------------------------------
// Defining module: "openconfig-system-terminal"
// Instantiating module: "openconfig-system"
// Path from parent: "telnet-server"
// Path from root: "/system/telnet-server"
func (n *SystemPathAny) TelnetServer() *System_TelnetServerPathAny {
	return &System_TelnetServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"telnet-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_AaaPath represents the /openconfig-system/system/aaa YANG schema element.
type System_AaaPath struct {
	*ygot.NodePath
}

// System_AaaPathAny represents the wildcard version of the /openconfig-system/system/aaa YANG schema element.
type System_AaaPathAny struct {
	*ygot.NodePath
}

// Accounting (container): Top-level container for AAA accounting
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "accounting"
// Path from root: "/system/aaa/accounting"
func (n *System_AaaPath) Accounting() *System_Aaa_AccountingPath {
	return &System_Aaa_AccountingPath{
		NodePath: ygot.NewNodePath(
			[]string{"accounting"},
			map[string]interface{}{},
			n,
		),
	}
}

// Accounting (container): Top-level container for AAA accounting
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "accounting"
// Path from root: "/system/aaa/accounting"
func (n *System_AaaPathAny) Accounting() *System_Aaa_AccountingPathAny {
	return &System_Aaa_AccountingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"accounting"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Top-level container for global authentication data
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "authentication"
// Path from root: "/system/aaa/authentication"
func (n *System_AaaPath) Authentication() *System_Aaa_AuthenticationPath {
	return &System_Aaa_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Top-level container for global authentication data
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "authentication"
// Path from root: "/system/aaa/authentication"
func (n *System_AaaPathAny) Authentication() *System_Aaa_AuthenticationPathAny {
	return &System_Aaa_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authorization (container): Top-level container for AAA authorization configuration
// and operational state data
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "authorization"
// Path from root: "/system/aaa/authorization"
func (n *System_AaaPath) Authorization() *System_Aaa_AuthorizationPath {
	return &System_Aaa_AuthorizationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authorization"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authorization (container): Top-level container for AAA authorization configuration
// and operational state data
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "authorization"
// Path from root: "/system/aaa/authorization"
func (n *System_AaaPathAny) Authorization() *System_Aaa_AuthorizationPathAny {
	return &System_Aaa_AuthorizationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authorization"},
			map[string]interface{}{},
			n,
		),
	}
}

// ServerGroupAny (list): List of AAA server groups.  All servers in a group
// must have the same type as indicated by the server
// type.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "server-groups/server-group"
// Path from root: "/system/aaa/server-groups/server-group"
// Name (wildcarded): string
func (n *System_AaaPath) ServerGroupAny() *System_Aaa_ServerGroupPathAny {
	return &System_Aaa_ServerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"server-groups", "server-group"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// ServerGroupAny (list): List of AAA server groups.  All servers in a group
// must have the same type as indicated by the server
// type.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "server-groups/server-group"
// Path from root: "/system/aaa/server-groups/server-group"
// Name (wildcarded): string
func (n *System_AaaPathAny) ServerGroupAny() *System_Aaa_ServerGroupPathAny {
	return &System_Aaa_ServerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"server-groups", "server-group"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// ServerGroup (list): List of AAA server groups.  All servers in a group
// must have the same type as indicated by the server
// type.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "server-groups/server-group"
// Path from root: "/system/aaa/server-groups/server-group"
// Name: string
func (n *System_AaaPath) ServerGroup(Name string) *System_Aaa_ServerGroupPath {
	return &System_Aaa_ServerGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"server-groups", "server-group"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// ServerGroup (list): List of AAA server groups.  All servers in a group
// must have the same type as indicated by the server
// type.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "server-groups/server-group"
// Path from root: "/system/aaa/server-groups/server-group"
// Name: string
func (n *System_AaaPathAny) ServerGroup(Name string) *System_Aaa_ServerGroupPathAny {
	return &System_Aaa_ServerGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"server-groups", "server-group"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// System_Aaa_AccountingPath represents the /openconfig-system/system/aaa/accounting YANG schema element.
type System_Aaa_AccountingPath struct {
	*ygot.NodePath
}

// System_Aaa_AccountingPathAny represents the wildcard version of the /openconfig-system/system/aaa/accounting YANG schema element.
type System_Aaa_AccountingPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Accounting_AccountingMethodPath represents the /openconfig-system/system/aaa/accounting/state/accounting-method YANG schema element.
type System_Aaa_Accounting_AccountingMethodPath struct {
	*ygot.NodePath
}

// System_Aaa_Accounting_AccountingMethodPathAny represents the wildcard version of the /openconfig-system/system/aaa/accounting/state/accounting-method YANG schema element.
type System_Aaa_Accounting_AccountingMethodPathAny struct {
	*ygot.NodePath
}

// AccountingMethod (leaf-list): An ordered list of methods used for AAA accounting for this
// event type.  The method is defined by the destination for
// accounting data, which may be specified as the group of
// all TACACS+/RADIUS servers, a defined server group, or
// the local system.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/accounting-method"
// Path from root: "/system/aaa/accounting/state/accounting-method"
func (n *System_Aaa_AccountingPath) AccountingMethod() *System_Aaa_Accounting_AccountingMethodPath {
	return &System_Aaa_Accounting_AccountingMethodPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "accounting-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// AccountingMethod (leaf-list): An ordered list of methods used for AAA accounting for this
// event type.  The method is defined by the destination for
// accounting data, which may be specified as the group of
// all TACACS+/RADIUS servers, a defined server group, or
// the local system.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/accounting-method"
// Path from root: "/system/aaa/accounting/state/accounting-method"
func (n *System_Aaa_AccountingPathAny) AccountingMethod() *System_Aaa_Accounting_AccountingMethodPathAny {
	return &System_Aaa_Accounting_AccountingMethodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "accounting-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// EventAny (list): List of events subject to accounting
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "events/event"
// Path from root: "/system/aaa/accounting/events/event"
// EventType (wildcarded): oc.E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
func (n *System_Aaa_AccountingPath) EventAny() *System_Aaa_Accounting_EventPathAny {
	return &System_Aaa_Accounting_EventPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"events", "event"},
			map[string]interface{}{"event-type": "*"},
			n,
		),
	}
}

// EventAny (list): List of events subject to accounting
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "events/event"
// Path from root: "/system/aaa/accounting/events/event"
// EventType (wildcarded): oc.E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
func (n *System_Aaa_AccountingPathAny) EventAny() *System_Aaa_Accounting_EventPathAny {
	return &System_Aaa_Accounting_EventPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"events", "event"},
			map[string]interface{}{"event-type": "*"},
			n,
		),
	}
}

// Event (list): List of events subject to accounting
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "events/event"
// Path from root: "/system/aaa/accounting/events/event"
// EventType: oc.E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
func (n *System_Aaa_AccountingPath) Event(EventType oc.E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE) *System_Aaa_Accounting_EventPath {
	return &System_Aaa_Accounting_EventPath{
		NodePath: ygot.NewNodePath(
			[]string{"events", "event"},
			map[string]interface{}{"event-type": EventType},
			n,
		),
	}
}

// Event (list): List of events subject to accounting
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "events/event"
// Path from root: "/system/aaa/accounting/events/event"
// EventType: oc.E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
func (n *System_Aaa_AccountingPathAny) Event(EventType oc.E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE) *System_Aaa_Accounting_EventPathAny {
	return &System_Aaa_Accounting_EventPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"events", "event"},
			map[string]interface{}{"event-type": EventType},
			n,
		),
	}
}

// System_Aaa_Accounting_EventPath represents the /openconfig-system/system/aaa/accounting/events/event YANG schema element.
type System_Aaa_Accounting_EventPath struct {
	*ygot.NodePath
}

// System_Aaa_Accounting_EventPathAny represents the wildcard version of the /openconfig-system/system/aaa/accounting/events/event YANG schema element.
type System_Aaa_Accounting_EventPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Accounting_Event_EventTypePath represents the /openconfig-system/system/aaa/accounting/events/event/state/event-type YANG schema element.
type System_Aaa_Accounting_Event_EventTypePath struct {
	*ygot.NodePath
}

// System_Aaa_Accounting_Event_EventTypePathAny represents the wildcard version of the /openconfig-system/system/aaa/accounting/events/event/state/event-type YANG schema element.
type System_Aaa_Accounting_Event_EventTypePathAny struct {
	*ygot.NodePath
}

// System_Aaa_Accounting_Event_RecordPath represents the /openconfig-system/system/aaa/accounting/events/event/state/record YANG schema element.
type System_Aaa_Accounting_Event_RecordPath struct {
	*ygot.NodePath
}

// System_Aaa_Accounting_Event_RecordPathAny represents the wildcard version of the /openconfig-system/system/aaa/accounting/events/event/state/record YANG schema element.
type System_Aaa_Accounting_Event_RecordPathAny struct {
	*ygot.NodePath
}

// EventType (leaf): The type of activity to record at the AAA accounting
// server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/event-type"
// Path from root: "/system/aaa/accounting/events/event/state/event-type"
func (n *System_Aaa_Accounting_EventPath) EventType() *System_Aaa_Accounting_Event_EventTypePath {
	return &System_Aaa_Accounting_Event_EventTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "event-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EventType (leaf): The type of activity to record at the AAA accounting
// server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/event-type"
// Path from root: "/system/aaa/accounting/events/event/state/event-type"
func (n *System_Aaa_Accounting_EventPathAny) EventType() *System_Aaa_Accounting_Event_EventTypePathAny {
	return &System_Aaa_Accounting_Event_EventTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "event-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Record (leaf): Type of record to send to the accounting server for this
// activity type
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/record"
// Path from root: "/system/aaa/accounting/events/event/state/record"
func (n *System_Aaa_Accounting_EventPath) Record() *System_Aaa_Accounting_Event_RecordPath {
	return &System_Aaa_Accounting_Event_RecordPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "record"},
			map[string]interface{}{},
			n,
		),
	}
}

// Record (leaf): Type of record to send to the accounting server for this
// activity type
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/record"
// Path from root: "/system/aaa/accounting/events/event/state/record"
func (n *System_Aaa_Accounting_EventPathAny) Record() *System_Aaa_Accounting_Event_RecordPathAny {
	return &System_Aaa_Accounting_Event_RecordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "record"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Aaa_AuthenticationPath represents the /openconfig-system/system/aaa/authentication YANG schema element.
type System_Aaa_AuthenticationPath struct {
	*ygot.NodePath
}

// System_Aaa_AuthenticationPathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication YANG schema element.
type System_Aaa_AuthenticationPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_AuthenticationMethodPath represents the /openconfig-system/system/aaa/authentication/state/authentication-method YANG schema element.
type System_Aaa_Authentication_AuthenticationMethodPath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_AuthenticationMethodPathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/state/authentication-method YANG schema element.
type System_Aaa_Authentication_AuthenticationMethodPathAny struct {
	*ygot.NodePath
}

// AdminUser (container): Top-level container for the system root or admin user
// configuration and operational state
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "admin-user"
// Path from root: "/system/aaa/authentication/admin-user"
func (n *System_Aaa_AuthenticationPath) AdminUser() *System_Aaa_Authentication_AdminUserPath {
	return &System_Aaa_Authentication_AdminUserPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-user"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminUser (container): Top-level container for the system root or admin user
// configuration and operational state
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "admin-user"
// Path from root: "/system/aaa/authentication/admin-user"
func (n *System_Aaa_AuthenticationPathAny) AdminUser() *System_Aaa_Authentication_AdminUserPathAny {
	return &System_Aaa_Authentication_AdminUserPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-user"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationMethod (leaf-list): Ordered list of authentication methods for users.  This
// can be either a reference to a server group, or a well-
// defined designation in the AAA_METHOD_TYPE identity.  If
// authentication fails with one method, the next defined
// method is tried -- failure of all methods results in the
// user being denied access.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/authentication-method"
// Path from root: "/system/aaa/authentication/state/authentication-method"
func (n *System_Aaa_AuthenticationPath) AuthenticationMethod() *System_Aaa_Authentication_AuthenticationMethodPath {
	return &System_Aaa_Authentication_AuthenticationMethodPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationMethod (leaf-list): Ordered list of authentication methods for users.  This
// can be either a reference to a server group, or a well-
// defined designation in the AAA_METHOD_TYPE identity.  If
// authentication fails with one method, the next defined
// method is tried -- failure of all methods results in the
// user being denied access.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/authentication-method"
// Path from root: "/system/aaa/authentication/state/authentication-method"
func (n *System_Aaa_AuthenticationPathAny) AuthenticationMethod() *System_Aaa_Authentication_AuthenticationMethodPathAny {
	return &System_Aaa_Authentication_AuthenticationMethodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// UserAny (list): List of local users on the system
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "users/user"
// Path from root: "/system/aaa/authentication/users/user"
// Username (wildcarded): string
func (n *System_Aaa_AuthenticationPath) UserAny() *System_Aaa_Authentication_UserPathAny {
	return &System_Aaa_Authentication_UserPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"users", "user"},
			map[string]interface{}{"username": "*"},
			n,
		),
	}
}

// UserAny (list): List of local users on the system
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "users/user"
// Path from root: "/system/aaa/authentication/users/user"
// Username (wildcarded): string
func (n *System_Aaa_AuthenticationPathAny) UserAny() *System_Aaa_Authentication_UserPathAny {
	return &System_Aaa_Authentication_UserPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"users", "user"},
			map[string]interface{}{"username": "*"},
			n,
		),
	}
}

// User (list): List of local users on the system
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "users/user"
// Path from root: "/system/aaa/authentication/users/user"
// Username: string
func (n *System_Aaa_AuthenticationPath) User(Username string) *System_Aaa_Authentication_UserPath {
	return &System_Aaa_Authentication_UserPath{
		NodePath: ygot.NewNodePath(
			[]string{"users", "user"},
			map[string]interface{}{"username": Username},
			n,
		),
	}
}

// User (list): List of local users on the system
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "users/user"
// Path from root: "/system/aaa/authentication/users/user"
// Username: string
func (n *System_Aaa_AuthenticationPathAny) User(Username string) *System_Aaa_Authentication_UserPathAny {
	return &System_Aaa_Authentication_UserPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"users", "user"},
			map[string]interface{}{"username": Username},
			n,
		),
	}
}

// System_Aaa_Authentication_AdminUserPath represents the /openconfig-system/system/aaa/authentication/admin-user YANG schema element.
type System_Aaa_Authentication_AdminUserPath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_AdminUserPathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/admin-user YANG schema element.
type System_Aaa_Authentication_AdminUserPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_AdminUser_AdminPasswordPath represents the /openconfig-system/system/aaa/authentication/admin-user/state/admin-password YANG schema element.
type System_Aaa_Authentication_AdminUser_AdminPasswordPath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_AdminUser_AdminPasswordPathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/admin-user/state/admin-password YANG schema element.
type System_Aaa_Authentication_AdminUser_AdminPasswordPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_AdminUser_AdminPasswordHashedPath represents the /openconfig-system/system/aaa/authentication/admin-user/state/admin-password-hashed YANG schema element.
type System_Aaa_Authentication_AdminUser_AdminPasswordHashedPath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_AdminUser_AdminPasswordHashedPathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/admin-user/state/admin-password-hashed YANG schema element.
type System_Aaa_Authentication_AdminUser_AdminPasswordHashedPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_AdminUser_AdminUsernamePath represents the /openconfig-system/system/aaa/authentication/admin-user/state/admin-username YANG schema element.
type System_Aaa_Authentication_AdminUser_AdminUsernamePath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_AdminUser_AdminUsernamePathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/admin-user/state/admin-username YANG schema element.
type System_Aaa_Authentication_AdminUser_AdminUsernamePathAny struct {
	*ygot.NodePath
}

// AdminPassword (leaf): The admin/root password, supplied as a cleartext string.
// The system should hash and only store the password as a
// hashed value.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/admin-password"
// Path from root: "/system/aaa/authentication/admin-user/state/admin-password"
func (n *System_Aaa_Authentication_AdminUserPath) AdminPassword() *System_Aaa_Authentication_AdminUser_AdminPasswordPath {
	return &System_Aaa_Authentication_AdminUser_AdminPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminPassword (leaf): The admin/root password, supplied as a cleartext string.
// The system should hash and only store the password as a
// hashed value.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/admin-password"
// Path from root: "/system/aaa/authentication/admin-user/state/admin-password"
func (n *System_Aaa_Authentication_AdminUserPathAny) AdminPassword() *System_Aaa_Authentication_AdminUser_AdminPasswordPathAny {
	return &System_Aaa_Authentication_AdminUser_AdminPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminPasswordHashed (leaf): The admin/root password, supplied as a hashed value
// using the notation described in the definition of the
// crypt-password-type.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/admin-password-hashed"
// Path from root: "/system/aaa/authentication/admin-user/state/admin-password-hashed"
func (n *System_Aaa_Authentication_AdminUserPath) AdminPasswordHashed() *System_Aaa_Authentication_AdminUser_AdminPasswordHashedPath {
	return &System_Aaa_Authentication_AdminUser_AdminPasswordHashedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-password-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminPasswordHashed (leaf): The admin/root password, supplied as a hashed value
// using the notation described in the definition of the
// crypt-password-type.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/admin-password-hashed"
// Path from root: "/system/aaa/authentication/admin-user/state/admin-password-hashed"
func (n *System_Aaa_Authentication_AdminUserPathAny) AdminPasswordHashed() *System_Aaa_Authentication_AdminUser_AdminPasswordHashedPathAny {
	return &System_Aaa_Authentication_AdminUser_AdminPasswordHashedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-password-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminUsername (leaf): Name of the administrator user account, e.g., admin, root,
// etc.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/admin-username"
// Path from root: "/system/aaa/authentication/admin-user/state/admin-username"
func (n *System_Aaa_Authentication_AdminUserPath) AdminUsername() *System_Aaa_Authentication_AdminUser_AdminUsernamePath {
	return &System_Aaa_Authentication_AdminUser_AdminUsernamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-username"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminUsername (leaf): Name of the administrator user account, e.g., admin, root,
// etc.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/admin-username"
// Path from root: "/system/aaa/authentication/admin-user/state/admin-username"
func (n *System_Aaa_Authentication_AdminUserPathAny) AdminUsername() *System_Aaa_Authentication_AdminUser_AdminUsernamePathAny {
	return &System_Aaa_Authentication_AdminUser_AdminUsernamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-username"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Aaa_Authentication_UserPath represents the /openconfig-system/system/aaa/authentication/users/user YANG schema element.
type System_Aaa_Authentication_UserPath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_UserPathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/users/user YANG schema element.
type System_Aaa_Authentication_UserPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_PasswordPath represents the /openconfig-system/system/aaa/authentication/users/user/state/password YANG schema element.
type System_Aaa_Authentication_User_PasswordPath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_PasswordPathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/users/user/state/password YANG schema element.
type System_Aaa_Authentication_User_PasswordPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_PasswordHashedPath represents the /openconfig-system/system/aaa/authentication/users/user/state/password-hashed YANG schema element.
type System_Aaa_Authentication_User_PasswordHashedPath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_PasswordHashedPathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/users/user/state/password-hashed YANG schema element.
type System_Aaa_Authentication_User_PasswordHashedPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_RolePath represents the /openconfig-system/system/aaa/authentication/users/user/state/role YANG schema element.
type System_Aaa_Authentication_User_RolePath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_RolePathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/users/user/state/role YANG schema element.
type System_Aaa_Authentication_User_RolePathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_SshKeyPath represents the /openconfig-system/system/aaa/authentication/users/user/state/ssh-key YANG schema element.
type System_Aaa_Authentication_User_SshKeyPath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_SshKeyPathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/users/user/state/ssh-key YANG schema element.
type System_Aaa_Authentication_User_SshKeyPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_UsernamePath represents the /openconfig-system/system/aaa/authentication/users/user/state/username YANG schema element.
type System_Aaa_Authentication_User_UsernamePath struct {
	*ygot.NodePath
}

// System_Aaa_Authentication_User_UsernamePathAny represents the wildcard version of the /openconfig-system/system/aaa/authentication/users/user/state/username YANG schema element.
type System_Aaa_Authentication_User_UsernamePathAny struct {
	*ygot.NodePath
}

// Password (leaf): The user password, supplied as cleartext.  The system
// must hash the value and only store the hashed value.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/password"
// Path from root: "/system/aaa/authentication/users/user/state/password"
func (n *System_Aaa_Authentication_UserPath) Password() *System_Aaa_Authentication_User_PasswordPath {
	return &System_Aaa_Authentication_User_PasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "password"},
			map[string]interface{}{},
			n,
		),
	}
}

// Password (leaf): The user password, supplied as cleartext.  The system
// must hash the value and only store the hashed value.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/password"
// Path from root: "/system/aaa/authentication/users/user/state/password"
func (n *System_Aaa_Authentication_UserPathAny) Password() *System_Aaa_Authentication_User_PasswordPathAny {
	return &System_Aaa_Authentication_User_PasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "password"},
			map[string]interface{}{},
			n,
		),
	}
}

// PasswordHashed (leaf): The user password, supplied as a hashed value
// using the notation described in the definition of the
// crypt-password-type.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/password-hashed"
// Path from root: "/system/aaa/authentication/users/user/state/password-hashed"
func (n *System_Aaa_Authentication_UserPath) PasswordHashed() *System_Aaa_Authentication_User_PasswordHashedPath {
	return &System_Aaa_Authentication_User_PasswordHashedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "password-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// PasswordHashed (leaf): The user password, supplied as a hashed value
// using the notation described in the definition of the
// crypt-password-type.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/password-hashed"
// Path from root: "/system/aaa/authentication/users/user/state/password-hashed"
func (n *System_Aaa_Authentication_UserPathAny) PasswordHashed() *System_Aaa_Authentication_User_PasswordHashedPathAny {
	return &System_Aaa_Authentication_User_PasswordHashedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "password-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Role (leaf): Role assigned to the user.  The role may be supplied
// as a string or a role defined by the SYSTEM_DEFINED_ROLES
// identity.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/role"
// Path from root: "/system/aaa/authentication/users/user/state/role"
func (n *System_Aaa_Authentication_UserPath) Role() *System_Aaa_Authentication_User_RolePath {
	return &System_Aaa_Authentication_User_RolePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "role"},
			map[string]interface{}{},
			n,
		),
	}
}

// Role (leaf): Role assigned to the user.  The role may be supplied
// as a string or a role defined by the SYSTEM_DEFINED_ROLES
// identity.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/role"
// Path from root: "/system/aaa/authentication/users/user/state/role"
func (n *System_Aaa_Authentication_UserPathAny) Role() *System_Aaa_Authentication_User_RolePathAny {
	return &System_Aaa_Authentication_User_RolePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "role"},
			map[string]interface{}{},
			n,
		),
	}
}

// SshKey (leaf): SSH public key for the user (RSA or DSA)
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/ssh-key"
// Path from root: "/system/aaa/authentication/users/user/state/ssh-key"
func (n *System_Aaa_Authentication_UserPath) SshKey() *System_Aaa_Authentication_User_SshKeyPath {
	return &System_Aaa_Authentication_User_SshKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssh-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// SshKey (leaf): SSH public key for the user (RSA or DSA)
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/ssh-key"
// Path from root: "/system/aaa/authentication/users/user/state/ssh-key"
func (n *System_Aaa_Authentication_UserPathAny) SshKey() *System_Aaa_Authentication_User_SshKeyPathAny {
	return &System_Aaa_Authentication_User_SshKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssh-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// Username (leaf): Assigned username for this user
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/username"
// Path from root: "/system/aaa/authentication/users/user/state/username"
func (n *System_Aaa_Authentication_UserPath) Username() *System_Aaa_Authentication_User_UsernamePath {
	return &System_Aaa_Authentication_User_UsernamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "username"},
			map[string]interface{}{},
			n,
		),
	}
}

// Username (leaf): Assigned username for this user
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/username"
// Path from root: "/system/aaa/authentication/users/user/state/username"
func (n *System_Aaa_Authentication_UserPathAny) Username() *System_Aaa_Authentication_User_UsernamePathAny {
	return &System_Aaa_Authentication_User_UsernamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "username"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Aaa_AuthorizationPath represents the /openconfig-system/system/aaa/authorization YANG schema element.
type System_Aaa_AuthorizationPath struct {
	*ygot.NodePath
}

// System_Aaa_AuthorizationPathAny represents the wildcard version of the /openconfig-system/system/aaa/authorization YANG schema element.
type System_Aaa_AuthorizationPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authorization_AuthorizationMethodPath represents the /openconfig-system/system/aaa/authorization/state/authorization-method YANG schema element.
type System_Aaa_Authorization_AuthorizationMethodPath struct {
	*ygot.NodePath
}

// System_Aaa_Authorization_AuthorizationMethodPathAny represents the wildcard version of the /openconfig-system/system/aaa/authorization/state/authorization-method YANG schema element.
type System_Aaa_Authorization_AuthorizationMethodPathAny struct {
	*ygot.NodePath
}

// AuthorizationMethod (leaf-list): Ordered list of methods for authorizing commands.  The first
// method that provides a response (positive or negative) should
// be used.  The list may contain a well-defined method such
// as the set of all TACACS or RADIUS servers, or the name of
// a defined AAA server group.  The system must validate
// that the named server group exists.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/authorization-method"
// Path from root: "/system/aaa/authorization/state/authorization-method"
func (n *System_Aaa_AuthorizationPath) AuthorizationMethod() *System_Aaa_Authorization_AuthorizationMethodPath {
	return &System_Aaa_Authorization_AuthorizationMethodPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authorization-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthorizationMethod (leaf-list): Ordered list of methods for authorizing commands.  The first
// method that provides a response (positive or negative) should
// be used.  The list may contain a well-defined method such
// as the set of all TACACS or RADIUS servers, or the name of
// a defined AAA server group.  The system must validate
// that the named server group exists.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/authorization-method"
// Path from root: "/system/aaa/authorization/state/authorization-method"
func (n *System_Aaa_AuthorizationPathAny) AuthorizationMethod() *System_Aaa_Authorization_AuthorizationMethodPathAny {
	return &System_Aaa_Authorization_AuthorizationMethodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authorization-method"},
			map[string]interface{}{},
			n,
		),
	}
}

// EventAny (list): List of events subject to AAA authorization
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "events/event"
// Path from root: "/system/aaa/authorization/events/event"
// EventType (wildcarded): oc.E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
func (n *System_Aaa_AuthorizationPath) EventAny() *System_Aaa_Authorization_EventPathAny {
	return &System_Aaa_Authorization_EventPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"events", "event"},
			map[string]interface{}{"event-type": "*"},
			n,
		),
	}
}

// EventAny (list): List of events subject to AAA authorization
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "events/event"
// Path from root: "/system/aaa/authorization/events/event"
// EventType (wildcarded): oc.E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
func (n *System_Aaa_AuthorizationPathAny) EventAny() *System_Aaa_Authorization_EventPathAny {
	return &System_Aaa_Authorization_EventPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"events", "event"},
			map[string]interface{}{"event-type": "*"},
			n,
		),
	}
}

// Event (list): List of events subject to AAA authorization
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "events/event"
// Path from root: "/system/aaa/authorization/events/event"
// EventType: oc.E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
func (n *System_Aaa_AuthorizationPath) Event(EventType oc.E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) *System_Aaa_Authorization_EventPath {
	return &System_Aaa_Authorization_EventPath{
		NodePath: ygot.NewNodePath(
			[]string{"events", "event"},
			map[string]interface{}{"event-type": EventType},
			n,
		),
	}
}

// Event (list): List of events subject to AAA authorization
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "events/event"
// Path from root: "/system/aaa/authorization/events/event"
// EventType: oc.E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
func (n *System_Aaa_AuthorizationPathAny) Event(EventType oc.E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) *System_Aaa_Authorization_EventPathAny {
	return &System_Aaa_Authorization_EventPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"events", "event"},
			map[string]interface{}{"event-type": EventType},
			n,
		),
	}
}

// System_Aaa_Authorization_EventPath represents the /openconfig-system/system/aaa/authorization/events/event YANG schema element.
type System_Aaa_Authorization_EventPath struct {
	*ygot.NodePath
}

// System_Aaa_Authorization_EventPathAny represents the wildcard version of the /openconfig-system/system/aaa/authorization/events/event YANG schema element.
type System_Aaa_Authorization_EventPathAny struct {
	*ygot.NodePath
}

// System_Aaa_Authorization_Event_EventTypePath represents the /openconfig-system/system/aaa/authorization/events/event/state/event-type YANG schema element.
type System_Aaa_Authorization_Event_EventTypePath struct {
	*ygot.NodePath
}

// System_Aaa_Authorization_Event_EventTypePathAny represents the wildcard version of the /openconfig-system/system/aaa/authorization/events/event/state/event-type YANG schema element.
type System_Aaa_Authorization_Event_EventTypePathAny struct {
	*ygot.NodePath
}

// EventType (leaf): The type of event to record at the AAA authorization
// server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/event-type"
// Path from root: "/system/aaa/authorization/events/event/state/event-type"
func (n *System_Aaa_Authorization_EventPath) EventType() *System_Aaa_Authorization_Event_EventTypePath {
	return &System_Aaa_Authorization_Event_EventTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "event-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EventType (leaf): The type of event to record at the AAA authorization
// server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/event-type"
// Path from root: "/system/aaa/authorization/events/event/state/event-type"
func (n *System_Aaa_Authorization_EventPathAny) EventType() *System_Aaa_Authorization_Event_EventTypePathAny {
	return &System_Aaa_Authorization_Event_EventTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "event-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Aaa_ServerGroupPath represents the /openconfig-system/system/aaa/server-groups/server-group YANG schema element.
type System_Aaa_ServerGroupPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroupPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group YANG schema element.
type System_Aaa_ServerGroupPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_NamePath represents the /openconfig-system/system/aaa/server-groups/server-group/state/name YANG schema element.
type System_Aaa_ServerGroup_NamePath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_NamePathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/state/name YANG schema element.
type System_Aaa_ServerGroup_NamePathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_TypePath represents the /openconfig-system/system/aaa/server-groups/server-group/state/type YANG schema element.
type System_Aaa_ServerGroup_TypePath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_TypePathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/state/type YANG schema element.
type System_Aaa_ServerGroup_TypePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Name for the server group
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/name"
// Path from root: "/system/aaa/server-groups/server-group/state/name"
func (n *System_Aaa_ServerGroupPath) Name() *System_Aaa_ServerGroup_NamePath {
	return &System_Aaa_ServerGroup_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Name for the server group
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/name"
// Path from root: "/system/aaa/server-groups/server-group/state/name"
func (n *System_Aaa_ServerGroupPathAny) Name() *System_Aaa_ServerGroup_NamePathAny {
	return &System_Aaa_ServerGroup_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// ServerAny (list): List of AAA servers
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "servers/server"
// Path from root: "/system/aaa/server-groups/server-group/servers/server"
// Address (wildcarded): string
func (n *System_Aaa_ServerGroupPath) ServerAny() *System_Aaa_ServerGroup_ServerPathAny {
	return &System_Aaa_ServerGroup_ServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"servers", "server"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// ServerAny (list): List of AAA servers
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "servers/server"
// Path from root: "/system/aaa/server-groups/server-group/servers/server"
// Address (wildcarded): string
func (n *System_Aaa_ServerGroupPathAny) ServerAny() *System_Aaa_ServerGroup_ServerPathAny {
	return &System_Aaa_ServerGroup_ServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"servers", "server"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// Server (list): List of AAA servers
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "servers/server"
// Path from root: "/system/aaa/server-groups/server-group/servers/server"
// Address: string
func (n *System_Aaa_ServerGroupPath) Server(Address string) *System_Aaa_ServerGroup_ServerPath {
	return &System_Aaa_ServerGroup_ServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"servers", "server"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Server (list): List of AAA servers
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "servers/server"
// Path from root: "/system/aaa/server-groups/server-group/servers/server"
// Address: string
func (n *System_Aaa_ServerGroupPathAny) Server(Address string) *System_Aaa_ServerGroup_ServerPathAny {
	return &System_Aaa_ServerGroup_ServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"servers", "server"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Type (leaf): AAA server type -- all servers in the group must be of this
// type
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/type"
// Path from root: "/system/aaa/server-groups/server-group/state/type"
func (n *System_Aaa_ServerGroupPath) Type() *System_Aaa_ServerGroup_TypePath {
	return &System_Aaa_ServerGroup_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): AAA server type -- all servers in the group must be of this
// type
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/type"
// Path from root: "/system/aaa/server-groups/server-group/state/type"
func (n *System_Aaa_ServerGroupPathAny) Type() *System_Aaa_ServerGroup_TypePathAny {
	return &System_Aaa_ServerGroup_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Aaa_ServerGroup_ServerPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server YANG schema element.
type System_Aaa_ServerGroup_ServerPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_ServerPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server YANG schema element.
type System_Aaa_ServerGroup_ServerPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_AddressPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/address YANG schema element.
type System_Aaa_ServerGroup_Server_AddressPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_AddressPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/address YANG schema element.
type System_Aaa_ServerGroup_Server_AddressPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionAbortsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-aborts YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionAbortsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionAbortsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-aborts YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionAbortsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionClosesPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-closes YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionClosesPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionClosesPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-closes YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionClosesPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionFailuresPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-failures YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionFailuresPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionFailuresPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-failures YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionFailuresPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionOpensPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-opens YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionOpensPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionOpensPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-opens YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionOpensPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionTimeoutsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionTimeoutsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ConnectionTimeoutsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts YANG schema element.
type System_Aaa_ServerGroup_Server_ConnectionTimeoutsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ErrorsReceivedPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/errors-received YANG schema element.
type System_Aaa_ServerGroup_Server_ErrorsReceivedPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_ErrorsReceivedPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/errors-received YANG schema element.
type System_Aaa_ServerGroup_Server_ErrorsReceivedPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_MessagesReceivedPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/messages-received YANG schema element.
type System_Aaa_ServerGroup_Server_MessagesReceivedPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_MessagesReceivedPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/messages-received YANG schema element.
type System_Aaa_ServerGroup_Server_MessagesReceivedPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_MessagesSentPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/messages-sent YANG schema element.
type System_Aaa_ServerGroup_Server_MessagesSentPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_MessagesSentPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/messages-sent YANG schema element.
type System_Aaa_ServerGroup_Server_MessagesSentPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_NamePath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/name YANG schema element.
type System_Aaa_ServerGroup_Server_NamePath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_NamePathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/name YANG schema element.
type System_Aaa_ServerGroup_Server_NamePathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_TimeoutPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/timeout YANG schema element.
type System_Aaa_ServerGroup_Server_TimeoutPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_TimeoutPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/state/timeout YANG schema element.
type System_Aaa_ServerGroup_Server_TimeoutPathAny struct {
	*ygot.NodePath
}

// Address (leaf): Address of the authentication server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/address"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/address"
func (n *System_Aaa_ServerGroup_ServerPath) Address() *System_Aaa_ServerGroup_Server_AddressPath {
	return &System_Aaa_ServerGroup_Server_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): Address of the authentication server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/address"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/address"
func (n *System_Aaa_ServerGroup_ServerPathAny) Address() *System_Aaa_ServerGroup_Server_AddressPathAny {
	return &System_Aaa_ServerGroup_Server_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionAborts (leaf): Number of aborted connections to the server.  These do
// not include connections that are close gracefully.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-aborts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionAborts() *System_Aaa_ServerGroup_Server_ConnectionAbortsPath {
	return &System_Aaa_ServerGroup_Server_ConnectionAbortsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-aborts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionAborts (leaf): Number of aborted connections to the server.  These do
// not include connections that are close gracefully.
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-aborts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionAborts() *System_Aaa_ServerGroup_Server_ConnectionAbortsPathAny {
	return &System_Aaa_ServerGroup_Server_ConnectionAbortsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-aborts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionCloses (leaf): Number of connection close requests sent to the server, e.g.
// socket close
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-closes"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-closes"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionCloses() *System_Aaa_ServerGroup_Server_ConnectionClosesPath {
	return &System_Aaa_ServerGroup_Server_ConnectionClosesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-closes"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionCloses (leaf): Number of connection close requests sent to the server, e.g.
// socket close
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-closes"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-closes"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionCloses() *System_Aaa_ServerGroup_Server_ConnectionClosesPathAny {
	return &System_Aaa_ServerGroup_Server_ConnectionClosesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-closes"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionFailures (leaf): Number of connection failures to the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-failures"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-failures"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionFailures() *System_Aaa_ServerGroup_Server_ConnectionFailuresPath {
	return &System_Aaa_ServerGroup_Server_ConnectionFailuresPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-failures"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionFailures (leaf): Number of connection failures to the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-failures"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-failures"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionFailures() *System_Aaa_ServerGroup_Server_ConnectionFailuresPathAny {
	return &System_Aaa_ServerGroup_Server_ConnectionFailuresPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-failures"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionOpens (leaf): Number of new connection requests sent to the server, e.g.
// socket open
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-opens"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-opens"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionOpens() *System_Aaa_ServerGroup_Server_ConnectionOpensPath {
	return &System_Aaa_ServerGroup_Server_ConnectionOpensPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-opens"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionOpens (leaf): Number of new connection requests sent to the server, e.g.
// socket open
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-opens"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-opens"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionOpens() *System_Aaa_ServerGroup_Server_ConnectionOpensPathAny {
	return &System_Aaa_ServerGroup_Server_ConnectionOpensPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-opens"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionTimeouts (leaf): Number of connection timeouts to the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-timeouts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"
func (n *System_Aaa_ServerGroup_ServerPath) ConnectionTimeouts() *System_Aaa_ServerGroup_Server_ConnectionTimeoutsPath {
	return &System_Aaa_ServerGroup_Server_ConnectionTimeoutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-timeouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectionTimeouts (leaf): Number of connection timeouts to the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/connection-timeouts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"
func (n *System_Aaa_ServerGroup_ServerPathAny) ConnectionTimeouts() *System_Aaa_ServerGroup_Server_ConnectionTimeoutsPathAny {
	return &System_Aaa_ServerGroup_Server_ConnectionTimeoutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "connection-timeouts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorsReceived (leaf): Number of error messages received from the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/errors-received"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/errors-received"
func (n *System_Aaa_ServerGroup_ServerPath) ErrorsReceived() *System_Aaa_ServerGroup_Server_ErrorsReceivedPath {
	return &System_Aaa_ServerGroup_Server_ErrorsReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "errors-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorsReceived (leaf): Number of error messages received from the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/errors-received"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/errors-received"
func (n *System_Aaa_ServerGroup_ServerPathAny) ErrorsReceived() *System_Aaa_ServerGroup_Server_ErrorsReceivedPathAny {
	return &System_Aaa_ServerGroup_Server_ErrorsReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "errors-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// MessagesReceived (leaf): Number of messages received by the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/messages-received"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/messages-received"
func (n *System_Aaa_ServerGroup_ServerPath) MessagesReceived() *System_Aaa_ServerGroup_Server_MessagesReceivedPath {
	return &System_Aaa_ServerGroup_Server_MessagesReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "messages-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// MessagesReceived (leaf): Number of messages received by the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/messages-received"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/messages-received"
func (n *System_Aaa_ServerGroup_ServerPathAny) MessagesReceived() *System_Aaa_ServerGroup_Server_MessagesReceivedPathAny {
	return &System_Aaa_ServerGroup_Server_MessagesReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "messages-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// MessagesSent (leaf): Number of messages sent to the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/messages-sent"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/messages-sent"
func (n *System_Aaa_ServerGroup_ServerPath) MessagesSent() *System_Aaa_ServerGroup_Server_MessagesSentPath {
	return &System_Aaa_ServerGroup_Server_MessagesSentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "messages-sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// MessagesSent (leaf): Number of messages sent to the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/messages-sent"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/messages-sent"
func (n *System_Aaa_ServerGroup_ServerPathAny) MessagesSent() *System_Aaa_ServerGroup_Server_MessagesSentPathAny {
	return &System_Aaa_ServerGroup_Server_MessagesSentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "messages-sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Name assigned to the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/name"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/name"
func (n *System_Aaa_ServerGroup_ServerPath) Name() *System_Aaa_ServerGroup_Server_NamePath {
	return &System_Aaa_ServerGroup_Server_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Name assigned to the server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/name"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/name"
func (n *System_Aaa_ServerGroup_ServerPathAny) Name() *System_Aaa_ServerGroup_Server_NamePathAny {
	return &System_Aaa_ServerGroup_Server_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Radius (container): Top-level container for RADIUS server data
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "radius"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius"
func (n *System_Aaa_ServerGroup_ServerPath) Radius() *System_Aaa_ServerGroup_Server_RadiusPath {
	return &System_Aaa_ServerGroup_Server_RadiusPath{
		NodePath: ygot.NewNodePath(
			[]string{"radius"},
			map[string]interface{}{},
			n,
		),
	}
}

// Radius (container): Top-level container for RADIUS server data
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "radius"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius"
func (n *System_Aaa_ServerGroup_ServerPathAny) Radius() *System_Aaa_ServerGroup_Server_RadiusPathAny {
	return &System_Aaa_ServerGroup_Server_RadiusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"radius"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tacacs (container): Top-level container for TACACS+ server data
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "tacacs"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs"
func (n *System_Aaa_ServerGroup_ServerPath) Tacacs() *System_Aaa_ServerGroup_Server_TacacsPath {
	return &System_Aaa_ServerGroup_Server_TacacsPath{
		NodePath: ygot.NewNodePath(
			[]string{"tacacs"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tacacs (container): Top-level container for TACACS+ server data
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "tacacs"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs"
func (n *System_Aaa_ServerGroup_ServerPathAny) Tacacs() *System_Aaa_ServerGroup_Server_TacacsPathAny {
	return &System_Aaa_ServerGroup_Server_TacacsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tacacs"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): Set the timeout in seconds on responses from the AAA
// server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/timeout"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/timeout"
func (n *System_Aaa_ServerGroup_ServerPath) Timeout() *System_Aaa_ServerGroup_Server_TimeoutPath {
	return &System_Aaa_ServerGroup_Server_TimeoutPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): Set the timeout in seconds on responses from the AAA
// server
// ----------------------------------------
// Defining module: "openconfig-aaa"
// Instantiating module: "openconfig-system"
// Path from parent: "state/timeout"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/state/timeout"
func (n *System_Aaa_ServerGroup_ServerPathAny) Timeout() *System_Aaa_ServerGroup_Server_TimeoutPathAny {
	return &System_Aaa_ServerGroup_Server_TimeoutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Aaa_ServerGroup_Server_RadiusPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius YANG schema element.
type System_Aaa_ServerGroup_Server_RadiusPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_RadiusPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius YANG schema element.
type System_Aaa_ServerGroup_Server_RadiusPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_AcctPortPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_AcctPortPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_AuthPortPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_AuthPortPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_SecretKeyPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SecretKeyPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_SourceAddressPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SourceAddressPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny struct {
	*ygot.NodePath
}

// AcctPort (leaf): Port number for accounting requests
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/acct-port"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) AcctPort() *System_Aaa_ServerGroup_Server_Radius_AcctPortPath {
	return &System_Aaa_ServerGroup_Server_Radius_AcctPortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "acct-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// AcctPort (leaf): Port number for accounting requests
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/acct-port"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) AcctPort() *System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_AcctPortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "acct-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPort (leaf): Port number for authentication requests
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/auth-port"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) AuthPort() *System_Aaa_ServerGroup_Server_Radius_AuthPortPath {
	return &System_Aaa_ServerGroup_Server_Radius_AuthPortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPort (leaf): Port number for authentication requests
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/auth-port"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) AuthPort() *System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_AuthPortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of RADIUS related state objects.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/counters"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) Counters() *System_Aaa_ServerGroup_Server_Radius_CountersPath {
	return &System_Aaa_ServerGroup_Server_Radius_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of RADIUS related state objects.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/counters"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) Counters() *System_Aaa_ServerGroup_Server_Radius_CountersPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmitAttempts (leaf): Number of times the system may resend a request to the
// RADIUS server when it is unresponsive
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/retransmit-attempts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) RetransmitAttempts() *System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath {
	return &System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit-attempts"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmitAttempts (leaf): Number of times the system may resend a request to the
// RADIUS server when it is unresponsive
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/retransmit-attempts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) RetransmitAttempts() *System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_RetransmitAttemptsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit-attempts"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) SecretKey() *System_Aaa_ServerGroup_Server_Radius_SecretKeyPath {
	return &System_Aaa_ServerGroup_Server_Radius_SecretKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) SecretKey() *System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_SecretKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key-hashed"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath {
	return &System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key-hashed"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_SecretKeyHashedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IP address to use in messages to the RADIUS server
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/source-address"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/source-address"
func (n *System_Aaa_ServerGroup_Server_RadiusPath) SourceAddress() *System_Aaa_ServerGroup_Server_Radius_SourceAddressPath {
	return &System_Aaa_ServerGroup_Server_Radius_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IP address to use in messages to the RADIUS server
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "state/source-address"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/source-address"
func (n *System_Aaa_ServerGroup_Server_RadiusPathAny) SourceAddress() *System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Aaa_ServerGroup_Server_Radius_CountersPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_CountersPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_CountersPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_CountersPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny struct {
	*ygot.NodePath
}

// AccessAccepts (leaf): Received Access-Accept messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "access-accepts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) AccessAccepts() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath{
		NodePath: ygot.NewNodePath(
			[]string{"access-accepts"},
			map[string]interface{}{},
			n,
		),
	}
}

// AccessAccepts (leaf): Received Access-Accept messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "access-accepts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) AccessAccepts() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"access-accepts"},
			map[string]interface{}{},
			n,
		),
	}
}

// AccessRejects (leaf): Received Access-Reject messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "access-rejects"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) AccessRejects() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath{
		NodePath: ygot.NewNodePath(
			[]string{"access-rejects"},
			map[string]interface{}{},
			n,
		),
	}
}

// AccessRejects (leaf): Received Access-Reject messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "access-rejects"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) AccessRejects() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"access-rejects"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetriedAccessRequests (leaf): Retransmitted Access-Request messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "retried-access-requests"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) RetriedAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath{
		NodePath: ygot.NewNodePath(
			[]string{"retried-access-requests"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetriedAccessRequests (leaf): Retransmitted Access-Request messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "retried-access-requests"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) RetriedAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"retried-access-requests"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimeoutAccessRequests (leaf): Access-Request messages that have timed-out,
// requiring retransmission.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "timeout-access-requests"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) TimeoutAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath{
		NodePath: ygot.NewNodePath(
			[]string{"timeout-access-requests"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimeoutAccessRequests (leaf): Access-Request messages that have timed-out,
// requiring retransmission.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "timeout-access-requests"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) TimeoutAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timeout-access-requests"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Aaa_ServerGroup_Server_TacacsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs YANG schema element.
type System_Aaa_ServerGroup_Server_TacacsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_TacacsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs YANG schema element.
type System_Aaa_ServerGroup_Server_TacacsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_PortPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/port YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_PortPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_PortPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/port YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_PortPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny struct {
	*ygot.NodePath
}

// Port (leaf): The port number on which to contact the TACACS server
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/port"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) Port() *System_Aaa_ServerGroup_Server_Tacacs_PortPath {
	return &System_Aaa_ServerGroup_Server_Tacacs_PortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (leaf): The port number on which to contact the TACACS server
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/port"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) Port() *System_Aaa_ServerGroup_Server_Tacacs_PortPathAny {
	return &System_Aaa_ServerGroup_Server_Tacacs_PortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) SecretKey() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath {
	return &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) SecretKey() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny {
	return &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key-hashed"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath {
	return &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key-hashed"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny {
	return &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IP address to use in messages to the TACACS server
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/source-address"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) SourceAddress() *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath {
	return &System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IP address to use in messages to the TACACS server
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/source-address"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) SourceAddress() *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny {
	return &System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_AlarmPath represents the /openconfig-system/system/alarms/alarm YANG schema element.
type System_AlarmPath struct {
	*ygot.NodePath
}

// System_AlarmPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm YANG schema element.
type System_AlarmPathAny struct {
	*ygot.NodePath
}

// System_Alarm_IdPath represents the /openconfig-system/system/alarms/alarm/state/id YANG schema element.
type System_Alarm_IdPath struct {
	*ygot.NodePath
}

// System_Alarm_IdPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/id YANG schema element.
type System_Alarm_IdPathAny struct {
	*ygot.NodePath
}

// System_Alarm_ResourcePath represents the /openconfig-system/system/alarms/alarm/state/resource YANG schema element.
type System_Alarm_ResourcePath struct {
	*ygot.NodePath
}

// System_Alarm_ResourcePathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/resource YANG schema element.
type System_Alarm_ResourcePathAny struct {
	*ygot.NodePath
}

// System_Alarm_SeverityPath represents the /openconfig-system/system/alarms/alarm/state/severity YANG schema element.
type System_Alarm_SeverityPath struct {
	*ygot.NodePath
}

// System_Alarm_SeverityPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/severity YANG schema element.
type System_Alarm_SeverityPathAny struct {
	*ygot.NodePath
}

// System_Alarm_TextPath represents the /openconfig-system/system/alarms/alarm/state/text YANG schema element.
type System_Alarm_TextPath struct {
	*ygot.NodePath
}

// System_Alarm_TextPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/text YANG schema element.
type System_Alarm_TextPathAny struct {
	*ygot.NodePath
}

// System_Alarm_TimeCreatedPath represents the /openconfig-system/system/alarms/alarm/state/time-created YANG schema element.
type System_Alarm_TimeCreatedPath struct {
	*ygot.NodePath
}

// System_Alarm_TimeCreatedPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/time-created YANG schema element.
type System_Alarm_TimeCreatedPathAny struct {
	*ygot.NodePath
}

// System_Alarm_TypeIdPath represents the /openconfig-system/system/alarms/alarm/state/type-id YANG schema element.
type System_Alarm_TypeIdPath struct {
	*ygot.NodePath
}

// System_Alarm_TypeIdPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/type-id YANG schema element.
type System_Alarm_TypeIdPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Unique ID for the alarm -- this will not be a
// configurable parameter on many implementations
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/id"
// Path from root: "/system/alarms/alarm/state/id"
func (n *System_AlarmPath) Id() *System_Alarm_IdPath {
	return &System_Alarm_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique ID for the alarm -- this will not be a
// configurable parameter on many implementations
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/id"
// Path from root: "/system/alarms/alarm/state/id"
func (n *System_AlarmPathAny) Id() *System_Alarm_IdPathAny {
	return &System_Alarm_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Resource (leaf): The item that is under alarm within the device. The
// resource may be a reference to an item which is
// defined elsewhere in the model. For example, it
// may be a platform/component, interfaces/interface,
// terminal-device/logical-channels/channel, etc. In this
// case the system should match the name of the referenced
// item exactly. The referenced item could alternatively be
// the path of the item within the model.
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/resource"
// Path from root: "/system/alarms/alarm/state/resource"
func (n *System_AlarmPath) Resource() *System_Alarm_ResourcePath {
	return &System_Alarm_ResourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "resource"},
			map[string]interface{}{},
			n,
		),
	}
}

// Resource (leaf): The item that is under alarm within the device. The
// resource may be a reference to an item which is
// defined elsewhere in the model. For example, it
// may be a platform/component, interfaces/interface,
// terminal-device/logical-channels/channel, etc. In this
// case the system should match the name of the referenced
// item exactly. The referenced item could alternatively be
// the path of the item within the model.
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/resource"
// Path from root: "/system/alarms/alarm/state/resource"
func (n *System_AlarmPathAny) Resource() *System_Alarm_ResourcePathAny {
	return &System_Alarm_ResourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "resource"},
			map[string]interface{}{},
			n,
		),
	}
}

// Severity (leaf): The severity level indicating the criticality and impact
// of the alarm
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/severity"
// Path from root: "/system/alarms/alarm/state/severity"
func (n *System_AlarmPath) Severity() *System_Alarm_SeverityPath {
	return &System_Alarm_SeverityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Severity (leaf): The severity level indicating the criticality and impact
// of the alarm
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/severity"
// Path from root: "/system/alarms/alarm/state/severity"
func (n *System_AlarmPathAny) Severity() *System_Alarm_SeverityPathAny {
	return &System_Alarm_SeverityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Text (leaf): The string used to inform operators about the alarm. This
// MUST contain enough information for an operator to be able
// to understand the problem. If this string contains structure,
// this format should be clearly documented for programs to be
// able to parse that information
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/text"
// Path from root: "/system/alarms/alarm/state/text"
func (n *System_AlarmPath) Text() *System_Alarm_TextPath {
	return &System_Alarm_TextPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "text"},
			map[string]interface{}{},
			n,
		),
	}
}

// Text (leaf): The string used to inform operators about the alarm. This
// MUST contain enough information for an operator to be able
// to understand the problem. If this string contains structure,
// this format should be clearly documented for programs to be
// able to parse that information
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/text"
// Path from root: "/system/alarms/alarm/state/text"
func (n *System_AlarmPathAny) Text() *System_Alarm_TextPathAny {
	return &System_Alarm_TextPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "text"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimeCreated (leaf): The time at which the alarm was raised by the system.
// This value is expressed relative to the Unix Epoch.
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/time-created"
// Path from root: "/system/alarms/alarm/state/time-created"
func (n *System_AlarmPath) TimeCreated() *System_Alarm_TimeCreatedPath {
	return &System_Alarm_TimeCreatedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "time-created"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimeCreated (leaf): The time at which the alarm was raised by the system.
// This value is expressed relative to the Unix Epoch.
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/time-created"
// Path from root: "/system/alarms/alarm/state/time-created"
func (n *System_AlarmPathAny) TimeCreated() *System_Alarm_TimeCreatedPathAny {
	return &System_Alarm_TimeCreatedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "time-created"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeId (leaf): The abbreviated name of the alarm, for example LOS,
// EQPT, or OTS. Also referred to in different systems as
// condition type, alarm identifier, or alarm mnemonic. It
// is recommended to use the OPENCONFIG_ALARM_TYPE_ID
// identities where possible and only use the string type
// when the desired identityref is not yet defined
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/type-id"
// Path from root: "/system/alarms/alarm/state/type-id"
func (n *System_AlarmPath) TypeId() *System_Alarm_TypeIdPath {
	return &System_Alarm_TypeIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeId (leaf): The abbreviated name of the alarm, for example LOS,
// EQPT, or OTS. Also referred to in different systems as
// condition type, alarm identifier, or alarm mnemonic. It
// is recommended to use the OPENCONFIG_ALARM_TYPE_ID
// identities where possible and only use the string type
// when the desired identityref is not yet defined
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/type-id"
// Path from root: "/system/alarms/alarm/state/type-id"
func (n *System_AlarmPathAny) TypeId() *System_Alarm_TypeIdPathAny {
	return &System_Alarm_TypeIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_ClockPath represents the /openconfig-system/system/clock YANG schema element.
type System_ClockPath struct {
	*ygot.NodePath
}

// System_ClockPathAny represents the wildcard version of the /openconfig-system/system/clock YANG schema element.
type System_ClockPathAny struct {
	*ygot.NodePath
}

// System_Clock_TimezoneNamePath represents the /openconfig-system/system/clock/state/timezone-name YANG schema element.
type System_Clock_TimezoneNamePath struct {
	*ygot.NodePath
}

// System_Clock_TimezoneNamePathAny represents the wildcard version of the /openconfig-system/system/clock/state/timezone-name YANG schema element.
type System_Clock_TimezoneNamePathAny struct {
	*ygot.NodePath
}

// TimezoneName (leaf): The TZ database name to use for the system, such
// as 'Europe/Stockholm'.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/timezone-name"
// Path from root: "/system/clock/state/timezone-name"
func (n *System_ClockPath) TimezoneName() *System_Clock_TimezoneNamePath {
	return &System_Clock_TimezoneNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timezone-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimezoneName (leaf): The TZ database name to use for the system, such
// as 'Europe/Stockholm'.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/timezone-name"
// Path from root: "/system/clock/state/timezone-name"
func (n *System_ClockPathAny) TimezoneName() *System_Clock_TimezoneNamePathAny {
	return &System_Clock_TimezoneNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timezone-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_CpuPath represents the /openconfig-system/system/cpus/cpu YANG schema element.
type System_CpuPath struct {
	*ygot.NodePath
}

// System_CpuPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu YANG schema element.
type System_CpuPathAny struct {
	*ygot.NodePath
}

// System_Cpu_IndexPath represents the /openconfig-system/system/cpus/cpu/state/index YANG schema element.
type System_Cpu_IndexPath struct {
	*ygot.NodePath
}

// System_Cpu_IndexPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/index YANG schema element.
type System_Cpu_IndexPathAny struct {
	*ygot.NodePath
}

// HardwareInterrupt (container): Percentage of CPU time spent servicing hardware interrupts.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/hardware-interrupt"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt"
func (n *System_CpuPath) HardwareInterrupt() *System_Cpu_HardwareInterruptPath {
	return &System_Cpu_HardwareInterruptPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hardware-interrupt"},
			map[string]interface{}{},
			n,
		),
	}
}

// HardwareInterrupt (container): Percentage of CPU time spent servicing hardware interrupts.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/hardware-interrupt"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt"
func (n *System_CpuPathAny) HardwareInterrupt() *System_Cpu_HardwareInterruptPathAny {
	return &System_Cpu_HardwareInterruptPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hardware-interrupt"},
			map[string]interface{}{},
			n,
		),
	}
}

// Idle (container): Percentage of CPU time spent idle.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/idle"
// Path from root: "/system/cpus/cpu/state/idle"
func (n *System_CpuPath) Idle() *System_Cpu_IdlePath {
	return &System_Cpu_IdlePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "idle"},
			map[string]interface{}{},
			n,
		),
	}
}

// Idle (container): Percentage of CPU time spent idle.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/idle"
// Path from root: "/system/cpus/cpu/state/idle"
func (n *System_CpuPathAny) Idle() *System_Cpu_IdlePathAny {
	return &System_Cpu_IdlePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "idle"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): The CPU index for each processor core on the system.  On a
// single-core system, the index should be zero.  The ALL
// index signifies an aggregation of the CPU utilization
// statistics over all cores in the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/index"
// Path from root: "/system/cpus/cpu/state/index"
func (n *System_CpuPath) Index() *System_Cpu_IndexPath {
	return &System_Cpu_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): The CPU index for each processor core on the system.  On a
// single-core system, the index should be zero.  The ALL
// index signifies an aggregation of the CPU utilization
// statistics over all cores in the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/index"
// Path from root: "/system/cpus/cpu/state/index"
func (n *System_CpuPathAny) Index() *System_Cpu_IndexPathAny {
	return &System_Cpu_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Kernel (container): Percentage of CPU time spent running in kernel space.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/kernel"
// Path from root: "/system/cpus/cpu/state/kernel"
func (n *System_CpuPath) Kernel() *System_Cpu_KernelPath {
	return &System_Cpu_KernelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "kernel"},
			map[string]interface{}{},
			n,
		),
	}
}

// Kernel (container): Percentage of CPU time spent running in kernel space.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/kernel"
// Path from root: "/system/cpus/cpu/state/kernel"
func (n *System_CpuPathAny) Kernel() *System_Cpu_KernelPathAny {
	return &System_Cpu_KernelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "kernel"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nice (container): Percentage of CPU time spent running low-priority (niced)
// user processes.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/nice"
// Path from root: "/system/cpus/cpu/state/nice"
func (n *System_CpuPath) Nice() *System_Cpu_NicePath {
	return &System_Cpu_NicePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nice"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nice (container): Percentage of CPU time spent running low-priority (niced)
// user processes.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/nice"
// Path from root: "/system/cpus/cpu/state/nice"
func (n *System_CpuPathAny) Nice() *System_Cpu_NicePathAny {
	return &System_Cpu_NicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nice"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftwareInterrupt (container): Percentage of CPU time spent servicing software interrupts
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/software-interrupt"
// Path from root: "/system/cpus/cpu/state/software-interrupt"
func (n *System_CpuPath) SoftwareInterrupt() *System_Cpu_SoftwareInterruptPath {
	return &System_Cpu_SoftwareInterruptPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "software-interrupt"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftwareInterrupt (container): Percentage of CPU time spent servicing software interrupts
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/software-interrupt"
// Path from root: "/system/cpus/cpu/state/software-interrupt"
func (n *System_CpuPathAny) SoftwareInterrupt() *System_Cpu_SoftwareInterruptPathAny {
	return &System_Cpu_SoftwareInterruptPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "software-interrupt"},
			map[string]interface{}{},
			n,
		),
	}
}

// Total (container): Total CPU utilization.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/total"
// Path from root: "/system/cpus/cpu/state/total"
func (n *System_CpuPath) Total() *System_Cpu_TotalPath {
	return &System_Cpu_TotalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total"},
			map[string]interface{}{},
			n,
		),
	}
}

// Total (container): Total CPU utilization.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/total"
// Path from root: "/system/cpus/cpu/state/total"
func (n *System_CpuPathAny) Total() *System_Cpu_TotalPathAny {
	return &System_Cpu_TotalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total"},
			map[string]interface{}{},
			n,
		),
	}
}

// User (container): Percentage of CPU time spent running in user space.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/user"
// Path from root: "/system/cpus/cpu/state/user"
func (n *System_CpuPath) User() *System_Cpu_UserPath {
	return &System_Cpu_UserPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "user"},
			map[string]interface{}{},
			n,
		),
	}
}

// User (container): Percentage of CPU time spent running in user space.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/user"
// Path from root: "/system/cpus/cpu/state/user"
func (n *System_CpuPathAny) User() *System_Cpu_UserPathAny {
	return &System_Cpu_UserPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "user"},
			map[string]interface{}{},
			n,
		),
	}
}

// Wait (container): Percentage of CPU time spent waiting for I/O.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/wait"
// Path from root: "/system/cpus/cpu/state/wait"
func (n *System_CpuPath) Wait() *System_Cpu_WaitPath {
	return &System_Cpu_WaitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "wait"},
			map[string]interface{}{},
			n,
		),
	}
}

// Wait (container): Percentage of CPU time spent waiting for I/O.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/wait"
// Path from root: "/system/cpus/cpu/state/wait"
func (n *System_CpuPathAny) Wait() *System_Cpu_WaitPathAny {
	return &System_Cpu_WaitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "wait"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_HardwareInterruptPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt YANG schema element.
type System_Cpu_HardwareInterruptPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterruptPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt YANG schema element.
type System_Cpu_HardwareInterruptPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_AvgPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/avg YANG schema element.
type System_Cpu_HardwareInterrupt_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/avg YANG schema element.
type System_Cpu_HardwareInterrupt_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_InstantPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/instant YANG schema element.
type System_Cpu_HardwareInterrupt_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/instant YANG schema element.
type System_Cpu_HardwareInterrupt_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/interval YANG schema element.
type System_Cpu_HardwareInterrupt_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/interval YANG schema element.
type System_Cpu_HardwareInterrupt_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MaxPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/max YANG schema element.
type System_Cpu_HardwareInterrupt_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/max YANG schema element.
type System_Cpu_HardwareInterrupt_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/max-time YANG schema element.
type System_Cpu_HardwareInterrupt_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/max-time YANG schema element.
type System_Cpu_HardwareInterrupt_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MinPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/min YANG schema element.
type System_Cpu_HardwareInterrupt_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/min YANG schema element.
type System_Cpu_HardwareInterrupt_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/min-time YANG schema element.
type System_Cpu_HardwareInterrupt_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/min-time YANG schema element.
type System_Cpu_HardwareInterrupt_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/avg"
func (n *System_Cpu_HardwareInterruptPath) Avg() *System_Cpu_HardwareInterrupt_AvgPath {
	return &System_Cpu_HardwareInterrupt_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/avg"
func (n *System_Cpu_HardwareInterruptPathAny) Avg() *System_Cpu_HardwareInterrupt_AvgPathAny {
	return &System_Cpu_HardwareInterrupt_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/instant"
func (n *System_Cpu_HardwareInterruptPath) Instant() *System_Cpu_HardwareInterrupt_InstantPath {
	return &System_Cpu_HardwareInterrupt_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/instant"
func (n *System_Cpu_HardwareInterruptPathAny) Instant() *System_Cpu_HardwareInterrupt_InstantPathAny {
	return &System_Cpu_HardwareInterrupt_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/interval"
func (n *System_Cpu_HardwareInterruptPath) Interval() *System_Cpu_HardwareInterrupt_IntervalPath {
	return &System_Cpu_HardwareInterrupt_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/interval"
func (n *System_Cpu_HardwareInterruptPathAny) Interval() *System_Cpu_HardwareInterrupt_IntervalPathAny {
	return &System_Cpu_HardwareInterrupt_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/max"
func (n *System_Cpu_HardwareInterruptPath) Max() *System_Cpu_HardwareInterrupt_MaxPath {
	return &System_Cpu_HardwareInterrupt_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/max"
func (n *System_Cpu_HardwareInterruptPathAny) Max() *System_Cpu_HardwareInterrupt_MaxPathAny {
	return &System_Cpu_HardwareInterrupt_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/max-time"
func (n *System_Cpu_HardwareInterruptPath) MaxTime() *System_Cpu_HardwareInterrupt_MaxTimePath {
	return &System_Cpu_HardwareInterrupt_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/max-time"
func (n *System_Cpu_HardwareInterruptPathAny) MaxTime() *System_Cpu_HardwareInterrupt_MaxTimePathAny {
	return &System_Cpu_HardwareInterrupt_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/min"
func (n *System_Cpu_HardwareInterruptPath) Min() *System_Cpu_HardwareInterrupt_MinPath {
	return &System_Cpu_HardwareInterrupt_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/min"
func (n *System_Cpu_HardwareInterruptPathAny) Min() *System_Cpu_HardwareInterrupt_MinPathAny {
	return &System_Cpu_HardwareInterrupt_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/min-time"
func (n *System_Cpu_HardwareInterruptPath) MinTime() *System_Cpu_HardwareInterrupt_MinTimePath {
	return &System_Cpu_HardwareInterrupt_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/min-time"
func (n *System_Cpu_HardwareInterruptPathAny) MinTime() *System_Cpu_HardwareInterrupt_MinTimePathAny {
	return &System_Cpu_HardwareInterrupt_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_IdlePath represents the /openconfig-system/system/cpus/cpu/state/idle YANG schema element.
type System_Cpu_IdlePath struct {
	*ygot.NodePath
}

// System_Cpu_IdlePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle YANG schema element.
type System_Cpu_IdlePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_AvgPath represents the /openconfig-system/system/cpus/cpu/state/idle/avg YANG schema element.
type System_Cpu_Idle_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/avg YANG schema element.
type System_Cpu_Idle_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_InstantPath represents the /openconfig-system/system/cpus/cpu/state/idle/instant YANG schema element.
type System_Cpu_Idle_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/instant YANG schema element.
type System_Cpu_Idle_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/idle/interval YANG schema element.
type System_Cpu_Idle_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/interval YANG schema element.
type System_Cpu_Idle_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MaxPath represents the /openconfig-system/system/cpus/cpu/state/idle/max YANG schema element.
type System_Cpu_Idle_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/max YANG schema element.
type System_Cpu_Idle_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/idle/max-time YANG schema element.
type System_Cpu_Idle_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/max-time YANG schema element.
type System_Cpu_Idle_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MinPath represents the /openconfig-system/system/cpus/cpu/state/idle/min YANG schema element.
type System_Cpu_Idle_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/min YANG schema element.
type System_Cpu_Idle_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/idle/min-time YANG schema element.
type System_Cpu_Idle_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/min-time YANG schema element.
type System_Cpu_Idle_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/idle/avg"
func (n *System_Cpu_IdlePath) Avg() *System_Cpu_Idle_AvgPath {
	return &System_Cpu_Idle_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/idle/avg"
func (n *System_Cpu_IdlePathAny) Avg() *System_Cpu_Idle_AvgPathAny {
	return &System_Cpu_Idle_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/idle/instant"
func (n *System_Cpu_IdlePath) Instant() *System_Cpu_Idle_InstantPath {
	return &System_Cpu_Idle_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/idle/instant"
func (n *System_Cpu_IdlePathAny) Instant() *System_Cpu_Idle_InstantPathAny {
	return &System_Cpu_Idle_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/idle/interval"
func (n *System_Cpu_IdlePath) Interval() *System_Cpu_Idle_IntervalPath {
	return &System_Cpu_Idle_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/idle/interval"
func (n *System_Cpu_IdlePathAny) Interval() *System_Cpu_Idle_IntervalPathAny {
	return &System_Cpu_Idle_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/idle/max"
func (n *System_Cpu_IdlePath) Max() *System_Cpu_Idle_MaxPath {
	return &System_Cpu_Idle_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/idle/max"
func (n *System_Cpu_IdlePathAny) Max() *System_Cpu_Idle_MaxPathAny {
	return &System_Cpu_Idle_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/idle/max-time"
func (n *System_Cpu_IdlePath) MaxTime() *System_Cpu_Idle_MaxTimePath {
	return &System_Cpu_Idle_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/idle/max-time"
func (n *System_Cpu_IdlePathAny) MaxTime() *System_Cpu_Idle_MaxTimePathAny {
	return &System_Cpu_Idle_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/idle/min"
func (n *System_Cpu_IdlePath) Min() *System_Cpu_Idle_MinPath {
	return &System_Cpu_Idle_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/idle/min"
func (n *System_Cpu_IdlePathAny) Min() *System_Cpu_Idle_MinPathAny {
	return &System_Cpu_Idle_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/idle/min-time"
func (n *System_Cpu_IdlePath) MinTime() *System_Cpu_Idle_MinTimePath {
	return &System_Cpu_Idle_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/idle/min-time"
func (n *System_Cpu_IdlePathAny) MinTime() *System_Cpu_Idle_MinTimePathAny {
	return &System_Cpu_Idle_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_KernelPath represents the /openconfig-system/system/cpus/cpu/state/kernel YANG schema element.
type System_Cpu_KernelPath struct {
	*ygot.NodePath
}

// System_Cpu_KernelPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel YANG schema element.
type System_Cpu_KernelPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_AvgPath represents the /openconfig-system/system/cpus/cpu/state/kernel/avg YANG schema element.
type System_Cpu_Kernel_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/avg YANG schema element.
type System_Cpu_Kernel_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_InstantPath represents the /openconfig-system/system/cpus/cpu/state/kernel/instant YANG schema element.
type System_Cpu_Kernel_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/instant YANG schema element.
type System_Cpu_Kernel_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/kernel/interval YANG schema element.
type System_Cpu_Kernel_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/interval YANG schema element.
type System_Cpu_Kernel_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MaxPath represents the /openconfig-system/system/cpus/cpu/state/kernel/max YANG schema element.
type System_Cpu_Kernel_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/max YANG schema element.
type System_Cpu_Kernel_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/kernel/max-time YANG schema element.
type System_Cpu_Kernel_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/max-time YANG schema element.
type System_Cpu_Kernel_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MinPath represents the /openconfig-system/system/cpus/cpu/state/kernel/min YANG schema element.
type System_Cpu_Kernel_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/min YANG schema element.
type System_Cpu_Kernel_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/kernel/min-time YANG schema element.
type System_Cpu_Kernel_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/min-time YANG schema element.
type System_Cpu_Kernel_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/kernel/avg"
func (n *System_Cpu_KernelPath) Avg() *System_Cpu_Kernel_AvgPath {
	return &System_Cpu_Kernel_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/kernel/avg"
func (n *System_Cpu_KernelPathAny) Avg() *System_Cpu_Kernel_AvgPathAny {
	return &System_Cpu_Kernel_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/kernel/instant"
func (n *System_Cpu_KernelPath) Instant() *System_Cpu_Kernel_InstantPath {
	return &System_Cpu_Kernel_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/kernel/instant"
func (n *System_Cpu_KernelPathAny) Instant() *System_Cpu_Kernel_InstantPathAny {
	return &System_Cpu_Kernel_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/kernel/interval"
func (n *System_Cpu_KernelPath) Interval() *System_Cpu_Kernel_IntervalPath {
	return &System_Cpu_Kernel_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/kernel/interval"
func (n *System_Cpu_KernelPathAny) Interval() *System_Cpu_Kernel_IntervalPathAny {
	return &System_Cpu_Kernel_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/kernel/max"
func (n *System_Cpu_KernelPath) Max() *System_Cpu_Kernel_MaxPath {
	return &System_Cpu_Kernel_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/kernel/max"
func (n *System_Cpu_KernelPathAny) Max() *System_Cpu_Kernel_MaxPathAny {
	return &System_Cpu_Kernel_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/kernel/max-time"
func (n *System_Cpu_KernelPath) MaxTime() *System_Cpu_Kernel_MaxTimePath {
	return &System_Cpu_Kernel_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/kernel/max-time"
func (n *System_Cpu_KernelPathAny) MaxTime() *System_Cpu_Kernel_MaxTimePathAny {
	return &System_Cpu_Kernel_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/kernel/min"
func (n *System_Cpu_KernelPath) Min() *System_Cpu_Kernel_MinPath {
	return &System_Cpu_Kernel_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/kernel/min"
func (n *System_Cpu_KernelPathAny) Min() *System_Cpu_Kernel_MinPathAny {
	return &System_Cpu_Kernel_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/kernel/min-time"
func (n *System_Cpu_KernelPath) MinTime() *System_Cpu_Kernel_MinTimePath {
	return &System_Cpu_Kernel_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/kernel/min-time"
func (n *System_Cpu_KernelPathAny) MinTime() *System_Cpu_Kernel_MinTimePathAny {
	return &System_Cpu_Kernel_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_NicePath represents the /openconfig-system/system/cpus/cpu/state/nice YANG schema element.
type System_Cpu_NicePath struct {
	*ygot.NodePath
}

// System_Cpu_NicePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice YANG schema element.
type System_Cpu_NicePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_AvgPath represents the /openconfig-system/system/cpus/cpu/state/nice/avg YANG schema element.
type System_Cpu_Nice_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/avg YANG schema element.
type System_Cpu_Nice_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_InstantPath represents the /openconfig-system/system/cpus/cpu/state/nice/instant YANG schema element.
type System_Cpu_Nice_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/instant YANG schema element.
type System_Cpu_Nice_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/nice/interval YANG schema element.
type System_Cpu_Nice_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/interval YANG schema element.
type System_Cpu_Nice_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MaxPath represents the /openconfig-system/system/cpus/cpu/state/nice/max YANG schema element.
type System_Cpu_Nice_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/max YANG schema element.
type System_Cpu_Nice_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/nice/max-time YANG schema element.
type System_Cpu_Nice_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/max-time YANG schema element.
type System_Cpu_Nice_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MinPath represents the /openconfig-system/system/cpus/cpu/state/nice/min YANG schema element.
type System_Cpu_Nice_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/min YANG schema element.
type System_Cpu_Nice_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/nice/min-time YANG schema element.
type System_Cpu_Nice_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/min-time YANG schema element.
type System_Cpu_Nice_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/nice/avg"
func (n *System_Cpu_NicePath) Avg() *System_Cpu_Nice_AvgPath {
	return &System_Cpu_Nice_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/nice/avg"
func (n *System_Cpu_NicePathAny) Avg() *System_Cpu_Nice_AvgPathAny {
	return &System_Cpu_Nice_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/nice/instant"
func (n *System_Cpu_NicePath) Instant() *System_Cpu_Nice_InstantPath {
	return &System_Cpu_Nice_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/nice/instant"
func (n *System_Cpu_NicePathAny) Instant() *System_Cpu_Nice_InstantPathAny {
	return &System_Cpu_Nice_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/nice/interval"
func (n *System_Cpu_NicePath) Interval() *System_Cpu_Nice_IntervalPath {
	return &System_Cpu_Nice_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/nice/interval"
func (n *System_Cpu_NicePathAny) Interval() *System_Cpu_Nice_IntervalPathAny {
	return &System_Cpu_Nice_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/nice/max"
func (n *System_Cpu_NicePath) Max() *System_Cpu_Nice_MaxPath {
	return &System_Cpu_Nice_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/nice/max"
func (n *System_Cpu_NicePathAny) Max() *System_Cpu_Nice_MaxPathAny {
	return &System_Cpu_Nice_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/nice/max-time"
func (n *System_Cpu_NicePath) MaxTime() *System_Cpu_Nice_MaxTimePath {
	return &System_Cpu_Nice_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/nice/max-time"
func (n *System_Cpu_NicePathAny) MaxTime() *System_Cpu_Nice_MaxTimePathAny {
	return &System_Cpu_Nice_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/nice/min"
func (n *System_Cpu_NicePath) Min() *System_Cpu_Nice_MinPath {
	return &System_Cpu_Nice_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/nice/min"
func (n *System_Cpu_NicePathAny) Min() *System_Cpu_Nice_MinPathAny {
	return &System_Cpu_Nice_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/nice/min-time"
func (n *System_Cpu_NicePath) MinTime() *System_Cpu_Nice_MinTimePath {
	return &System_Cpu_Nice_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/nice/min-time"
func (n *System_Cpu_NicePathAny) MinTime() *System_Cpu_Nice_MinTimePathAny {
	return &System_Cpu_Nice_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_SoftwareInterruptPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt YANG schema element.
type System_Cpu_SoftwareInterruptPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterruptPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt YANG schema element.
type System_Cpu_SoftwareInterruptPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_AvgPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/avg YANG schema element.
type System_Cpu_SoftwareInterrupt_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/avg YANG schema element.
type System_Cpu_SoftwareInterrupt_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_InstantPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/instant YANG schema element.
type System_Cpu_SoftwareInterrupt_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/instant YANG schema element.
type System_Cpu_SoftwareInterrupt_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/interval YANG schema element.
type System_Cpu_SoftwareInterrupt_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/interval YANG schema element.
type System_Cpu_SoftwareInterrupt_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MaxPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/max YANG schema element.
type System_Cpu_SoftwareInterrupt_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/max YANG schema element.
type System_Cpu_SoftwareInterrupt_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/max-time YANG schema element.
type System_Cpu_SoftwareInterrupt_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/max-time YANG schema element.
type System_Cpu_SoftwareInterrupt_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MinPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/min YANG schema element.
type System_Cpu_SoftwareInterrupt_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/min YANG schema element.
type System_Cpu_SoftwareInterrupt_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/min-time YANG schema element.
type System_Cpu_SoftwareInterrupt_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/min-time YANG schema element.
type System_Cpu_SoftwareInterrupt_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/software-interrupt/avg"
func (n *System_Cpu_SoftwareInterruptPath) Avg() *System_Cpu_SoftwareInterrupt_AvgPath {
	return &System_Cpu_SoftwareInterrupt_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/software-interrupt/avg"
func (n *System_Cpu_SoftwareInterruptPathAny) Avg() *System_Cpu_SoftwareInterrupt_AvgPathAny {
	return &System_Cpu_SoftwareInterrupt_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/software-interrupt/instant"
func (n *System_Cpu_SoftwareInterruptPath) Instant() *System_Cpu_SoftwareInterrupt_InstantPath {
	return &System_Cpu_SoftwareInterrupt_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/software-interrupt/instant"
func (n *System_Cpu_SoftwareInterruptPathAny) Instant() *System_Cpu_SoftwareInterrupt_InstantPathAny {
	return &System_Cpu_SoftwareInterrupt_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/software-interrupt/interval"
func (n *System_Cpu_SoftwareInterruptPath) Interval() *System_Cpu_SoftwareInterrupt_IntervalPath {
	return &System_Cpu_SoftwareInterrupt_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/software-interrupt/interval"
func (n *System_Cpu_SoftwareInterruptPathAny) Interval() *System_Cpu_SoftwareInterrupt_IntervalPathAny {
	return &System_Cpu_SoftwareInterrupt_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/software-interrupt/max"
func (n *System_Cpu_SoftwareInterruptPath) Max() *System_Cpu_SoftwareInterrupt_MaxPath {
	return &System_Cpu_SoftwareInterrupt_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/software-interrupt/max"
func (n *System_Cpu_SoftwareInterruptPathAny) Max() *System_Cpu_SoftwareInterrupt_MaxPathAny {
	return &System_Cpu_SoftwareInterrupt_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/software-interrupt/max-time"
func (n *System_Cpu_SoftwareInterruptPath) MaxTime() *System_Cpu_SoftwareInterrupt_MaxTimePath {
	return &System_Cpu_SoftwareInterrupt_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/software-interrupt/max-time"
func (n *System_Cpu_SoftwareInterruptPathAny) MaxTime() *System_Cpu_SoftwareInterrupt_MaxTimePathAny {
	return &System_Cpu_SoftwareInterrupt_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/software-interrupt/min"
func (n *System_Cpu_SoftwareInterruptPath) Min() *System_Cpu_SoftwareInterrupt_MinPath {
	return &System_Cpu_SoftwareInterrupt_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/software-interrupt/min"
func (n *System_Cpu_SoftwareInterruptPathAny) Min() *System_Cpu_SoftwareInterrupt_MinPathAny {
	return &System_Cpu_SoftwareInterrupt_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/software-interrupt/min-time"
func (n *System_Cpu_SoftwareInterruptPath) MinTime() *System_Cpu_SoftwareInterrupt_MinTimePath {
	return &System_Cpu_SoftwareInterrupt_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/software-interrupt/min-time"
func (n *System_Cpu_SoftwareInterruptPathAny) MinTime() *System_Cpu_SoftwareInterrupt_MinTimePathAny {
	return &System_Cpu_SoftwareInterrupt_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_TotalPath represents the /openconfig-system/system/cpus/cpu/state/total YANG schema element.
type System_Cpu_TotalPath struct {
	*ygot.NodePath
}

// System_Cpu_TotalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total YANG schema element.
type System_Cpu_TotalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_AvgPath represents the /openconfig-system/system/cpus/cpu/state/total/avg YANG schema element.
type System_Cpu_Total_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/avg YANG schema element.
type System_Cpu_Total_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_InstantPath represents the /openconfig-system/system/cpus/cpu/state/total/instant YANG schema element.
type System_Cpu_Total_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/instant YANG schema element.
type System_Cpu_Total_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/total/interval YANG schema element.
type System_Cpu_Total_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/interval YANG schema element.
type System_Cpu_Total_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_MaxPath represents the /openconfig-system/system/cpus/cpu/state/total/max YANG schema element.
type System_Cpu_Total_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/max YANG schema element.
type System_Cpu_Total_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/total/max-time YANG schema element.
type System_Cpu_Total_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Total_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/max-time YANG schema element.
type System_Cpu_Total_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_MinPath represents the /openconfig-system/system/cpus/cpu/state/total/min YANG schema element.
type System_Cpu_Total_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/min YANG schema element.
type System_Cpu_Total_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/total/min-time YANG schema element.
type System_Cpu_Total_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Total_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/min-time YANG schema element.
type System_Cpu_Total_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/total/avg"
func (n *System_Cpu_TotalPath) Avg() *System_Cpu_Total_AvgPath {
	return &System_Cpu_Total_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/total/avg"
func (n *System_Cpu_TotalPathAny) Avg() *System_Cpu_Total_AvgPathAny {
	return &System_Cpu_Total_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/total/instant"
func (n *System_Cpu_TotalPath) Instant() *System_Cpu_Total_InstantPath {
	return &System_Cpu_Total_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/total/instant"
func (n *System_Cpu_TotalPathAny) Instant() *System_Cpu_Total_InstantPathAny {
	return &System_Cpu_Total_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/total/interval"
func (n *System_Cpu_TotalPath) Interval() *System_Cpu_Total_IntervalPath {
	return &System_Cpu_Total_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/total/interval"
func (n *System_Cpu_TotalPathAny) Interval() *System_Cpu_Total_IntervalPathAny {
	return &System_Cpu_Total_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/total/max"
func (n *System_Cpu_TotalPath) Max() *System_Cpu_Total_MaxPath {
	return &System_Cpu_Total_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/total/max"
func (n *System_Cpu_TotalPathAny) Max() *System_Cpu_Total_MaxPathAny {
	return &System_Cpu_Total_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/total/max-time"
func (n *System_Cpu_TotalPath) MaxTime() *System_Cpu_Total_MaxTimePath {
	return &System_Cpu_Total_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/total/max-time"
func (n *System_Cpu_TotalPathAny) MaxTime() *System_Cpu_Total_MaxTimePathAny {
	return &System_Cpu_Total_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/total/min"
func (n *System_Cpu_TotalPath) Min() *System_Cpu_Total_MinPath {
	return &System_Cpu_Total_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/total/min"
func (n *System_Cpu_TotalPathAny) Min() *System_Cpu_Total_MinPathAny {
	return &System_Cpu_Total_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/total/min-time"
func (n *System_Cpu_TotalPath) MinTime() *System_Cpu_Total_MinTimePath {
	return &System_Cpu_Total_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/total/min-time"
func (n *System_Cpu_TotalPathAny) MinTime() *System_Cpu_Total_MinTimePathAny {
	return &System_Cpu_Total_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_UserPath represents the /openconfig-system/system/cpus/cpu/state/user YANG schema element.
type System_Cpu_UserPath struct {
	*ygot.NodePath
}

// System_Cpu_UserPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user YANG schema element.
type System_Cpu_UserPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_AvgPath represents the /openconfig-system/system/cpus/cpu/state/user/avg YANG schema element.
type System_Cpu_User_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_User_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/avg YANG schema element.
type System_Cpu_User_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_InstantPath represents the /openconfig-system/system/cpus/cpu/state/user/instant YANG schema element.
type System_Cpu_User_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_User_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/instant YANG schema element.
type System_Cpu_User_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/user/interval YANG schema element.
type System_Cpu_User_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_User_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/interval YANG schema element.
type System_Cpu_User_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_MaxPath represents the /openconfig-system/system/cpus/cpu/state/user/max YANG schema element.
type System_Cpu_User_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_User_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/max YANG schema element.
type System_Cpu_User_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/user/max-time YANG schema element.
type System_Cpu_User_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_User_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/max-time YANG schema element.
type System_Cpu_User_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_MinPath represents the /openconfig-system/system/cpus/cpu/state/user/min YANG schema element.
type System_Cpu_User_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_User_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/min YANG schema element.
type System_Cpu_User_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/user/min-time YANG schema element.
type System_Cpu_User_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_User_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/min-time YANG schema element.
type System_Cpu_User_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/user/avg"
func (n *System_Cpu_UserPath) Avg() *System_Cpu_User_AvgPath {
	return &System_Cpu_User_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/user/avg"
func (n *System_Cpu_UserPathAny) Avg() *System_Cpu_User_AvgPathAny {
	return &System_Cpu_User_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/user/instant"
func (n *System_Cpu_UserPath) Instant() *System_Cpu_User_InstantPath {
	return &System_Cpu_User_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/user/instant"
func (n *System_Cpu_UserPathAny) Instant() *System_Cpu_User_InstantPathAny {
	return &System_Cpu_User_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/user/interval"
func (n *System_Cpu_UserPath) Interval() *System_Cpu_User_IntervalPath {
	return &System_Cpu_User_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/user/interval"
func (n *System_Cpu_UserPathAny) Interval() *System_Cpu_User_IntervalPathAny {
	return &System_Cpu_User_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/user/max"
func (n *System_Cpu_UserPath) Max() *System_Cpu_User_MaxPath {
	return &System_Cpu_User_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/user/max"
func (n *System_Cpu_UserPathAny) Max() *System_Cpu_User_MaxPathAny {
	return &System_Cpu_User_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/user/max-time"
func (n *System_Cpu_UserPath) MaxTime() *System_Cpu_User_MaxTimePath {
	return &System_Cpu_User_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/user/max-time"
func (n *System_Cpu_UserPathAny) MaxTime() *System_Cpu_User_MaxTimePathAny {
	return &System_Cpu_User_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/user/min"
func (n *System_Cpu_UserPath) Min() *System_Cpu_User_MinPath {
	return &System_Cpu_User_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/user/min"
func (n *System_Cpu_UserPathAny) Min() *System_Cpu_User_MinPathAny {
	return &System_Cpu_User_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/user/min-time"
func (n *System_Cpu_UserPath) MinTime() *System_Cpu_User_MinTimePath {
	return &System_Cpu_User_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/user/min-time"
func (n *System_Cpu_UserPathAny) MinTime() *System_Cpu_User_MinTimePathAny {
	return &System_Cpu_User_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}
