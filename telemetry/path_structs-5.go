/*
Package telemetry is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /home/athena/go/pkg/mod/github.com/openconfig/ygot@v0.17.0/genutil/names.go
using the following YANG input files:
	- gnmi-collector-metadata.yang
	- public/release/models/acl/openconfig-acl.yang
	- public/release/models/acl/openconfig-packet-match.yang
	- public/release/models/aft/openconfig-aft.yang
	- public/release/models/ate/openconfig-ate-flow.yang
	- public/release/models/ate/openconfig-ate-intf.yang
	- public/release/models/bfd/openconfig-bfd.yang
	- public/release/models/bgp/openconfig-bgp-policy.yang
	- public/release/models/bgp/openconfig-bgp-types.yang
	- public/release/models/interfaces/openconfig-if-aggregate.yang
	- public/release/models/interfaces/openconfig-if-ethernet.yang
	- public/release/models/interfaces/openconfig-if-ip-ext.yang
	- public/release/models/interfaces/openconfig-if-ip.yang
	- public/release/models/interfaces/openconfig-interfaces.yang
	- public/release/models/isis/openconfig-isis.yang
	- public/release/models/lacp/openconfig-lacp.yang
	- public/release/models/lldp/openconfig-lldp-types.yang
	- public/release/models/lldp/openconfig-lldp.yang
	- public/release/models/local-routing/openconfig-local-routing.yang
	- public/release/models/mpls/openconfig-mpls-types.yang
	- public/release/models/multicast/openconfig-pim.yang
	- public/release/models/network-instance/openconfig-network-instance.yang
	- public/release/models/openconfig-extensions.yang
	- public/release/models/optical-transport/openconfig-transport-types.yang
	- public/release/models/ospf/openconfig-ospfv2.yang
	- public/release/models/platform/openconfig-platform-cpu.yang
	- public/release/models/platform/openconfig-platform-fan.yang
	- public/release/models/platform/openconfig-platform-integrated-circuit.yang
	- public/release/models/platform/openconfig-platform-software.yang
	- public/release/models/platform/openconfig-platform-transceiver.yang
	- public/release/models/platform/openconfig-platform.yang
	- public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
	- public/release/models/policy/openconfig-policy-types.yang
	- public/release/models/qos/openconfig-qos-elements.yang
	- public/release/models/qos/openconfig-qos-interfaces.yang
	- public/release/models/qos/openconfig-qos-types.yang
	- public/release/models/qos/openconfig-qos.yang
	- public/release/models/rib/openconfig-rib-bgp.yang
	- public/release/models/segment-routing/openconfig-segment-routing-types.yang
	- public/release/models/system/openconfig-system.yang
	- public/release/models/types/openconfig-inet-types.yang
	- public/release/models/types/openconfig-types.yang
	- public/release/models/types/openconfig-yang-types.yang
	- public/release/models/vlan/openconfig-vlan.yang
	- public/third_party/ietf/iana-if-type.yang
	- public/third_party/ietf/ietf-inet-types.yang
	- public/third_party/ietf/ietf-interfaces.yang
	- public/third_party/ietf/ietf-yang-types.yang
Imported modules were sourced from:
	- public/release/models/...
	- public/third_party/ietf/...
*/
package telemetry

import (
	"github.com/openconfig/ygot/ygot"
)

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePathAny struct {
	*ygot.NodePath
}

// RouteAny (list): List of routes in the table
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "routes/route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route"
// Prefix (wildcarded): string
// PathId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePath) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": "*", "path-id": "*"},
			n,
		),
	}
}

// RouteAny (list): List of routes in the table
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "routes/route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route"
// Prefix (wildcarded): string
// PathId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePathAny) RouteAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": "*", "path-id": "*"},
			n,
		),
	}
}

// RouteAnyPathId (list): List of routes in the table
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "routes/route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route"
// Prefix: string
// PathId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePath) RouteAnyPathId(Prefix string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": Prefix, "path-id": "*"},
			n,
		),
	}
}

// RouteAnyPathId (list): List of routes in the table
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "routes/route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route"
// Prefix: string
// PathId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePathAny) RouteAnyPathId(Prefix string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": Prefix, "path-id": "*"},
			n,
		),
	}
}

// RouteAnyPrefix (list): List of routes in the table
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "routes/route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route"
// Prefix (wildcarded): string
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePath) RouteAnyPrefix(PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": "*", "path-id": PathId},
			n,
		),
	}
}

// RouteAnyPrefix (list): List of routes in the table
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "routes/route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route"
// Prefix (wildcarded): string
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePathAny) RouteAnyPrefix(PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": "*", "path-id": PathId},
			n,
		),
	}
}

// Route (list): List of routes in the table
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "routes/route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route"
// Prefix: string
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePath) Route(Prefix string, PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": Prefix, "path-id": PathId},
			n,
		),
	}
}

// Route (list): List of routes in the table
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "routes/route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route"
// Prefix: string
// PathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPrePathAny) Route(Prefix string, PathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"routes", "route"},
			map[string]interface{}{"prefix": Prefix, "path-id": PathId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_AttrIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_AttrIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_CommunityIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_CommunityIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_InvalidReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_InvalidReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_LastModifiedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_LastModifiedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PathIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PathIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ValidRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ValidRoutePathAny struct {
	*ygot.NodePath
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_AttrIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_AttrIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_AttrIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_AttrIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityIndex (leaf): Reference to the community attribute for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_CommunityIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_CommunityIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityIndex (leaf): Reference to the community attribute for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_CommunityIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_CommunityIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ExtCommunityIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_InvalidReasonPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_InvalidReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_InvalidReasonPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_InvalidReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-modified"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_LastModifiedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_LastModifiedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-modified"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_LastModifiedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_LastModifiedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathId (leaf): When the BGP speaker supports advertisement of multiple
// paths for a prefix, the path identifier is used to
// uniquely identify a route based on the combination of the
// prefix and path id.  In the Adj-RIB-In, the path-id value is
// the value received in the update message.   In the Loc-RIB,
// if used, it should represent a locally generated path-id
// value for the corresponding route.  In Adj-RIB-Out, it
// should be the value sent to a neighbor when add-paths is
// used, i.e., the capability has been negotiated.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/path-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PathIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PathIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathId (leaf): When the BGP speaker supports advertisement of multiple
// paths for a prefix, the path identifier is used to
// uniquely identify a route based on the combination of the
// prefix and path id.  In the Adj-RIB-In, the path-id value is
// the value received in the update message.   In the Loc-RIB,
// if used, it should represent a locally generated path-id
// value for the corresponding route.  In Adj-RIB-Out, it
// should be the value sent to a neighbor when add-paths is
// used, i.e., the capability has been negotiated.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/path-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) PathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PathIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PathIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Prefix for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/prefix"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) Prefix() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PrefixPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Prefix for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/prefix"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) Prefix() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PrefixPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
// AttrType (wildcarded): uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
// AttrType (wildcarded): uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
// AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute"
// AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ValidRoutePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ValidRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_RoutePathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ValidRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_ValidRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePathAny struct {
	*ygot.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_AttrValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_ExtendedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_OptionalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_PartialPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/ipv6-unicast/neighbors/neighbor/adj-rib-out-pre/routes/route/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_Ipv6Unicast_Neighbor_AdjRibOutPre_Route_UnknownAttribute_TransitivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/aigp YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/aigp YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/atomic-aggregate YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/atomic-aggregate YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/cluster-list YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/cluster-list YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/local-pref YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/local-pref YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/med YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/med YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/origin YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/origin YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/originator-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/originator-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPathAny struct {
	*ygot.NodePath
}

// Aggregator (container): BGP attribute indicating the prefix has been aggregated by
// the specified AS and router.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "aggregator"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Aggregator() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath{
		NodePath: ygot.NewNodePath(
			[]string{"aggregator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aggregator (container): BGP attribute indicating the prefix has been aggregated by
// the specified AS and router.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "aggregator"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Aggregator() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"aggregator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aigp (leaf): BGP path attribute representing the accumulated IGP metric
// for the path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/aigp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/aigp"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Aigp() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "aigp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aigp (leaf): BGP path attribute representing the accumulated IGP metric
// for the path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/aigp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/aigp"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Aigp() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "aigp"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicAggregate (leaf): BGP attribute indicating that the prefix is an atomic
// aggregate, i.e., the peer selected a less specific
// route without selecting a more specific route that is
// included in it.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/atomic-aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/atomic-aggregate"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) AtomicAggregate() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "atomic-aggregate"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicAggregate (leaf): BGP attribute indicating that the prefix is an atomic
// aggregate, i.e., the peer selected a less specific
// route without selecting a more specific route that is
// included in it.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/atomic-aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/atomic-aggregate"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) AtomicAggregate() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "atomic-aggregate"},
			map[string]interface{}{},
			n,
		),
	}
}

// ClusterList (leaf): Represents the reflection path that the route has passed.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cluster-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/cluster-list"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) ClusterList() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cluster-list"},
			map[string]interface{}{},
			n,
		),
	}
}

// ClusterList (leaf): Represents the reflection path that the route has passed.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cluster-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/cluster-list"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) ClusterList() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cluster-list"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Index() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Index() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalPref (leaf): BGP local preference attribute sent to internal peers to
// indicate the degree of preference for externally learned
// routes.  The route with the highest local preference value
// is preferred.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-pref"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/local-pref"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) LocalPref() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-pref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalPref (leaf): BGP local preference attribute sent to internal peers to
// indicate the degree of preference for externally learned
// routes.  The route with the highest local preference value
// is preferred.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-pref"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/local-pref"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) LocalPref() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-pref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Med (leaf): BGP multi-exit discriminator attribute used in BGP route
// selection process
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/med"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/med"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Med() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "med"},
			map[string]interface{}{},
			n,
		),
	}
}

// Med (leaf): BGP multi-exit discriminator attribute used in BGP route
// selection process
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/med"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/med"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Med() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "med"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): BGP next hop attribute defining the IP address of the router
// that should be used as the next hop to the destination
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/next-hop"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) NextHop() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): BGP next hop attribute defining the IP address of the router
// that should be used as the next hop to the destination
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/next-hop"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) NextHop() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Origin (leaf): BGP attribute defining the origin of the path information.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/origin"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Origin() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// Origin (leaf): BGP attribute defining the origin of the path information.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/origin"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Origin() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorId (leaf): BGP attribute that provides the id as an IPv4 address
// of the originator of the announcement.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/originator-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) OriginatorId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorId (leaf): BGP attribute that provides the id as an IPv4 address
// of the originator of the announcement.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/originator-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) OriginatorId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// TunnelEncapsulation (container): The Tunnel Encapsulation attribute specifies a set of
// tunnels to a remote destination. The attribute is TLV
// based and allows description of a tunnel type, and the
// relevant information to create the tunnel to the remote
// destination.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnel-encapsulation"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) TunnelEncapsulation() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath{
		NodePath: ygot.NewNodePath(
			[]string{"tunnel-encapsulation"},
			map[string]interface{}{},
			n,
		),
	}
}

// TunnelEncapsulation (container): The Tunnel Encapsulation attribute specifies a set of
// tunnels to a remote destination. The attribute is TLV
// based and allows description of a tunnel type, and the
// relevant information to create the tunnel to the remote
// destination.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnel-encapsulation"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) TunnelEncapsulation() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnel-encapsulation"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4PathAny struct {
	*ygot.NodePath
}

// Address (leaf): IP address of the router that performed the
// aggregation.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath) Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): IP address of the router that performed the
// aggregation.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny) Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// As (leaf): AS number of the autnonomous system that performed the
// aggregation.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath) As() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// As (leaf): AS number of the autnonomous system that performed the
// aggregation.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny) As() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// As4 (leaf): AS number of the autnonomous system that performed the
// aggregation (4-octet representation).  This value is
// populated if an upstream router is not 4-octet capable.
// Its semantics are similar to the AS4_PATH optional
// transitive attribute
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as4"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath) As4() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4Path {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as4"},
			map[string]interface{}{},
			n,
		),
	}
}

// As4 (leaf): AS number of the autnonomous system that performed the
// aggregation (4-octet representation).  This value is
// populated if an upstream router is not 4-octet capable.
// Its semantics are similar to the AS4_PATH optional
// transitive attribute
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as4"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny) As4() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4PathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as4"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/member YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/member YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePathAny struct {
	*ygot.NodePath
}

// Member (leaf): List of the AS numbers in the AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/member"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/member"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPath) Member() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// Member (leaf): List of the AS numbers in the AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/member"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/member"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPathAny) Member() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/member YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/member YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePathAny struct {
	*ygot.NodePath
}

// Member (leaf): List of the AS numbers in the AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/member"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/member"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPath) Member() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// Member (leaf): List of the AS numbers in the AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/member"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/member"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPathAny) Member() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny struct {
	*ygot.NodePath
}

// TunnelAny (list): List of the tunnels that are specified within the
// attribute. Keyed on the type of tunnel that the
// TLV describes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel"
// Type (wildcarded): E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath) TunnelAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// TunnelAny (list): List of the tunnels that are specified within the
// attribute. Keyed on the type of tunnel that the
// TLV describes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel"
// Type (wildcarded): E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny) TunnelAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Tunnel (list): List of the tunnels that are specified within the
// attribute. Keyed on the type of tunnel that the
// TLV describes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel"
// Type: E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath) Tunnel(Type E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Tunnel (list): List of the tunnels that are specified within the
// attribute. Keyed on the type of tunnel that the
// TLV describes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel"
// Type: E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny) Tunnel(Type E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePathAny struct {
	*ygot.NodePath
}

// SubtlvAny (list): List of the subTLVs that are specified within the
// TLV instance inside the tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv"
// Type (wildcarded): E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath) SubtlvAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of the subTLVs that are specified within the
// TLV instance inside the tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv"
// Type (wildcarded): E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny) SubtlvAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of the subTLVs that are specified within the
// TLV instance inside the tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv"
// Type: E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath) Subtlv(Type E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of the subTLVs that are specified within the
// TLV instance inside the tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv"
// Type: E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny) Subtlv(Type E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Type (leaf): Type of the tunnel described within the tunnel encapsulation
// attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of the tunnel described within the tunnel encapsulation
// attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/binding-sid YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/binding-sid YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/colors YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/colors YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/preference YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/preference YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// BindingSid (leaf): Binding SID associated with the SR-TE policy
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/binding-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/binding-sid"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) BindingSid() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "binding-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// BindingSid (leaf): Binding SID associated with the SR-TE policy
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/binding-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/binding-sid"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) BindingSid() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "binding-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Colors (leaf): The colours associated with the tunnel encapsulation attribute,
// as described by RFC5512.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/colors"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/colors"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) Colors() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "colors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Colors (leaf): The colours associated with the tunnel encapsulation attribute,
// as described by RFC5512.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/colors"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/colors"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) Colors() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "colors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): The preference of the SR-TE policy described by the tunnel
// encapsulation attribute. If unspecified, the preference
// defaults to 100.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/preference"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) Preference() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): The preference of the SR-TE policy described by the tunnel
// encapsulation attribute. If unspecified, the preference
// defaults to 100.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/preference"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) Preference() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteEndpointAny (list): List of the remote endpoints described within the TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote-endpoints/remote-endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint"
// Endpoint (wildcarded): string
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) RemoteEndpointAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"remote-endpoints", "remote-endpoint"},
			map[string]interface{}{"endpoint": "*"},
			n,
		),
	}
}

// RemoteEndpointAny (list): List of the remote endpoints described within the TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote-endpoints/remote-endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint"
// Endpoint (wildcarded): string
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) RemoteEndpointAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"remote-endpoints", "remote-endpoint"},
			map[string]interface{}{"endpoint": "*"},
			n,
		),
	}
}

// RemoteEndpoint (list): List of the remote endpoints described within the TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote-endpoints/remote-endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint"
// Endpoint: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) RemoteEndpoint(Endpoint string) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath{
		NodePath: ygot.NewNodePath(
			[]string{"remote-endpoints", "remote-endpoint"},
			map[string]interface{}{"endpoint": Endpoint},
			n,
		),
	}
}

// RemoteEndpoint (list): List of the remote endpoints described within the TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote-endpoints/remote-endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint"
// Endpoint: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) RemoteEndpoint(Endpoint string) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"remote-endpoints", "remote-endpoint"},
			map[string]interface{}{"endpoint": Endpoint},
			n,
		),
	}
}

// SegmentListAny (list): List of segment lists that are specified within the
// tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list"
// InstanceId (wildcarded): uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) SegmentListAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"instance-id": "*"},
			n,
		),
	}
}

// SegmentListAny (list): List of segment lists that are specified within the
// tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list"
// InstanceId (wildcarded): uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) SegmentListAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"instance-id": "*"},
			n,
		),
	}
}

// SegmentList (list): List of segment lists that are specified within the
// tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list"
// InstanceId: uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) SegmentList(InstanceId uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"instance-id": InstanceId},
			n,
		),
	}
}

// SegmentList (list): List of segment lists that are specified within the
// tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list"
// InstanceId: uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) SegmentList(InstanceId uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"instance-id": InstanceId},
			n,
		),
	}
}

// Type (leaf): Type of the sub-TLV within the tunnel encapsulation attribute
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of the sub-TLV within the tunnel encapsulation attribute
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPathAny struct {
	*ygot.NodePath
}

// As (leaf): The remote AS to which the IP address of the remote endpoint
// belongs.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/as"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath) As() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// As (leaf): The remote AS to which the IP address of the remote endpoint
// belongs.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/as"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny) As() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): IP address of the remote endpoint.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): IP address of the remote endpoint.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/instance-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/instance-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPathAny struct {
	*ygot.NodePath
}

// InstanceId (leaf): Instance of the segment list within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/instance-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath) InstanceId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceId (leaf): Instance of the segment list within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/instance-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny) InstanceId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentAny (list): List of segments within the SR-TE segment list.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segments/segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment"
// Index (wildcarded): uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath) SegmentAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segments", "segment"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// SegmentAny (list): List of segments within the SR-TE segment list.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segments/segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment"
// Index (wildcarded): uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny) SegmentAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segments", "segment"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Segment (list): List of segments within the SR-TE segment list.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segments/segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment"
// Index: uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath) Segment(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath{
		NodePath: ygot.NewNodePath(
			[]string{"segments", "segment"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Segment (list): List of segments within the SR-TE segment list.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segments/segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment"
// Index: uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny) Segment(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segments", "segment"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Weight (leaf): The weight given to the path within the set of segment
// lists that are included in the tunnel attribute sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath) Weight() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight given to the path within the set of segment
// lists that are included in the tunnel attribute sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny) Weight() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-interface-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-interface-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-bos YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-bos YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-tc YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-tc YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/sid YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/sid YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePathAny struct {
	*ygot.NodePath
}

// Index (leaf): Index of the segment within the segment list. The segments are
// ordered in ascending order, beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) Index() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of the segment within the segment list. The segments are
// ordered in ascending order, beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) Index() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalInterfaceId (leaf): The local interface identifier to be utilised for the segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-interface-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) LocalInterfaceId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalInterfaceId (leaf): The local interface identifier to be utilised for the segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-interface-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) LocalInterfaceId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv4Address (leaf): An IPv4 address of a local adjacency that is used to identify
// the segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv4-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) LocalIpv4Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv4Address (leaf): An IPv4 address of a local adjacency that is used to identify
// the segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv4-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) LocalIpv4Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Address (leaf): An IPv6 address of a local adjacency that is used to identify the
// segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv6-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) LocalIpv6Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Address (leaf): An IPv6 address of a local adjacency that is used to identify the
// segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv6-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) LocalIpv6Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsBos (leaf): When this leaf is set to true the MPLS bottom-of-stack
// (BoS) bit is set in the MPLS segment. The BoS bit should
// always be set to zero by the sender.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-bos"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-bos"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) MplsBos() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-bos"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsBos (leaf): When this leaf is set to true the MPLS bottom-of-stack
// (BoS) bit is set in the MPLS segment. The BoS bit should
// always be set to zero by the sender.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-bos"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-bos"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) MplsBos() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-bos"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The MPLS TC bits used when the SID is specified as an MPLS
// label. If set to zero, the receiving system specifies the
// value of the TC bits.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-tc"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) MplsTc() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The MPLS TC bits used when the SID is specified as an MPLS
// label. If set to zero, the receiving system specifies the
// value of the TC bits.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-tc"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) MplsTc() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The MPLS time to live (TTL) to be set for the MPLS
// segment. If set to 255, the receiver specifies the
// TTL value that is used for packets sent with this
// segment in the stack.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-ttl"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) MplsTtl() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The MPLS time to live (TTL) to be set for the MPLS
// segment. If set to 255, the receiver specifies the
// TTL value that is used for packets sent with this
// segment in the stack.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-ttl"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) MplsTtl() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpv4Address (leaf): An IPv4 address specified as the remote node address. When the type
// of the segment specifies only the remote address, no other addresses
// are specified. When the type of the segment requires a local address,
// this leaf specifies the remote IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv4-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) RemoteIpv4Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpv4Address (leaf): An IPv4 address specified as the remote node address. When the type
// of the segment specifies only the remote address, no other addresses
// are specified. When the type of the segment requires a local address,
// this leaf specifies the remote IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv4-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) RemoteIpv4Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpv6Address (leaf): An IPv6 address specified as the remote node address. When the type
// of the segment specifies only the remote address, no other addresses
// are specified. When the type of the segment requires a local address,
// this leaf specifies the remote IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv6-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) RemoteIpv6Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpv6Address (leaf): An IPv6 address specified as the remote node address. When the type
// of the segment specifies only the remote address, no other addresses
// are specified. When the type of the segment requires a local address,
// this leaf specifies the remote IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv6-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) RemoteIpv6Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sid (leaf): SID value for the segment entry, specified as an MPLS label
// or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/sid"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) Sid() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sid (leaf): SID value for the segment entry, specified as an MPLS label
// or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/sid"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) Sid() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of segment specified within the segment entry.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of segment specified within the segment entry.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_CommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_CommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_Community_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_Community_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_Community_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_Community_IndexPathAny struct {
	*ygot.NodePath
}

// Community (leaf): List of standard or well-known BGP community
// attributes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/community"
func (n *NetworkInstance_Protocol_Bgp_Rib_CommunityPath) Community() *NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPath {
	return &NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community"},
			map[string]interface{}{},
			n,
		),
	}
}

// Community (leaf): List of standard or well-known BGP community
// attributes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/community"
func (n *NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny) Community() *NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_CommunityPath) Index() *NetworkInstance_Protocol_Bgp_Rib_Community_IndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_Community_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny) Index() *NetworkInstance_Protocol_Bgp_Rib_Community_IndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_Community_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPathAny struct {
	*ygot.NodePath
}

// ExtCommunity (leaf): List of BGP extended community attributes.  The received
// extended community may be an explicitly modeled
// type or unknown, represented by an 8-octet value
// formatted according to RFC 4360.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/ext-community"
func (n *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath) ExtCommunity() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPath {
	return &NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunity (leaf): List of BGP extended community attributes.  The received
// extended community may be an explicitly modeled
// type or unknown, represented by an 8-octet value
// formatted according to RFC 4360.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/ext-community"
func (n *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny) ExtCommunity() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath) Index() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny) Index() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_IgmpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp YANG schema element.
type NetworkInstance_Protocol_IgmpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IgmpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp YANG schema element.
type NetworkInstance_Protocol_IgmpPathAny struct {
	*ygot.NodePath
}

// Global (container): Global IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global"
func (n *NetworkInstance_Protocol_IgmpPath) Global() *NetworkInstance_Protocol_Igmp_GlobalPath {
	return &NetworkInstance_Protocol_Igmp_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Global IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global"
func (n *NetworkInstance_Protocol_IgmpPathAny) Global() *NetworkInstance_Protocol_Igmp_GlobalPathAny {
	return &NetworkInstance_Protocol_Igmp_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IgmpPath) InterfaceAny() *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IgmpPathAny) InterfaceAny() *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IgmpPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Igmp_InterfacePath {
	return &NetworkInstance_Protocol_Igmp_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IgmpPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global YANG schema element.
type NetworkInstance_Protocol_Igmp_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global YANG schema element.
type NetworkInstance_Protocol_Igmp_GlobalPathAny struct {
	*ygot.NodePath
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm"
func (n *NetworkInstance_Protocol_Igmp_GlobalPath) Ssm() *NetworkInstance_Protocol_Igmp_Global_SsmPath {
	return &NetworkInstance_Protocol_Igmp_Global_SsmPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm"
func (n *NetworkInstance_Protocol_Igmp_GlobalPathAny) Ssm() *NetworkInstance_Protocol_Igmp_Global_SsmPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_SsmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Global_SsmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_SsmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_SsmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_SsmPathAny struct {
	*ygot.NodePath
}

// MappingAny (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPath) MappingAny() *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": "*"},
			n,
		),
	}
}

// MappingAny (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPathAny) MappingAny() *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": "*"},
			n,
		),
	}
}

// Mapping (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source: string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPath) Mapping(Source string) *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": Source},
			n,
		),
	}
}

// Mapping (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source: string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPathAny) Mapping(Source string) *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": Source},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny struct {
	*ygot.NodePath
}

// Source (leaf): Multicast source address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/source"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath) Source() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Multicast source address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/source"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny) Source() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath) SsmRanges() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny) SsmRanges() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/filter-prefixes YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/filter-prefixes YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-expires YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-expires YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-interval YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-interval YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_VersionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/version YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_VersionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_VersionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/version YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_VersionPathAny struct {
	*ygot.NodePath
}

// Counters (container): Counters avaiable on a per interface bases for IGMP.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Counters() *NetworkInstance_Protocol_Igmp_Interface_CountersPath {
	return &NetworkInstance_Protocol_Igmp_Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Counters avaiable on a per interface bases for IGMP.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Counters() *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Enabled() *NetworkInstance_Protocol_Igmp_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Igmp_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// FilterPrefixes (leaf): List used to filter joins.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/filter-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/filter-prefixes"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) FilterPrefixes() *NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath {
	return &NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "filter-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// FilterPrefixes (leaf): List used to filter joins.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/filter-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/filter-prefixes"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) FilterPrefixes() *NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "filter-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// GroupAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "membership-groups/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group"
// Group (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) GroupAny() *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"membership-groups", "group"},
			map[string]interface{}{"group": "*"},
			n,
		),
	}
}

// GroupAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "membership-groups/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group"
// Group (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) GroupAny() *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"membership-groups", "group"},
			map[string]interface{}{"group": "*"},
			n,
		),
	}
}

// Group (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "membership-groups/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group"
// Group: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Group(Group string) *NetworkInstance_Protocol_Igmp_Interface_GroupPath {
	return &NetworkInstance_Protocol_Igmp_Interface_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"membership-groups", "group"},
			map[string]interface{}{"group": Group},
			n,
		),
	}
}

// Group (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "membership-groups/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group"
// Group: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Group(Group string) *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"membership-groups", "group"},
			map[string]interface{}{"group": Group},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which IGMP is enabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which IGMP is enabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryExpires (leaf): This timestamp indicates the time that the next query is sent
// expressed relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/query-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-expires"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) QueryExpires() *NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPath {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "query-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryExpires (leaf): This timestamp indicates the time that the next query is sent
// expressed relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/query-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-expires"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) QueryExpires() *NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "query-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryInterval (leaf): Interval at which the router sends the IGMP membership
// queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/query-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-interval"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) QueryInterval() *NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "query-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryInterval (leaf): Interval at which the router sends the IGMP membership
// queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/query-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-interval"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) QueryInterval() *NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "query-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroupsAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) StaticGroupsAny() *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": "*"},
			n,
		),
	}
}

// StaticGroupsAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) StaticGroupsAny() *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": "*"},
			n,
		),
	}
}

// StaticGroups (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) StaticGroups(StaticGroup string) *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": StaticGroup},
			n,
		),
	}
}

// StaticGroups (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) StaticGroups(StaticGroup string) *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": StaticGroup},
			n,
		),
	}
}

// Version (leaf): IGMP Version.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/version"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Version() *NetworkInstance_Protocol_Igmp_Interface_VersionPath {
	return &NetworkInstance_Protocol_Igmp_Interface_VersionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version (leaf): IGMP Version.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/version"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Version() *NetworkInstance_Protocol_Igmp_Interface_VersionPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_VersionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_CountersPathAny struct {
	*ygot.NodePath
}

// Queries (container): IGMP membership queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "queries"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPath) Queries() *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath{
		NodePath: ygot.NewNodePath(
			[]string{"queries"},
			map[string]interface{}{},
			n,
		),
	}
}

// Queries (container): IGMP membership queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "queries"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny) Queries() *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queries"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reports (container): Number of IGMP membership reports received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reports"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPath) Reports() *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath{
		NodePath: ygot.NewNodePath(
			[]string{"reports"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reports (container): Number of IGMP membership reports received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reports"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny) Reports() *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reports"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny struct {
	*ygot.NodePath
}

// Received (container): Number of IGMP membership queries received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath) Received() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (container): Number of IGMP membership queries received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny) Received() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (container): Number of IGMP membership queries sent.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath) Sent() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (container): Number of IGMP membership queries sent.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny) Sent() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3PathAny struct {
	*ygot.NodePath
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3PathAny struct {
	*ygot.NodePath
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3PathAny struct {
	*ygot.NodePath
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/reporter YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/reporter YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_SourcePathAny struct {
	*ygot.NodePath
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/group"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPath) Group() *NetworkInstance_Protocol_Igmp_Interface_Group_GroupPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/group"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny) Group() *NetworkInstance_Protocol_Igmp_Interface_Group_GroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reporter (leaf): Address of the last reporter.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reporter"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/reporter"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPath) Reporter() *NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reporter"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reporter (leaf): Address of the last reporter.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reporter"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/reporter"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny) Reporter() *NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reporter"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPath) Source() *NetworkInstance_Protocol_Igmp_Interface_Group_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny) Source() *NetworkInstance_Protocol_Igmp_Interface_Group_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/static-group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/static-group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny struct {
	*ygot.NodePath
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath) Source() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny) Source() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroup (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/static-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/static-group"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath) StaticGroup() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "static-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroup (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/static-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/static-group"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny) StaticGroup() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "static-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_IsisPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis YANG schema element.
type NetworkInstance_Protocol_IsisPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IsisPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis YANG schema element.
type NetworkInstance_Protocol_IsisPathAny struct {
	*ygot.NodePath
}

// Global (container): This container defines global ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global"
func (n *NetworkInstance_Protocol_IsisPath) Global() *NetworkInstance_Protocol_Isis_GlobalPath {
	return &NetworkInstance_Protocol_Isis_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): This container defines global ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global"
func (n *NetworkInstance_Protocol_IsisPathAny) Global() *NetworkInstance_Protocol_Isis_GlobalPathAny {
	return &NetworkInstance_Protocol_Isis_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IsisPath) InterfaceAny() *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IsisPathAny) InterfaceAny() *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IsisPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Isis_InterfacePath {
	return &NetworkInstance_Protocol_Isis_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IsisPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_IsisPath) LevelAny() *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_IsisPathAny) LevelAny() *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_IsisPath) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_LevelPath {
	return &NetworkInstance_Protocol_Isis_LevelPath{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_IsisPathAny) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global YANG schema element.
type NetworkInstance_Protocol_Isis_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global YANG schema element.
type NetworkInstance_Protocol_Isis_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_FastFloodingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/fast-flooding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_FastFloodingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/fast-flooding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_HelloPaddingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_HelloPaddingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_IidTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/iid-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_IidTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_IidTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/iid-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_IidTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/level-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/level-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/max-ecmp-paths YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/max-ecmp-paths YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/net YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/net YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_PoiTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/poi-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_PoiTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/poi-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAny() *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAny() *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAnySafiName(AfiName E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAnySafiName(AfiName E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAnyAfiName(SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAnyAfiName(SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Af(AfiName E_IsisTypes_AFI_TYPE, SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPath {
	return &NetworkInstance_Protocol_Isis_Global_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Af(AfiName E_IsisTypes_AFI_TYPE, SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// AfiAny (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfiAny() *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AfiAny (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfiAny() *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// Afi (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName: E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Afi(AfiName E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfiPath {
	return &NetworkInstance_Protocol_Isis_Global_AfiPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// Afi (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName: E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Afi(AfiName E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/authentication-check"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath {
	return &NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/authentication-check"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// FastFlooding (leaf): When set to true, IS will always flood the LSP that triggered an SPF
// before the router actually runs the SPF computation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/fast-flooding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/fast-flooding"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) FastFlooding() *NetworkInstance_Protocol_Isis_Global_FastFloodingPath {
	return &NetworkInstance_Protocol_Isis_Global_FastFloodingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fast-flooding"},
			map[string]interface{}{},
			n,
		),
	}
}

// FastFlooding (leaf): When set to true, IS will always flood the LSP that triggered an SPF
// before the router actually runs the SPF computation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/fast-flooding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/fast-flooding"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) FastFlooding() *NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fast-flooding"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): This container defines ISIS Graceful Restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): This container defines ISIS Graceful Restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs on a global level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/hello-padding"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) HelloPadding() *NetworkInstance_Protocol_Isis_Global_HelloPaddingPath {
	return &NetworkInstance_Protocol_Isis_Global_HelloPaddingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs on a global level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/hello-padding"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) HelloPadding() *NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// IidTlv (leaf): ISIS Instance Identifier TLV. When set to trues, the IID-TLV identifies
// the unique instance as well as the topology/topologies to which the
// PDU applies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/iid-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/iid-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) IidTlv() *NetworkInstance_Protocol_Isis_Global_IidTlvPath {
	return &NetworkInstance_Protocol_Isis_Global_IidTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "iid-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// IidTlv (leaf): ISIS Instance Identifier TLV. When set to trues, the IID-TLV identifies
// the unique instance as well as the topology/topologies to which the
// PDU applies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/iid-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/iid-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) IidTlv() *NetworkInstance_Protocol_Isis_Global_IidTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Global_IidTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "iid-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instance (leaf): ISIS Instance.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/instance"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Instance() *NetworkInstance_Protocol_Isis_Global_InstancePath {
	return &NetworkInstance_Protocol_Isis_Global_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instance (leaf): ISIS Instance.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/instance"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Instance() *NetworkInstance_Protocol_Isis_Global_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Global_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterLevelPropagationPolicies (container): Policies to propagate prefixes between IS-IS levels.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-level-propagation-policies"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) InterLevelPropagationPolicies() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-level-propagation-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterLevelPropagationPolicies (container): Policies to propagate prefixes between IS-IS levels.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-level-propagation-policies"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) InterLevelPropagationPolicies() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-level-propagation-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelCapability (leaf): ISIS level capability(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/level-capability"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) LevelCapability() *NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath {
	return &NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelCapability (leaf): ISIS level capability(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/level-capability"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) LevelCapability() *NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBit (container): This container defines ISIS LSP Operational Bits.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) LspBit() *NetworkInstance_Protocol_Isis_Global_LspBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBit (container): This container defines ISIS LSP Operational Bits.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) LspBit() *NetworkInstance_Protocol_Isis_Global_LspBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxEcmpPaths (leaf): ISIS max-paths count.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-ecmp-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/max-ecmp-paths"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) MaxEcmpPaths() *NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath {
	return &NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-ecmp-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxEcmpPaths (leaf): ISIS max-paths count.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-ecmp-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/max-ecmp-paths"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) MaxEcmpPaths() *NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-ecmp-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Maximum areas supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath {
	return &NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Maximum areas supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Mpls() *NetworkInstance_Protocol_Isis_Global_MplsPath {
	return &NetworkInstance_Protocol_Isis_Global_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Mpls() *NetworkInstance_Protocol_Isis_Global_MplsPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Net (leaf): ISIS network entity title (NET). The first 8 bits are usually
// 49 (private AFI), next 16 bits represent area, next 48 bits represent
// system id and final 8 bits are set to 0.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/net"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/net"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Net() *NetworkInstance_Protocol_Isis_Global_NetPath {
	return &NetworkInstance_Protocol_Isis_Global_NetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "net"},
			map[string]interface{}{},
			n,
		),
	}
}

// Net (leaf): ISIS network entity title (NET). The first 8 bits are usually
// 49 (private AFI), next 16 bits represent area, next 48 bits represent
// system id and final 8 bits are set to 0.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/net"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/net"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Net() *NetworkInstance_Protocol_Isis_Global_NetPathAny {
	return &NetworkInstance_Protocol_Isis_Global_NetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "net"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nsr (container): This container defines ISIS Non-Stop Routing.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nsr"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Nsr() *NetworkInstance_Protocol_Isis_Global_NsrPath {
	return &NetworkInstance_Protocol_Isis_Global_NsrPath{
		NodePath: ygot.NewNodePath(
			[]string{"nsr"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nsr (container): This container defines ISIS Non-Stop Routing.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nsr"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Nsr() *NetworkInstance_Protocol_Isis_Global_NsrPathAny {
	return &NetworkInstance_Protocol_Isis_Global_NsrPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"nsr"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoiTlv (leaf): ISIS purge TLV. When set to true, a TLV is added to purges to record
// the system ID  of the IS generating the purge.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/poi-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/poi-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) PoiTlv() *NetworkInstance_Protocol_Isis_Global_PoiTlvPath {
	return &NetworkInstance_Protocol_Isis_Global_PoiTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "poi-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoiTlv (leaf): ISIS purge TLV. When set to true, a TLV is added to purges to record
// the system ID  of the IS generating the purge.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/poi-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/poi-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) PoiTlv() *NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "poi-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (container): This container defines ISIS Reference Bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (container): This container defines ISIS Reference Bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state relating to segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) SegmentRouting() *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state relating to segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) SegmentRouting() *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Timers() *NetworkInstance_Protocol_Isis_Global_TimersPath {
	return &NetworkInstance_Protocol_Isis_Global_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Timers() *NetworkInstance_Protocol_Isis_Global_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Global_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): This container defines ISIS transport.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Transport() *NetworkInstance_Protocol_Isis_Global_TransportPath {
	return &NetworkInstance_Protocol_Isis_Global_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): This container defines ISIS transport.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Transport() *NetworkInstance_Protocol_Isis_Global_TransportPathAny {
	return &NetworkInstance_Protocol_Isis_Global_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/metric"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) Metric() *NetworkInstance_Protocol_Isis_Global_Af_MetricPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/metric"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) Metric() *NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines multi-topology address-family configuration
// and state information. ISIS TLV 235, 237.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) MultiTopology() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines multi-topology address-family configuration
// and state information. ISIS TLV 235, 237.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) MultiTopology() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_AfiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AfiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/nh-type YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/nh-type YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NhType (leaf): Tunnel NH Type(RSVP,SR). When present it implies
// that nh-type shortcut is enabled for a specified AFI.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nh-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/nh-type"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPath) NhType() *NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath {
	return &NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nh-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NhType (leaf): Tunnel NH Type(RSVP,SR). When present it implies
// that nh-type shortcut is enabled for a specified AFI.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nh-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/nh-type"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPathAny) NhType() *NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nh-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable or disable the IS-IS graceful restart helper function. When
// this leaf is set, the local system does not utilise the IS-IS
// graceful restart procedures during its own restart, but supports
// retaining forwarding information during a remote speaker's restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable or disable the IS-IS graceful restart helper function. When
// this leaf is set, the local system does not utilise the IS-IS
// graceful restart procedures during its own restart, but supports
// retaining forwarding information during a remote speaker's restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny struct {
	*ygot.NodePath
}

// Level1ToLevel2 (container): Policies relating to prefixes to be propagated from
// Level 1 to Level 2.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level1-to-level2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath) Level1ToLevel2() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path{
		NodePath: ygot.NewNodePath(
			[]string{"level1-to-level2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level1ToLevel2 (container): Policies relating to prefixes to be propagated from
// Level 1 to Level 2.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level1-to-level2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny) Level1ToLevel2() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"level1-to-level2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level2ToLevel1 (container): Policies relating to prefixes to be propagated from
// Level2 to Level 1.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level2-to-level1"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath) Level2ToLevel1() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path{
		NodePath: ygot.NewNodePath(
			[]string{"level2-to-level1"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level2ToLevel1 (container): Policies relating to prefixes to be propagated from
// Level2 to Level 1.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level2-to-level1"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny) Level2ToLevel1() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"level2-to-level1"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBitPathAny struct {
	*ygot.NodePath
}

// AttachedBit (container): This container defines Attached Bit.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "attached-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPath) AttachedBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"attached-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttachedBit (container): This container defines Attached Bit.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "attached-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPathAny) AttachedBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"attached-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverloadBit (container): This container defines Overload Bit configuration.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overload-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPath) OverloadBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"overload-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverloadBit (container): This container defines Overload Bit configuration.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overload-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPathAny) OverloadBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"overload-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/ignore-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/ignore-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/suppress-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/suppress-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny struct {
	*ygot.NodePath
}

// IgnoreBit (leaf): When set to true, if the attached bit is set on an incoming Level 1
// IS-IS, the local system ignores it. In this case the local system
// does not set a default route to the L1L2 router advertising the PDU
// with the attached bit set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ignore-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/ignore-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath) IgnoreBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ignore-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreBit (leaf): When set to true, if the attached bit is set on an incoming Level 1
// IS-IS, the local system ignores it. In this case the local system
// does not set a default route to the L1L2 router advertising the PDU
// with the attached bit set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ignore-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/ignore-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny) IgnoreBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ignore-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressBit (leaf): When set to true, if the local IS acts as a L1L2 router, then the
// attached bit is not advertised in locally generated PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/suppress-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/suppress-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath) SuppressBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "suppress-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressBit (leaf): When set to true, if the local IS acts as a L1L2 router, then the
// attached bit is not advertised in locally generated PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/suppress-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/suppress-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny) SuppressBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "suppress-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/advertise-high-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/advertise-high-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit-on-boot YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit-on-boot YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny struct {
	*ygot.NodePath
}

// AdvertiseHighMetric (leaf): When set to true, the local IS advertises links with the highest
// available metric regardless of their configured metric. The metric
// value is based on the metric style - if wide metrics are utilised
// the metric is advertised as 16777214, otherwise they are advertised
// with a value of 63.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertise-high-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/advertise-high-metric"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) AdvertiseHighMetric() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertise-high-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertiseHighMetric (leaf): When set to true, the local IS advertises links with the highest
// available metric regardless of their configured metric. The metric
// value is based on the metric style - if wide metrics are utilised
// the metric is advertised as 16777214, otherwise they are advertised
// with a value of 63.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertise-high-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/advertise-high-metric"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) AdvertiseHighMetric() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertise-high-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTriggerAny (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger (wildcarded): E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) ResetTriggerAny() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": "*"},
			n,
		),
	}
}

// ResetTriggerAny (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger (wildcarded): E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) ResetTriggerAny() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": "*"},
			n,
		),
	}
}

// ResetTrigger (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger: E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) ResetTrigger(ResetTrigger E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": ResetTrigger},
			n,
		),
	}
}

// ResetTrigger (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger: E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) ResetTrigger(ResetTrigger E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": ResetTrigger},
			n,
		),
	}
}

// SetBit (leaf): When set to true, IS-IS overload bit is set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) SetBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBit (leaf): When set to true, IS-IS overload bit is set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) SetBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBitOnBoot (leaf): When set to true, the IS-IS overload bit is set on system boot.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-bit-on-boot"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit-on-boot"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) SetBitOnBoot() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-bit-on-boot"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBitOnBoot (leaf): When set to true, the IS-IS overload bit is set on system boot.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-bit-on-boot"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit-on-boot"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) SetBitOnBoot() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-bit-on-boot"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): If a reset trigger is specified, the system should delay resetting
// the overload bit for the specified number of seconds after the
// trigger occurs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/delay"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath) Delay() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): If a reset trigger is specified, the system should delay resetting
// the overload bit for the specified number of seconds after the
// trigger occurs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/delay"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny) Delay() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTrigger (leaf): In the case that the system sets the overload bit on start, the
// system should reset the bit (i.e., clear the overload bit) upon
// the specified trigger.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/reset-trigger"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath) ResetTrigger() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reset-trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTrigger (leaf): In the case that the system sets the overload bit on start, the
// system should reset the bit (i.e., clear the overload bit) upon
// the specified trigger.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/reset-trigger"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny) ResetTrigger() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reset-trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MplsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Global_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Global_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_NsrPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NsrPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NsrPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NsrPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_NsrPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_NsrPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/state/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/state/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny struct {
	*ygot.NodePath
}

// ReferenceBandwidth (leaf): ISIS Reference Bandwidth value
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/state/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (leaf): ISIS Reference Bandwidth value
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/state/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srgb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srgb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srlb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srlb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, the segment routing extensions are
// utilised within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Enabled() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, the segment routing extensions are
// utilised within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srgb (leaf): A reference to the Segment Routing Global Block (SRGB) that is
// to be used by this IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srgb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srgb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Srgb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srgb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srgb (leaf): A reference to the Segment Routing Global Block (SRGB) that is
// to be used by this IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srgb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srgb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Srgb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srgb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srlb (leaf): A reference to the Segment Routing Local Block (SRLB) that is to
// be advertised by the IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srlb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srlb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Srlb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srlb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srlb (leaf): A reference to the Segment Routing Local Block (SRLB) that is to
// be advertised by the IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srlb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srlb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Srlb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srlb"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-lifetime-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-lifetime-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-refresh-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-refresh-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny struct {
	*ygot.NodePath
}

// LspGeneration (container): This container defines ISIS LSP Generation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspGeneration() *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspGeneration (container): This container defines ISIS LSP Generation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspGeneration() *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspLifetimeInterval (leaf): Time interval in seconds that specifies how long an LSP remains in
// LSDB without being refreshed.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-lifetime-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-lifetime-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspLifetimeInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-lifetime-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspLifetimeInterval (leaf): Time interval in seconds that specifies how long an LSP remains in
// LSDB without being refreshed.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-lifetime-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-lifetime-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspLifetimeInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-lifetime-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspRefreshInterval (leaf): Time interval in seconds that specifies how often route topology
// that a device originates is transmitted in LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-refresh-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-refresh-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspRefreshInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-refresh-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspRefreshInterval (leaf): Time interval in seconds that specifies how often route topology
// that a device originates is transmitted in LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-refresh-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-refresh-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspRefreshInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-refresh-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): This container defines ISIS SPF timer settings.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) Spf() *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_SpfPath{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): This container defines ISIS SPF timer settings.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) Spf() *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/adaptive-timer YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/adaptive-timer YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-first-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-first-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-max-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-max-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-second-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-second-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny struct {
	*ygot.NodePath
}

// AdaptiveTimer (leaf): ISIS adaptive timer types (linear, exponential).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adaptive-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/adaptive-timer"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) AdaptiveTimer() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adaptive-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdaptiveTimer (leaf): ISIS adaptive timer types (linear, exponential).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adaptive-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/adaptive-timer"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) AdaptiveTimer() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adaptive-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspFirstWaitInterval (leaf): Time interval in milliseconds that specifies the first LSP generation
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-first-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-first-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspFirstWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-first-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspFirstWaitInterval (leaf): Time interval in milliseconds that specifies the first LSP generation
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-first-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-first-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspFirstWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-first-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMaxWaitInterval (leaf): Time interval in milliseconds that specifies max interval between
// two consecutive occurrences of an LSP being generated.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-max-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-max-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspMaxWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-max-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMaxWaitInterval (leaf): Time interval in milliseconds that specifies max interval between
// two consecutive occurrences of an LSP being generated.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-max-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-max-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspMaxWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-max-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspSecondWaitInterval (leaf): Time interval in milliseconds that specifies the millisecond LSP
// generation delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-second-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-second-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspSecondWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-second-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspSecondWaitInterval (leaf): Time interval in milliseconds that specifies the millisecond LSP
// generation delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-second-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-second-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspSecondWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-second-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Timers_SpfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_SpfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/adaptive-timer YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/adaptive-timer YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-first-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-first-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-hold-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-hold-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-second-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-second-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny struct {
	*ygot.NodePath
}

// AdaptiveTimer (leaf): ISIS adaptive timer types (linear, exponential).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adaptive-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/adaptive-timer"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) AdaptiveTimer() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adaptive-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdaptiveTimer (leaf): ISIS adaptive timer types (linear, exponential).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adaptive-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/adaptive-timer"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) AdaptiveTimer() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adaptive-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfFirstInterval (leaf): Time interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-first-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-first-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfFirstInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-first-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfFirstInterval (leaf): Time interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-first-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-first-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfFirstInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-first-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfHoldInterval (leaf): SPF Hold Down time interval in milliseconds.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-hold-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-hold-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfHoldInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-hold-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfHoldInterval (leaf): SPF Hold Down time interval in milliseconds.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-hold-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-hold-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfHoldInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-hold-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfSecondInterval (leaf): Time interval in milliseconds between the first and second
// SPF calculation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-second-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-second-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfSecondInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-second-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfSecondInterval (leaf): Time interval in milliseconds between the first and second
// SPF calculation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-second-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-second-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfSecondInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-second-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport/state/lsp-mtu-size YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport/state/lsp-mtu-size YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny struct {
	*ygot.NodePath
}

// LspMtuSize (leaf): The maximum size in bytes of an IS-IS Link state PDU.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-mtu-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport/state/lsp-mtu-size"
func (n *NetworkInstance_Protocol_Isis_Global_TransportPath) LspMtuSize() *NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath {
	return &NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-mtu-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMtuSize (leaf): The maximum size in bytes of an IS-IS Link state PDU.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-mtu-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport/state/lsp-mtu-size"
func (n *NetworkInstance_Protocol_Isis_Global_TransportPathAny) LspMtuSize() *NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-mtu-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Isis_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Isis_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_PassivePathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAny() *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAny() *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAnySafiName(AfiName E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAnySafiName(AfiName E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAnyAfiName(SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAnyAfiName(SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Af(AfiName E_IsisTypes_AFI_TYPE, SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPath {
	return &NetworkInstance_Protocol_Isis_Interface_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Af(AfiName E_IsisTypes_AFI_TYPE, SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Authentication() *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Interface_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Authentication() *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bfd (container): This container defines BFD.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Bfd() *NetworkInstance_Protocol_Isis_Interface_BfdPath {
	return &NetworkInstance_Protocol_Isis_Interface_BfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bfd (container): This container defines BFD.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Bfd() *NetworkInstance_Protocol_Isis_Interface_BfdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_BfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitCounters (container): This container defines state information for ISIS circuit counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "circuit-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) CircuitCounters() *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"circuit-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitCounters (container): This container defines state information for ISIS circuit counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "circuit-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) CircuitCounters() *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"circuit-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitType (leaf): ISIS circuit type (p2p, broadcast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/circuit-type"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) CircuitType() *NetworkInstance_Protocol_Isis_Interface_CircuitTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitType (leaf): ISIS circuit type (p2p, broadcast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/circuit-type"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) CircuitType() *NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Isis_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/hello-padding"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) HelloPadding() *NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath {
	return &NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/hello-padding"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) HelloPadding() *NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Interface for which ISIS configuration is to be applied.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Interface for which ISIS configuration is to be applied.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePath) LevelAny() *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) LevelAny() *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_Interface_LevelPath {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPath{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Mpls() *NetworkInstance_Protocol_Isis_Interface_MplsPath {
	return &NetworkInstance_Protocol_Isis_Interface_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Mpls() *NetworkInstance_Protocol_Isis_Interface_MplsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When set to true, the referenced interface is a passive interface
// such that it is not eligible to establish adjacencies with other
// systems, but is advertised into the IS-IS topology.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/passive"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Passive() *NetworkInstance_Protocol_Isis_Interface_PassivePath {
	return &NetworkInstance_Protocol_Isis_Interface_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When set to true, the referenced interface is a passive interface
// such that it is not eligible to establish adjacencies with other
// systems, but is advertised into the IS-IS topology.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/passive"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Passive() *NetworkInstance_Protocol_Isis_Interface_PassivePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container describes ISIS interface timers configuration
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Timers() *NetworkInstance_Protocol_Isis_Interface_TimersPath {
	return &NetworkInstance_Protocol_Isis_Interface_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container describes ISIS interface timers configuration
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Timers() *NetworkInstance_Protocol_Isis_Interface_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_BfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_BfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_BfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_BfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/state/bfd-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/state/bfd-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny struct {
	*ygot.NodePath
}

// BfdTlv (leaf): When set to true, BFD TLV is used. This enables support for the IS-IS
// BFD TLV options, which specify that a BFD session must be established
// before an IS-IS adjacency can transition to the established state.
// This option should be enabled on all IS-IS neighbors on a shared
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bfd-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/state/bfd-tlv"
func (n *NetworkInstance_Protocol_Isis_Interface_BfdPath) BfdTlv() *NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath {
	return &NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bfd-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// BfdTlv (leaf): When set to true, BFD TLV is used. This enables support for the IS-IS
// BFD TLV options, which specify that a BFD session must be established
// before an IS-IS adjacency can transition to the established state.
// This option should be enabled on all IS-IS neighbors on a shared
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bfd-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/state/bfd-tlv"
func (n *NetworkInstance_Protocol_Isis_Interface_BfdPathAny) BfdTlv() *NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bfd-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-type-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-type-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/id-field-len-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/id-field-len-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/init-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/init-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/lan-dis-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/lan-dis-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/max-area-address-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/max-area-address-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/rejected-adj YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/rejected-adj YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPathAny struct {
	*ygot.NodePath
}

// AdjChanges (leaf): Number of times an adjacency state change has occurred on this circuit.
// MIB Entry: CircAdjChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adj-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-changes"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) AdjChanges() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adj-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjChanges (leaf): Number of times an adjacency state change has occurred on this circuit.
// MIB Entry: CircAdjChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adj-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-changes"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) AdjChanges() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adj-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjNumber (leaf): Number of adjacencies on this circuit.
// MIB Entry: CircNumAdj.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adj-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-number"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) AdjNumber() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adj-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjNumber (leaf): Number of adjacencies on this circuit.
// MIB Entry: CircNumAdj.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adj-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-number"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) AdjNumber() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adj-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthFails (leaf): Number of times an IS-IS control PDU with the correct auth type has
// failed to pass authentication validation. MIB Entry: CircAuthFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) AuthFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthFails (leaf): Number of times an IS-IS control PDU with the correct auth type has
// failed to pass authentication validation. MIB Entry: CircAuthFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) AuthFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthTypeFails (leaf): Number of times an IS-IS control PDU with an auth type field different
// from that for this system has been received. MIB Entry:
// CircAuthTypeFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-type-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) AuthTypeFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthTypeFails (leaf): Number of times an IS-IS control PDU with an auth type field different
// from that for this system has been received. MIB Entry:
// CircAuthTypeFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-type-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) AuthTypeFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdFieldLenMismatches (leaf): Number of times an IS-IS control PDU with an ID field length different
// from that for this system has been received.
// MIB Entry: CircIDFieldLenMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-field-len-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/id-field-len-mismatches"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) IdFieldLenMismatches() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-field-len-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdFieldLenMismatches (leaf): Number of times an IS-IS control PDU with an ID field length different
// from that for this system has been received.
// MIB Entry: CircIDFieldLenMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-field-len-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/id-field-len-mismatches"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) IdFieldLenMismatches() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-field-len-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitFails (leaf): Number of times initialization of this circuit has failed. This counts
// events such as PPP NCP failures. MIB Entry: CircInitFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/init-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/init-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) InitFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "init-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitFails (leaf): Number of times initialization of this circuit has failed. This counts
// events such as PPP NCP failures. MIB Entry: CircInitFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/init-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/init-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) InitFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "init-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanDisChanges (leaf): Number of times the Designated IS has changed on this circuit at this
// level. If the circuit is point to point, this count is zero. MIB Entry:
// CircLANDesISChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lan-dis-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/lan-dis-changes"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) LanDisChanges() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lan-dis-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanDisChanges (leaf): Number of times the Designated IS has changed on this circuit at this
// level. If the circuit is point to point, this count is zero. MIB Entry:
// CircLANDesISChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lan-dis-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/lan-dis-changes"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) LanDisChanges() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lan-dis-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxAreaAddressMismatches (leaf): Number of times an IS-IS control PDU with a max area address field
// different from that for this system has been received. MIB Entry:
// CircMaxAreaAddrMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-area-address-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/max-area-address-mismatches"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) MaxAreaAddressMismatches() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-area-address-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxAreaAddressMismatches (leaf): Number of times an IS-IS control PDU with a max area address field
// different from that for this system has been received. MIB Entry:
// CircMaxAreaAddrMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-area-address-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/max-area-address-mismatches"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) MaxAreaAddressMismatches() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-area-address-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// RejectedAdj (leaf): Number of times an adjacency has been rejected on this circuit. MIB
// Entry: CircRejAdjs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/rejected-adj"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/rejected-adj"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) RejectedAdj() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "rejected-adj"},
			map[string]interface{}{},
			n,
		),
	}
}

// RejectedAdj (leaf): Number of times an adjacency has been rejected on this circuit. MIB
// Entry: CircRejAdjs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/rejected-adj"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/rejected-adj"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) RejectedAdj() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "rejected-adj"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_LevelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_LevelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_LevelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_LevelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny struct {
	*ygot.NodePath
}

// AdjacencyAny (list): List of the local system's IS-IS adjacencies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacencies/adjacency"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AdjacencyAny() *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacencies", "adjacency"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// AdjacencyAny (list): List of the local system's IS-IS adjacencies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacencies/adjacency"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AdjacencyAny() *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacencies", "adjacency"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// Adjacency (list): List of the local system's IS-IS adjacencies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacencies/adjacency"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Adjacency(SystemId string) *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacencies", "adjacency"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// Adjacency (list): List of the local system's IS-IS adjacencies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacencies/adjacency"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Adjacency(SystemId string) *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacencies", "adjacency"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAny() *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAny() *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAnySafiName(AfiName E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAnySafiName(AfiName E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAnyAfiName(SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAnyAfiName(SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Af(AfiName E_IsisTypes_AFI_TYPE, SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: E_IsisTypes_AFI_TYPE
// SafiName: E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Af(AfiName E_IsisTypes_AFI_TYPE, SafiName E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAuthentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) HelloAuthentication() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAuthentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) HelloAuthentication() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number(level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/level-number"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) LevelNumber() *NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number(level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/level-number"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) LevelNumber() *NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// PacketCounters (container): This container defines ISIS interface packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "packet-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) PacketCounters() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"packet-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// PacketCounters (container): This container defines ISIS interface packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "packet-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) PacketCounters() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"packet-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): ISIS passive interface admin enable/disable function.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/passive"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Passive() *NetworkInstance_Protocol_Isis_Interface_Level_PassivePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): ISIS passive interface admin enable/disable function.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/passive"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Passive() *NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): ISIS neighbor priority(LAN hello PDU only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): ISIS neighbor priority(LAN hello PDU only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Timers() *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Timers() *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/area-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/area-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/dis-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/dis-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/local-extended-circuit-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/local-extended-circuit-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-extended-circuit-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-extended-circuit-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-snpa YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-snpa YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-status YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-status YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-support YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-support YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-suppress YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-suppress YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/topology YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/topology YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/up-timestamp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/up-timestamp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPathAny struct {
	*ygot.NodePath
}

// AdjacencyState (leaf): P2P 3-way ISIS adjacency state(up, down, init, failed).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-state"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) AdjacencyState() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyState (leaf): P2P 3-way ISIS adjacency state(up, down, init, failed).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-state"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) AdjacencyState() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyType (leaf): Formed ISIS adjacency type(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) AdjacencyType() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyType (leaf): Formed ISIS adjacency type(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) AdjacencyType() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AreaAddress (leaf): List of ISIS area-address(es).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/area-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/area-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) AreaAddress() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "area-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// AreaAddress (leaf): List of ISIS area-address(es).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/area-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/area-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) AreaAddress() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "area-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisSystemId (leaf): DIS System ID(LAN hello only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dis-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/dis-system-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) DisSystemId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dis-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisSystemId (leaf): DIS System ID(LAN hello only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dis-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/dis-system-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) DisSystemId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dis-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalExtendedCircuitId (leaf): Local extended circuit ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-extended-circuit-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/local-extended-circuit-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) LocalExtendedCircuitId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-extended-circuit-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalExtendedCircuitId (leaf): Local extended circuit ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-extended-circuit-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/local-extended-circuit-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) LocalExtendedCircuitId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-extended-circuit-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (leaf): When set to true, ISIS multi-topology is supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) MultiTopology() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (leaf): When set to true, ISIS multi-topology is supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) MultiTopology() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCircuitType (leaf): Received ISIS circuit type (level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-circuit-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborCircuitType() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCircuitType (leaf): Received ISIS circuit type (level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-circuit-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborCircuitType() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExtendedCircuitId (leaf): ISIS neighbor extended circuit ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-extended-circuit-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-extended-circuit-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborExtendedCircuitId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-extended-circuit-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExtendedCircuitId (leaf): ISIS neighbor extended circuit ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-extended-circuit-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-extended-circuit-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborExtendedCircuitId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-extended-circuit-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborIpv4Address (leaf): ISIS Neighbor IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv4-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborIpv4Address() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborIpv4Address (leaf): ISIS Neighbor IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv4-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborIpv4Address() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborIpv6Address (leaf): ISIS Neighbor IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv6-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborIpv6Address() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborIpv6Address (leaf): ISIS Neighbor IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv6-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborIpv6Address() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborSnpa (leaf): ISIS neighbor SNPA.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-snpa"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-snpa"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborSnpa() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-snpa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborSnpa (leaf): ISIS neighbor SNPA.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-snpa"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-snpa"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborSnpa() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-snpa"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (leaf): Supported Protocol. IPv4 is defined as (0xcc)
// and IPv6 - (0x8e). ISIS reference is TLV 129.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/nlpid"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) Nlpid() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (leaf): Supported Protocol. IPv4 is defined as (0xcc)
// and IPv6 - (0x8e). ISIS reference is TLV 129.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/nlpid"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) Nlpid() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Priority of the neighboring IS(LAN Hello only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Priority of the neighboring IS(LAN Hello only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartStatus (leaf): When set to true, neighbor is being helped. The RR bit is used by a
// (re)starting router to signal to its neighbors that a (re)start is in
// progress.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-status"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-status"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) RestartStatus() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartStatus (leaf): When set to true, neighbor is being helped. The RR bit is used by a
// (re)starting router to signal to its neighbors that a (re)start is in
// progress.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-status"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-status"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) RestartStatus() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartSupport (leaf): When set to true, Graceful-restart signaling is supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-support"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-support"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) RestartSupport() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-support"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartSupport (leaf): When set to true, Graceful-restart signaling is supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-support"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-support"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) RestartSupport() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-support"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartSuppress (leaf): When set to true, adjacency is not advertised. The SA bit is used by a
// starting router to  request that its neighbor suppress advertisement of
// the adjacency  to the starting router in the neighbor's LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-suppress"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-suppress"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) RestartSuppress() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-suppress"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartSuppress (leaf): When set to true, adjacency is not advertised. The SA bit is used by a
// starting router to  request that its neighbor suppress advertisement of
// the adjacency  to the starting router in the neighbor's LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-suppress"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-suppress"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) RestartSuppress() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-suppress"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): ISIS neighbor system-id.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) SystemId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): ISIS neighbor system-id.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) SystemId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Topology (leaf): ISIS topology type support(ipv4-unicast, ipv6-unicast,
// ipv4-multicast, ipv6-multicast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/topology"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) Topology() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// Topology (leaf): ISIS topology type support(ipv4-unicast, ipv6-unicast,
// ipv4-multicast, ipv6-multicast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/topology"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) Topology() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpTimestamp (leaf): Time at which the adjacency transitioned into the up state, expressed
// as number of nanoseconds since the Unix epoch (Jan 1, 1970 00:00:00
// UTC).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-timestamp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/up-timestamp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) UpTimestamp() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-timestamp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpTimestamp (leaf): Time at which the adjacency transitioned into the up state, expressed
// as number of nanoseconds since the Unix epoch (Jan 1, 1970 00:00:00
// UTC).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-timestamp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/up-timestamp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) UpTimestamp() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-timestamp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/metric"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) Metric() *NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/metric"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) Metric() *NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operatioanl state parameters relating to segment
// routing for an interface within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) SegmentRouting() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operatioanl state parameters relating to segment
// routing for an interface within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) SegmentRouting() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId (wildcarded): [UnionUint32, E_MplsTypes_MplsLabel_Enum, UnionString, E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId (wildcarded): [UnionUint32, E_MplsTypes_MplsLabel_Enum, UnionString, E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnySidId (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId (wildcarded): [UnionUint32, E_MplsTypes_MplsLabel_Enum, UnionString, E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAnySidId(Neighbor string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnySidId (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId (wildcarded): [UnionUint32, E_MplsTypes_MplsLabel_Enum, UnionString, E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAnySidId(Neighbor string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnyNeighbor (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId: [UnionUint32, E_MplsTypes_MplsLabel_Enum, UnionString, E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAnyNeighbor(SidId NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySidAnyNeighbor (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId: [UnionUint32, E_MplsTypes_MplsLabel_Enum, UnionString, E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAnyNeighbor(SidId NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySid (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId: [UnionUint32, E_MplsTypes_MplsLabel_Enum, UnionString, E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySid(Neighbor string, SidId NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySid (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId: [UnionUint32, E_MplsTypes_MplsLabel_Enum, UnionString, E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySid(Neighbor string, SidId NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": SidId},
			n,
		),
	}
}

// PrefixSidAny (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixSid (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) PrefixSid(Prefix string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// PrefixSid (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) PrefixSid(Prefix string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/group YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/group YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/protection-eligible YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/protection-eligible YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny struct {
	*ygot.NodePath
}

// AllocatedDynamicLocal (leaf): Where an Adjacency SID with a dynamic value is to be allocated by
// the system, this leaf reports to the value of the Adj-SID allocated
// to this interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/allocated-dynamic-local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) AllocatedDynamicLocal() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "allocated-dynamic-local"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllocatedDynamicLocal (leaf): Where an Adjacency SID with a dynamic value is to be allocated by
// the system, this leaf reports to the value of the Adj-SID allocated
// to this interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/allocated-dynamic-local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) AllocatedDynamicLocal() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "allocated-dynamic-local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When set to true, the Adj-SID is indicated to be part of a group, and
// the G flag is set to 1 in the corresponding advertisement in the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/group"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) Group() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When set to true, the Adj-SID is indicated to be part of a group, and
// the G flag is set to 1 in the corresponding advertisement in the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/group"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) Group() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Neighbor (leaf): The remote system on the interface with which the Adj-SID is
// associated.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/neighbor"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) Neighbor() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor"},
			map[string]interface{}{},
			n,
		),
	}
}

// Neighbor (leaf): The remote system on the interface with which the Adj-SID is
// associated.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/neighbor"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) Neighbor() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionEligible (leaf): Whether the Adj-SID should be considered to be eligible for protection
// using IP or MPLS FRR during a network failure. When this value is set to
// true, the B-flag of the Adj-SID is set to 1, and the local system should
// provide FRR paths for the associated label forwarding entry. When it is
// set to false, the local system must not provide FRR for the specified
// LFIB entry.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protection-eligible"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/protection-eligible"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) ProtectionEligible() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protection-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionEligible (leaf): Whether the Adj-SID should be considered to be eligible for protection
// using IP or MPLS FRR during a network failure. When this value is set to
// true, the B-flag of the Adj-SID is set to 1, and the local system should
// provide FRR paths for the associated label forwarding entry. When it is
// set to false, the local system must not provide FRR for the specified
// LFIB entry.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protection-eligible"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/protection-eligible"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) ProtectionEligible() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protection-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The value of the Adj-SID to be advertised. Where a static SID
// identifier is specified, this should be advertised directly by the
// system. Where the DYNAMIC value is specified, this should be treated
// as a dynamically allocated value. When the MPLS data plane is in use
// the dynamic value should not fall within a reserved-label-block.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The value of the Adj-SID to be advertised. Where a static SID
// identifier is specified, this should be advertised directly by the
// system. Where the DYNAMIC value is specified, this should be treated
// as a dynamically allocated value. When the MPLS data plane is in use
// the dynamic value should not fall within a reserved-label-block.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/label-options YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/label-options YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny struct {
	*ygot.NodePath
}

// LabelOptions (leaf): The options associated with the IGP prefix SID for MPLS. The value
// of this leaf specifies the option that the SID should be advertised
// into the IGP with.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/label-options"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) LabelOptions() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelOptions (leaf): The options associated with the IGP prefix SID for MPLS. The value
// of this leaf specifies the option that the SID should be advertised
// into the IGP with.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/label-options"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) LabelOptions() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix for which the IGP prefix SID should be advertised. The
// value specified is a local prefix on the interface which is advertised
// into the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) Prefix() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix for which the IGP prefix SID should be advertised. The
// value specified is a local prefix on the interface which is advertised
// into the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) Prefix() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The Segment Identifier to be used when advertising the IGP Prefix SID.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The Segment Identifier to be used when advertising the IGP Prefix SID.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny struct {
	*ygot.NodePath
}

// Csnp (container): Operational state parameters relating to CSNPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Csnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Csnp (container): Operational state parameters relating to CSNPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Csnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esh (container): This container defines ESH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "esh"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Esh() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath{
		NodePath: ygot.NewNodePath(
			[]string{"esh"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esh (container): This container defines ESH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "esh"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Esh() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"esh"},
			map[string]interface{}{},
			n,
		),
	}
}

// Iih (container): This container defines IIH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "iih"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Iih() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath{
		NodePath: ygot.NewNodePath(
			[]string{"iih"},
			map[string]interface{}{},
			n,
		),
	}
}

// Iih (container): This container defines IIH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "iih"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Iih() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"iih"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ish (container): This container defines ISH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ish"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Ish() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath{
		NodePath: ygot.NewNodePath(
			[]string{"ish"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ish (container): This container defines ISH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ish"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Ish() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ish"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsp (container): This container defines LSP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Lsp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsp (container): This container defines LSP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Lsp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Psnp (container): This container defines PSNP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Psnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Psnp (container): This container defines PSNP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Psnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Unknown (container): Operational state parameters relating to IS-IS PDUs that are not
// otherwise classified - referred to as Unknown PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Unknown() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown"},
			map[string]interface{}{},
			n,
		),
	}
}

// Unknown (container): Operational state parameters relating to IS-IS PDUs that are not
// otherwise classified - referred to as Unknown PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Unknown() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-multiplier YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-multiplier YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny struct {
	*ygot.NodePath
}

// HelloInterval (leaf): ISIS hello-interval value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath) HelloInterval() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): ISIS hello-interval value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny) HelloInterval() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMultiplier (leaf): ISIS hello-multiplier value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-multiplier"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-multiplier"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath) HelloMultiplier() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-multiplier"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMultiplier (leaf): ISIS hello-multiplier value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-multiplier"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-multiplier"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny) HelloMultiplier() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-multiplier"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_MplsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Interface_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Interface_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/csnp-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/csnp-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/lsp-pacing-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/lsp-pacing-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny struct {
	*ygot.NodePath
}

// CsnpInterval (leaf): The interval, specified in seconds, at which periodic CSNP packets
// should be transmitted by the local IS.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/csnp-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/csnp-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPath) CsnpInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "csnp-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// CsnpInterval (leaf): The interval, specified in seconds, at which periodic CSNP packets
// should be transmitted by the local IS.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/csnp-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/csnp-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPathAny) CsnpInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "csnp-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspPacingInterval (leaf): The interval interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-pacing-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/lsp-pacing-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPath) LspPacingInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-pacing-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspPacingInterval (leaf): The interval interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-pacing-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/lsp-pacing-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPathAny) LspPacingInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-pacing-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_LevelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_LevelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_LevelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_LevelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LevelNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LevelNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_MetricStylePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/metric-style YANG schema element.
type NetworkInstance_Protocol_Isis_Level_MetricStylePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_MetricStylePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/metric-style YANG schema element.
type NetworkInstance_Protocol_Isis_Level_MetricStylePathAny struct {
	*ygot.NodePath
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication"
func (n *NetworkInstance_Protocol_Isis_LevelPath) Authentication() *NetworkInstance_Protocol_Isis_Level_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Authentication() *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/authentication-check"
func (n *NetworkInstance_Protocol_Isis_LevelPath) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/authentication-check"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/enabled"
func (n *NetworkInstance_Protocol_Isis_LevelPath) Enabled() *NetworkInstance_Protocol_Isis_Level_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/enabled"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number (level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/level-number"
func (n *NetworkInstance_Protocol_Isis_LevelPath) LevelNumber() *NetworkInstance_Protocol_Isis_Level_LevelNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_LevelNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number (level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/level-number"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) LevelNumber() *NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspAny (list): This list describes LSPs in the LSDB.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-state-database/lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp"
// LspId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_LevelPath) LspAny() *NetworkInstance_Protocol_Isis_Level_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-state-database", "lsp"},
			map[string]interface{}{"lsp-id": "*"},
			n,
		),
	}
}

// LspAny (list): This list describes LSPs in the LSDB.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-state-database/lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp"
// LspId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) LspAny() *NetworkInstance_Protocol_Isis_Level_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-state-database", "lsp"},
			map[string]interface{}{"lsp-id": "*"},
			n,
		),
	}
}

// Lsp (list): This list describes LSPs in the LSDB.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-state-database/lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp"
// LspId: string
func (n *NetworkInstance_Protocol_Isis_LevelPath) Lsp(LspId string) *NetworkInstance_Protocol_Isis_Level_LspPath {
	return &NetworkInstance_Protocol_Isis_Level_LspPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-state-database", "lsp"},
			map[string]interface{}{"lsp-id": LspId},
			n,
		),
	}
}

// Lsp (list): This list describes LSPs in the LSDB.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-state-database/lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp"
// LspId: string
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Lsp(LspId string) *NetworkInstance_Protocol_Isis_Level_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-state-database", "lsp"},
			map[string]interface{}{"lsp-id": LspId},
			n,
		),
	}
}

// MetricStyle (leaf): ISIS metric style types(narrow, wide).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-style"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/metric-style"
func (n *NetworkInstance_Protocol_Isis_LevelPath) MetricStyle() *NetworkInstance_Protocol_Isis_Level_MetricStylePath {
	return &NetworkInstance_Protocol_Isis_Level_MetricStylePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-style"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricStyle (leaf): ISIS metric style types(narrow, wide).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-style"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/metric-style"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) MetricStyle() *NetworkInstance_Protocol_Isis_Level_MetricStylePathAny {
	return &NetworkInstance_Protocol_Isis_Level_MetricStylePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-style"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutePreference (container): This container defines Administrative Distance (or preference)
// assigned to ISIS routes (level1 internal, level2 internal, level1
// external, level2 external).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference"
func (n *NetworkInstance_Protocol_Isis_LevelPath) RoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutePreference (container): This container defines Administrative Distance (or preference)
// assigned to ISIS routes (level1 internal, level2 internal, level1
// external, level2 external).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) RoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemLevelCounters (container): This container defines ISIS system level counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "system-level-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters"
func (n *NetworkInstance_Protocol_Isis_LevelPath) SystemLevelCounters() *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"system-level-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemLevelCounters (container): This container defines ISIS system level counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "system-level-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) SystemLevelCounters() *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"system-level-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): This container defines ISIS TE.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering"
func (n *NetworkInstance_Protocol_Isis_LevelPath) TrafficEngineering() *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): This container defines ISIS TE.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) TrafficEngineering() *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableCsnp (leaf): When this leaf is set to true, authentication is disabled for CSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-csnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisableCsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableCsnp (leaf): When this leaf is set to true, authentication is disabled for CSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-csnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisableCsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableLsp (leaf): When this leaf is set to true, authentication is disabled for LSP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisableLsp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableLsp (leaf): When this leaf is set to true, authentication is disabled for LSP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisableLsp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePsnp (leaf): When this leaf is set to true, authentication is disabled for PSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-psnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisablePsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePsnp (leaf): When this leaf is set to true, authentication is disabled for PSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-psnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisablePsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, authentication of IS-IS PSNP, CSNP and
// LSP packets is enabled using the specified authentication details in
// the sibling leaves.
//
// The sibling 'disable-<type>' leaves can be used to override the value
// of this leaf and disable authentication for a specific packet type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, authentication of IS-IS PSNP, CSNP and
// LSP packets is enabled using the specified authentication details in
// the sibling leaves.
//
// The sibling 'disable-<type>' leaves can be used to override the value
// of this leaf and disable authentication for a specific packet type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to the keychain that should be used for authenticating IS-IS
// packets - the keychain may contain either a simple password, or
// HMAC-MD5 key that is used for authenticating CSNP, PSNP and LSP packets
// within the specified IS-IS level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to the keychain that should be used for authenticating IS-IS
// packets - the keychain may contain either a simple password, or
// HMAC-MD5 key that is used for authenticating CSNP, PSNP and LSP packets
// within the specified IS-IS level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_LspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/checksum YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/checksum YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/id-length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/id-length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/is-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/is-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/lsp-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/lsp-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/remaining-lifetime YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/remaining-lifetime YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/sequence-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/sequence-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_VersionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_VersionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_VersionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_VersionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Version2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version2 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Version2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Version2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version2 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Version2PathAny struct {
	*ygot.NodePath
}

// Checksum (leaf): Checksum of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/checksum"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/checksum"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Checksum() *NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Checksum (leaf): Checksum of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/checksum"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/checksum"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Checksum() *NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): LSP Type-Block flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): LSP Type-Block flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdLength (leaf): Length of the ID field of NSAP addresses and NETs used in
// this routing domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/id-length"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) IdLength() *NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdLength (leaf): Length of the ID field of NSAP addresses and NETs used in
// this routing domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/id-length"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) IdLength() *NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsType (leaf): Type of neighboring system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/is-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/is-type"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) IsType() *NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "is-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsType (leaf): Type of neighboring system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/is-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/is-type"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) IsType() *NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "is-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspId (leaf): LSP ID of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/lsp-id"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) LspId() *NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspId (leaf): LSP ID of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/lsp-id"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) LspId() *NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Number of area addresses permitted for this ISs area. 0
// indicates the IS only supports three area addresses (by
// default). Any number inclusive of 1 and 254 indicates the
// number of areas allowed.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Number of area addresses permitted for this ISs area. 0
// indicates the IS only supports three area addresses (by
// default). Any number inclusive of 1 and 254 indicates the
// number of areas allowed.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// PduLength (leaf): Total length of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pdu-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-length"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) PduLength() *NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pdu-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PduLength (leaf): Total length of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pdu-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-length"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) PduLength() *NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pdu-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PduType (leaf): Link State PDU type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pdu-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-type"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) PduType() *NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pdu-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// PduType (leaf): Link State PDU type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pdu-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-type"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) PduType() *NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pdu-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemainingLifetime (leaf): Remaining lifetime in seconds before the LSP expiration.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remaining-lifetime"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/remaining-lifetime"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) RemainingLifetime() *NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remaining-lifetime"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemainingLifetime (leaf): Remaining lifetime in seconds before the LSP expiration.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remaining-lifetime"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/remaining-lifetime"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) RemainingLifetime() *NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remaining-lifetime"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceNumber (leaf): Sequence number of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/sequence-number"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) SequenceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceNumber (leaf): Sequence number of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/sequence-number"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) SequenceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlvAny (list): List of TLV types in the LSDB for the specified LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tlvs/tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv"
// Type (wildcarded): E_IsisLsdbTypes_ISIS_TLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) TlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlvs", "tlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// TlvAny (list): List of TLV types in the LSDB for the specified LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tlvs/tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv"
// Type (wildcarded): E_IsisLsdbTypes_ISIS_TLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) TlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlvs", "tlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Tlv (list): List of TLV types in the LSDB for the specified LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tlvs/tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv"
// Type: E_IsisLsdbTypes_ISIS_TLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Tlv(Type E_IsisLsdbTypes_ISIS_TLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"tlvs", "tlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Tlv (list): List of TLV types in the LSDB for the specified LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tlvs/tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv"
// Type: E_IsisLsdbTypes_ISIS_TLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Tlv(Type E_IsisLsdbTypes_ISIS_TLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlvs", "tlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedTlvAny (list): List of TLVs that are not defined within the model, or are
// not recognised by the system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-tlvs/undefined-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) UndefinedTlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-tlvs", "undefined-tlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedTlvAny (list): List of TLVs that are not defined within the model, or are
// not recognised by the system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-tlvs/undefined-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) UndefinedTlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-tlvs", "undefined-tlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedTlv (list): List of TLVs that are not defined within the model, or are
// not recognised by the system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-tlvs/undefined-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) UndefinedTlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-tlvs", "undefined-tlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedTlv (list): List of TLVs that are not defined within the model, or are
// not recognised by the system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-tlvs/undefined-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) UndefinedTlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-tlvs", "undefined-tlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Version (leaf): PDU version. This is set to 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Version() *NetworkInstance_Protocol_Isis_Level_Lsp_VersionPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_VersionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version (leaf): PDU version. This is set to 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Version() *NetworkInstance_Protocol_Isis_Level_Lsp_VersionPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_VersionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version2 (leaf): PDU version2. This is set to 1
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version2"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Version2() *NetworkInstance_Protocol_Isis_Level_Lsp_Version2Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Version2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version2 (leaf): PDU version2. This is set to 1
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version2"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Version2() *NetworkInstance_Protocol_Isis_Level_Lsp_Version2PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Version2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version2"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// AreaAddress (container): This container defines TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "area-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) AreaAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"area-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// AreaAddress (container): This container defines TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "area-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) AreaAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"area-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines authentication information of the
// node.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Authentication() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines authentication information of the
// node.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Authentication() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// CapabilityAny (list): This list describes IS Router capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-capabilities/capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) CapabilityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-capabilities", "capability"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// CapabilityAny (list): This list describes IS Router capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-capabilities/capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) CapabilityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-capabilities", "capability"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Capability (list): This list describes IS Router capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-capabilities/capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Capability(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"router-capabilities", "capability"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Capability (list): This list describes IS Router capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-capabilities/capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Capability(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-capabilities", "capability"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// ExtendedIpv4Reachability (container): This container defines list of IPv4 extended reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-ipv4-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) ExtendedIpv4Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-ipv4-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedIpv4Reachability (container): This container defines list of IPv4 extended reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-ipv4-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) ExtendedIpv4Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-ipv4-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedIsReachability (container): This container defines list of ISIS extended reachability
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-is-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) ExtendedIsReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-is-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedIsReachability (container): This container defines list of ISIS extended reachability
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-is-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) ExtendedIsReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-is-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hostname (container): This container defines TLV 137.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hostname"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Hostname() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePath{
		NodePath: ygot.NewNodePath(
			[]string{"hostname"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hostname (container): This container defines TLV 137.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hostname"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Hostname() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hostname"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceIdAny (list): A list of instance IDs received within TLV 7 within an
// IS-IS LSP. In the case that more than one instance of
// TLV 7 is included in the LSP, the instance IDs specified
// within the instances are concatenated within this
// list.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instance-ids/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id"
// InstanceId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) InstanceIdAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instance-ids", "instance-id"},
			map[string]interface{}{"instance-id": "*"},
			n,
		),
	}
}

// InstanceIdAny (list): A list of instance IDs received within TLV 7 within an
// IS-IS LSP. In the case that more than one instance of
// TLV 7 is included in the LSP, the instance IDs specified
// within the instances are concatenated within this
// list.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instance-ids/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id"
// InstanceId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) InstanceIdAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instance-ids", "instance-id"},
			map[string]interface{}{"instance-id": "*"},
			n,
		),
	}
}

// InstanceId (list): A list of instance IDs received within TLV 7 within an
// IS-IS LSP. In the case that more than one instance of
// TLV 7 is included in the LSP, the instance IDs specified
// within the instances are concatenated within this
// list.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instance-ids/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id"
// InstanceId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) InstanceId(InstanceId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"instance-ids", "instance-id"},
			map[string]interface{}{"instance-id": InstanceId},
			n,
		),
	}
}

// InstanceId (list): A list of instance IDs received within TLV 7 within an
// IS-IS LSP. In the case that more than one instance of
// TLV 7 is included in the LSP, the instance IDs specified
// within the instances are concatenated within this
// list.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instance-ids/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id"
// InstanceId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) InstanceId(InstanceId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instance-ids", "instance-id"},
			map[string]interface{}{"instance-id": InstanceId},
			n,
		),
	}
}

// Ipv4ExternalReachability (container): This container defines list of IPv4 external reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-external-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4ExternalReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-external-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4ExternalReachability (container): This container defines list of IPv4 external reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-external-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4ExternalReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-external-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddresses (container): This container defines TLV 132.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4InterfaceAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddresses (container): This container defines TLV 132.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4InterfaceAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InternalReachability (container): This container defines list of IPv4 internal reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-internal-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4InternalReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-internal-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InternalReachability (container): This container defines list of IPv4 internal reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-internal-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4InternalReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-internal-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SrlgAny (list): Instance of the IPv4 SRLG TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-srlgs/ipv4-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4SrlgAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-srlgs", "ipv4-srlg"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Ipv4SrlgAny (list): Instance of the IPv4 SRLG TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-srlgs/ipv4-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4SrlgAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-srlgs", "ipv4-srlg"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Ipv4Srlg (list): Instance of the IPv4 SRLG TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-srlgs/ipv4-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4Srlg(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-srlgs", "ipv4-srlg"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Ipv4Srlg (list): Instance of the IPv4 SRLG TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-srlgs/ipv4-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4Srlg(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-srlgs", "ipv4-srlg"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Ipv4TeRouterId (container): This container defines TLV 134.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-te-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4TeRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-te-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4TeRouterId (container): This container defines TLV 134.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-te-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4TeRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-te-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddresses (container): This container defines TLV 232.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6InterfaceAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddresses (container): This container defines TLV 232.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6InterfaceAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Reachability (container): This container defines list of IPv6 reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Reachability (container): This container defines list of IPv6 reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SrlgAny (list): Instance of the IPv6 SRLG TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-srlgs/ipv6-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6SrlgAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-srlgs", "ipv6-srlg"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Ipv6SrlgAny (list): Instance of the IPv6 SRLG TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-srlgs/ipv6-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6SrlgAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-srlgs", "ipv6-srlg"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Ipv6Srlg (list): Instance of the IPv6 SRLG TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-srlgs/ipv6-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6Srlg(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-srlgs", "ipv6-srlg"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Ipv6Srlg (list): Instance of the IPv6 SRLG TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-srlgs/ipv6-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6Srlg(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-srlgs", "ipv6-srlg"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Ipv6TeRouterId (container): This container defines TLV 140.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-te-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6TeRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-te-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6TeRouterId (container): This container defines TLV 140.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-te-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6TeRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-te-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsAliasId (container): This container defines the IS-Alias TLV which allows
// extension-capable ISs to recognize the Originating System
// of an Extended LSP set. It identifies the Normal system-
// id of the Originating System.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "is-alias-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) IsAliasId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"is-alias-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsAliasId (container): This container defines the IS-Alias TLV which allows
// extension-capable ISs to recognize the Originating System
// of an Extended LSP set. It identifies the Normal system-
// id of the Originating System.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "is-alias-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) IsAliasId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"is-alias-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsReachability (container): This container describes list of ISIS neighbors and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "is-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) IsReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"is-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsReachability (container): This container describes list of ISIS neighbors and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "is-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) IsReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"is-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsisNeighborAttribute (container): This container defines list of ISIS topology neighbors
// for extended ISIS LSP (multiple system IDs).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "isis-neighbor-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) IsisNeighborAttribute() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"isis-neighbor-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsisNeighborAttribute (container): This container defines list of ISIS topology neighbors
// for extended ISIS LSP (multiple system IDs).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "isis-neighbor-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) IsisNeighborAttribute() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"isis-neighbor-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBufferSize (container): This container defines TLV 14 - the LSP Buffer Size
// TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-buffer-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) LspBufferSize() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-buffer-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBufferSize (container): This container defines TLV 14 - the LSP Buffer Size
// TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-buffer-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) LspBufferSize() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-buffer-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIpv4Reachability (container): This container defines list of IPv4 reachability
// Information in multi-topology environment.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-ipv4-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MtIpv4Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"mt-ipv4-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIpv4Reachability (container): This container defines list of IPv4 reachability
// Information in multi-topology environment.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-ipv4-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MtIpv4Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mt-ipv4-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIpv6Reachability (container): This container defines list of IPv6 reachability
// information in multi - topology environment.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-ipv6-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MtIpv6Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"mt-ipv6-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIpv6Reachability (container): This container defines list of IPv6 reachability
// information in multi - topology environment.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-ipv6-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MtIpv6Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mt-ipv6-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIsisNeighborAttribute (container): This container defines list of ISIS multi-topology
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-isis-neighbor-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MtIsisNeighborAttribute() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"mt-isis-neighbor-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIsisNeighborAttribute (container): This container defines list of ISIS multi-topology
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-isis-neighbor-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MtIsisNeighborAttribute() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mt-isis-neighbor-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIsn (container): This container defines list of ISIS multi-topology
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-isn"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MtIsn() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath{
		NodePath: ygot.NewNodePath(
			[]string{"mt-isn"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIsn (container): This container defines list of ISIS multi-topology
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-isn"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MtIsn() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mt-isn"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines the topology supported.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MultiTopology() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines the topology supported.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MultiTopology() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (container): This container defines TLV 129.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Nlpid() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath{
		NodePath: ygot.NewNodePath(
			[]string{"nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (container): This container defines TLV 129.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Nlpid() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// PurgeOi (container): This container defines ISIS purge TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "purge-oi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) PurgeOi() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath{
		NodePath: ygot.NewNodePath(
			[]string{"purge-oi"},
			map[string]interface{}{},
			n,
		),
	}
}

// PurgeOi (container): This container defines ISIS purge TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "purge-oi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) PurgeOi() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"purge-oi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV being described. The type of TLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV being described. The type of TLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf): Area adress(es) of the IS. Set of manual area
// addresses of this IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): Area adress(es) of the IS. Set of manual area
// addresses of this IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/crypto-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/crypto-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): Authentication key to be used.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/authentication-key"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath) AuthenticationKey() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): Authentication key to be used.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/authentication-key"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// CryptoType (leaf): Authentication type to be used.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/crypto-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/crypto-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath) CryptoType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "crypto-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CryptoType (leaf): Authentication type to be used.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/crypto-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/crypto-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny) CryptoType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "crypto-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/instance-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/instance-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPathAny struct {
	*ygot.NodePath
}

// Flags (leaf): Router capability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): Router capability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceNumber (leaf): A unique instance number for the instance of the
// router capabilities TLV. The instance number should
// be autogenerated by the producer of the data and may
// be renumbered if the entire LSP contents are
// replaced in subsequent advertisements.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/instance-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) InstanceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceNumber (leaf): A unique instance number for the instance of the
// router capabilities TLV. The instance number should
// be autogenerated by the producer of the data and may
// be renumbered if the entire LSP contents are
// replaced in subsequent advertisements.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/instance-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) InstanceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 router-id.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 router-id.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified
// TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv"
// Type (wildcarded): E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified
// TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv"
// Type (wildcarded): E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified
// TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv"
// Type: E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) Subtlv(Type E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified
// TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv"
// Type: E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) Subtlv(Type E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// SegmentRoutingAlgorithms (container): This container defines SR algorithm sub-TLV 19.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath) SegmentRoutingAlgorithms() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingAlgorithms (container): This container defines SR algorithm sub-TLV 19.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny) SegmentRoutingAlgorithms() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingCapability (container): This container defines SR Capability sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath) SegmentRoutingCapability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingCapability (container): This container defines SR Capability sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny) SegmentRoutingCapability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): The Segment Routing algorithm that is
// described by the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): The Segment Routing algorithm that is
// described by the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPathAny struct {
	*ygot.NodePath
}

// Flags (leaf): Segment Routing Capability Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): Segment Routing Capability Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrgbDescriptorAny (list): Descriptor entry within the SR capabilty
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgb-descriptors/srgb-descriptor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor"
// Range (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath) SrgbDescriptorAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgb-descriptors", "srgb-descriptor"},
			map[string]interface{}{"range": "*"},
			n,
		),
	}
}

// SrgbDescriptorAny (list): Descriptor entry within the SR capabilty
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgb-descriptors/srgb-descriptor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor"
// Range (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny) SrgbDescriptorAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgb-descriptors", "srgb-descriptor"},
			map[string]interface{}{"range": "*"},
			n,
		),
	}
}

// SrgbDescriptor (list): Descriptor entry within the SR capabilty
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgb-descriptors/srgb-descriptor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor"
// Range: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath) SrgbDescriptor(Range uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath{
		NodePath: ygot.NewNodePath(
			[]string{"srgb-descriptors", "srgb-descriptor"},
			map[string]interface{}{"range": Range},
			n,
		),
	}
}

// SrgbDescriptor (list): Descriptor entry within the SR capabilty
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgb-descriptors/srgb-descriptor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor"
// Range: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny) SrgbDescriptor(Range uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgb-descriptors", "srgb-descriptor"},
			map[string]interface{}{"range": Range},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/range YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/range YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePathAny struct {
	*ygot.NodePath
}

// Label (leaf): The first value of the SRGB when
// expressed as an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath) Label() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): The first value of the SRGB when
// expressed as an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny) Label() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Range (leaf): Number of SRGB elements. The range
// value MUST be greater than 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/range"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath) Range() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range"},
			map[string]interface{}{},
			n,
		),
	}
}

// Range (leaf): Number of SRGB elements. The range
// value MUST be greater than 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/range"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny) Range() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny struct {
	*ygot.NodePath
}

// PrefixAny (list): This list describes IPv4 extended prefixes and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixAny (list): This list describes IPv4 extended prefixes and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Prefix (list): This list describes IPv4 extended prefixes and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Prefix (list): This list describes IPv4 extended prefixes and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The Sub-TLV present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The Sub-TLV present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) Subtlv(Type E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) Subtlv(Type E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny struct {
	*ygot.NodePath
}

// Flags (leaf): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny struct {
	*ygot.NodePath
}

// Tag32 (leaf): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag32 (leaf): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny struct {
	*ygot.NodePath
}

// Tag64 (leaf): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (leaf): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny struct {
	*ygot.NodePath
}

// NeighborAny (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// Neighbor (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath) Neighbor(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny) Neighbor(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPathAny struct {
	*ygot.NodePath
}

// InstanceAny (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InstanceAny (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Instance (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Instance (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// SystemId (leaf): System-id of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Unique identifier for the instance of the
// TLV for the IS neighbor. The instance
// ID is not required to be consistent across
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique identifier for the instance of the
// TLV for the IS neighbor. The instance
// ID is not required to be consistent across
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): Metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): Metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) Subtlv(Type E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) Subtlv(Type E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny struct {
	*ygot.NodePath
}

// AdminGroup (leaf): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (leaf): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}
