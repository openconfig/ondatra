/*
Package telemetry is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by /usr/local/google/home/alexmasi/go/pkg/mod/github.com/openconfig/ygot@v0.23.1/genutil/names.go
using the following YANG input files:
  - gnmi-collector-metadata.yang
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/ate/openconfig-ate-flow.yang
  - public/release/models/ate/openconfig-ate-intf.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/p4rt/openconfig-p4rt.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-fan.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package telemetry

import (
	"github.com/openconfig/ygot/ygot"
)

// E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE is a derived int64 type which is used to represent
// the enumerated node AaaTypes_AAA_ACCOUNTING_EVENT_TYPE. An additional value named
// AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE int64

// IsYANGGoEnum ensures that AaaTypes_AAA_ACCOUNTING_EVENT_TYPE implements the yang.GoEnum
// interface. This ensures that AaaTypes_AAA_ACCOUNTING_EVENT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_AAA_ACCOUNTING_EVENT_TYPE.
func (E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE.
func (e E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE")
}

const (
	// AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_UNSET corresponds to the value UNSET of AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_UNSET E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 0
	// AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_COMMAND corresponds to the value AAA_ACCOUNTING_EVENT_COMMAND of AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_COMMAND E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 1
	// AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_LOGIN corresponds to the value AAA_ACCOUNTING_EVENT_LOGIN of AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_LOGIN E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 2
)

// E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE is a derived int64 type which is used to represent
// the enumerated node AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE. An additional value named
// AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE int64

// IsYANGGoEnum ensures that AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE implements the yang.GoEnum
// interface. This ensures that AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE.
func (E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE.
func (e E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE")
}

const (
	// AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_UNSET corresponds to the value UNSET of AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
	AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_UNSET E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE = 0
	// AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_COMMAND corresponds to the value AAA_AUTHORIZATION_EVENT_COMMAND of AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
	AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_COMMAND E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE = 1
	// AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_CONFIG corresponds to the value AAA_AUTHORIZATION_EVENT_CONFIG of AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
	AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_CONFIG E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE = 2
)

// E_AaaTypes_AAA_METHOD_TYPE is a derived int64 type which is used to represent
// the enumerated node AaaTypes_AAA_METHOD_TYPE. An additional value named
// AaaTypes_AAA_METHOD_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_AAA_METHOD_TYPE int64

// IsYANGGoEnum ensures that AaaTypes_AAA_METHOD_TYPE implements the yang.GoEnum
// interface. This ensures that AaaTypes_AAA_METHOD_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_AAA_METHOD_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_AAA_METHOD_TYPE.
func (E_AaaTypes_AAA_METHOD_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AaaTypes_AAA_METHOD_TYPE.
func (e E_AaaTypes_AAA_METHOD_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_AAA_METHOD_TYPE")
}

const (
	// AaaTypes_AAA_METHOD_TYPE_UNSET corresponds to the value UNSET of AaaTypes_AAA_METHOD_TYPE
	AaaTypes_AAA_METHOD_TYPE_UNSET E_AaaTypes_AAA_METHOD_TYPE = 0
	// AaaTypes_AAA_METHOD_TYPE_LOCAL corresponds to the value LOCAL of AaaTypes_AAA_METHOD_TYPE
	AaaTypes_AAA_METHOD_TYPE_LOCAL E_AaaTypes_AAA_METHOD_TYPE = 1
	// AaaTypes_AAA_METHOD_TYPE_RADIUS_ALL corresponds to the value RADIUS_ALL of AaaTypes_AAA_METHOD_TYPE
	AaaTypes_AAA_METHOD_TYPE_RADIUS_ALL E_AaaTypes_AAA_METHOD_TYPE = 2
	// AaaTypes_AAA_METHOD_TYPE_TACACS_ALL corresponds to the value TACACS_ALL of AaaTypes_AAA_METHOD_TYPE
	AaaTypes_AAA_METHOD_TYPE_TACACS_ALL E_AaaTypes_AAA_METHOD_TYPE = 3
)

// E_AaaTypes_AAA_SERVER_TYPE is a derived int64 type which is used to represent
// the enumerated node AaaTypes_AAA_SERVER_TYPE. An additional value named
// AaaTypes_AAA_SERVER_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_AAA_SERVER_TYPE int64

// IsYANGGoEnum ensures that AaaTypes_AAA_SERVER_TYPE implements the yang.GoEnum
// interface. This ensures that AaaTypes_AAA_SERVER_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_AAA_SERVER_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_AAA_SERVER_TYPE.
func (E_AaaTypes_AAA_SERVER_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AaaTypes_AAA_SERVER_TYPE.
func (e E_AaaTypes_AAA_SERVER_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_AAA_SERVER_TYPE")
}

const (
	// AaaTypes_AAA_SERVER_TYPE_UNSET corresponds to the value UNSET of AaaTypes_AAA_SERVER_TYPE
	AaaTypes_AAA_SERVER_TYPE_UNSET E_AaaTypes_AAA_SERVER_TYPE = 0
	// AaaTypes_AAA_SERVER_TYPE_RADIUS corresponds to the value RADIUS of AaaTypes_AAA_SERVER_TYPE
	AaaTypes_AAA_SERVER_TYPE_RADIUS E_AaaTypes_AAA_SERVER_TYPE = 1
	// AaaTypes_AAA_SERVER_TYPE_TACACS corresponds to the value TACACS of AaaTypes_AAA_SERVER_TYPE
	AaaTypes_AAA_SERVER_TYPE_TACACS E_AaaTypes_AAA_SERVER_TYPE = 2
)

// E_AaaTypes_SYSTEM_DEFINED_ROLES is a derived int64 type which is used to represent
// the enumerated node AaaTypes_SYSTEM_DEFINED_ROLES. An additional value named
// AaaTypes_SYSTEM_DEFINED_ROLES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_SYSTEM_DEFINED_ROLES int64

// IsYANGGoEnum ensures that AaaTypes_SYSTEM_DEFINED_ROLES implements the yang.GoEnum
// interface. This ensures that AaaTypes_SYSTEM_DEFINED_ROLES can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_SYSTEM_DEFINED_ROLES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_SYSTEM_DEFINED_ROLES.
func (E_AaaTypes_SYSTEM_DEFINED_ROLES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AaaTypes_SYSTEM_DEFINED_ROLES.
func (e E_AaaTypes_SYSTEM_DEFINED_ROLES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_SYSTEM_DEFINED_ROLES")
}

const (
	// AaaTypes_SYSTEM_DEFINED_ROLES_UNSET corresponds to the value UNSET of AaaTypes_SYSTEM_DEFINED_ROLES
	AaaTypes_SYSTEM_DEFINED_ROLES_UNSET E_AaaTypes_SYSTEM_DEFINED_ROLES = 0
	// AaaTypes_SYSTEM_DEFINED_ROLES_SYSTEM_ROLE_ADMIN corresponds to the value SYSTEM_ROLE_ADMIN of AaaTypes_SYSTEM_DEFINED_ROLES
	AaaTypes_SYSTEM_DEFINED_ROLES_SYSTEM_ROLE_ADMIN E_AaaTypes_SYSTEM_DEFINED_ROLES = 1
)

// E_Acl_ACL_COUNTER_CAPABILITY is a derived int64 type which is used to represent
// the enumerated node Acl_ACL_COUNTER_CAPABILITY. An additional value named
// Acl_ACL_COUNTER_CAPABILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Acl_ACL_COUNTER_CAPABILITY int64

// IsYANGGoEnum ensures that Acl_ACL_COUNTER_CAPABILITY implements the yang.GoEnum
// interface. This ensures that Acl_ACL_COUNTER_CAPABILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_Acl_ACL_COUNTER_CAPABILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Acl_ACL_COUNTER_CAPABILITY.
func (E_Acl_ACL_COUNTER_CAPABILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Acl_ACL_COUNTER_CAPABILITY.
func (e E_Acl_ACL_COUNTER_CAPABILITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Acl_ACL_COUNTER_CAPABILITY")
}

const (
	// Acl_ACL_COUNTER_CAPABILITY_UNSET corresponds to the value UNSET of Acl_ACL_COUNTER_CAPABILITY
	Acl_ACL_COUNTER_CAPABILITY_UNSET E_Acl_ACL_COUNTER_CAPABILITY = 0
	// Acl_ACL_COUNTER_CAPABILITY_AGGREGATE_ONLY corresponds to the value AGGREGATE_ONLY of Acl_ACL_COUNTER_CAPABILITY
	Acl_ACL_COUNTER_CAPABILITY_AGGREGATE_ONLY E_Acl_ACL_COUNTER_CAPABILITY = 1
	// Acl_ACL_COUNTER_CAPABILITY_INTERFACE_AGGREGATE corresponds to the value INTERFACE_AGGREGATE of Acl_ACL_COUNTER_CAPABILITY
	Acl_ACL_COUNTER_CAPABILITY_INTERFACE_AGGREGATE E_Acl_ACL_COUNTER_CAPABILITY = 2
	// Acl_ACL_COUNTER_CAPABILITY_INTERFACE_ONLY corresponds to the value INTERFACE_ONLY of Acl_ACL_COUNTER_CAPABILITY
	Acl_ACL_COUNTER_CAPABILITY_INTERFACE_ONLY E_Acl_ACL_COUNTER_CAPABILITY = 3
)

// E_Acl_ACL_TYPE is a derived int64 type which is used to represent
// the enumerated node Acl_ACL_TYPE. An additional value named
// Acl_ACL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Acl_ACL_TYPE int64

// IsYANGGoEnum ensures that Acl_ACL_TYPE implements the yang.GoEnum
// interface. This ensures that Acl_ACL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_Acl_ACL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Acl_ACL_TYPE.
func (E_Acl_ACL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Acl_ACL_TYPE.
func (e E_Acl_ACL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Acl_ACL_TYPE")
}

const (
	// Acl_ACL_TYPE_UNSET corresponds to the value UNSET of Acl_ACL_TYPE
	Acl_ACL_TYPE_UNSET E_Acl_ACL_TYPE = 0
	// Acl_ACL_TYPE_ACL_IPV4 corresponds to the value ACL_IPV4 of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_IPV4 E_Acl_ACL_TYPE = 1
	// Acl_ACL_TYPE_ACL_IPV6 corresponds to the value ACL_IPV6 of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_IPV6 E_Acl_ACL_TYPE = 2
	// Acl_ACL_TYPE_ACL_L2 corresponds to the value ACL_L2 of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_L2 E_Acl_ACL_TYPE = 3
	// Acl_ACL_TYPE_ACL_MIXED corresponds to the value ACL_MIXED of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_MIXED E_Acl_ACL_TYPE = 4
	// Acl_ACL_TYPE_ACL_MPLS corresponds to the value ACL_MPLS of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_MPLS E_Acl_ACL_TYPE = 5
)

// E_Acl_FORWARDING_ACTION is a derived int64 type which is used to represent
// the enumerated node Acl_FORWARDING_ACTION. An additional value named
// Acl_FORWARDING_ACTION_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Acl_FORWARDING_ACTION int64

// IsYANGGoEnum ensures that Acl_FORWARDING_ACTION implements the yang.GoEnum
// interface. This ensures that Acl_FORWARDING_ACTION can be identified as a
// mapped type for a YANG enumeration.
func (E_Acl_FORWARDING_ACTION) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Acl_FORWARDING_ACTION.
func (E_Acl_FORWARDING_ACTION) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Acl_FORWARDING_ACTION.
func (e E_Acl_FORWARDING_ACTION) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Acl_FORWARDING_ACTION")
}

const (
	// Acl_FORWARDING_ACTION_UNSET corresponds to the value UNSET of Acl_FORWARDING_ACTION
	Acl_FORWARDING_ACTION_UNSET E_Acl_FORWARDING_ACTION = 0
	// Acl_FORWARDING_ACTION_ACCEPT corresponds to the value ACCEPT of Acl_FORWARDING_ACTION
	Acl_FORWARDING_ACTION_ACCEPT E_Acl_FORWARDING_ACTION = 1
	// Acl_FORWARDING_ACTION_DROP corresponds to the value DROP of Acl_FORWARDING_ACTION
	Acl_FORWARDING_ACTION_DROP E_Acl_FORWARDING_ACTION = 2
	// Acl_FORWARDING_ACTION_REJECT corresponds to the value REJECT of Acl_FORWARDING_ACTION
	Acl_FORWARDING_ACTION_REJECT E_Acl_FORWARDING_ACTION = 3
)

// E_Acl_LOG_ACTION is a derived int64 type which is used to represent
// the enumerated node Acl_LOG_ACTION. An additional value named
// Acl_LOG_ACTION_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Acl_LOG_ACTION int64

// IsYANGGoEnum ensures that Acl_LOG_ACTION implements the yang.GoEnum
// interface. This ensures that Acl_LOG_ACTION can be identified as a
// mapped type for a YANG enumeration.
func (E_Acl_LOG_ACTION) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Acl_LOG_ACTION.
func (E_Acl_LOG_ACTION) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Acl_LOG_ACTION.
func (e E_Acl_LOG_ACTION) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Acl_LOG_ACTION")
}

const (
	// Acl_LOG_ACTION_UNSET corresponds to the value UNSET of Acl_LOG_ACTION
	Acl_LOG_ACTION_UNSET E_Acl_LOG_ACTION = 0
	// Acl_LOG_ACTION_LOG_NONE corresponds to the value LOG_NONE of Acl_LOG_ACTION
	Acl_LOG_ACTION_LOG_NONE E_Acl_LOG_ACTION = 1
	// Acl_LOG_ACTION_LOG_SYSLOG corresponds to the value LOG_SYSLOG of Acl_LOG_ACTION
	Acl_LOG_ACTION_LOG_SYSLOG E_Acl_LOG_ACTION = 2
)

// E_Address_Status is a derived int64 type which is used to represent
// the enumerated node Address_Status. An additional value named
// Address_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Address_Status int64

// IsYANGGoEnum ensures that Address_Status implements the yang.GoEnum
// interface. This ensures that Address_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_Address_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Address_Status.
func (E_Address_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Address_Status.
func (e E_Address_Status) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Address_Status")
}

const (
	// Address_Status_UNSET corresponds to the value UNSET of Address_Status
	Address_Status_UNSET E_Address_Status = 0
	// Address_Status_PREFERRED corresponds to the value PREFERRED of Address_Status
	Address_Status_PREFERRED E_Address_Status = 1
	// Address_Status_DEPRECATED corresponds to the value DEPRECATED of Address_Status
	Address_Status_DEPRECATED E_Address_Status = 2
	// Address_Status_INVALID corresponds to the value INVALID of Address_Status
	Address_Status_INVALID E_Address_Status = 3
	// Address_Status_INACCESSIBLE corresponds to the value INACCESSIBLE of Address_Status
	Address_Status_INACCESSIBLE E_Address_Status = 4
	// Address_Status_UNKNOWN corresponds to the value UNKNOWN of Address_Status
	Address_Status_UNKNOWN E_Address_Status = 5
	// Address_Status_TENTATIVE corresponds to the value TENTATIVE of Address_Status
	Address_Status_TENTATIVE E_Address_Status = 6
	// Address_Status_DUPLICATE corresponds to the value DUPLICATE of Address_Status
	Address_Status_DUPLICATE E_Address_Status = 7
	// Address_Status_OPTIMISTIC corresponds to the value OPTIMISTIC of Address_Status
	Address_Status_OPTIMISTIC E_Address_Status = 8
)

// E_AdjacencySid_Flags is a derived int64 type which is used to represent
// the enumerated node AdjacencySid_Flags. An additional value named
// AdjacencySid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AdjacencySid_Flags int64

// IsYANGGoEnum ensures that AdjacencySid_Flags implements the yang.GoEnum
// interface. This ensures that AdjacencySid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_AdjacencySid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AdjacencySid_Flags.
func (E_AdjacencySid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AdjacencySid_Flags.
func (e E_AdjacencySid_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AdjacencySid_Flags")
}

const (
	// AdjacencySid_Flags_UNSET corresponds to the value UNSET of AdjacencySid_Flags
	AdjacencySid_Flags_UNSET E_AdjacencySid_Flags = 0
	// AdjacencySid_Flags_ADDRESS_FAMILY corresponds to the value ADDRESS_FAMILY of AdjacencySid_Flags
	AdjacencySid_Flags_ADDRESS_FAMILY E_AdjacencySid_Flags = 1
	// AdjacencySid_Flags_BACKUP corresponds to the value BACKUP of AdjacencySid_Flags
	AdjacencySid_Flags_BACKUP E_AdjacencySid_Flags = 2
	// AdjacencySid_Flags_VALUE corresponds to the value VALUE of AdjacencySid_Flags
	AdjacencySid_Flags_VALUE E_AdjacencySid_Flags = 3
	// AdjacencySid_Flags_LOCAL corresponds to the value LOCAL of AdjacencySid_Flags
	AdjacencySid_Flags_LOCAL E_AdjacencySid_Flags = 4
	// AdjacencySid_Flags_SET corresponds to the value SET of AdjacencySid_Flags
	AdjacencySid_Flags_SET E_AdjacencySid_Flags = 5
)

// E_AdjacencySid_SidId_Enum is a derived int64 type which is used to represent
// the enumerated node AdjacencySid_SidId_Enum. An additional value named
// AdjacencySid_SidId_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AdjacencySid_SidId_Enum int64

// IsYANGGoEnum ensures that AdjacencySid_SidId_Enum implements the yang.GoEnum
// interface. This ensures that AdjacencySid_SidId_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_AdjacencySid_SidId_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AdjacencySid_SidId_Enum.
func (E_AdjacencySid_SidId_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AdjacencySid_SidId_Enum.
func (e E_AdjacencySid_SidId_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AdjacencySid_SidId_Enum")
}

const (
	// AdjacencySid_SidId_Enum_UNSET corresponds to the value UNSET of AdjacencySid_SidId_Enum
	AdjacencySid_SidId_Enum_UNSET E_AdjacencySid_SidId_Enum = 0
	// AdjacencySid_SidId_Enum_DYNAMIC corresponds to the value DYNAMIC of AdjacencySid_SidId_Enum
	AdjacencySid_SidId_Enum_DYNAMIC E_AdjacencySid_SidId_Enum = 1
)

// E_Adjacency_Nlpid is a derived int64 type which is used to represent
// the enumerated node Adjacency_Nlpid. An additional value named
// Adjacency_Nlpid_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Adjacency_Nlpid int64

// IsYANGGoEnum ensures that Adjacency_Nlpid implements the yang.GoEnum
// interface. This ensures that Adjacency_Nlpid can be identified as a
// mapped type for a YANG enumeration.
func (E_Adjacency_Nlpid) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Adjacency_Nlpid.
func (E_Adjacency_Nlpid) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Adjacency_Nlpid.
func (e E_Adjacency_Nlpid) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Adjacency_Nlpid")
}

const (
	// Adjacency_Nlpid_UNSET corresponds to the value UNSET of Adjacency_Nlpid
	Adjacency_Nlpid_UNSET E_Adjacency_Nlpid = 0
	// Adjacency_Nlpid_IPV4 corresponds to the value IPV4 of Adjacency_Nlpid
	Adjacency_Nlpid_IPV4 E_Adjacency_Nlpid = 1
	// Adjacency_Nlpid_IPV6 corresponds to the value IPV6 of Adjacency_Nlpid
	Adjacency_Nlpid_IPV6 E_Adjacency_Nlpid = 2
)

// E_AftTypes_EncapsulationHeaderType is a derived int64 type which is used to represent
// the enumerated node AftTypes_EncapsulationHeaderType. An additional value named
// AftTypes_EncapsulationHeaderType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AftTypes_EncapsulationHeaderType int64

// IsYANGGoEnum ensures that AftTypes_EncapsulationHeaderType implements the yang.GoEnum
// interface. This ensures that AftTypes_EncapsulationHeaderType can be identified as a
// mapped type for a YANG enumeration.
func (E_AftTypes_EncapsulationHeaderType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AftTypes_EncapsulationHeaderType.
func (E_AftTypes_EncapsulationHeaderType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AftTypes_EncapsulationHeaderType.
func (e E_AftTypes_EncapsulationHeaderType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AftTypes_EncapsulationHeaderType")
}

const (
	// AftTypes_EncapsulationHeaderType_UNSET corresponds to the value UNSET of AftTypes_EncapsulationHeaderType
	AftTypes_EncapsulationHeaderType_UNSET E_AftTypes_EncapsulationHeaderType = 0
	// AftTypes_EncapsulationHeaderType_GRE corresponds to the value GRE of AftTypes_EncapsulationHeaderType
	AftTypes_EncapsulationHeaderType_GRE E_AftTypes_EncapsulationHeaderType = 1
	// AftTypes_EncapsulationHeaderType_IPV4 corresponds to the value IPV4 of AftTypes_EncapsulationHeaderType
	AftTypes_EncapsulationHeaderType_IPV4 E_AftTypes_EncapsulationHeaderType = 2
	// AftTypes_EncapsulationHeaderType_IPV6 corresponds to the value IPV6 of AftTypes_EncapsulationHeaderType
	AftTypes_EncapsulationHeaderType_IPV6 E_AftTypes_EncapsulationHeaderType = 3
	// AftTypes_EncapsulationHeaderType_MPLS corresponds to the value MPLS of AftTypes_EncapsulationHeaderType
	AftTypes_EncapsulationHeaderType_MPLS E_AftTypes_EncapsulationHeaderType = 4
	// AftTypes_EncapsulationHeaderType_VXLAN corresponds to the value VXLAN of AftTypes_EncapsulationHeaderType
	AftTypes_EncapsulationHeaderType_VXLAN E_AftTypes_EncapsulationHeaderType = 5
)

// E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY is a derived int64 type which is used to represent
// the enumerated node AlarmTypes_OPENCONFIG_ALARM_SEVERITY. An additional value named
// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY int64

// IsYANGGoEnum ensures that AlarmTypes_OPENCONFIG_ALARM_SEVERITY implements the yang.GoEnum
// interface. This ensures that AlarmTypes_OPENCONFIG_ALARM_SEVERITY can be identified as a
// mapped type for a YANG enumeration.
func (E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AlarmTypes_OPENCONFIG_ALARM_SEVERITY.
func (E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY.
func (e E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY")
}

const (
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNSET corresponds to the value UNSET of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNSET E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 0
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_CRITICAL corresponds to the value CRITICAL of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_CRITICAL E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 1
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_MAJOR corresponds to the value MAJOR of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_MAJOR E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 2
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_MINOR corresponds to the value MINOR of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_MINOR E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 3
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNKNOWN corresponds to the value UNKNOWN of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNKNOWN E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 4
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_WARNING corresponds to the value WARNING of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_WARNING E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 5
)

// E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID is a derived int64 type which is used to represent
// the enumerated node AlarmTypes_OPENCONFIG_ALARM_TYPE_ID. An additional value named
// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID int64

// IsYANGGoEnum ensures that AlarmTypes_OPENCONFIG_ALARM_TYPE_ID implements the yang.GoEnum
// interface. This ensures that AlarmTypes_OPENCONFIG_ALARM_TYPE_ID can be identified as a
// mapped type for a YANG enumeration.
func (E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AlarmTypes_OPENCONFIG_ALARM_TYPE_ID.
func (E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID.
func (e E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID")
}

const (
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_UNSET corresponds to the value UNSET of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_UNSET E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 0
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_AIS corresponds to the value AIS of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_AIS E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 1
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_EQPT corresponds to the value EQPT of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_EQPT E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 2
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_LOS corresponds to the value LOS of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_LOS E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 3
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_OTS corresponds to the value OTS of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_OTS E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 4
)

// E_AsExternalLsa_MetricType is a derived int64 type which is used to represent
// the enumerated node AsExternalLsa_MetricType. An additional value named
// AsExternalLsa_MetricType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AsExternalLsa_MetricType int64

// IsYANGGoEnum ensures that AsExternalLsa_MetricType implements the yang.GoEnum
// interface. This ensures that AsExternalLsa_MetricType can be identified as a
// mapped type for a YANG enumeration.
func (E_AsExternalLsa_MetricType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AsExternalLsa_MetricType.
func (E_AsExternalLsa_MetricType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AsExternalLsa_MetricType.
func (e E_AsExternalLsa_MetricType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AsExternalLsa_MetricType")
}

const (
	// AsExternalLsa_MetricType_UNSET corresponds to the value UNSET of AsExternalLsa_MetricType
	AsExternalLsa_MetricType_UNSET E_AsExternalLsa_MetricType = 0
	// AsExternalLsa_MetricType_TYPE_1 corresponds to the value TYPE_1 of AsExternalLsa_MetricType
	AsExternalLsa_MetricType_TYPE_1 E_AsExternalLsa_MetricType = 1
	// AsExternalLsa_MetricType_TYPE_2 corresponds to the value TYPE_2 of AsExternalLsa_MetricType
	AsExternalLsa_MetricType_TYPE_2 E_AsExternalLsa_MetricType = 2
)

// E_Authentication_CryptoType is a derived int64 type which is used to represent
// the enumerated node Authentication_CryptoType. An additional value named
// Authentication_CryptoType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Authentication_CryptoType int64

// IsYANGGoEnum ensures that Authentication_CryptoType implements the yang.GoEnum
// interface. This ensures that Authentication_CryptoType can be identified as a
// mapped type for a YANG enumeration.
func (E_Authentication_CryptoType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Authentication_CryptoType.
func (E_Authentication_CryptoType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Authentication_CryptoType.
func (e E_Authentication_CryptoType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Authentication_CryptoType")
}

const (
	// Authentication_CryptoType_UNSET corresponds to the value UNSET of Authentication_CryptoType
	Authentication_CryptoType_UNSET E_Authentication_CryptoType = 0
	// Authentication_CryptoType_HMAC_MD5 corresponds to the value HMAC_MD5 of Authentication_CryptoType
	Authentication_CryptoType_HMAC_MD5 E_Authentication_CryptoType = 1
	// Authentication_CryptoType_CLEARTEXT corresponds to the value CLEARTEXT of Authentication_CryptoType
	Authentication_CryptoType_CLEARTEXT E_Authentication_CryptoType = 2
)

// E_BandwidthReservation_Priority_Enum is a derived int64 type which is used to represent
// the enumerated node BandwidthReservation_Priority_Enum. An additional value named
// BandwidthReservation_Priority_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BandwidthReservation_Priority_Enum int64

// IsYANGGoEnum ensures that BandwidthReservation_Priority_Enum implements the yang.GoEnum
// interface. This ensures that BandwidthReservation_Priority_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_BandwidthReservation_Priority_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BandwidthReservation_Priority_Enum.
func (E_BandwidthReservation_Priority_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_BandwidthReservation_Priority_Enum.
func (e E_BandwidthReservation_Priority_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BandwidthReservation_Priority_Enum")
}

const (
	// BandwidthReservation_Priority_Enum_UNSET corresponds to the value UNSET of BandwidthReservation_Priority_Enum
	BandwidthReservation_Priority_Enum_UNSET E_BandwidthReservation_Priority_Enum = 0
	// BandwidthReservation_Priority_Enum_ALL corresponds to the value ALL of BandwidthReservation_Priority_Enum
	BandwidthReservation_Priority_Enum_ALL E_BandwidthReservation_Priority_Enum = 1
)

// E_BgpConditions_RouteType is a derived int64 type which is used to represent
// the enumerated node BgpConditions_RouteType. An additional value named
// BgpConditions_RouteType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpConditions_RouteType int64

// IsYANGGoEnum ensures that BgpConditions_RouteType implements the yang.GoEnum
// interface. This ensures that BgpConditions_RouteType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpConditions_RouteType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpConditions_RouteType.
func (E_BgpConditions_RouteType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpConditions_RouteType.
func (e E_BgpConditions_RouteType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpConditions_RouteType")
}

const (
	// BgpConditions_RouteType_UNSET corresponds to the value UNSET of BgpConditions_RouteType
	BgpConditions_RouteType_UNSET E_BgpConditions_RouteType = 0
	// BgpConditions_RouteType_INTERNAL corresponds to the value INTERNAL of BgpConditions_RouteType
	BgpConditions_RouteType_INTERNAL E_BgpConditions_RouteType = 1
	// BgpConditions_RouteType_EXTERNAL corresponds to the value EXTERNAL of BgpConditions_RouteType
	BgpConditions_RouteType_EXTERNAL E_BgpConditions_RouteType = 2
)

// E_BgpPolicy_BgpNextHopType_Enum is a derived int64 type which is used to represent
// the enumerated node BgpPolicy_BgpNextHopType_Enum. An additional value named
// BgpPolicy_BgpNextHopType_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpPolicy_BgpNextHopType_Enum int64

// IsYANGGoEnum ensures that BgpPolicy_BgpNextHopType_Enum implements the yang.GoEnum
// interface. This ensures that BgpPolicy_BgpNextHopType_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpPolicy_BgpNextHopType_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpPolicy_BgpNextHopType_Enum.
func (E_BgpPolicy_BgpNextHopType_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_BgpPolicy_BgpNextHopType_Enum.
func (e E_BgpPolicy_BgpNextHopType_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpPolicy_BgpNextHopType_Enum")
}

const (
	// BgpPolicy_BgpNextHopType_Enum_UNSET corresponds to the value UNSET of BgpPolicy_BgpNextHopType_Enum
	BgpPolicy_BgpNextHopType_Enum_UNSET E_BgpPolicy_BgpNextHopType_Enum = 0
	// BgpPolicy_BgpNextHopType_Enum_SELF corresponds to the value SELF of BgpPolicy_BgpNextHopType_Enum
	BgpPolicy_BgpNextHopType_Enum_SELF E_BgpPolicy_BgpNextHopType_Enum = 1
)

// E_BgpPolicy_BgpSetCommunityOptionType is a derived int64 type which is used to represent
// the enumerated node BgpPolicy_BgpSetCommunityOptionType. An additional value named
// BgpPolicy_BgpSetCommunityOptionType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpPolicy_BgpSetCommunityOptionType int64

// IsYANGGoEnum ensures that BgpPolicy_BgpSetCommunityOptionType implements the yang.GoEnum
// interface. This ensures that BgpPolicy_BgpSetCommunityOptionType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpPolicy_BgpSetCommunityOptionType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpPolicy_BgpSetCommunityOptionType.
func (E_BgpPolicy_BgpSetCommunityOptionType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_BgpPolicy_BgpSetCommunityOptionType.
func (e E_BgpPolicy_BgpSetCommunityOptionType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpPolicy_BgpSetCommunityOptionType")
}

const (
	// BgpPolicy_BgpSetCommunityOptionType_UNSET corresponds to the value UNSET of BgpPolicy_BgpSetCommunityOptionType
	BgpPolicy_BgpSetCommunityOptionType_UNSET E_BgpPolicy_BgpSetCommunityOptionType = 0
	// BgpPolicy_BgpSetCommunityOptionType_ADD corresponds to the value ADD of BgpPolicy_BgpSetCommunityOptionType
	BgpPolicy_BgpSetCommunityOptionType_ADD E_BgpPolicy_BgpSetCommunityOptionType = 1
	// BgpPolicy_BgpSetCommunityOptionType_REMOVE corresponds to the value REMOVE of BgpPolicy_BgpSetCommunityOptionType
	BgpPolicy_BgpSetCommunityOptionType_REMOVE E_BgpPolicy_BgpSetCommunityOptionType = 2
	// BgpPolicy_BgpSetCommunityOptionType_REPLACE corresponds to the value REPLACE of BgpPolicy_BgpSetCommunityOptionType
	BgpPolicy_BgpSetCommunityOptionType_REPLACE E_BgpPolicy_BgpSetCommunityOptionType = 3
)

// E_BgpPolicy_BgpSetMedType_Enum is a derived int64 type which is used to represent
// the enumerated node BgpPolicy_BgpSetMedType_Enum. An additional value named
// BgpPolicy_BgpSetMedType_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpPolicy_BgpSetMedType_Enum int64

// IsYANGGoEnum ensures that BgpPolicy_BgpSetMedType_Enum implements the yang.GoEnum
// interface. This ensures that BgpPolicy_BgpSetMedType_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpPolicy_BgpSetMedType_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpPolicy_BgpSetMedType_Enum.
func (E_BgpPolicy_BgpSetMedType_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpPolicy_BgpSetMedType_Enum.
func (e E_BgpPolicy_BgpSetMedType_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpPolicy_BgpSetMedType_Enum")
}

const (
	// BgpPolicy_BgpSetMedType_Enum_UNSET corresponds to the value UNSET of BgpPolicy_BgpSetMedType_Enum
	BgpPolicy_BgpSetMedType_Enum_UNSET E_BgpPolicy_BgpSetMedType_Enum = 0
	// BgpPolicy_BgpSetMedType_Enum_IGP corresponds to the value IGP of BgpPolicy_BgpSetMedType_Enum
	BgpPolicy_BgpSetMedType_Enum_IGP E_BgpPolicy_BgpSetMedType_Enum = 1
)

// E_BgpTypes_AFI_SAFI_TYPE is a derived int64 type which is used to represent
// the enumerated node BgpTypes_AFI_SAFI_TYPE. An additional value named
// BgpTypes_AFI_SAFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_AFI_SAFI_TYPE int64

// IsYANGGoEnum ensures that BgpTypes_AFI_SAFI_TYPE implements the yang.GoEnum
// interface. This ensures that BgpTypes_AFI_SAFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_AFI_SAFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_AFI_SAFI_TYPE.
func (E_BgpTypes_AFI_SAFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_AFI_SAFI_TYPE.
func (e E_BgpTypes_AFI_SAFI_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_AFI_SAFI_TYPE")
}

const (
	// BgpTypes_AFI_SAFI_TYPE_UNSET corresponds to the value UNSET of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_UNSET E_BgpTypes_AFI_SAFI_TYPE = 0
	// BgpTypes_AFI_SAFI_TYPE_IPV4_FLOWSPEC corresponds to the value IPV4_FLOWSPEC of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV4_FLOWSPEC E_BgpTypes_AFI_SAFI_TYPE = 1
	// BgpTypes_AFI_SAFI_TYPE_IPV4_LABELED_UNICAST corresponds to the value IPV4_LABELED_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV4_LABELED_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 2
	// BgpTypes_AFI_SAFI_TYPE_IPV4_UNICAST corresponds to the value IPV4_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV4_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 3
	// BgpTypes_AFI_SAFI_TYPE_IPV6_LABELED_UNICAST corresponds to the value IPV6_LABELED_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV6_LABELED_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 4
	// BgpTypes_AFI_SAFI_TYPE_IPV6_UNICAST corresponds to the value IPV6_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV6_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 5
	// BgpTypes_AFI_SAFI_TYPE_L2VPN_EVPN corresponds to the value L2VPN_EVPN of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L2VPN_EVPN E_BgpTypes_AFI_SAFI_TYPE = 6
	// BgpTypes_AFI_SAFI_TYPE_L2VPN_VPLS corresponds to the value L2VPN_VPLS of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L2VPN_VPLS E_BgpTypes_AFI_SAFI_TYPE = 7
	// BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_MULTICAST corresponds to the value L3VPN_IPV4_MULTICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_MULTICAST E_BgpTypes_AFI_SAFI_TYPE = 8
	// BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_UNICAST corresponds to the value L3VPN_IPV4_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 9
	// BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_MULTICAST corresponds to the value L3VPN_IPV6_MULTICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_MULTICAST E_BgpTypes_AFI_SAFI_TYPE = 10
	// BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_UNICAST corresponds to the value L3VPN_IPV6_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 11
	// BgpTypes_AFI_SAFI_TYPE_LINKSTATE corresponds to the value LINKSTATE of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_LINKSTATE E_BgpTypes_AFI_SAFI_TYPE = 12
	// BgpTypes_AFI_SAFI_TYPE_LINKSTATE_SPF corresponds to the value LINKSTATE_SPF of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_LINKSTATE_SPF E_BgpTypes_AFI_SAFI_TYPE = 13
	// BgpTypes_AFI_SAFI_TYPE_LINKSTATE_VPN corresponds to the value LINKSTATE_VPN of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_LINKSTATE_VPN E_BgpTypes_AFI_SAFI_TYPE = 14
	// BgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV4 corresponds to the value SRTE_POLICY_IPV4 of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV4 E_BgpTypes_AFI_SAFI_TYPE = 15
	// BgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV6 corresponds to the value SRTE_POLICY_IPV6 of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV6 E_BgpTypes_AFI_SAFI_TYPE = 16
	// BgpTypes_AFI_SAFI_TYPE_VPNV4_FLOWSPEC corresponds to the value VPNV4_FLOWSPEC of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_VPNV4_FLOWSPEC E_BgpTypes_AFI_SAFI_TYPE = 17
)

// E_BgpTypes_AsPathSegmentType is a derived int64 type which is used to represent
// the enumerated node BgpTypes_AsPathSegmentType. An additional value named
// BgpTypes_AsPathSegmentType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_AsPathSegmentType int64

// IsYANGGoEnum ensures that BgpTypes_AsPathSegmentType implements the yang.GoEnum
// interface. This ensures that BgpTypes_AsPathSegmentType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_AsPathSegmentType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_AsPathSegmentType.
func (E_BgpTypes_AsPathSegmentType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_AsPathSegmentType.
func (e E_BgpTypes_AsPathSegmentType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_AsPathSegmentType")
}

const (
	// BgpTypes_AsPathSegmentType_UNSET corresponds to the value UNSET of BgpTypes_AsPathSegmentType
	BgpTypes_AsPathSegmentType_UNSET E_BgpTypes_AsPathSegmentType = 0
	// BgpTypes_AsPathSegmentType_AS_SEQ corresponds to the value AS_SEQ of BgpTypes_AsPathSegmentType
	BgpTypes_AsPathSegmentType_AS_SEQ E_BgpTypes_AsPathSegmentType = 1
	// BgpTypes_AsPathSegmentType_AS_SET corresponds to the value AS_SET of BgpTypes_AsPathSegmentType
	BgpTypes_AsPathSegmentType_AS_SET E_BgpTypes_AsPathSegmentType = 2
	// BgpTypes_AsPathSegmentType_AS_CONFED_SEQUENCE corresponds to the value AS_CONFED_SEQUENCE of BgpTypes_AsPathSegmentType
	BgpTypes_AsPathSegmentType_AS_CONFED_SEQUENCE E_BgpTypes_AsPathSegmentType = 3
	// BgpTypes_AsPathSegmentType_AS_CONFED_SET corresponds to the value AS_CONFED_SET of BgpTypes_AsPathSegmentType
	BgpTypes_AsPathSegmentType_AS_CONFED_SET E_BgpTypes_AsPathSegmentType = 4
)

// E_BgpTypes_BGP_CAPABILITY is a derived int64 type which is used to represent
// the enumerated node BgpTypes_BGP_CAPABILITY. An additional value named
// BgpTypes_BGP_CAPABILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_BGP_CAPABILITY int64

// IsYANGGoEnum ensures that BgpTypes_BGP_CAPABILITY implements the yang.GoEnum
// interface. This ensures that BgpTypes_BGP_CAPABILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_BGP_CAPABILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_BGP_CAPABILITY.
func (E_BgpTypes_BGP_CAPABILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_BGP_CAPABILITY.
func (e E_BgpTypes_BGP_CAPABILITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_BGP_CAPABILITY")
}

const (
	// BgpTypes_BGP_CAPABILITY_UNSET corresponds to the value UNSET of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_UNSET E_BgpTypes_BGP_CAPABILITY = 0
	// BgpTypes_BGP_CAPABILITY_ADD_PATHS corresponds to the value ADD_PATHS of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_ADD_PATHS E_BgpTypes_BGP_CAPABILITY = 1
	// BgpTypes_BGP_CAPABILITY_ASN32 corresponds to the value ASN32 of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_ASN32 E_BgpTypes_BGP_CAPABILITY = 2
	// BgpTypes_BGP_CAPABILITY_EXTENDED_NEXTHOP_ENCODING corresponds to the value EXTENDED_NEXTHOP_ENCODING of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_EXTENDED_NEXTHOP_ENCODING E_BgpTypes_BGP_CAPABILITY = 3
	// BgpTypes_BGP_CAPABILITY_GRACEFUL_RESTART corresponds to the value GRACEFUL_RESTART of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_GRACEFUL_RESTART E_BgpTypes_BGP_CAPABILITY = 4
	// BgpTypes_BGP_CAPABILITY_MPBGP corresponds to the value MPBGP of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_MPBGP E_BgpTypes_BGP_CAPABILITY = 5
	// BgpTypes_BGP_CAPABILITY_ROUTE_REFRESH corresponds to the value ROUTE_REFRESH of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_ROUTE_REFRESH E_BgpTypes_BGP_CAPABILITY = 6
)

// E_BgpTypes_BGP_ERROR_CODE is a derived int64 type which is used to represent
// the enumerated node BgpTypes_BGP_ERROR_CODE. An additional value named
// BgpTypes_BGP_ERROR_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_BGP_ERROR_CODE int64

// IsYANGGoEnum ensures that BgpTypes_BGP_ERROR_CODE implements the yang.GoEnum
// interface. This ensures that BgpTypes_BGP_ERROR_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_BGP_ERROR_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_BGP_ERROR_CODE.
func (E_BgpTypes_BGP_ERROR_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_BGP_ERROR_CODE.
func (e E_BgpTypes_BGP_ERROR_CODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_BGP_ERROR_CODE")
}

const (
	// BgpTypes_BGP_ERROR_CODE_UNSET corresponds to the value UNSET of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_UNSET E_BgpTypes_BGP_ERROR_CODE = 0
	// BgpTypes_BGP_ERROR_CODE_CEASE corresponds to the value CEASE of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_CEASE E_BgpTypes_BGP_ERROR_CODE = 1
	// BgpTypes_BGP_ERROR_CODE_FINITE_STATE_MACHINE_ERROR corresponds to the value FINITE_STATE_MACHINE_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_FINITE_STATE_MACHINE_ERROR E_BgpTypes_BGP_ERROR_CODE = 2
	// BgpTypes_BGP_ERROR_CODE_HOLD_TIMER_EXPIRED corresponds to the value HOLD_TIMER_EXPIRED of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_HOLD_TIMER_EXPIRED E_BgpTypes_BGP_ERROR_CODE = 3
	// BgpTypes_BGP_ERROR_CODE_MESSAGE_HEADER_ERROR corresponds to the value MESSAGE_HEADER_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_MESSAGE_HEADER_ERROR E_BgpTypes_BGP_ERROR_CODE = 4
	// BgpTypes_BGP_ERROR_CODE_OPEN_MESSAGE_ERROR corresponds to the value OPEN_MESSAGE_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_OPEN_MESSAGE_ERROR E_BgpTypes_BGP_ERROR_CODE = 5
	// BgpTypes_BGP_ERROR_CODE_ROUTE_REFRESH_MESSAGE_ERROR corresponds to the value ROUTE_REFRESH_MESSAGE_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_ROUTE_REFRESH_MESSAGE_ERROR E_BgpTypes_BGP_ERROR_CODE = 6
	// BgpTypes_BGP_ERROR_CODE_UPDATE_MESSAGE_ERROR corresponds to the value UPDATE_MESSAGE_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_UPDATE_MESSAGE_ERROR E_BgpTypes_BGP_ERROR_CODE = 7
)

// E_BgpTypes_BGP_ERROR_SUBCODE is a derived int64 type which is used to represent
// the enumerated node BgpTypes_BGP_ERROR_SUBCODE. An additional value named
// BgpTypes_BGP_ERROR_SUBCODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_BGP_ERROR_SUBCODE int64

// IsYANGGoEnum ensures that BgpTypes_BGP_ERROR_SUBCODE implements the yang.GoEnum
// interface. This ensures that BgpTypes_BGP_ERROR_SUBCODE can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_BGP_ERROR_SUBCODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_BGP_ERROR_SUBCODE.
func (E_BgpTypes_BGP_ERROR_SUBCODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_BGP_ERROR_SUBCODE.
func (e E_BgpTypes_BGP_ERROR_SUBCODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_BGP_ERROR_SUBCODE")
}

const (
	// BgpTypes_BGP_ERROR_SUBCODE_UNSET corresponds to the value UNSET of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSET E_BgpTypes_BGP_ERROR_SUBCODE = 0
	// BgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_RESET corresponds to the value ADMINISTRATIVE_RESET of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_RESET E_BgpTypes_BGP_ERROR_SUBCODE = 1
	// BgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_SHUTDOWN corresponds to the value ADMINISTRATIVE_SHUTDOWN of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_SHUTDOWN E_BgpTypes_BGP_ERROR_SUBCODE = 2
	// BgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_FLAGS_ERROR corresponds to the value ATTRIBUTE_FLAGS_ERROR of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_FLAGS_ERROR E_BgpTypes_BGP_ERROR_SUBCODE = 3
	// BgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_LENGTH_ERROR corresponds to the value ATTRIBUTE_LENGTH_ERROR of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_LENGTH_ERROR E_BgpTypes_BGP_ERROR_SUBCODE = 4
	// BgpTypes_BGP_ERROR_SUBCODE_BAD_BGP_IDENTIFIER corresponds to the value BAD_BGP_IDENTIFIER of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_BAD_BGP_IDENTIFIER E_BgpTypes_BGP_ERROR_SUBCODE = 5
	// BgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_LENGTH corresponds to the value BAD_MESSAGE_LENGTH of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_LENGTH E_BgpTypes_BGP_ERROR_SUBCODE = 6
	// BgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_TYPE corresponds to the value BAD_MESSAGE_TYPE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_TYPE E_BgpTypes_BGP_ERROR_SUBCODE = 7
	// BgpTypes_BGP_ERROR_SUBCODE_BAD_PEER_AS corresponds to the value BAD_PEER_AS of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_BAD_PEER_AS E_BgpTypes_BGP_ERROR_SUBCODE = 8
	// BgpTypes_BGP_ERROR_SUBCODE_CEASE_SUBCODE corresponds to the value CEASE_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_CEASE_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 9
	// BgpTypes_BGP_ERROR_SUBCODE_CONNECTION_NOT_SYNCHRONIZED corresponds to the value CONNECTION_NOT_SYNCHRONIZED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_CONNECTION_NOT_SYNCHRONIZED E_BgpTypes_BGP_ERROR_SUBCODE = 10
	// BgpTypes_BGP_ERROR_SUBCODE_CONNECTION_REJECTED corresponds to the value CONNECTION_REJECTED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_CONNECTION_REJECTED E_BgpTypes_BGP_ERROR_SUBCODE = 11
	// BgpTypes_BGP_ERROR_SUBCODE_CONN_COLLISION_RESOLUTION corresponds to the value CONN_COLLISION_RESOLUTION of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_CONN_COLLISION_RESOLUTION E_BgpTypes_BGP_ERROR_SUBCODE = 12
	// BgpTypes_BGP_ERROR_SUBCODE_FINITE_STATE_MACHINE_SUBCODE corresponds to the value FINITE_STATE_MACHINE_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_FINITE_STATE_MACHINE_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 13
	// BgpTypes_BGP_ERROR_SUBCODE_INVALID_MESSAGE_LENGTH corresponds to the value INVALID_MESSAGE_LENGTH of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_INVALID_MESSAGE_LENGTH E_BgpTypes_BGP_ERROR_SUBCODE = 14
	// BgpTypes_BGP_ERROR_SUBCODE_INVALID_NETWORK_FIELD corresponds to the value INVALID_NETWORK_FIELD of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_INVALID_NETWORK_FIELD E_BgpTypes_BGP_ERROR_SUBCODE = 15
	// BgpTypes_BGP_ERROR_SUBCODE_INVALID_NEXT_HOP_ATTRIBUTE corresponds to the value INVALID_NEXT_HOP_ATTRIBUTE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_INVALID_NEXT_HOP_ATTRIBUTE E_BgpTypes_BGP_ERROR_SUBCODE = 16
	// BgpTypes_BGP_ERROR_SUBCODE_INVALID_ORIGIN_ATTRIBUTE corresponds to the value INVALID_ORIGIN_ATTRIBUTE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_INVALID_ORIGIN_ATTRIBUTE E_BgpTypes_BGP_ERROR_SUBCODE = 17
	// BgpTypes_BGP_ERROR_SUBCODE_MALFORMED_AS_PATH corresponds to the value MALFORMED_AS_PATH of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MALFORMED_AS_PATH E_BgpTypes_BGP_ERROR_SUBCODE = 18
	// BgpTypes_BGP_ERROR_SUBCODE_MALFORMED_ATTRIBUTE_LIST corresponds to the value MALFORMED_ATTRIBUTE_LIST of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MALFORMED_ATTRIBUTE_LIST E_BgpTypes_BGP_ERROR_SUBCODE = 19
	// BgpTypes_BGP_ERROR_SUBCODE_MAX_NUM_PREFIXES_REACHED corresponds to the value MAX_NUM_PREFIXES_REACHED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MAX_NUM_PREFIXES_REACHED E_BgpTypes_BGP_ERROR_SUBCODE = 20
	// BgpTypes_BGP_ERROR_SUBCODE_MESSAGE_HEADER_SUBCODE corresponds to the value MESSAGE_HEADER_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MESSAGE_HEADER_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 21
	// BgpTypes_BGP_ERROR_SUBCODE_MISSING_WELL_KNOWN_ATTRIBUTE corresponds to the value MISSING_WELL_KNOWN_ATTRIBUTE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MISSING_WELL_KNOWN_ATTRIBUTE E_BgpTypes_BGP_ERROR_SUBCODE = 22
	// BgpTypes_BGP_ERROR_SUBCODE_OPEN_MESSAGE_SUBCODE corresponds to the value OPEN_MESSAGE_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_OPEN_MESSAGE_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 23
	// BgpTypes_BGP_ERROR_SUBCODE_OPTIONAL_ATTRIBUTE_ERROR corresponds to the value OPTIONAL_ATTRIBUTE_ERROR of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_OPTIONAL_ATTRIBUTE_ERROR E_BgpTypes_BGP_ERROR_SUBCODE = 24
	// BgpTypes_BGP_ERROR_SUBCODE_OTHER_CONFIG_CHANGE corresponds to the value OTHER_CONFIG_CHANGE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_OTHER_CONFIG_CHANGE E_BgpTypes_BGP_ERROR_SUBCODE = 25
	// BgpTypes_BGP_ERROR_SUBCODE_OUT_OF_RESOURCES corresponds to the value OUT_OF_RESOURCES of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_OUT_OF_RESOURCES E_BgpTypes_BGP_ERROR_SUBCODE = 26
	// BgpTypes_BGP_ERROR_SUBCODE_PEER_DE_CONFIGURED corresponds to the value PEER_DE_CONFIGURED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_PEER_DE_CONFIGURED E_BgpTypes_BGP_ERROR_SUBCODE = 27
	// BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_ESTABLISHED corresponds to the value RECEIVE_UNEXPECTED_MESSAGE_ESTABLISHED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_ESTABLISHED E_BgpTypes_BGP_ERROR_SUBCODE = 28
	// BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENCONFIRM corresponds to the value RECEIVE_UNEXPECTED_MESSAGE_OPENCONFIRM of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENCONFIRM E_BgpTypes_BGP_ERROR_SUBCODE = 29
	// BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENSENT corresponds to the value RECEIVE_UNEXPECTED_MESSAGE_OPENSENT of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENSENT E_BgpTypes_BGP_ERROR_SUBCODE = 30
	// BgpTypes_BGP_ERROR_SUBCODE_ROUTE_REFRESH_SUBCODE corresponds to the value ROUTE_REFRESH_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ROUTE_REFRESH_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 31
	// BgpTypes_BGP_ERROR_SUBCODE_UNACCEPTABLE_HOLD_TIME corresponds to the value UNACCEPTABLE_HOLD_TIME of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNACCEPTABLE_HOLD_TIME E_BgpTypes_BGP_ERROR_SUBCODE = 32
	// BgpTypes_BGP_ERROR_SUBCODE_UNRECOGNIZED_WELL_KNOWN_ATTRIBUTE corresponds to the value UNRECOGNIZED_WELL_KNOWN_ATTRIBUTE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNRECOGNIZED_WELL_KNOWN_ATTRIBUTE E_BgpTypes_BGP_ERROR_SUBCODE = 33
	// BgpTypes_BGP_ERROR_SUBCODE_UNSPECIFIC corresponds to the value UNSPECIFIC of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSPECIFIC E_BgpTypes_BGP_ERROR_SUBCODE = 34
	// BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_CAPABILITY corresponds to the value UNSUPPORTED_CAPABILITY of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_CAPABILITY E_BgpTypes_BGP_ERROR_SUBCODE = 35
	// BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_OPTIONAL_PARAMETER corresponds to the value UNSUPPORTED_OPTIONAL_PARAMETER of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_OPTIONAL_PARAMETER E_BgpTypes_BGP_ERROR_SUBCODE = 36
	// BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_VERSION_NUMBER corresponds to the value UNSUPPORTED_VERSION_NUMBER of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_VERSION_NUMBER E_BgpTypes_BGP_ERROR_SUBCODE = 37
	// BgpTypes_BGP_ERROR_SUBCODE_UPDATE_MESSAGE_SUBCODE corresponds to the value UPDATE_MESSAGE_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UPDATE_MESSAGE_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 38
)

// E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY is a derived int64 type which is used to represent
// the enumerated node BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY. An additional value named
// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY int64

// IsYANGGoEnum ensures that BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY implements the yang.GoEnum
// interface. This ensures that BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY.
func (E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY.
func (e E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY")
}

const (
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_UNSET corresponds to the value UNSET of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_UNSET E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 0
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NOPEER corresponds to the value NOPEER of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NOPEER E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 1
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_ADVERTISE corresponds to the value NO_ADVERTISE of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_ADVERTISE E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 2
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_EXPORT corresponds to the value NO_EXPORT of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_EXPORT E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 3
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_EXPORT_SUBCONFED corresponds to the value NO_EXPORT_SUBCONFED of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_EXPORT_SUBCONFED E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 4
)

// E_BgpTypes_BgpOriginAttrType is a derived int64 type which is used to represent
// the enumerated node BgpTypes_BgpOriginAttrType. An additional value named
// BgpTypes_BgpOriginAttrType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_BgpOriginAttrType int64

// IsYANGGoEnum ensures that BgpTypes_BgpOriginAttrType implements the yang.GoEnum
// interface. This ensures that BgpTypes_BgpOriginAttrType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_BgpOriginAttrType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_BgpOriginAttrType.
func (E_BgpTypes_BgpOriginAttrType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_BgpOriginAttrType.
func (e E_BgpTypes_BgpOriginAttrType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_BgpOriginAttrType")
}

const (
	// BgpTypes_BgpOriginAttrType_UNSET corresponds to the value UNSET of BgpTypes_BgpOriginAttrType
	BgpTypes_BgpOriginAttrType_UNSET E_BgpTypes_BgpOriginAttrType = 0
	// BgpTypes_BgpOriginAttrType_IGP corresponds to the value IGP of BgpTypes_BgpOriginAttrType
	BgpTypes_BgpOriginAttrType_IGP E_BgpTypes_BgpOriginAttrType = 1
	// BgpTypes_BgpOriginAttrType_EGP corresponds to the value EGP of BgpTypes_BgpOriginAttrType
	BgpTypes_BgpOriginAttrType_EGP E_BgpTypes_BgpOriginAttrType = 2
	// BgpTypes_BgpOriginAttrType_INCOMPLETE corresponds to the value INCOMPLETE of BgpTypes_BgpOriginAttrType
	BgpTypes_BgpOriginAttrType_INCOMPLETE E_BgpTypes_BgpOriginAttrType = 3
)

// E_BgpTypes_CommunityType is a derived int64 type which is used to represent
// the enumerated node BgpTypes_CommunityType. An additional value named
// BgpTypes_CommunityType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_CommunityType int64

// IsYANGGoEnum ensures that BgpTypes_CommunityType implements the yang.GoEnum
// interface. This ensures that BgpTypes_CommunityType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_CommunityType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_CommunityType.
func (E_BgpTypes_CommunityType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_CommunityType.
func (e E_BgpTypes_CommunityType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_CommunityType")
}

const (
	// BgpTypes_CommunityType_UNSET corresponds to the value UNSET of BgpTypes_CommunityType
	BgpTypes_CommunityType_UNSET E_BgpTypes_CommunityType = 0
	// BgpTypes_CommunityType_STANDARD corresponds to the value STANDARD of BgpTypes_CommunityType
	BgpTypes_CommunityType_STANDARD E_BgpTypes_CommunityType = 1
	// BgpTypes_CommunityType_EXTENDED corresponds to the value EXTENDED of BgpTypes_CommunityType
	BgpTypes_CommunityType_EXTENDED E_BgpTypes_CommunityType = 2
	// BgpTypes_CommunityType_BOTH corresponds to the value BOTH of BgpTypes_CommunityType
	BgpTypes_CommunityType_BOTH E_BgpTypes_CommunityType = 3
	// BgpTypes_CommunityType_NONE corresponds to the value NONE of BgpTypes_CommunityType
	BgpTypes_CommunityType_NONE E_BgpTypes_CommunityType = 4
)

// E_BgpTypes_PeerType is a derived int64 type which is used to represent
// the enumerated node BgpTypes_PeerType. An additional value named
// BgpTypes_PeerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_PeerType int64

// IsYANGGoEnum ensures that BgpTypes_PeerType implements the yang.GoEnum
// interface. This ensures that BgpTypes_PeerType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_PeerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_PeerType.
func (E_BgpTypes_PeerType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_PeerType.
func (e E_BgpTypes_PeerType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_PeerType")
}

const (
	// BgpTypes_PeerType_UNSET corresponds to the value UNSET of BgpTypes_PeerType
	BgpTypes_PeerType_UNSET E_BgpTypes_PeerType = 0
	// BgpTypes_PeerType_INTERNAL corresponds to the value INTERNAL of BgpTypes_PeerType
	BgpTypes_PeerType_INTERNAL E_BgpTypes_PeerType = 1
	// BgpTypes_PeerType_EXTERNAL corresponds to the value EXTERNAL of BgpTypes_PeerType
	BgpTypes_PeerType_EXTERNAL E_BgpTypes_PeerType = 2
)

// E_BgpTypes_RemovePrivateAsOption is a derived int64 type which is used to represent
// the enumerated node BgpTypes_RemovePrivateAsOption. An additional value named
// BgpTypes_RemovePrivateAsOption_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_RemovePrivateAsOption int64

// IsYANGGoEnum ensures that BgpTypes_RemovePrivateAsOption implements the yang.GoEnum
// interface. This ensures that BgpTypes_RemovePrivateAsOption can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_RemovePrivateAsOption) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_RemovePrivateAsOption.
func (E_BgpTypes_RemovePrivateAsOption) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_BgpTypes_RemovePrivateAsOption.
func (e E_BgpTypes_RemovePrivateAsOption) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_RemovePrivateAsOption")
}

const (
	// BgpTypes_RemovePrivateAsOption_UNSET corresponds to the value UNSET of BgpTypes_RemovePrivateAsOption
	BgpTypes_RemovePrivateAsOption_UNSET E_BgpTypes_RemovePrivateAsOption = 0
	// BgpTypes_RemovePrivateAsOption_PRIVATE_AS_REMOVE_ALL corresponds to the value PRIVATE_AS_REMOVE_ALL of BgpTypes_RemovePrivateAsOption
	BgpTypes_RemovePrivateAsOption_PRIVATE_AS_REMOVE_ALL E_BgpTypes_RemovePrivateAsOption = 1
	// BgpTypes_RemovePrivateAsOption_PRIVATE_AS_REPLACE_ALL corresponds to the value PRIVATE_AS_REPLACE_ALL of BgpTypes_RemovePrivateAsOption
	BgpTypes_RemovePrivateAsOption_PRIVATE_AS_REPLACE_ALL E_BgpTypes_RemovePrivateAsOption = 2
)

// E_Bgp_Neighbor_SessionState is a derived int64 type which is used to represent
// the enumerated node Bgp_Neighbor_SessionState. An additional value named
// Bgp_Neighbor_SessionState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Bgp_Neighbor_SessionState int64

// IsYANGGoEnum ensures that Bgp_Neighbor_SessionState implements the yang.GoEnum
// interface. This ensures that Bgp_Neighbor_SessionState can be identified as a
// mapped type for a YANG enumeration.
func (E_Bgp_Neighbor_SessionState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Bgp_Neighbor_SessionState.
func (E_Bgp_Neighbor_SessionState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Bgp_Neighbor_SessionState.
func (e E_Bgp_Neighbor_SessionState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Bgp_Neighbor_SessionState")
}

const (
	// Bgp_Neighbor_SessionState_UNSET corresponds to the value UNSET of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_UNSET E_Bgp_Neighbor_SessionState = 0
	// Bgp_Neighbor_SessionState_IDLE corresponds to the value IDLE of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_IDLE E_Bgp_Neighbor_SessionState = 1
	// Bgp_Neighbor_SessionState_CONNECT corresponds to the value CONNECT of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_CONNECT E_Bgp_Neighbor_SessionState = 2
	// Bgp_Neighbor_SessionState_ACTIVE corresponds to the value ACTIVE of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_ACTIVE E_Bgp_Neighbor_SessionState = 3
	// Bgp_Neighbor_SessionState_OPENSENT corresponds to the value OPENSENT of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_OPENSENT E_Bgp_Neighbor_SessionState = 4
	// Bgp_Neighbor_SessionState_OPENCONFIRM corresponds to the value OPENCONFIRM of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_OPENCONFIRM E_Bgp_Neighbor_SessionState = 5
	// Bgp_Neighbor_SessionState_ESTABLISHED corresponds to the value ESTABLISHED of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_ESTABLISHED E_Bgp_Neighbor_SessionState = 6
)

// E_Capability_Flags is a derived int64 type which is used to represent
// the enumerated node Capability_Flags. An additional value named
// Capability_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Capability_Flags int64

// IsYANGGoEnum ensures that Capability_Flags implements the yang.GoEnum
// interface. This ensures that Capability_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Capability_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Capability_Flags.
func (E_Capability_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Capability_Flags.
func (e E_Capability_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Capability_Flags")
}

const (
	// Capability_Flags_UNSET corresponds to the value UNSET of Capability_Flags
	Capability_Flags_UNSET E_Capability_Flags = 0
	// Capability_Flags_FLOOD corresponds to the value FLOOD of Capability_Flags
	Capability_Flags_FLOOD E_Capability_Flags = 1
	// Capability_Flags_DOWN corresponds to the value DOWN of Capability_Flags
	Capability_Flags_DOWN E_Capability_Flags = 2
)

// E_Cpu_Index_Enum is a derived int64 type which is used to represent
// the enumerated node Cpu_Index_Enum. An additional value named
// Cpu_Index_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cpu_Index_Enum int64

// IsYANGGoEnum ensures that Cpu_Index_Enum implements the yang.GoEnum
// interface. This ensures that Cpu_Index_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_Cpu_Index_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cpu_Index_Enum.
func (E_Cpu_Index_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Cpu_Index_Enum.
func (e E_Cpu_Index_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cpu_Index_Enum")
}

const (
	// Cpu_Index_Enum_UNSET corresponds to the value UNSET of Cpu_Index_Enum
	Cpu_Index_Enum_UNSET E_Cpu_Index_Enum = 0
	// Cpu_Index_Enum_ALL corresponds to the value ALL of Cpu_Index_Enum
	Cpu_Index_Enum_ALL E_Cpu_Index_Enum = 1
)

// E_DefaultMetric_Flags is a derived int64 type which is used to represent
// the enumerated node DefaultMetric_Flags. An additional value named
// DefaultMetric_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_DefaultMetric_Flags int64

// IsYANGGoEnum ensures that DefaultMetric_Flags implements the yang.GoEnum
// interface. This ensures that DefaultMetric_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_DefaultMetric_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  DefaultMetric_Flags.
func (E_DefaultMetric_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_DefaultMetric_Flags.
func (e E_DefaultMetric_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_DefaultMetric_Flags")
}

const (
	// DefaultMetric_Flags_UNSET corresponds to the value UNSET of DefaultMetric_Flags
	DefaultMetric_Flags_UNSET E_DefaultMetric_Flags = 0
	// DefaultMetric_Flags_INTERNAL corresponds to the value INTERNAL of DefaultMetric_Flags
	DefaultMetric_Flags_INTERNAL E_DefaultMetric_Flags = 1
)

// E_DfElection_DfElectionMethod is a derived int64 type which is used to represent
// the enumerated node DfElection_DfElectionMethod. An additional value named
// DfElection_DfElectionMethod_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_DfElection_DfElectionMethod int64

// IsYANGGoEnum ensures that DfElection_DfElectionMethod implements the yang.GoEnum
// interface. This ensures that DfElection_DfElectionMethod can be identified as a
// mapped type for a YANG enumeration.
func (E_DfElection_DfElectionMethod) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  DfElection_DfElectionMethod.
func (E_DfElection_DfElectionMethod) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_DfElection_DfElectionMethod.
func (e E_DfElection_DfElectionMethod) String() string {
	return ygot.EnumLogString(e, int64(e), "E_DfElection_DfElectionMethod")
}

const (
	// DfElection_DfElectionMethod_UNSET corresponds to the value UNSET of DfElection_DfElectionMethod
	DfElection_DfElectionMethod_UNSET E_DfElection_DfElectionMethod = 0
	// DfElection_DfElectionMethod_DEFAULT corresponds to the value DEFAULT of DfElection_DfElectionMethod
	DfElection_DfElectionMethod_DEFAULT E_DfElection_DfElectionMethod = 1
	// DfElection_DfElectionMethod_HIGHEST_RANDOM_WEIGHT corresponds to the value HIGHEST_RANDOM_WEIGHT of DfElection_DfElectionMethod
	DfElection_DfElectionMethod_HIGHEST_RANDOM_WEIGHT E_DfElection_DfElectionMethod = 2
	// DfElection_DfElectionMethod_PREFERENCE corresponds to the value PREFERENCE of DfElection_DfElectionMethod
	DfElection_DfElectionMethod_PREFERENCE E_DfElection_DfElectionMethod = 3
)

// E_EndpointPeer_PeerState is a derived int64 type which is used to represent
// the enumerated node EndpointPeer_PeerState. An additional value named
// EndpointPeer_PeerState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointPeer_PeerState int64

// IsYANGGoEnum ensures that EndpointPeer_PeerState implements the yang.GoEnum
// interface. This ensures that EndpointPeer_PeerState can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointPeer_PeerState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointPeer_PeerState.
func (E_EndpointPeer_PeerState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EndpointPeer_PeerState.
func (e E_EndpointPeer_PeerState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointPeer_PeerState")
}

const (
	// EndpointPeer_PeerState_UNSET corresponds to the value UNSET of EndpointPeer_PeerState
	EndpointPeer_PeerState_UNSET E_EndpointPeer_PeerState = 0
	// EndpointPeer_PeerState_UP corresponds to the value UP of EndpointPeer_PeerState
	EndpointPeer_PeerState_UP E_EndpointPeer_PeerState = 1
	// EndpointPeer_PeerState_DOWN corresponds to the value DOWN of EndpointPeer_PeerState
	EndpointPeer_PeerState_DOWN E_EndpointPeer_PeerState = 2
)

// E_EndpointVni_MultidestinationTraffic_Enum is a derived int64 type which is used to represent
// the enumerated node EndpointVni_MultidestinationTraffic_Enum. An additional value named
// EndpointVni_MultidestinationTraffic_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointVni_MultidestinationTraffic_Enum int64

// IsYANGGoEnum ensures that EndpointVni_MultidestinationTraffic_Enum implements the yang.GoEnum
// interface. This ensures that EndpointVni_MultidestinationTraffic_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointVni_MultidestinationTraffic_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointVni_MultidestinationTraffic_Enum.
func (E_EndpointVni_MultidestinationTraffic_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_EndpointVni_MultidestinationTraffic_Enum.
func (e E_EndpointVni_MultidestinationTraffic_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointVni_MultidestinationTraffic_Enum")
}

const (
	// EndpointVni_MultidestinationTraffic_Enum_UNSET corresponds to the value UNSET of EndpointVni_MultidestinationTraffic_Enum
	EndpointVni_MultidestinationTraffic_Enum_UNSET E_EndpointVni_MultidestinationTraffic_Enum = 0
	// EndpointVni_MultidestinationTraffic_Enum_STATIC_INGRESS_REPLICATION corresponds to the value STATIC_INGRESS_REPLICATION of EndpointVni_MultidestinationTraffic_Enum
	EndpointVni_MultidestinationTraffic_Enum_STATIC_INGRESS_REPLICATION E_EndpointVni_MultidestinationTraffic_Enum = 1
	// EndpointVni_MultidestinationTraffic_Enum_BGP_INGRESS_REPLICATION corresponds to the value BGP_INGRESS_REPLICATION of EndpointVni_MultidestinationTraffic_Enum
	EndpointVni_MultidestinationTraffic_Enum_BGP_INGRESS_REPLICATION E_EndpointVni_MultidestinationTraffic_Enum = 2
)

// E_EndpointVni_SviState is a derived int64 type which is used to represent
// the enumerated node EndpointVni_SviState. An additional value named
// EndpointVni_SviState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointVni_SviState int64

// IsYANGGoEnum ensures that EndpointVni_SviState implements the yang.GoEnum
// interface. This ensures that EndpointVni_SviState can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointVni_SviState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointVni_SviState.
func (E_EndpointVni_SviState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EndpointVni_SviState.
func (e E_EndpointVni_SviState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointVni_SviState")
}

const (
	// EndpointVni_SviState_UNSET corresponds to the value UNSET of EndpointVni_SviState
	EndpointVni_SviState_UNSET E_EndpointVni_SviState = 0
	// EndpointVni_SviState_UP corresponds to the value UP of EndpointVni_SviState
	EndpointVni_SviState_UP E_EndpointVni_SviState = 1
	// EndpointVni_SviState_DOWN corresponds to the value DOWN of EndpointVni_SviState
	EndpointVni_SviState_DOWN E_EndpointVni_SviState = 2
)

// E_EndpointVni_VniState is a derived int64 type which is used to represent
// the enumerated node EndpointVni_VniState. An additional value named
// EndpointVni_VniState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointVni_VniState int64

// IsYANGGoEnum ensures that EndpointVni_VniState implements the yang.GoEnum
// interface. This ensures that EndpointVni_VniState can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointVni_VniState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointVni_VniState.
func (E_EndpointVni_VniState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EndpointVni_VniState.
func (e E_EndpointVni_VniState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointVni_VniState")
}

const (
	// EndpointVni_VniState_UNSET corresponds to the value UNSET of EndpointVni_VniState
	EndpointVni_VniState_UNSET E_EndpointVni_VniState = 0
	// EndpointVni_VniState_UP corresponds to the value UP of EndpointVni_VniState
	EndpointVni_VniState_UP E_EndpointVni_VniState = 1
	// EndpointVni_VniState_DOWN corresponds to the value DOWN of EndpointVni_VniState
	EndpointVni_VniState_DOWN E_EndpointVni_VniState = 2
)

// E_EndpointVni_VniType is a derived int64 type which is used to represent
// the enumerated node EndpointVni_VniType. An additional value named
// EndpointVni_VniType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointVni_VniType int64

// IsYANGGoEnum ensures that EndpointVni_VniType implements the yang.GoEnum
// interface. This ensures that EndpointVni_VniType can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointVni_VniType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointVni_VniType.
func (E_EndpointVni_VniType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EndpointVni_VniType.
func (e E_EndpointVni_VniType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointVni_VniType")
}

const (
	// EndpointVni_VniType_UNSET corresponds to the value UNSET of EndpointVni_VniType
	EndpointVni_VniType_UNSET E_EndpointVni_VniType = 0
	// EndpointVni_VniType_L2 corresponds to the value L2 of EndpointVni_VniType
	EndpointVni_VniType_L2 E_EndpointVni_VniType = 1
	// EndpointVni_VniType_L3 corresponds to the value L3 of EndpointVni_VniType
	EndpointVni_VniType_L3 E_EndpointVni_VniType = 2
)

// E_Entry_EntryType is a derived int64 type which is used to represent
// the enumerated node Entry_EntryType. An additional value named
// Entry_EntryType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Entry_EntryType int64

// IsYANGGoEnum ensures that Entry_EntryType implements the yang.GoEnum
// interface. This ensures that Entry_EntryType can be identified as a
// mapped type for a YANG enumeration.
func (E_Entry_EntryType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Entry_EntryType.
func (E_Entry_EntryType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Entry_EntryType.
func (e E_Entry_EntryType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Entry_EntryType")
}

const (
	// Entry_EntryType_UNSET corresponds to the value UNSET of Entry_EntryType
	Entry_EntryType_UNSET E_Entry_EntryType = 0
	// Entry_EntryType_STATIC corresponds to the value STATIC of Entry_EntryType
	Entry_EntryType_STATIC E_Entry_EntryType = 1
	// Entry_EntryType_DYNAMIC corresponds to the value DYNAMIC of Entry_EntryType
	Entry_EntryType_DYNAMIC E_Entry_EntryType = 2
)

// E_EthernetSegment_Esi_Enum is a derived int64 type which is used to represent
// the enumerated node EthernetSegment_Esi_Enum. An additional value named
// EthernetSegment_Esi_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EthernetSegment_Esi_Enum int64

// IsYANGGoEnum ensures that EthernetSegment_Esi_Enum implements the yang.GoEnum
// interface. This ensures that EthernetSegment_Esi_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_EthernetSegment_Esi_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EthernetSegment_Esi_Enum.
func (E_EthernetSegment_Esi_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EthernetSegment_Esi_Enum.
func (e E_EthernetSegment_Esi_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EthernetSegment_Esi_Enum")
}

const (
	// EthernetSegment_Esi_Enum_UNSET corresponds to the value UNSET of EthernetSegment_Esi_Enum
	EthernetSegment_Esi_Enum_UNSET E_EthernetSegment_Esi_Enum = 0
	// EthernetSegment_Esi_Enum_AUTO corresponds to the value AUTO of EthernetSegment_Esi_Enum
	EthernetSegment_Esi_Enum_AUTO E_EthernetSegment_Esi_Enum = 1
)

// E_Ethernet_DuplexMode is a derived int64 type which is used to represent
// the enumerated node Ethernet_DuplexMode. An additional value named
// Ethernet_DuplexMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ethernet_DuplexMode int64

// IsYANGGoEnum ensures that Ethernet_DuplexMode implements the yang.GoEnum
// interface. This ensures that Ethernet_DuplexMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Ethernet_DuplexMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ethernet_DuplexMode.
func (E_Ethernet_DuplexMode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ethernet_DuplexMode.
func (e E_Ethernet_DuplexMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ethernet_DuplexMode")
}

const (
	// Ethernet_DuplexMode_UNSET corresponds to the value UNSET of Ethernet_DuplexMode
	Ethernet_DuplexMode_UNSET E_Ethernet_DuplexMode = 0
	// Ethernet_DuplexMode_FULL corresponds to the value FULL of Ethernet_DuplexMode
	Ethernet_DuplexMode_FULL E_Ethernet_DuplexMode = 1
	// Ethernet_DuplexMode_HALF corresponds to the value HALF of Ethernet_DuplexMode
	Ethernet_DuplexMode_HALF E_Ethernet_DuplexMode = 2
)

// E_Ethernet_NegotiatedDuplexMode is a derived int64 type which is used to represent
// the enumerated node Ethernet_NegotiatedDuplexMode. An additional value named
// Ethernet_NegotiatedDuplexMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ethernet_NegotiatedDuplexMode int64

// IsYANGGoEnum ensures that Ethernet_NegotiatedDuplexMode implements the yang.GoEnum
// interface. This ensures that Ethernet_NegotiatedDuplexMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Ethernet_NegotiatedDuplexMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ethernet_NegotiatedDuplexMode.
func (E_Ethernet_NegotiatedDuplexMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Ethernet_NegotiatedDuplexMode.
func (e E_Ethernet_NegotiatedDuplexMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ethernet_NegotiatedDuplexMode")
}

const (
	// Ethernet_NegotiatedDuplexMode_UNSET corresponds to the value UNSET of Ethernet_NegotiatedDuplexMode
	Ethernet_NegotiatedDuplexMode_UNSET E_Ethernet_NegotiatedDuplexMode = 0
	// Ethernet_NegotiatedDuplexMode_FULL corresponds to the value FULL of Ethernet_NegotiatedDuplexMode
	Ethernet_NegotiatedDuplexMode_FULL E_Ethernet_NegotiatedDuplexMode = 1
	// Ethernet_NegotiatedDuplexMode_HALF corresponds to the value HALF of Ethernet_NegotiatedDuplexMode
	Ethernet_NegotiatedDuplexMode_HALF E_Ethernet_NegotiatedDuplexMode = 2
)

// E_Event_Record is a derived int64 type which is used to represent
// the enumerated node Event_Record. An additional value named
// Event_Record_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Event_Record int64

// IsYANGGoEnum ensures that Event_Record implements the yang.GoEnum
// interface. This ensures that Event_Record can be identified as a
// mapped type for a YANG enumeration.
func (E_Event_Record) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Event_Record.
func (E_Event_Record) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Event_Record.
func (e E_Event_Record) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Event_Record")
}

const (
	// Event_Record_UNSET corresponds to the value UNSET of Event_Record
	Event_Record_UNSET E_Event_Record = 0
	// Event_Record_START_STOP corresponds to the value START_STOP of Event_Record
	Event_Record_START_STOP E_Event_Record = 1
	// Event_Record_STOP corresponds to the value STOP of Event_Record
	Event_Record_STOP E_Event_Record = 2
)

// E_EvpnInstance_ReplicationMode is a derived int64 type which is used to represent
// the enumerated node EvpnInstance_ReplicationMode. An additional value named
// EvpnInstance_ReplicationMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EvpnInstance_ReplicationMode int64

// IsYANGGoEnum ensures that EvpnInstance_ReplicationMode implements the yang.GoEnum
// interface. This ensures that EvpnInstance_ReplicationMode can be identified as a
// mapped type for a YANG enumeration.
func (E_EvpnInstance_ReplicationMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EvpnInstance_ReplicationMode.
func (E_EvpnInstance_ReplicationMode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EvpnInstance_ReplicationMode.
func (e E_EvpnInstance_ReplicationMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EvpnInstance_ReplicationMode")
}

const (
	// EvpnInstance_ReplicationMode_UNSET corresponds to the value UNSET of EvpnInstance_ReplicationMode
	EvpnInstance_ReplicationMode_UNSET E_EvpnInstance_ReplicationMode = 0
	// EvpnInstance_ReplicationMode_STATIC_INGRESS_REPLICATION corresponds to the value STATIC_INGRESS_REPLICATION of EvpnInstance_ReplicationMode
	EvpnInstance_ReplicationMode_STATIC_INGRESS_REPLICATION E_EvpnInstance_ReplicationMode = 1
	// EvpnInstance_ReplicationMode_BGP corresponds to the value BGP of EvpnInstance_ReplicationMode
	EvpnInstance_ReplicationMode_BGP E_EvpnInstance_ReplicationMode = 2
	// EvpnInstance_ReplicationMode_MULTICAST corresponds to the value MULTICAST of EvpnInstance_ReplicationMode
	EvpnInstance_ReplicationMode_MULTICAST E_EvpnInstance_ReplicationMode = 3
)

// E_EvpnInstance_RouteDistinguisher_Enum is a derived int64 type which is used to represent
// the enumerated node EvpnInstance_RouteDistinguisher_Enum. An additional value named
// EvpnInstance_RouteDistinguisher_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EvpnInstance_RouteDistinguisher_Enum int64

// IsYANGGoEnum ensures that EvpnInstance_RouteDistinguisher_Enum implements the yang.GoEnum
// interface. This ensures that EvpnInstance_RouteDistinguisher_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_EvpnInstance_RouteDistinguisher_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EvpnInstance_RouteDistinguisher_Enum.
func (E_EvpnInstance_RouteDistinguisher_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_EvpnInstance_RouteDistinguisher_Enum.
func (e E_EvpnInstance_RouteDistinguisher_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EvpnInstance_RouteDistinguisher_Enum")
}

const (
	// EvpnInstance_RouteDistinguisher_Enum_UNSET corresponds to the value UNSET of EvpnInstance_RouteDistinguisher_Enum
	EvpnInstance_RouteDistinguisher_Enum_UNSET E_EvpnInstance_RouteDistinguisher_Enum = 0
	// EvpnInstance_RouteDistinguisher_Enum_AUTO corresponds to the value AUTO of EvpnInstance_RouteDistinguisher_Enum
	EvpnInstance_RouteDistinguisher_Enum_AUTO E_EvpnInstance_RouteDistinguisher_Enum = 1
)

// E_EvpnTypes_EVPN_REDUNDANCY_MODE is a derived int64 type which is used to represent
// the enumerated node EvpnTypes_EVPN_REDUNDANCY_MODE. An additional value named
// EvpnTypes_EVPN_REDUNDANCY_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EvpnTypes_EVPN_REDUNDANCY_MODE int64

// IsYANGGoEnum ensures that EvpnTypes_EVPN_REDUNDANCY_MODE implements the yang.GoEnum
// interface. This ensures that EvpnTypes_EVPN_REDUNDANCY_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_EvpnTypes_EVPN_REDUNDANCY_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EvpnTypes_EVPN_REDUNDANCY_MODE.
func (E_EvpnTypes_EVPN_REDUNDANCY_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_EvpnTypes_EVPN_REDUNDANCY_MODE.
func (e E_EvpnTypes_EVPN_REDUNDANCY_MODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EvpnTypes_EVPN_REDUNDANCY_MODE")
}

const (
	// EvpnTypes_EVPN_REDUNDANCY_MODE_UNSET corresponds to the value UNSET of EvpnTypes_EVPN_REDUNDANCY_MODE
	EvpnTypes_EVPN_REDUNDANCY_MODE_UNSET E_EvpnTypes_EVPN_REDUNDANCY_MODE = 0
	// EvpnTypes_EVPN_REDUNDANCY_MODE_ALL_ACTIVE corresponds to the value ALL_ACTIVE of EvpnTypes_EVPN_REDUNDANCY_MODE
	EvpnTypes_EVPN_REDUNDANCY_MODE_ALL_ACTIVE E_EvpnTypes_EVPN_REDUNDANCY_MODE = 1
	// EvpnTypes_EVPN_REDUNDANCY_MODE_SINGLE_ACTIVE corresponds to the value SINGLE_ACTIVE of EvpnTypes_EVPN_REDUNDANCY_MODE
	EvpnTypes_EVPN_REDUNDANCY_MODE_SINGLE_ACTIVE E_EvpnTypes_EVPN_REDUNDANCY_MODE = 2
)

// E_EvpnTypes_EVPN_TYPE is a derived int64 type which is used to represent
// the enumerated node EvpnTypes_EVPN_TYPE. An additional value named
// EvpnTypes_EVPN_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EvpnTypes_EVPN_TYPE int64

// IsYANGGoEnum ensures that EvpnTypes_EVPN_TYPE implements the yang.GoEnum
// interface. This ensures that EvpnTypes_EVPN_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_EvpnTypes_EVPN_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EvpnTypes_EVPN_TYPE.
func (E_EvpnTypes_EVPN_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EvpnTypes_EVPN_TYPE.
func (e E_EvpnTypes_EVPN_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EvpnTypes_EVPN_TYPE")
}

const (
	// EvpnTypes_EVPN_TYPE_UNSET corresponds to the value UNSET of EvpnTypes_EVPN_TYPE
	EvpnTypes_EVPN_TYPE_UNSET E_EvpnTypes_EVPN_TYPE = 0
	// EvpnTypes_EVPN_TYPE_VLAN_AWARE corresponds to the value VLAN_AWARE of EvpnTypes_EVPN_TYPE
	EvpnTypes_EVPN_TYPE_VLAN_AWARE E_EvpnTypes_EVPN_TYPE = 1
	// EvpnTypes_EVPN_TYPE_VLAN_BASED corresponds to the value VLAN_BASED of EvpnTypes_EVPN_TYPE
	EvpnTypes_EVPN_TYPE_VLAN_BASED E_EvpnTypes_EVPN_TYPE = 2
	// EvpnTypes_EVPN_TYPE_VLAN_BUNDLE corresponds to the value VLAN_BUNDLE of EvpnTypes_EVPN_TYPE
	EvpnTypes_EVPN_TYPE_VLAN_BUNDLE E_EvpnTypes_EVPN_TYPE = 3
)

// E_EvpnTypes_EsiType is a derived int64 type which is used to represent
// the enumerated node EvpnTypes_EsiType. An additional value named
// EvpnTypes_EsiType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EvpnTypes_EsiType int64

// IsYANGGoEnum ensures that EvpnTypes_EsiType implements the yang.GoEnum
// interface. This ensures that EvpnTypes_EsiType can be identified as a
// mapped type for a YANG enumeration.
func (E_EvpnTypes_EsiType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EvpnTypes_EsiType.
func (E_EvpnTypes_EsiType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EvpnTypes_EsiType.
func (e E_EvpnTypes_EsiType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EvpnTypes_EsiType")
}

const (
	// EvpnTypes_EsiType_UNSET corresponds to the value UNSET of EvpnTypes_EsiType
	EvpnTypes_EsiType_UNSET E_EvpnTypes_EsiType = 0
	// EvpnTypes_EsiType_TYPE_0_OPERATOR_CONFIGURED corresponds to the value TYPE_0_OPERATOR_CONFIGURED of EvpnTypes_EsiType
	EvpnTypes_EsiType_TYPE_0_OPERATOR_CONFIGURED E_EvpnTypes_EsiType = 1
	// EvpnTypes_EsiType_TYPE_1_LACP_BASED corresponds to the value TYPE_1_LACP_BASED of EvpnTypes_EsiType
	EvpnTypes_EsiType_TYPE_1_LACP_BASED E_EvpnTypes_EsiType = 2
	// EvpnTypes_EsiType_TYPE_2_BRIDGE_PROTOCOL_BASED corresponds to the value TYPE_2_BRIDGE_PROTOCOL_BASED of EvpnTypes_EsiType
	EvpnTypes_EsiType_TYPE_2_BRIDGE_PROTOCOL_BASED E_EvpnTypes_EsiType = 3
	// EvpnTypes_EsiType_TYPE_3_MAC_BASED corresponds to the value TYPE_3_MAC_BASED of EvpnTypes_EsiType
	EvpnTypes_EsiType_TYPE_3_MAC_BASED E_EvpnTypes_EsiType = 4
	// EvpnTypes_EsiType_TYPE_4_ROUTER_ID_BASED corresponds to the value TYPE_4_ROUTER_ID_BASED of EvpnTypes_EsiType
	EvpnTypes_EsiType_TYPE_4_ROUTER_ID_BASED E_EvpnTypes_EsiType = 5
	// EvpnTypes_EsiType_TYPE_5_AS_BASED corresponds to the value TYPE_5_AS_BASED of EvpnTypes_EsiType
	EvpnTypes_EsiType_TYPE_5_AS_BASED E_EvpnTypes_EsiType = 6
)

// E_EvpnTypes_LearningMode is a derived int64 type which is used to represent
// the enumerated node EvpnTypes_LearningMode. An additional value named
// EvpnTypes_LearningMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EvpnTypes_LearningMode int64

// IsYANGGoEnum ensures that EvpnTypes_LearningMode implements the yang.GoEnum
// interface. This ensures that EvpnTypes_LearningMode can be identified as a
// mapped type for a YANG enumeration.
func (E_EvpnTypes_LearningMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EvpnTypes_LearningMode.
func (E_EvpnTypes_LearningMode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EvpnTypes_LearningMode.
func (e E_EvpnTypes_LearningMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EvpnTypes_LearningMode")
}

const (
	// EvpnTypes_LearningMode_UNSET corresponds to the value UNSET of EvpnTypes_LearningMode
	EvpnTypes_LearningMode_UNSET E_EvpnTypes_LearningMode = 0
	// EvpnTypes_LearningMode_CONTROL_PLANE corresponds to the value CONTROL_PLANE of EvpnTypes_LearningMode
	EvpnTypes_LearningMode_CONTROL_PLANE E_EvpnTypes_LearningMode = 1
	// EvpnTypes_LearningMode_DATA_PLANE corresponds to the value DATA_PLANE of EvpnTypes_LearningMode
	EvpnTypes_LearningMode_DATA_PLANE E_EvpnTypes_LearningMode = 2
)

// E_ExplicitRouteObject_Type is a derived int64 type which is used to represent
// the enumerated node ExplicitRouteObject_Type. An additional value named
// ExplicitRouteObject_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ExplicitRouteObject_Type int64

// IsYANGGoEnum ensures that ExplicitRouteObject_Type implements the yang.GoEnum
// interface. This ensures that ExplicitRouteObject_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_ExplicitRouteObject_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ExplicitRouteObject_Type.
func (E_ExplicitRouteObject_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_ExplicitRouteObject_Type.
func (e E_ExplicitRouteObject_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ExplicitRouteObject_Type")
}

const (
	// ExplicitRouteObject_Type_UNSET corresponds to the value UNSET of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_UNSET E_ExplicitRouteObject_Type = 0
	// ExplicitRouteObject_Type_IPV4 corresponds to the value IPV4 of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_IPV4 E_ExplicitRouteObject_Type = 1
	// ExplicitRouteObject_Type_IPV6 corresponds to the value IPV6 of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_IPV6 E_ExplicitRouteObject_Type = 2
	// ExplicitRouteObject_Type_ASN corresponds to the value ASN of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_ASN E_ExplicitRouteObject_Type = 3
	// ExplicitRouteObject_Type_ASN4 corresponds to the value ASN4 of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_ASN4 E_ExplicitRouteObject_Type = 4
	// ExplicitRouteObject_Type_LABEL corresponds to the value LABEL of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_LABEL E_ExplicitRouteObject_Type = 5
	// ExplicitRouteObject_Type_UNNUMBERED_INTERFACE corresponds to the value UNNUMBERED_INTERFACE of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_UNNUMBERED_INTERFACE E_ExplicitRouteObject_Type = 6
)

// E_ExtendedPrefix_AddressFamily is a derived int64 type which is used to represent
// the enumerated node ExtendedPrefix_AddressFamily. An additional value named
// ExtendedPrefix_AddressFamily_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ExtendedPrefix_AddressFamily int64

// IsYANGGoEnum ensures that ExtendedPrefix_AddressFamily implements the yang.GoEnum
// interface. This ensures that ExtendedPrefix_AddressFamily can be identified as a
// mapped type for a YANG enumeration.
func (E_ExtendedPrefix_AddressFamily) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ExtendedPrefix_AddressFamily.
func (E_ExtendedPrefix_AddressFamily) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_ExtendedPrefix_AddressFamily.
func (e E_ExtendedPrefix_AddressFamily) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ExtendedPrefix_AddressFamily")
}

const (
	// ExtendedPrefix_AddressFamily_UNSET corresponds to the value UNSET of ExtendedPrefix_AddressFamily
	ExtendedPrefix_AddressFamily_UNSET E_ExtendedPrefix_AddressFamily = 0
	// ExtendedPrefix_AddressFamily_IPV4_UNICAST corresponds to the value IPV4_UNICAST of ExtendedPrefix_AddressFamily
	ExtendedPrefix_AddressFamily_IPV4_UNICAST E_ExtendedPrefix_AddressFamily = 1
)

// E_ExtendedPrefix_RouteType is a derived int64 type which is used to represent
// the enumerated node ExtendedPrefix_RouteType. An additional value named
// ExtendedPrefix_RouteType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ExtendedPrefix_RouteType int64

// IsYANGGoEnum ensures that ExtendedPrefix_RouteType implements the yang.GoEnum
// interface. This ensures that ExtendedPrefix_RouteType can be identified as a
// mapped type for a YANG enumeration.
func (E_ExtendedPrefix_RouteType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ExtendedPrefix_RouteType.
func (E_ExtendedPrefix_RouteType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_ExtendedPrefix_RouteType.
func (e E_ExtendedPrefix_RouteType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ExtendedPrefix_RouteType")
}

const (
	// ExtendedPrefix_RouteType_UNSET corresponds to the value UNSET of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_UNSET E_ExtendedPrefix_RouteType = 0
	// ExtendedPrefix_RouteType_UNSPECIFIED corresponds to the value UNSPECIFIED of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_UNSPECIFIED E_ExtendedPrefix_RouteType = 1
	// ExtendedPrefix_RouteType_INTRA_AREA corresponds to the value INTRA_AREA of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_INTRA_AREA E_ExtendedPrefix_RouteType = 2
	// ExtendedPrefix_RouteType_INTER_AREA corresponds to the value INTER_AREA of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_INTER_AREA E_ExtendedPrefix_RouteType = 3
	// ExtendedPrefix_RouteType_AS_EXTERNAL corresponds to the value AS_EXTERNAL of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_AS_EXTERNAL E_ExtendedPrefix_RouteType = 4
	// ExtendedPrefix_RouteType_NSSA_EXTERNAL corresponds to the value NSSA_EXTERNAL of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_NSSA_EXTERNAL E_ExtendedPrefix_RouteType = 5
)

// E_Flags_Flags is a derived int64 type which is used to represent
// the enumerated node Flags_Flags. An additional value named
// Flags_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Flags_Flags int64

// IsYANGGoEnum ensures that Flags_Flags implements the yang.GoEnum
// interface. This ensures that Flags_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Flags_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Flags_Flags.
func (E_Flags_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Flags_Flags.
func (e E_Flags_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Flags_Flags")
}

const (
	// Flags_Flags_UNSET corresponds to the value UNSET of Flags_Flags
	Flags_Flags_UNSET E_Flags_Flags = 0
	// Flags_Flags_EXTERNAL_FLAG corresponds to the value EXTERNAL_FLAG of Flags_Flags
	Flags_Flags_EXTERNAL_FLAG E_Flags_Flags = 1
	// Flags_Flags_READVERTISEMENT_FLAG corresponds to the value READVERTISEMENT_FLAG of Flags_Flags
	Flags_Flags_READVERTISEMENT_FLAG E_Flags_Flags = 2
	// Flags_Flags_NODE_FLAG corresponds to the value NODE_FLAG of Flags_Flags
	Flags_Flags_NODE_FLAG E_Flags_Flags = 3
)

// E_Global_SummaryRouteCostMode is a derived int64 type which is used to represent
// the enumerated node Global_SummaryRouteCostMode. An additional value named
// Global_SummaryRouteCostMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Global_SummaryRouteCostMode int64

// IsYANGGoEnum ensures that Global_SummaryRouteCostMode implements the yang.GoEnum
// interface. This ensures that Global_SummaryRouteCostMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Global_SummaryRouteCostMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Global_SummaryRouteCostMode.
func (E_Global_SummaryRouteCostMode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Global_SummaryRouteCostMode.
func (e E_Global_SummaryRouteCostMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Global_SummaryRouteCostMode")
}

const (
	// Global_SummaryRouteCostMode_UNSET corresponds to the value UNSET of Global_SummaryRouteCostMode
	Global_SummaryRouteCostMode_UNSET E_Global_SummaryRouteCostMode = 0
	// Global_SummaryRouteCostMode_RFC1583_COMPATIBLE corresponds to the value RFC1583_COMPATIBLE of Global_SummaryRouteCostMode
	Global_SummaryRouteCostMode_RFC1583_COMPATIBLE E_Global_SummaryRouteCostMode = 1
	// Global_SummaryRouteCostMode_RFC2328_COMPATIBLE corresponds to the value RFC2328_COMPATIBLE of Global_SummaryRouteCostMode
	Global_SummaryRouteCostMode_RFC2328_COMPATIBLE E_Global_SummaryRouteCostMode = 2
)

// E_GracefulRestart_Mode is a derived int64 type which is used to represent
// the enumerated node GracefulRestart_Mode. An additional value named
// GracefulRestart_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_GracefulRestart_Mode int64

// IsYANGGoEnum ensures that GracefulRestart_Mode implements the yang.GoEnum
// interface. This ensures that GracefulRestart_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_GracefulRestart_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  GracefulRestart_Mode.
func (E_GracefulRestart_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_GracefulRestart_Mode.
func (e E_GracefulRestart_Mode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_GracefulRestart_Mode")
}

const (
	// GracefulRestart_Mode_UNSET corresponds to the value UNSET of GracefulRestart_Mode
	GracefulRestart_Mode_UNSET E_GracefulRestart_Mode = 0
	// GracefulRestart_Mode_HELPER_ONLY corresponds to the value HELPER_ONLY of GracefulRestart_Mode
	GracefulRestart_Mode_HELPER_ONLY E_GracefulRestart_Mode = 1
	// GracefulRestart_Mode_BILATERAL corresponds to the value BILATERAL of GracefulRestart_Mode
	GracefulRestart_Mode_BILATERAL E_GracefulRestart_Mode = 2
	// GracefulRestart_Mode_REMOTE_HELPER corresponds to the value REMOTE_HELPER of GracefulRestart_Mode
	GracefulRestart_Mode_REMOTE_HELPER E_GracefulRestart_Mode = 3
)

// E_GrpcServer_ListenAddresses_Enum is a derived int64 type which is used to represent
// the enumerated node GrpcServer_ListenAddresses_Enum. An additional value named
// GrpcServer_ListenAddresses_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_GrpcServer_ListenAddresses_Enum int64

// IsYANGGoEnum ensures that GrpcServer_ListenAddresses_Enum implements the yang.GoEnum
// interface. This ensures that GrpcServer_ListenAddresses_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_GrpcServer_ListenAddresses_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  GrpcServer_ListenAddresses_Enum.
func (E_GrpcServer_ListenAddresses_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_GrpcServer_ListenAddresses_Enum.
func (e E_GrpcServer_ListenAddresses_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_GrpcServer_ListenAddresses_Enum")
}

const (
	// GrpcServer_ListenAddresses_Enum_UNSET corresponds to the value UNSET of GrpcServer_ListenAddresses_Enum
	GrpcServer_ListenAddresses_Enum_UNSET E_GrpcServer_ListenAddresses_Enum = 0
	// GrpcServer_ListenAddresses_Enum_ANY corresponds to the value ANY of GrpcServer_ListenAddresses_Enum
	GrpcServer_ListenAddresses_Enum_ANY E_GrpcServer_ListenAddresses_Enum = 1
)

// E_IETFInterfaces_InterfaceType is a derived int64 type which is used to represent
// the enumerated node IETFInterfaces_InterfaceType. An additional value named
// IETFInterfaces_InterfaceType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IETFInterfaces_InterfaceType int64

// IsYANGGoEnum ensures that IETFInterfaces_InterfaceType implements the yang.GoEnum
// interface. This ensures that IETFInterfaces_InterfaceType can be identified as a
// mapped type for a YANG enumeration.
func (E_IETFInterfaces_InterfaceType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IETFInterfaces_InterfaceType.
func (E_IETFInterfaces_InterfaceType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IETFInterfaces_InterfaceType.
func (e E_IETFInterfaces_InterfaceType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IETFInterfaces_InterfaceType")
}

const (
	// IETFInterfaces_InterfaceType_UNSET corresponds to the value UNSET of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_UNSET E_IETFInterfaces_InterfaceType = 0
	// IETFInterfaces_InterfaceType_a12MppSwitch corresponds to the value a12MppSwitch of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_a12MppSwitch E_IETFInterfaces_InterfaceType = 1
	// IETFInterfaces_InterfaceType_aal2 corresponds to the value aal2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aal2 E_IETFInterfaces_InterfaceType = 2
	// IETFInterfaces_InterfaceType_aal5 corresponds to the value aal5 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aal5 E_IETFInterfaces_InterfaceType = 3
	// IETFInterfaces_InterfaceType_actelisMetaLOOP corresponds to the value actelisMetaLOOP of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_actelisMetaLOOP E_IETFInterfaces_InterfaceType = 4
	// IETFInterfaces_InterfaceType_adsl corresponds to the value adsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_adsl E_IETFInterfaces_InterfaceType = 5
	// IETFInterfaces_InterfaceType_adsl2 corresponds to the value adsl2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_adsl2 E_IETFInterfaces_InterfaceType = 6
	// IETFInterfaces_InterfaceType_adsl2plus corresponds to the value adsl2plus of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_adsl2plus E_IETFInterfaces_InterfaceType = 7
	// IETFInterfaces_InterfaceType_aflane8023 corresponds to the value aflane8023 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aflane8023 E_IETFInterfaces_InterfaceType = 8
	// IETFInterfaces_InterfaceType_aflane8025 corresponds to the value aflane8025 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aflane8025 E_IETFInterfaces_InterfaceType = 9
	// IETFInterfaces_InterfaceType_aluELP corresponds to the value aluELP of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluELP E_IETFInterfaces_InterfaceType = 10
	// IETFInterfaces_InterfaceType_aluEpon corresponds to the value aluEpon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEpon E_IETFInterfaces_InterfaceType = 11
	// IETFInterfaces_InterfaceType_aluEponLogicalLink corresponds to the value aluEponLogicalLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEponLogicalLink E_IETFInterfaces_InterfaceType = 12
	// IETFInterfaces_InterfaceType_aluEponOnu corresponds to the value aluEponOnu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEponOnu E_IETFInterfaces_InterfaceType = 13
	// IETFInterfaces_InterfaceType_aluEponPhysicalUni corresponds to the value aluEponPhysicalUni of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEponPhysicalUni E_IETFInterfaces_InterfaceType = 14
	// IETFInterfaces_InterfaceType_aluGponOnu corresponds to the value aluGponOnu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluGponOnu E_IETFInterfaces_InterfaceType = 15
	// IETFInterfaces_InterfaceType_aluGponPhysicalUni corresponds to the value aluGponPhysicalUni of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluGponPhysicalUni E_IETFInterfaces_InterfaceType = 16
	// IETFInterfaces_InterfaceType_arap corresponds to the value arap of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_arap E_IETFInterfaces_InterfaceType = 17
	// IETFInterfaces_InterfaceType_arcnet corresponds to the value arcnet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_arcnet E_IETFInterfaces_InterfaceType = 18
	// IETFInterfaces_InterfaceType_arcnetPlus corresponds to the value arcnetPlus of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_arcnetPlus E_IETFInterfaces_InterfaceType = 19
	// IETFInterfaces_InterfaceType_async corresponds to the value async of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_async E_IETFInterfaces_InterfaceType = 20
	// IETFInterfaces_InterfaceType_atm corresponds to the value atm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atm E_IETFInterfaces_InterfaceType = 21
	// IETFInterfaces_InterfaceType_atmDxi corresponds to the value atmDxi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmDxi E_IETFInterfaces_InterfaceType = 22
	// IETFInterfaces_InterfaceType_atmFuni corresponds to the value atmFuni of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmFuni E_IETFInterfaces_InterfaceType = 23
	// IETFInterfaces_InterfaceType_atmIma corresponds to the value atmIma of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmIma E_IETFInterfaces_InterfaceType = 24
	// IETFInterfaces_InterfaceType_atmLogical corresponds to the value atmLogical of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmLogical E_IETFInterfaces_InterfaceType = 25
	// IETFInterfaces_InterfaceType_atmRadio corresponds to the value atmRadio of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmRadio E_IETFInterfaces_InterfaceType = 26
	// IETFInterfaces_InterfaceType_atmSubInterface corresponds to the value atmSubInterface of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmSubInterface E_IETFInterfaces_InterfaceType = 27
	// IETFInterfaces_InterfaceType_atmVciEndPt corresponds to the value atmVciEndPt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmVciEndPt E_IETFInterfaces_InterfaceType = 28
	// IETFInterfaces_InterfaceType_atmVirtual corresponds to the value atmVirtual of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmVirtual E_IETFInterfaces_InterfaceType = 29
	// IETFInterfaces_InterfaceType_atmbond corresponds to the value atmbond of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmbond E_IETFInterfaces_InterfaceType = 30
	// IETFInterfaces_InterfaceType_aviciOpticalEther corresponds to the value aviciOpticalEther of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aviciOpticalEther E_IETFInterfaces_InterfaceType = 31
	// IETFInterfaces_InterfaceType_basicISDN corresponds to the value basicISDN of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_basicISDN E_IETFInterfaces_InterfaceType = 32
	// IETFInterfaces_InterfaceType_bgppolicyaccounting corresponds to the value bgppolicyaccounting of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bgppolicyaccounting E_IETFInterfaces_InterfaceType = 33
	// IETFInterfaces_InterfaceType_bits corresponds to the value bits of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bits E_IETFInterfaces_InterfaceType = 34
	// IETFInterfaces_InterfaceType_bridge corresponds to the value bridge of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bridge E_IETFInterfaces_InterfaceType = 35
	// IETFInterfaces_InterfaceType_bsc corresponds to the value bsc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bsc E_IETFInterfaces_InterfaceType = 36
	// IETFInterfaces_InterfaceType_cableDownstreamRfPort corresponds to the value cableDownstreamRfPort of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cableDownstreamRfPort E_IETFInterfaces_InterfaceType = 37
	// IETFInterfaces_InterfaceType_capwapDot11Bss corresponds to the value capwapDot11Bss of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_capwapDot11Bss E_IETFInterfaces_InterfaceType = 38
	// IETFInterfaces_InterfaceType_capwapDot11Profile corresponds to the value capwapDot11Profile of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_capwapDot11Profile E_IETFInterfaces_InterfaceType = 39
	// IETFInterfaces_InterfaceType_capwapWtpVirtualRadio corresponds to the value capwapWtpVirtualRadio of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_capwapWtpVirtualRadio E_IETFInterfaces_InterfaceType = 40
	// IETFInterfaces_InterfaceType_cblVectaStar corresponds to the value cblVectaStar of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cblVectaStar E_IETFInterfaces_InterfaceType = 41
	// IETFInterfaces_InterfaceType_cctEmul corresponds to the value cctEmul of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cctEmul E_IETFInterfaces_InterfaceType = 42
	// IETFInterfaces_InterfaceType_ces corresponds to the value ces of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ces E_IETFInterfaces_InterfaceType = 43
	// IETFInterfaces_InterfaceType_channel corresponds to the value channel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_channel E_IETFInterfaces_InterfaceType = 44
	// IETFInterfaces_InterfaceType_ciscoISLvlan corresponds to the value ciscoISLvlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ciscoISLvlan E_IETFInterfaces_InterfaceType = 45
	// IETFInterfaces_InterfaceType_cnr corresponds to the value cnr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cnr E_IETFInterfaces_InterfaceType = 46
	// IETFInterfaces_InterfaceType_coffee corresponds to the value coffee of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_coffee E_IETFInterfaces_InterfaceType = 47
	// IETFInterfaces_InterfaceType_compositeLink corresponds to the value compositeLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_compositeLink E_IETFInterfaces_InterfaceType = 48
	// IETFInterfaces_InterfaceType_dcn corresponds to the value dcn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dcn E_IETFInterfaces_InterfaceType = 49
	// IETFInterfaces_InterfaceType_ddnX25 corresponds to the value ddnX25 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ddnX25 E_IETFInterfaces_InterfaceType = 50
	// IETFInterfaces_InterfaceType_digitalPowerline corresponds to the value digitalPowerline of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_digitalPowerline E_IETFInterfaces_InterfaceType = 51
	// IETFInterfaces_InterfaceType_digitalWrapperOverheadChannel corresponds to the value digitalWrapperOverheadChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_digitalWrapperOverheadChannel E_IETFInterfaces_InterfaceType = 52
	// IETFInterfaces_InterfaceType_dlsw corresponds to the value dlsw of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dlsw E_IETFInterfaces_InterfaceType = 53
	// IETFInterfaces_InterfaceType_docsCableDownstream corresponds to the value docsCableDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableDownstream E_IETFInterfaces_InterfaceType = 54
	// IETFInterfaces_InterfaceType_docsCableMCmtsDownstream corresponds to the value docsCableMCmtsDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableMCmtsDownstream E_IETFInterfaces_InterfaceType = 55
	// IETFInterfaces_InterfaceType_docsCableMaclayer corresponds to the value docsCableMaclayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableMaclayer E_IETFInterfaces_InterfaceType = 56
	// IETFInterfaces_InterfaceType_docsCableNdf corresponds to the value docsCableNdf of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableNdf E_IETFInterfaces_InterfaceType = 57
	// IETFInterfaces_InterfaceType_docsCableNdr corresponds to the value docsCableNdr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableNdr E_IETFInterfaces_InterfaceType = 58
	// IETFInterfaces_InterfaceType_docsCableScte55d1FwdOob corresponds to the value docsCableScte55d1FwdOob of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableScte55d1FwdOob E_IETFInterfaces_InterfaceType = 59
	// IETFInterfaces_InterfaceType_docsCableScte55d1RetOob corresponds to the value docsCableScte55d1RetOob of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableScte55d1RetOob E_IETFInterfaces_InterfaceType = 60
	// IETFInterfaces_InterfaceType_docsCableScte55d2DsOob corresponds to the value docsCableScte55d2DsOob of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableScte55d2DsOob E_IETFInterfaces_InterfaceType = 61
	// IETFInterfaces_InterfaceType_docsCableScte55d2UsOob corresponds to the value docsCableScte55d2UsOob of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableScte55d2UsOob E_IETFInterfaces_InterfaceType = 62
	// IETFInterfaces_InterfaceType_docsCableUpstream corresponds to the value docsCableUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableUpstream E_IETFInterfaces_InterfaceType = 63
	// IETFInterfaces_InterfaceType_docsCableUpstreamChannel corresponds to the value docsCableUpstreamChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableUpstreamChannel E_IETFInterfaces_InterfaceType = 64
	// IETFInterfaces_InterfaceType_docsCableUpstreamRfPort corresponds to the value docsCableUpstreamRfPort of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableUpstreamRfPort E_IETFInterfaces_InterfaceType = 65
	// IETFInterfaces_InterfaceType_docsOfdmDownstream corresponds to the value docsOfdmDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsOfdmDownstream E_IETFInterfaces_InterfaceType = 66
	// IETFInterfaces_InterfaceType_docsOfdmaUpstream corresponds to the value docsOfdmaUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsOfdmaUpstream E_IETFInterfaces_InterfaceType = 67
	// IETFInterfaces_InterfaceType_ds0 corresponds to the value ds0 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds0 E_IETFInterfaces_InterfaceType = 68
	// IETFInterfaces_InterfaceType_ds0Bundle corresponds to the value ds0Bundle of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds0Bundle E_IETFInterfaces_InterfaceType = 69
	// IETFInterfaces_InterfaceType_ds1 corresponds to the value ds1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds1 E_IETFInterfaces_InterfaceType = 70
	// IETFInterfaces_InterfaceType_ds1FDL corresponds to the value ds1FDL of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds1FDL E_IETFInterfaces_InterfaceType = 71
	// IETFInterfaces_InterfaceType_ds3 corresponds to the value ds3 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds3 E_IETFInterfaces_InterfaceType = 72
	// IETFInterfaces_InterfaceType_dtm corresponds to the value dtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dtm E_IETFInterfaces_InterfaceType = 73
	// IETFInterfaces_InterfaceType_dvbAsiIn corresponds to the value dvbAsiIn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbAsiIn E_IETFInterfaces_InterfaceType = 74
	// IETFInterfaces_InterfaceType_dvbAsiOut corresponds to the value dvbAsiOut of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbAsiOut E_IETFInterfaces_InterfaceType = 75
	// IETFInterfaces_InterfaceType_dvbRccDownstream corresponds to the value dvbRccDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRccDownstream E_IETFInterfaces_InterfaceType = 76
	// IETFInterfaces_InterfaceType_dvbRccMacLayer corresponds to the value dvbRccMacLayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRccMacLayer E_IETFInterfaces_InterfaceType = 77
	// IETFInterfaces_InterfaceType_dvbRccUpstream corresponds to the value dvbRccUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRccUpstream E_IETFInterfaces_InterfaceType = 78
	// IETFInterfaces_InterfaceType_dvbRcsMacLayer corresponds to the value dvbRcsMacLayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRcsMacLayer E_IETFInterfaces_InterfaceType = 79
	// IETFInterfaces_InterfaceType_dvbRcsTdma corresponds to the value dvbRcsTdma of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRcsTdma E_IETFInterfaces_InterfaceType = 80
	// IETFInterfaces_InterfaceType_dvbTdm corresponds to the value dvbTdm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbTdm E_IETFInterfaces_InterfaceType = 81
	// IETFInterfaces_InterfaceType_e1 corresponds to the value e1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_e1 E_IETFInterfaces_InterfaceType = 82
	// IETFInterfaces_InterfaceType_econet corresponds to the value econet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_econet E_IETFInterfaces_InterfaceType = 83
	// IETFInterfaces_InterfaceType_eon corresponds to the value eon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_eon E_IETFInterfaces_InterfaceType = 84
	// IETFInterfaces_InterfaceType_eplrs corresponds to the value eplrs of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_eplrs E_IETFInterfaces_InterfaceType = 85
	// IETFInterfaces_InterfaceType_escon corresponds to the value escon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_escon E_IETFInterfaces_InterfaceType = 86
	// IETFInterfaces_InterfaceType_ethernet3Mbit corresponds to the value ethernet3Mbit of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ethernet3Mbit E_IETFInterfaces_InterfaceType = 87
	// IETFInterfaces_InterfaceType_ethernetCsmacd corresponds to the value ethernetCsmacd of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ethernetCsmacd E_IETFInterfaces_InterfaceType = 88
	// IETFInterfaces_InterfaceType_fast corresponds to the value fast of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fast E_IETFInterfaces_InterfaceType = 89
	// IETFInterfaces_InterfaceType_fastEther corresponds to the value fastEther of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fastEther E_IETFInterfaces_InterfaceType = 90
	// IETFInterfaces_InterfaceType_fastEtherFX corresponds to the value fastEtherFX of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fastEtherFX E_IETFInterfaces_InterfaceType = 91
	// IETFInterfaces_InterfaceType_fastdsl corresponds to the value fastdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fastdsl E_IETFInterfaces_InterfaceType = 92
	// IETFInterfaces_InterfaceType_fcipLink corresponds to the value fcipLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fcipLink E_IETFInterfaces_InterfaceType = 93
	// IETFInterfaces_InterfaceType_fddi corresponds to the value fddi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fddi E_IETFInterfaces_InterfaceType = 94
	// IETFInterfaces_InterfaceType_fibreChannel corresponds to the value fibreChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fibreChannel E_IETFInterfaces_InterfaceType = 95
	// IETFInterfaces_InterfaceType_frDlciEndPt corresponds to the value frDlciEndPt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frDlciEndPt E_IETFInterfaces_InterfaceType = 96
	// IETFInterfaces_InterfaceType_frForward corresponds to the value frForward of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frForward E_IETFInterfaces_InterfaceType = 97
	// IETFInterfaces_InterfaceType_frameRelay corresponds to the value frameRelay of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelay E_IETFInterfaces_InterfaceType = 98
	// IETFInterfaces_InterfaceType_frameRelayInterconnect corresponds to the value frameRelayInterconnect of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelayInterconnect E_IETFInterfaces_InterfaceType = 99
	// IETFInterfaces_InterfaceType_frameRelayMPI corresponds to the value frameRelayMPI of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelayMPI E_IETFInterfaces_InterfaceType = 100
	// IETFInterfaces_InterfaceType_frameRelayService corresponds to the value frameRelayService of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelayService E_IETFInterfaces_InterfaceType = 101
	// IETFInterfaces_InterfaceType_frf16MfrBundle corresponds to the value frf16MfrBundle of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frf16MfrBundle E_IETFInterfaces_InterfaceType = 102
	// IETFInterfaces_InterfaceType_g703at2mb corresponds to the value g703at2mb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g703at2mb E_IETFInterfaces_InterfaceType = 103
	// IETFInterfaces_InterfaceType_g703at64k corresponds to the value g703at64k of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g703at64k E_IETFInterfaces_InterfaceType = 104
	// IETFInterfaces_InterfaceType_g9981 corresponds to the value g9981 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g9981 E_IETFInterfaces_InterfaceType = 105
	// IETFInterfaces_InterfaceType_g9982 corresponds to the value g9982 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g9982 E_IETFInterfaces_InterfaceType = 106
	// IETFInterfaces_InterfaceType_g9983 corresponds to the value g9983 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g9983 E_IETFInterfaces_InterfaceType = 107
	// IETFInterfaces_InterfaceType_gfast corresponds to the value gfast of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gfast E_IETFInterfaces_InterfaceType = 108
	// IETFInterfaces_InterfaceType_gfp corresponds to the value gfp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gfp E_IETFInterfaces_InterfaceType = 109
	// IETFInterfaces_InterfaceType_gigabitEthernet corresponds to the value gigabitEthernet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gigabitEthernet E_IETFInterfaces_InterfaceType = 110
	// IETFInterfaces_InterfaceType_gpon corresponds to the value gpon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gpon E_IETFInterfaces_InterfaceType = 111
	// IETFInterfaces_InterfaceType_gr303IDT corresponds to the value gr303IDT of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gr303IDT E_IETFInterfaces_InterfaceType = 112
	// IETFInterfaces_InterfaceType_gr303RDT corresponds to the value gr303RDT of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gr303RDT E_IETFInterfaces_InterfaceType = 113
	// IETFInterfaces_InterfaceType_gtp corresponds to the value gtp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gtp E_IETFInterfaces_InterfaceType = 114
	// IETFInterfaces_InterfaceType_h323Gatekeeper corresponds to the value h323Gatekeeper of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_h323Gatekeeper E_IETFInterfaces_InterfaceType = 115
	// IETFInterfaces_InterfaceType_h323Proxy corresponds to the value h323Proxy of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_h323Proxy E_IETFInterfaces_InterfaceType = 116
	// IETFInterfaces_InterfaceType_hdh1822 corresponds to the value hdh1822 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hdh1822 E_IETFInterfaces_InterfaceType = 117
	// IETFInterfaces_InterfaceType_hdlc corresponds to the value hdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hdlc E_IETFInterfaces_InterfaceType = 118
	// IETFInterfaces_InterfaceType_hdsl2 corresponds to the value hdsl2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hdsl2 E_IETFInterfaces_InterfaceType = 119
	// IETFInterfaces_InterfaceType_hiperlan2 corresponds to the value hiperlan2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hiperlan2 E_IETFInterfaces_InterfaceType = 120
	// IETFInterfaces_InterfaceType_hippi corresponds to the value hippi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hippi E_IETFInterfaces_InterfaceType = 121
	// IETFInterfaces_InterfaceType_hippiInterface corresponds to the value hippiInterface of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hippiInterface E_IETFInterfaces_InterfaceType = 122
	// IETFInterfaces_InterfaceType_homepna corresponds to the value homepna of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_homepna E_IETFInterfaces_InterfaceType = 123
	// IETFInterfaces_InterfaceType_hostPad corresponds to the value hostPad of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hostPad E_IETFInterfaces_InterfaceType = 124
	// IETFInterfaces_InterfaceType_hssi corresponds to the value hssi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hssi E_IETFInterfaces_InterfaceType = 125
	// IETFInterfaces_InterfaceType_hyperchannel corresponds to the value hyperchannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hyperchannel E_IETFInterfaces_InterfaceType = 126
	// IETFInterfaces_InterfaceType_iana_interface_type corresponds to the value iana_interface_type of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iana_interface_type E_IETFInterfaces_InterfaceType = 127
	// IETFInterfaces_InterfaceType_ibm370parChan corresponds to the value ibm370parChan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ibm370parChan E_IETFInterfaces_InterfaceType = 128
	// IETFInterfaces_InterfaceType_idsl corresponds to the value idsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_idsl E_IETFInterfaces_InterfaceType = 129
	// IETFInterfaces_InterfaceType_ieee1394 corresponds to the value ieee1394 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee1394 E_IETFInterfaces_InterfaceType = 130
	// IETFInterfaces_InterfaceType_ieee80211 corresponds to the value ieee80211 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee80211 E_IETFInterfaces_InterfaceType = 131
	// IETFInterfaces_InterfaceType_ieee80212 corresponds to the value ieee80212 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee80212 E_IETFInterfaces_InterfaceType = 132
	// IETFInterfaces_InterfaceType_ieee802154 corresponds to the value ieee802154 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee802154 E_IETFInterfaces_InterfaceType = 133
	// IETFInterfaces_InterfaceType_ieee80216WMAN corresponds to the value ieee80216WMAN of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee80216WMAN E_IETFInterfaces_InterfaceType = 134
	// IETFInterfaces_InterfaceType_ieee8023adLag corresponds to the value ieee8023adLag of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee8023adLag E_IETFInterfaces_InterfaceType = 135
	// IETFInterfaces_InterfaceType_if_gsn corresponds to the value if_gsn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_if_gsn E_IETFInterfaces_InterfaceType = 136
	// IETFInterfaces_InterfaceType_ifPwType corresponds to the value ifPwType of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ifPwType E_IETFInterfaces_InterfaceType = 137
	// IETFInterfaces_InterfaceType_ifVfiType corresponds to the value ifVfiType of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ifVfiType E_IETFInterfaces_InterfaceType = 138
	// IETFInterfaces_InterfaceType_ilan corresponds to the value ilan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ilan E_IETFInterfaces_InterfaceType = 139
	// IETFInterfaces_InterfaceType_imt corresponds to the value imt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_imt E_IETFInterfaces_InterfaceType = 140
	// IETFInterfaces_InterfaceType_infiniband corresponds to the value infiniband of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_infiniband E_IETFInterfaces_InterfaceType = 141
	// IETFInterfaces_InterfaceType_interleave corresponds to the value interleave of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_interleave E_IETFInterfaces_InterfaceType = 142
	// IETFInterfaces_InterfaceType_ip corresponds to the value ip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ip E_IETFInterfaces_InterfaceType = 143
	// IETFInterfaces_InterfaceType_ipForward corresponds to the value ipForward of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipForward E_IETFInterfaces_InterfaceType = 144
	// IETFInterfaces_InterfaceType_ipOverAtm corresponds to the value ipOverAtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipOverAtm E_IETFInterfaces_InterfaceType = 145
	// IETFInterfaces_InterfaceType_ipOverCdlc corresponds to the value ipOverCdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipOverCdlc E_IETFInterfaces_InterfaceType = 146
	// IETFInterfaces_InterfaceType_ipOverClaw corresponds to the value ipOverClaw of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipOverClaw E_IETFInterfaces_InterfaceType = 147
	// IETFInterfaces_InterfaceType_ipSwitch corresponds to the value ipSwitch of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipSwitch E_IETFInterfaces_InterfaceType = 148
	// IETFInterfaces_InterfaceType_isdn corresponds to the value isdn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isdn E_IETFInterfaces_InterfaceType = 149
	// IETFInterfaces_InterfaceType_isdns corresponds to the value isdns of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isdns E_IETFInterfaces_InterfaceType = 150
	// IETFInterfaces_InterfaceType_isdnu corresponds to the value isdnu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isdnu E_IETFInterfaces_InterfaceType = 151
	// IETFInterfaces_InterfaceType_iso88022llc corresponds to the value iso88022llc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88022llc E_IETFInterfaces_InterfaceType = 152
	// IETFInterfaces_InterfaceType_iso88023Csmacd corresponds to the value iso88023Csmacd of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88023Csmacd E_IETFInterfaces_InterfaceType = 153
	// IETFInterfaces_InterfaceType_iso88024TokenBus corresponds to the value iso88024TokenBus of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88024TokenBus E_IETFInterfaces_InterfaceType = 154
	// IETFInterfaces_InterfaceType_iso88025CRFPInt corresponds to the value iso88025CRFPInt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025CRFPInt E_IETFInterfaces_InterfaceType = 155
	// IETFInterfaces_InterfaceType_iso88025Dtr corresponds to the value iso88025Dtr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025Dtr E_IETFInterfaces_InterfaceType = 156
	// IETFInterfaces_InterfaceType_iso88025Fiber corresponds to the value iso88025Fiber of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025Fiber E_IETFInterfaces_InterfaceType = 157
	// IETFInterfaces_InterfaceType_iso88025TokenRing corresponds to the value iso88025TokenRing of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025TokenRing E_IETFInterfaces_InterfaceType = 158
	// IETFInterfaces_InterfaceType_iso88026Man corresponds to the value iso88026Man of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88026Man E_IETFInterfaces_InterfaceType = 159
	// IETFInterfaces_InterfaceType_isup corresponds to the value isup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isup E_IETFInterfaces_InterfaceType = 160
	// IETFInterfaces_InterfaceType_l2vlan corresponds to the value l2vlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_l2vlan E_IETFInterfaces_InterfaceType = 161
	// IETFInterfaces_InterfaceType_l3ipvlan corresponds to the value l3ipvlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_l3ipvlan E_IETFInterfaces_InterfaceType = 162
	// IETFInterfaces_InterfaceType_l3ipxvlan corresponds to the value l3ipxvlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_l3ipxvlan E_IETFInterfaces_InterfaceType = 163
	// IETFInterfaces_InterfaceType_lapb corresponds to the value lapb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lapb E_IETFInterfaces_InterfaceType = 164
	// IETFInterfaces_InterfaceType_lapd corresponds to the value lapd of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lapd E_IETFInterfaces_InterfaceType = 165
	// IETFInterfaces_InterfaceType_lapf corresponds to the value lapf of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lapf E_IETFInterfaces_InterfaceType = 166
	// IETFInterfaces_InterfaceType_linegroup corresponds to the value linegroup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_linegroup E_IETFInterfaces_InterfaceType = 167
	// IETFInterfaces_InterfaceType_lmp corresponds to the value lmp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lmp E_IETFInterfaces_InterfaceType = 168
	// IETFInterfaces_InterfaceType_localTalk corresponds to the value localTalk of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_localTalk E_IETFInterfaces_InterfaceType = 169
	// IETFInterfaces_InterfaceType_macSecControlledIF corresponds to the value macSecControlledIF of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_macSecControlledIF E_IETFInterfaces_InterfaceType = 170
	// IETFInterfaces_InterfaceType_macSecUncontrolledIF corresponds to the value macSecUncontrolledIF of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_macSecUncontrolledIF E_IETFInterfaces_InterfaceType = 171
	// IETFInterfaces_InterfaceType_mediaMailOverIp corresponds to the value mediaMailOverIp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mediaMailOverIp E_IETFInterfaces_InterfaceType = 172
	// IETFInterfaces_InterfaceType_mfSigLink corresponds to the value mfSigLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mfSigLink E_IETFInterfaces_InterfaceType = 173
	// IETFInterfaces_InterfaceType_miox25 corresponds to the value miox25 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_miox25 E_IETFInterfaces_InterfaceType = 174
	// IETFInterfaces_InterfaceType_mocaVersion1 corresponds to the value mocaVersion1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mocaVersion1 E_IETFInterfaces_InterfaceType = 175
	// IETFInterfaces_InterfaceType_modem corresponds to the value modem of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_modem E_IETFInterfaces_InterfaceType = 176
	// IETFInterfaces_InterfaceType_mpc corresponds to the value mpc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mpc E_IETFInterfaces_InterfaceType = 177
	// IETFInterfaces_InterfaceType_mpegTransport corresponds to the value mpegTransport of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mpegTransport E_IETFInterfaces_InterfaceType = 178
	// IETFInterfaces_InterfaceType_mpls corresponds to the value mpls of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mpls E_IETFInterfaces_InterfaceType = 179
	// IETFInterfaces_InterfaceType_mplsTunnel corresponds to the value mplsTunnel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mplsTunnel E_IETFInterfaces_InterfaceType = 180
	// IETFInterfaces_InterfaceType_msdsl corresponds to the value msdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_msdsl E_IETFInterfaces_InterfaceType = 181
	// IETFInterfaces_InterfaceType_mvl corresponds to the value mvl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mvl E_IETFInterfaces_InterfaceType = 182
	// IETFInterfaces_InterfaceType_myrinet corresponds to the value myrinet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_myrinet E_IETFInterfaces_InterfaceType = 183
	// IETFInterfaces_InterfaceType_nfas corresponds to the value nfas of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_nfas E_IETFInterfaces_InterfaceType = 184
	// IETFInterfaces_InterfaceType_nsip corresponds to the value nsip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_nsip E_IETFInterfaces_InterfaceType = 185
	// IETFInterfaces_InterfaceType_opticalChannel corresponds to the value opticalChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_opticalChannel E_IETFInterfaces_InterfaceType = 186
	// IETFInterfaces_InterfaceType_opticalChannelGroup corresponds to the value opticalChannelGroup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_opticalChannelGroup E_IETFInterfaces_InterfaceType = 187
	// IETFInterfaces_InterfaceType_opticalTransport corresponds to the value opticalTransport of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_opticalTransport E_IETFInterfaces_InterfaceType = 188
	// IETFInterfaces_InterfaceType_other corresponds to the value other of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_other E_IETFInterfaces_InterfaceType = 189
	// IETFInterfaces_InterfaceType_otnOdu corresponds to the value otnOdu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_otnOdu E_IETFInterfaces_InterfaceType = 190
	// IETFInterfaces_InterfaceType_otnOtu corresponds to the value otnOtu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_otnOtu E_IETFInterfaces_InterfaceType = 191
	// IETFInterfaces_InterfaceType_para corresponds to the value para of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_para E_IETFInterfaces_InterfaceType = 192
	// IETFInterfaces_InterfaceType_pdnEtherLoop1 corresponds to the value pdnEtherLoop1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pdnEtherLoop1 E_IETFInterfaces_InterfaceType = 193
	// IETFInterfaces_InterfaceType_pdnEtherLoop2 corresponds to the value pdnEtherLoop2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pdnEtherLoop2 E_IETFInterfaces_InterfaceType = 194
	// IETFInterfaces_InterfaceType_pip corresponds to the value pip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pip E_IETFInterfaces_InterfaceType = 195
	// IETFInterfaces_InterfaceType_plc corresponds to the value plc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_plc E_IETFInterfaces_InterfaceType = 196
	// IETFInterfaces_InterfaceType_pon155 corresponds to the value pon155 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pon155 E_IETFInterfaces_InterfaceType = 197
	// IETFInterfaces_InterfaceType_pon622 corresponds to the value pon622 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pon622 E_IETFInterfaces_InterfaceType = 198
	// IETFInterfaces_InterfaceType_pos corresponds to the value pos of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pos E_IETFInterfaces_InterfaceType = 199
	// IETFInterfaces_InterfaceType_ppp corresponds to the value ppp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ppp E_IETFInterfaces_InterfaceType = 200
	// IETFInterfaces_InterfaceType_pppMultilinkBundle corresponds to the value pppMultilinkBundle of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pppMultilinkBundle E_IETFInterfaces_InterfaceType = 201
	// IETFInterfaces_InterfaceType_primaryISDN corresponds to the value primaryISDN of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_primaryISDN E_IETFInterfaces_InterfaceType = 202
	// IETFInterfaces_InterfaceType_propAtm corresponds to the value propAtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propAtm E_IETFInterfaces_InterfaceType = 203
	// IETFInterfaces_InterfaceType_propBWAp2Mp corresponds to the value propBWAp2Mp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propBWAp2Mp E_IETFInterfaces_InterfaceType = 204
	// IETFInterfaces_InterfaceType_propCnls corresponds to the value propCnls of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propCnls E_IETFInterfaces_InterfaceType = 205
	// IETFInterfaces_InterfaceType_propDocsWirelessDownstream corresponds to the value propDocsWirelessDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propDocsWirelessDownstream E_IETFInterfaces_InterfaceType = 206
	// IETFInterfaces_InterfaceType_propDocsWirelessMaclayer corresponds to the value propDocsWirelessMaclayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propDocsWirelessMaclayer E_IETFInterfaces_InterfaceType = 207
	// IETFInterfaces_InterfaceType_propDocsWirelessUpstream corresponds to the value propDocsWirelessUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propDocsWirelessUpstream E_IETFInterfaces_InterfaceType = 208
	// IETFInterfaces_InterfaceType_propMultiplexor corresponds to the value propMultiplexor of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propMultiplexor E_IETFInterfaces_InterfaceType = 209
	// IETFInterfaces_InterfaceType_propPointToPointSerial corresponds to the value propPointToPointSerial of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propPointToPointSerial E_IETFInterfaces_InterfaceType = 210
	// IETFInterfaces_InterfaceType_propVirtual corresponds to the value propVirtual of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propVirtual E_IETFInterfaces_InterfaceType = 211
	// IETFInterfaces_InterfaceType_propWirelessP2P corresponds to the value propWirelessP2P of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propWirelessP2P E_IETFInterfaces_InterfaceType = 212
	// IETFInterfaces_InterfaceType_proteon10Mbit corresponds to the value proteon10Mbit of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_proteon10Mbit E_IETFInterfaces_InterfaceType = 213
	// IETFInterfaces_InterfaceType_proteon80Mbit corresponds to the value proteon80Mbit of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_proteon80Mbit E_IETFInterfaces_InterfaceType = 214
	// IETFInterfaces_InterfaceType_ptm corresponds to the value ptm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ptm E_IETFInterfaces_InterfaceType = 215
	// IETFInterfaces_InterfaceType_q2931 corresponds to the value q2931 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_q2931 E_IETFInterfaces_InterfaceType = 216
	// IETFInterfaces_InterfaceType_qam corresponds to the value qam of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_qam E_IETFInterfaces_InterfaceType = 217
	// IETFInterfaces_InterfaceType_qllc corresponds to the value qllc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_qllc E_IETFInterfaces_InterfaceType = 218
	// IETFInterfaces_InterfaceType_radioMAC corresponds to the value radioMAC of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_radioMAC E_IETFInterfaces_InterfaceType = 219
	// IETFInterfaces_InterfaceType_radsl corresponds to the value radsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_radsl E_IETFInterfaces_InterfaceType = 220
	// IETFInterfaces_InterfaceType_reachDSL corresponds to the value reachDSL of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_reachDSL E_IETFInterfaces_InterfaceType = 221
	// IETFInterfaces_InterfaceType_regular1822 corresponds to the value regular1822 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_regular1822 E_IETFInterfaces_InterfaceType = 222
	// IETFInterfaces_InterfaceType_rfc1483 corresponds to the value rfc1483 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rfc1483 E_IETFInterfaces_InterfaceType = 223
	// IETFInterfaces_InterfaceType_rfc877x25 corresponds to the value rfc877x25 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rfc877x25 E_IETFInterfaces_InterfaceType = 224
	// IETFInterfaces_InterfaceType_rpr corresponds to the value rpr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rpr E_IETFInterfaces_InterfaceType = 225
	// IETFInterfaces_InterfaceType_rs232 corresponds to the value rs232 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rs232 E_IETFInterfaces_InterfaceType = 226
	// IETFInterfaces_InterfaceType_rsrb corresponds to the value rsrb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rsrb E_IETFInterfaces_InterfaceType = 227
	// IETFInterfaces_InterfaceType_sdci corresponds to the value sdci of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sdci E_IETFInterfaces_InterfaceType = 228
	// IETFInterfaces_InterfaceType_sdlc corresponds to the value sdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sdlc E_IETFInterfaces_InterfaceType = 229
	// IETFInterfaces_InterfaceType_sdsl corresponds to the value sdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sdsl E_IETFInterfaces_InterfaceType = 230
	// IETFInterfaces_InterfaceType_shdsl corresponds to the value shdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_shdsl E_IETFInterfaces_InterfaceType = 231
	// IETFInterfaces_InterfaceType_sip corresponds to the value sip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sip E_IETFInterfaces_InterfaceType = 232
	// IETFInterfaces_InterfaceType_sipSig corresponds to the value sipSig of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sipSig E_IETFInterfaces_InterfaceType = 233
	// IETFInterfaces_InterfaceType_sipTg corresponds to the value sipTg of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sipTg E_IETFInterfaces_InterfaceType = 234
	// IETFInterfaces_InterfaceType_sixToFour corresponds to the value sixToFour of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sixToFour E_IETFInterfaces_InterfaceType = 235
	// IETFInterfaces_InterfaceType_slip corresponds to the value slip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_slip E_IETFInterfaces_InterfaceType = 236
	// IETFInterfaces_InterfaceType_smdsDxi corresponds to the value smdsDxi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_smdsDxi E_IETFInterfaces_InterfaceType = 237
	// IETFInterfaces_InterfaceType_smdsIcip corresponds to the value smdsIcip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_smdsIcip E_IETFInterfaces_InterfaceType = 238
	// IETFInterfaces_InterfaceType_softwareLoopback corresponds to the value softwareLoopback of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_softwareLoopback E_IETFInterfaces_InterfaceType = 239
	// IETFInterfaces_InterfaceType_sonet corresponds to the value sonet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonet E_IETFInterfaces_InterfaceType = 240
	// IETFInterfaces_InterfaceType_sonetOverheadChannel corresponds to the value sonetOverheadChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonetOverheadChannel E_IETFInterfaces_InterfaceType = 241
	// IETFInterfaces_InterfaceType_sonetPath corresponds to the value sonetPath of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonetPath E_IETFInterfaces_InterfaceType = 242
	// IETFInterfaces_InterfaceType_sonetVT corresponds to the value sonetVT of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonetVT E_IETFInterfaces_InterfaceType = 243
	// IETFInterfaces_InterfaceType_srp corresponds to the value srp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_srp E_IETFInterfaces_InterfaceType = 244
	// IETFInterfaces_InterfaceType_ss7SigLink corresponds to the value ss7SigLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ss7SigLink E_IETFInterfaces_InterfaceType = 245
	// IETFInterfaces_InterfaceType_stackToStack corresponds to the value stackToStack of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_stackToStack E_IETFInterfaces_InterfaceType = 246
	// IETFInterfaces_InterfaceType_starLan corresponds to the value starLan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_starLan E_IETFInterfaces_InterfaceType = 247
	// IETFInterfaces_InterfaceType_tdlc corresponds to the value tdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_tdlc E_IETFInterfaces_InterfaceType = 248
	// IETFInterfaces_InterfaceType_teLink corresponds to the value teLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_teLink E_IETFInterfaces_InterfaceType = 249
	// IETFInterfaces_InterfaceType_termPad corresponds to the value termPad of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_termPad E_IETFInterfaces_InterfaceType = 250
	// IETFInterfaces_InterfaceType_tr008 corresponds to the value tr008 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_tr008 E_IETFInterfaces_InterfaceType = 251
	// IETFInterfaces_InterfaceType_transpHdlc corresponds to the value transpHdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_transpHdlc E_IETFInterfaces_InterfaceType = 252
	// IETFInterfaces_InterfaceType_tunnel corresponds to the value tunnel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_tunnel E_IETFInterfaces_InterfaceType = 253
	// IETFInterfaces_InterfaceType_ultra corresponds to the value ultra of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ultra E_IETFInterfaces_InterfaceType = 254
	// IETFInterfaces_InterfaceType_usb corresponds to the value usb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_usb E_IETFInterfaces_InterfaceType = 255
	// IETFInterfaces_InterfaceType_v11 corresponds to the value v11 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v11 E_IETFInterfaces_InterfaceType = 256
	// IETFInterfaces_InterfaceType_v35 corresponds to the value v35 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v35 E_IETFInterfaces_InterfaceType = 257
	// IETFInterfaces_InterfaceType_v36 corresponds to the value v36 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v36 E_IETFInterfaces_InterfaceType = 258
	// IETFInterfaces_InterfaceType_v37 corresponds to the value v37 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v37 E_IETFInterfaces_InterfaceType = 259
	// IETFInterfaces_InterfaceType_vdsl corresponds to the value vdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vdsl E_IETFInterfaces_InterfaceType = 260
	// IETFInterfaces_InterfaceType_vdsl2 corresponds to the value vdsl2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vdsl2 E_IETFInterfaces_InterfaceType = 261
	// IETFInterfaces_InterfaceType_virtualIpAddress corresponds to the value virtualIpAddress of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_virtualIpAddress E_IETFInterfaces_InterfaceType = 262
	// IETFInterfaces_InterfaceType_virtualTg corresponds to the value virtualTg of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_virtualTg E_IETFInterfaces_InterfaceType = 263
	// IETFInterfaces_InterfaceType_vmwareNicTeam corresponds to the value vmwareNicTeam of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vmwareNicTeam E_IETFInterfaces_InterfaceType = 264
	// IETFInterfaces_InterfaceType_vmwareVirtualNic corresponds to the value vmwareVirtualNic of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vmwareVirtualNic E_IETFInterfaces_InterfaceType = 265
	// IETFInterfaces_InterfaceType_voiceDID corresponds to the value voiceDID of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceDID E_IETFInterfaces_InterfaceType = 266
	// IETFInterfaces_InterfaceType_voiceEBS corresponds to the value voiceEBS of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEBS E_IETFInterfaces_InterfaceType = 267
	// IETFInterfaces_InterfaceType_voiceEM corresponds to the value voiceEM of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEM E_IETFInterfaces_InterfaceType = 268
	// IETFInterfaces_InterfaceType_voiceEMFGD corresponds to the value voiceEMFGD of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEMFGD E_IETFInterfaces_InterfaceType = 269
	// IETFInterfaces_InterfaceType_voiceEncap corresponds to the value voiceEncap of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEncap E_IETFInterfaces_InterfaceType = 270
	// IETFInterfaces_InterfaceType_voiceFGDEANA corresponds to the value voiceFGDEANA of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFGDEANA E_IETFInterfaces_InterfaceType = 271
	// IETFInterfaces_InterfaceType_voiceFGDOS corresponds to the value voiceFGDOS of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFGDOS E_IETFInterfaces_InterfaceType = 272
	// IETFInterfaces_InterfaceType_voiceFXO corresponds to the value voiceFXO of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFXO E_IETFInterfaces_InterfaceType = 273
	// IETFInterfaces_InterfaceType_voiceFXS corresponds to the value voiceFXS of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFXS E_IETFInterfaces_InterfaceType = 274
	// IETFInterfaces_InterfaceType_voiceOverAtm corresponds to the value voiceOverAtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverAtm E_IETFInterfaces_InterfaceType = 275
	// IETFInterfaces_InterfaceType_voiceOverCable corresponds to the value voiceOverCable of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverCable E_IETFInterfaces_InterfaceType = 276
	// IETFInterfaces_InterfaceType_voiceOverFrameRelay corresponds to the value voiceOverFrameRelay of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverFrameRelay E_IETFInterfaces_InterfaceType = 277
	// IETFInterfaces_InterfaceType_voiceOverIp corresponds to the value voiceOverIp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverIp E_IETFInterfaces_InterfaceType = 278
	// IETFInterfaces_InterfaceType_wwanPP corresponds to the value wwanPP of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_wwanPP E_IETFInterfaces_InterfaceType = 279
	// IETFInterfaces_InterfaceType_wwanPP2 corresponds to the value wwanPP2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_wwanPP2 E_IETFInterfaces_InterfaceType = 280
	// IETFInterfaces_InterfaceType_x213 corresponds to the value x213 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x213 E_IETFInterfaces_InterfaceType = 281
	// IETFInterfaces_InterfaceType_x25huntGroup corresponds to the value x25huntGroup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x25huntGroup E_IETFInterfaces_InterfaceType = 282
	// IETFInterfaces_InterfaceType_x25mlp corresponds to the value x25mlp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x25mlp E_IETFInterfaces_InterfaceType = 283
	// IETFInterfaces_InterfaceType_x25ple corresponds to the value x25ple of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x25ple E_IETFInterfaces_InterfaceType = 284
	// IETFInterfaces_InterfaceType_x86Laps corresponds to the value x86Laps of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x86Laps E_IETFInterfaces_InterfaceType = 285
	// IETFInterfaces_InterfaceType_xboxWireless corresponds to the value xboxWireless of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_xboxWireless E_IETFInterfaces_InterfaceType = 286
)

// E_IfAggregate_AggregationType is a derived int64 type which is used to represent
// the enumerated node IfAggregate_AggregationType. An additional value named
// IfAggregate_AggregationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfAggregate_AggregationType int64

// IsYANGGoEnum ensures that IfAggregate_AggregationType implements the yang.GoEnum
// interface. This ensures that IfAggregate_AggregationType can be identified as a
// mapped type for a YANG enumeration.
func (E_IfAggregate_AggregationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfAggregate_AggregationType.
func (E_IfAggregate_AggregationType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfAggregate_AggregationType.
func (e E_IfAggregate_AggregationType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfAggregate_AggregationType")
}

const (
	// IfAggregate_AggregationType_UNSET corresponds to the value UNSET of IfAggregate_AggregationType
	IfAggregate_AggregationType_UNSET E_IfAggregate_AggregationType = 0
	// IfAggregate_AggregationType_LACP corresponds to the value LACP of IfAggregate_AggregationType
	IfAggregate_AggregationType_LACP E_IfAggregate_AggregationType = 1
	// IfAggregate_AggregationType_STATIC corresponds to the value STATIC of IfAggregate_AggregationType
	IfAggregate_AggregationType_STATIC E_IfAggregate_AggregationType = 2
)

// E_IfEthernet_ETHERNET_SPEED is a derived int64 type which is used to represent
// the enumerated node IfEthernet_ETHERNET_SPEED. An additional value named
// IfEthernet_ETHERNET_SPEED_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfEthernet_ETHERNET_SPEED int64

// IsYANGGoEnum ensures that IfEthernet_ETHERNET_SPEED implements the yang.GoEnum
// interface. This ensures that IfEthernet_ETHERNET_SPEED can be identified as a
// mapped type for a YANG enumeration.
func (E_IfEthernet_ETHERNET_SPEED) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfEthernet_ETHERNET_SPEED.
func (E_IfEthernet_ETHERNET_SPEED) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfEthernet_ETHERNET_SPEED.
func (e E_IfEthernet_ETHERNET_SPEED) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfEthernet_ETHERNET_SPEED")
}

const (
	// IfEthernet_ETHERNET_SPEED_UNSET corresponds to the value UNSET of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_UNSET E_IfEthernet_ETHERNET_SPEED = 0
	// IfEthernet_ETHERNET_SPEED_SPEED_100GB corresponds to the value SPEED_100GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_100GB E_IfEthernet_ETHERNET_SPEED = 1
	// IfEthernet_ETHERNET_SPEED_SPEED_100MB corresponds to the value SPEED_100MB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_100MB E_IfEthernet_ETHERNET_SPEED = 2
	// IfEthernet_ETHERNET_SPEED_SPEED_10GB corresponds to the value SPEED_10GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_10GB E_IfEthernet_ETHERNET_SPEED = 3
	// IfEthernet_ETHERNET_SPEED_SPEED_10MB corresponds to the value SPEED_10MB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_10MB E_IfEthernet_ETHERNET_SPEED = 4
	// IfEthernet_ETHERNET_SPEED_SPEED_1GB corresponds to the value SPEED_1GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_1GB E_IfEthernet_ETHERNET_SPEED = 5
	// IfEthernet_ETHERNET_SPEED_SPEED_200GB corresponds to the value SPEED_200GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_200GB E_IfEthernet_ETHERNET_SPEED = 6
	// IfEthernet_ETHERNET_SPEED_SPEED_2500MB corresponds to the value SPEED_2500MB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_2500MB E_IfEthernet_ETHERNET_SPEED = 7
	// IfEthernet_ETHERNET_SPEED_SPEED_25GB corresponds to the value SPEED_25GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_25GB E_IfEthernet_ETHERNET_SPEED = 8
	// IfEthernet_ETHERNET_SPEED_SPEED_400GB corresponds to the value SPEED_400GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_400GB E_IfEthernet_ETHERNET_SPEED = 9
	// IfEthernet_ETHERNET_SPEED_SPEED_40GB corresponds to the value SPEED_40GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_40GB E_IfEthernet_ETHERNET_SPEED = 10
	// IfEthernet_ETHERNET_SPEED_SPEED_50GB corresponds to the value SPEED_50GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_50GB E_IfEthernet_ETHERNET_SPEED = 11
	// IfEthernet_ETHERNET_SPEED_SPEED_5GB corresponds to the value SPEED_5GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_5GB E_IfEthernet_ETHERNET_SPEED = 12
	// IfEthernet_ETHERNET_SPEED_SPEED_600GB corresponds to the value SPEED_600GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_600GB E_IfEthernet_ETHERNET_SPEED = 13
	// IfEthernet_ETHERNET_SPEED_SPEED_800GB corresponds to the value SPEED_800GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_800GB E_IfEthernet_ETHERNET_SPEED = 14
	// IfEthernet_ETHERNET_SPEED_SPEED_UNKNOWN corresponds to the value SPEED_UNKNOWN of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_UNKNOWN E_IfEthernet_ETHERNET_SPEED = 15
)

// E_IfEthernet_INTERFACE_FEC is a derived int64 type which is used to represent
// the enumerated node IfEthernet_INTERFACE_FEC. An additional value named
// IfEthernet_INTERFACE_FEC_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfEthernet_INTERFACE_FEC int64

// IsYANGGoEnum ensures that IfEthernet_INTERFACE_FEC implements the yang.GoEnum
// interface. This ensures that IfEthernet_INTERFACE_FEC can be identified as a
// mapped type for a YANG enumeration.
func (E_IfEthernet_INTERFACE_FEC) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfEthernet_INTERFACE_FEC.
func (E_IfEthernet_INTERFACE_FEC) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfEthernet_INTERFACE_FEC.
func (e E_IfEthernet_INTERFACE_FEC) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfEthernet_INTERFACE_FEC")
}

const (
	// IfEthernet_INTERFACE_FEC_UNSET corresponds to the value UNSET of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_UNSET E_IfEthernet_INTERFACE_FEC = 0
	// IfEthernet_INTERFACE_FEC_FEC_DISABLED corresponds to the value FEC_DISABLED of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_DISABLED E_IfEthernet_INTERFACE_FEC = 1
	// IfEthernet_INTERFACE_FEC_FEC_FC corresponds to the value FEC_FC of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_FC E_IfEthernet_INTERFACE_FEC = 2
	// IfEthernet_INTERFACE_FEC_FEC_RS528 corresponds to the value FEC_RS528 of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_RS528 E_IfEthernet_INTERFACE_FEC = 3
	// IfEthernet_INTERFACE_FEC_FEC_RS544 corresponds to the value FEC_RS544 of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_RS544 E_IfEthernet_INTERFACE_FEC = 4
	// IfEthernet_INTERFACE_FEC_FEC_RS544_2X_INTERLEAVE corresponds to the value FEC_RS544_2X_INTERLEAVE of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_RS544_2X_INTERLEAVE E_IfEthernet_INTERFACE_FEC = 5
)

// E_IfIp_IpAddressOrigin is a derived int64 type which is used to represent
// the enumerated node IfIp_IpAddressOrigin. An additional value named
// IfIp_IpAddressOrigin_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfIp_IpAddressOrigin int64

// IsYANGGoEnum ensures that IfIp_IpAddressOrigin implements the yang.GoEnum
// interface. This ensures that IfIp_IpAddressOrigin can be identified as a
// mapped type for a YANG enumeration.
func (E_IfIp_IpAddressOrigin) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfIp_IpAddressOrigin.
func (E_IfIp_IpAddressOrigin) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfIp_IpAddressOrigin.
func (e E_IfIp_IpAddressOrigin) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfIp_IpAddressOrigin")
}

const (
	// IfIp_IpAddressOrigin_UNSET corresponds to the value UNSET of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_UNSET E_IfIp_IpAddressOrigin = 0
	// IfIp_IpAddressOrigin_OTHER corresponds to the value OTHER of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_OTHER E_IfIp_IpAddressOrigin = 1
	// IfIp_IpAddressOrigin_STATIC corresponds to the value STATIC of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_STATIC E_IfIp_IpAddressOrigin = 2
	// IfIp_IpAddressOrigin_DHCP corresponds to the value DHCP of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_DHCP E_IfIp_IpAddressOrigin = 3
	// IfIp_IpAddressOrigin_LINK_LAYER corresponds to the value LINK_LAYER of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_LINK_LAYER E_IfIp_IpAddressOrigin = 4
	// IfIp_IpAddressOrigin_RANDOM corresponds to the value RANDOM of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_RANDOM E_IfIp_IpAddressOrigin = 5
)

// E_IfIp_NeighborOrigin is a derived int64 type which is used to represent
// the enumerated node IfIp_NeighborOrigin. An additional value named
// IfIp_NeighborOrigin_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfIp_NeighborOrigin int64

// IsYANGGoEnum ensures that IfIp_NeighborOrigin implements the yang.GoEnum
// interface. This ensures that IfIp_NeighborOrigin can be identified as a
// mapped type for a YANG enumeration.
func (E_IfIp_NeighborOrigin) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfIp_NeighborOrigin.
func (E_IfIp_NeighborOrigin) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfIp_NeighborOrigin.
func (e E_IfIp_NeighborOrigin) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfIp_NeighborOrigin")
}

const (
	// IfIp_NeighborOrigin_UNSET corresponds to the value UNSET of IfIp_NeighborOrigin
	IfIp_NeighborOrigin_UNSET E_IfIp_NeighborOrigin = 0
	// IfIp_NeighborOrigin_OTHER corresponds to the value OTHER of IfIp_NeighborOrigin
	IfIp_NeighborOrigin_OTHER E_IfIp_NeighborOrigin = 1
	// IfIp_NeighborOrigin_STATIC corresponds to the value STATIC of IfIp_NeighborOrigin
	IfIp_NeighborOrigin_STATIC E_IfIp_NeighborOrigin = 2
	// IfIp_NeighborOrigin_DYNAMIC corresponds to the value DYNAMIC of IfIp_NeighborOrigin
	IfIp_NeighborOrigin_DYNAMIC E_IfIp_NeighborOrigin = 3
)

// E_IgpFloodingBandwidth_ThresholdSpecification is a derived int64 type which is used to represent
// the enumerated node IgpFloodingBandwidth_ThresholdSpecification. An additional value named
// IgpFloodingBandwidth_ThresholdSpecification_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IgpFloodingBandwidth_ThresholdSpecification int64

// IsYANGGoEnum ensures that IgpFloodingBandwidth_ThresholdSpecification implements the yang.GoEnum
// interface. This ensures that IgpFloodingBandwidth_ThresholdSpecification can be identified as a
// mapped type for a YANG enumeration.
func (E_IgpFloodingBandwidth_ThresholdSpecification) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IgpFloodingBandwidth_ThresholdSpecification.
func (E_IgpFloodingBandwidth_ThresholdSpecification) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_IgpFloodingBandwidth_ThresholdSpecification.
func (e E_IgpFloodingBandwidth_ThresholdSpecification) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IgpFloodingBandwidth_ThresholdSpecification")
}

const (
	// IgpFloodingBandwidth_ThresholdSpecification_UNSET corresponds to the value UNSET of IgpFloodingBandwidth_ThresholdSpecification
	IgpFloodingBandwidth_ThresholdSpecification_UNSET E_IgpFloodingBandwidth_ThresholdSpecification = 0
	// IgpFloodingBandwidth_ThresholdSpecification_MIRRORED_UP_DOWN corresponds to the value MIRRORED_UP_DOWN of IgpFloodingBandwidth_ThresholdSpecification
	IgpFloodingBandwidth_ThresholdSpecification_MIRRORED_UP_DOWN E_IgpFloodingBandwidth_ThresholdSpecification = 1
	// IgpFloodingBandwidth_ThresholdSpecification_SEPARATE_UP_DOWN corresponds to the value SEPARATE_UP_DOWN of IgpFloodingBandwidth_ThresholdSpecification
	IgpFloodingBandwidth_ThresholdSpecification_SEPARATE_UP_DOWN E_IgpFloodingBandwidth_ThresholdSpecification = 2
)

// E_IgpFloodingBandwidth_ThresholdType is a derived int64 type which is used to represent
// the enumerated node IgpFloodingBandwidth_ThresholdType. An additional value named
// IgpFloodingBandwidth_ThresholdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IgpFloodingBandwidth_ThresholdType int64

// IsYANGGoEnum ensures that IgpFloodingBandwidth_ThresholdType implements the yang.GoEnum
// interface. This ensures that IgpFloodingBandwidth_ThresholdType can be identified as a
// mapped type for a YANG enumeration.
func (E_IgpFloodingBandwidth_ThresholdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IgpFloodingBandwidth_ThresholdType.
func (E_IgpFloodingBandwidth_ThresholdType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_IgpFloodingBandwidth_ThresholdType.
func (e E_IgpFloodingBandwidth_ThresholdType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IgpFloodingBandwidth_ThresholdType")
}

const (
	// IgpFloodingBandwidth_ThresholdType_UNSET corresponds to the value UNSET of IgpFloodingBandwidth_ThresholdType
	IgpFloodingBandwidth_ThresholdType_UNSET E_IgpFloodingBandwidth_ThresholdType = 0
	// IgpFloodingBandwidth_ThresholdType_DELTA corresponds to the value DELTA of IgpFloodingBandwidth_ThresholdType
	IgpFloodingBandwidth_ThresholdType_DELTA E_IgpFloodingBandwidth_ThresholdType = 1
	// IgpFloodingBandwidth_ThresholdType_THRESHOLD_CROSSED corresponds to the value THRESHOLD_CROSSED of IgpFloodingBandwidth_ThresholdType
	IgpFloodingBandwidth_ThresholdType_THRESHOLD_CROSSED E_IgpFloodingBandwidth_ThresholdType = 2
)

// E_ImportExportPolicy_ExportRouteTarget_Enum is a derived int64 type which is used to represent
// the enumerated node ImportExportPolicy_ExportRouteTarget_Enum. An additional value named
// ImportExportPolicy_ExportRouteTarget_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ImportExportPolicy_ExportRouteTarget_Enum int64

// IsYANGGoEnum ensures that ImportExportPolicy_ExportRouteTarget_Enum implements the yang.GoEnum
// interface. This ensures that ImportExportPolicy_ExportRouteTarget_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_ImportExportPolicy_ExportRouteTarget_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ImportExportPolicy_ExportRouteTarget_Enum.
func (E_ImportExportPolicy_ExportRouteTarget_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_ImportExportPolicy_ExportRouteTarget_Enum.
func (e E_ImportExportPolicy_ExportRouteTarget_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ImportExportPolicy_ExportRouteTarget_Enum")
}

const (
	// ImportExportPolicy_ExportRouteTarget_Enum_UNSET corresponds to the value UNSET of ImportExportPolicy_ExportRouteTarget_Enum
	ImportExportPolicy_ExportRouteTarget_Enum_UNSET E_ImportExportPolicy_ExportRouteTarget_Enum = 0
	// ImportExportPolicy_ExportRouteTarget_Enum_AUTO corresponds to the value AUTO of ImportExportPolicy_ExportRouteTarget_Enum
	ImportExportPolicy_ExportRouteTarget_Enum_AUTO E_ImportExportPolicy_ExportRouteTarget_Enum = 1
)

// E_ImportExportPolicy_ImportRouteTarget_Enum is a derived int64 type which is used to represent
// the enumerated node ImportExportPolicy_ImportRouteTarget_Enum. An additional value named
// ImportExportPolicy_ImportRouteTarget_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ImportExportPolicy_ImportRouteTarget_Enum int64

// IsYANGGoEnum ensures that ImportExportPolicy_ImportRouteTarget_Enum implements the yang.GoEnum
// interface. This ensures that ImportExportPolicy_ImportRouteTarget_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_ImportExportPolicy_ImportRouteTarget_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ImportExportPolicy_ImportRouteTarget_Enum.
func (E_ImportExportPolicy_ImportRouteTarget_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_ImportExportPolicy_ImportRouteTarget_Enum.
func (e E_ImportExportPolicy_ImportRouteTarget_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ImportExportPolicy_ImportRouteTarget_Enum")
}

const (
	// ImportExportPolicy_ImportRouteTarget_Enum_UNSET corresponds to the value UNSET of ImportExportPolicy_ImportRouteTarget_Enum
	ImportExportPolicy_ImportRouteTarget_Enum_UNSET E_ImportExportPolicy_ImportRouteTarget_Enum = 0
	// ImportExportPolicy_ImportRouteTarget_Enum_AUTO corresponds to the value AUTO of ImportExportPolicy_ImportRouteTarget_Enum
	ImportExportPolicy_ImportRouteTarget_Enum_AUTO E_ImportExportPolicy_ImportRouteTarget_Enum = 1
)

// E_Input_Classifier_Type is a derived int64 type which is used to represent
// the enumerated node Input_Classifier_Type. An additional value named
// Input_Classifier_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Input_Classifier_Type int64

// IsYANGGoEnum ensures that Input_Classifier_Type implements the yang.GoEnum
// interface. This ensures that Input_Classifier_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Input_Classifier_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Input_Classifier_Type.
func (E_Input_Classifier_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Input_Classifier_Type.
func (e E_Input_Classifier_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Input_Classifier_Type")
}

const (
	// Input_Classifier_Type_UNSET corresponds to the value UNSET of Input_Classifier_Type
	Input_Classifier_Type_UNSET E_Input_Classifier_Type = 0
	// Input_Classifier_Type_IPV4 corresponds to the value IPV4 of Input_Classifier_Type
	Input_Classifier_Type_IPV4 E_Input_Classifier_Type = 1
	// Input_Classifier_Type_IPV6 corresponds to the value IPV6 of Input_Classifier_Type
	Input_Classifier_Type_IPV6 E_Input_Classifier_Type = 2
	// Input_Classifier_Type_MPLS corresponds to the value MPLS of Input_Classifier_Type
	Input_Classifier_Type_MPLS E_Input_Classifier_Type = 3
	// Input_Classifier_Type_IPV4_MULTICAST corresponds to the value IPV4_MULTICAST of Input_Classifier_Type
	Input_Classifier_Type_IPV4_MULTICAST E_Input_Classifier_Type = 4
	// Input_Classifier_Type_IPV6_MULTICAST corresponds to the value IPV6_MULTICAST of Input_Classifier_Type
	Input_Classifier_Type_IPV6_MULTICAST E_Input_Classifier_Type = 5
)

// E_Input_InputType is a derived int64 type which is used to represent
// the enumerated node Input_InputType. An additional value named
// Input_InputType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Input_InputType int64

// IsYANGGoEnum ensures that Input_InputType implements the yang.GoEnum
// interface. This ensures that Input_InputType can be identified as a
// mapped type for a YANG enumeration.
func (E_Input_InputType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Input_InputType.
func (E_Input_InputType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Input_InputType.
func (e E_Input_InputType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Input_InputType")
}

const (
	// Input_InputType_UNSET corresponds to the value UNSET of Input_InputType
	Input_InputType_UNSET E_Input_InputType = 0
	// Input_InputType_QUEUE corresponds to the value QUEUE of Input_InputType
	Input_InputType_QUEUE E_Input_InputType = 1
	// Input_InputType_IN_PROFILE corresponds to the value IN_PROFILE of Input_InputType
	Input_InputType_IN_PROFILE E_Input_InputType = 2
	// Input_InputType_OUT_PROFILE corresponds to the value OUT_PROFILE of Input_InputType
	Input_InputType_OUT_PROFILE E_Input_InputType = 3
)

// E_Interface_AdminStatus is a derived int64 type which is used to represent
// the enumerated node Interface_AdminStatus. An additional value named
// Interface_AdminStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Interface_AdminStatus int64

// IsYANGGoEnum ensures that Interface_AdminStatus implements the yang.GoEnum
// interface. This ensures that Interface_AdminStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_Interface_AdminStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Interface_AdminStatus.
func (E_Interface_AdminStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Interface_AdminStatus.
func (e E_Interface_AdminStatus) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Interface_AdminStatus")
}

const (
	// Interface_AdminStatus_UNSET corresponds to the value UNSET of Interface_AdminStatus
	Interface_AdminStatus_UNSET E_Interface_AdminStatus = 0
	// Interface_AdminStatus_UP corresponds to the value UP of Interface_AdminStatus
	Interface_AdminStatus_UP E_Interface_AdminStatus = 1
	// Interface_AdminStatus_DOWN corresponds to the value DOWN of Interface_AdminStatus
	Interface_AdminStatus_DOWN E_Interface_AdminStatus = 2
	// Interface_AdminStatus_TESTING corresponds to the value TESTING of Interface_AdminStatus
	Interface_AdminStatus_TESTING E_Interface_AdminStatus = 3
)

// E_Interface_IrbAnycastGateway is a derived int64 type which is used to represent
// the enumerated node Interface_IrbAnycastGateway. An additional value named
// Interface_IrbAnycastGateway_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Interface_IrbAnycastGateway int64

// IsYANGGoEnum ensures that Interface_IrbAnycastGateway implements the yang.GoEnum
// interface. This ensures that Interface_IrbAnycastGateway can be identified as a
// mapped type for a YANG enumeration.
func (E_Interface_IrbAnycastGateway) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Interface_IrbAnycastGateway.
func (E_Interface_IrbAnycastGateway) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Interface_IrbAnycastGateway.
func (e E_Interface_IrbAnycastGateway) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Interface_IrbAnycastGateway")
}

const (
	// Interface_IrbAnycastGateway_UNSET corresponds to the value UNSET of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_UNSET E_Interface_IrbAnycastGateway = 0
	// Interface_IrbAnycastGateway_DISTRIBUTED_SYMETRIC corresponds to the value DISTRIBUTED_SYMETRIC of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_DISTRIBUTED_SYMETRIC E_Interface_IrbAnycastGateway = 1
	// Interface_IrbAnycastGateway_DISTRIBUTED_ASYMETRIC corresponds to the value DISTRIBUTED_ASYMETRIC of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_DISTRIBUTED_ASYMETRIC E_Interface_IrbAnycastGateway = 2
	// Interface_IrbAnycastGateway_HYBRID corresponds to the value HYBRID of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_HYBRID E_Interface_IrbAnycastGateway = 3
	// Interface_IrbAnycastGateway_CENTRALIZED corresponds to the value CENTRALIZED of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_CENTRALIZED E_Interface_IrbAnycastGateway = 4
)

// E_Interface_OperStatus is a derived int64 type which is used to represent
// the enumerated node Interface_OperStatus. An additional value named
// Interface_OperStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Interface_OperStatus int64

// IsYANGGoEnum ensures that Interface_OperStatus implements the yang.GoEnum
// interface. This ensures that Interface_OperStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_Interface_OperStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Interface_OperStatus.
func (E_Interface_OperStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Interface_OperStatus.
func (e E_Interface_OperStatus) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Interface_OperStatus")
}

const (
	// Interface_OperStatus_UNSET corresponds to the value UNSET of Interface_OperStatus
	Interface_OperStatus_UNSET E_Interface_OperStatus = 0
	// Interface_OperStatus_UP corresponds to the value UP of Interface_OperStatus
	Interface_OperStatus_UP E_Interface_OperStatus = 1
	// Interface_OperStatus_DOWN corresponds to the value DOWN of Interface_OperStatus
	Interface_OperStatus_DOWN E_Interface_OperStatus = 2
	// Interface_OperStatus_TESTING corresponds to the value TESTING of Interface_OperStatus
	Interface_OperStatus_TESTING E_Interface_OperStatus = 3
	// Interface_OperStatus_UNKNOWN corresponds to the value UNKNOWN of Interface_OperStatus
	Interface_OperStatus_UNKNOWN E_Interface_OperStatus = 4
	// Interface_OperStatus_DORMANT corresponds to the value DORMANT of Interface_OperStatus
	Interface_OperStatus_DORMANT E_Interface_OperStatus = 5
	// Interface_OperStatus_NOT_PRESENT corresponds to the value NOT_PRESENT of Interface_OperStatus
	Interface_OperStatus_NOT_PRESENT E_Interface_OperStatus = 6
	// Interface_OperStatus_LOWER_LAYER_DOWN corresponds to the value LOWER_LAYER_DOWN of Interface_OperStatus
	Interface_OperStatus_LOWER_LAYER_DOWN E_Interface_OperStatus = 7
)

// E_Ipv4Srlg_Flags is a derived int64 type which is used to represent
// the enumerated node Ipv4Srlg_Flags. An additional value named
// Ipv4Srlg_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv4Srlg_Flags int64

// IsYANGGoEnum ensures that Ipv4Srlg_Flags implements the yang.GoEnum
// interface. This ensures that Ipv4Srlg_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv4Srlg_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv4Srlg_Flags.
func (E_Ipv4Srlg_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ipv4Srlg_Flags.
func (e E_Ipv4Srlg_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv4Srlg_Flags")
}

const (
	// Ipv4Srlg_Flags_UNSET corresponds to the value UNSET of Ipv4Srlg_Flags
	Ipv4Srlg_Flags_UNSET E_Ipv4Srlg_Flags = 0
	// Ipv4Srlg_Flags_NUMBERED corresponds to the value NUMBERED of Ipv4Srlg_Flags
	Ipv4Srlg_Flags_NUMBERED E_Ipv4Srlg_Flags = 1
)

// E_Ipv6Srlg_Flags is a derived int64 type which is used to represent
// the enumerated node Ipv6Srlg_Flags. An additional value named
// Ipv6Srlg_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv6Srlg_Flags int64

// IsYANGGoEnum ensures that Ipv6Srlg_Flags implements the yang.GoEnum
// interface. This ensures that Ipv6Srlg_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv6Srlg_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv6Srlg_Flags.
func (E_Ipv6Srlg_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ipv6Srlg_Flags.
func (e E_Ipv6Srlg_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv6Srlg_Flags")
}

const (
	// Ipv6Srlg_Flags_UNSET corresponds to the value UNSET of Ipv6Srlg_Flags
	Ipv6Srlg_Flags_UNSET E_Ipv6Srlg_Flags = 0
	// Ipv6Srlg_Flags_NA corresponds to the value NA of Ipv6Srlg_Flags
	Ipv6Srlg_Flags_NA E_Ipv6Srlg_Flags = 1
)

// E_IsisLsdbTypes_ISIS_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisLsdbTypes_ISIS_SUBTLV_TYPE. An additional value named
// IsisLsdbTypes_ISIS_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisLsdbTypes_ISIS_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that IsisLsdbTypes_ISIS_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that IsisLsdbTypes_ISIS_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisLsdbTypes_ISIS_SUBTLV_TYPE.
func (E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_IsisLsdbTypes_ISIS_SUBTLV_TYPE.
func (e E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisLsdbTypes_ISIS_SUBTLV_TYPE")
}

const (
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_UNSET corresponds to the value UNSET of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_UNSET E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 0
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV4_ROUTER_ID corresponds to the value IP_REACHABILITY_IPV4_ROUTER_ID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV4_ROUTER_ID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 1
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV6_ROUTER_ID corresponds to the value IP_REACHABILITY_IPV6_ROUTER_ID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV6_ROUTER_ID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 2
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_FLAGS corresponds to the value IP_REACHABILITY_PREFIX_FLAGS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_FLAGS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 3
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_SID corresponds to the value IP_REACHABILITY_PREFIX_SID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_SID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 4
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_SUBTLVS_TYPE corresponds to the value IP_REACHABILITY_SUBTLVS_TYPE of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_SUBTLVS_TYPE E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 5
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG corresponds to the value IP_REACHABILITY_TAG of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 6
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG64 corresponds to the value IP_REACHABILITY_TAG64 of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG64 E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 7
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_LAN_SID corresponds to the value IS_REACHABILITY_ADJ_LAN_SID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_LAN_SID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 8
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_SID corresponds to the value IS_REACHABILITY_ADJ_SID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_SID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 9
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADMIN_GROUP corresponds to the value IS_REACHABILITY_ADMIN_GROUP of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADMIN_GROUP E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 10
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_AVAILABLE_BANDWIDTH corresponds to the value IS_REACHABILITY_AVAILABLE_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_AVAILABLE_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 11
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_BANDWIDTH_CONSTRAINTS corresponds to the value IS_REACHABILITY_BANDWIDTH_CONSTRAINTS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_BANDWIDTH_CONSTRAINTS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 12
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_EXTENDED_ADMIN_GROUP corresponds to the value IS_REACHABILITY_EXTENDED_ADMIN_GROUP of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_EXTENDED_ADMIN_GROUP E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 13
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_INTERFACE_ADDRESS corresponds to the value IS_REACHABILITY_IPV4_INTERFACE_ADDRESS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_INTERFACE_ADDRESS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 14
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_NEIGHBOR_ADDRESS corresponds to the value IS_REACHABILITY_IPV4_NEIGHBOR_ADDRESS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_NEIGHBOR_ADDRESS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 15
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_INTERFACE_ADDRESS corresponds to the value IS_REACHABILITY_IPV6_INTERFACE_ADDRESS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_INTERFACE_ADDRESS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 16
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_NEIGHBOR_ADDRESS corresponds to the value IS_REACHABILITY_IPV6_NEIGHBOR_ADDRESS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_NEIGHBOR_ADDRESS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 17
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ATTRIBUTES corresponds to the value IS_REACHABILITY_LINK_ATTRIBUTES of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ATTRIBUTES E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 18
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY corresponds to the value IS_REACHABILITY_LINK_DELAY of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 19
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY_VARIATION corresponds to the value IS_REACHABILITY_LINK_DELAY_VARIATION of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY_VARIATION E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 20
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ID corresponds to the value IS_REACHABILITY_LINK_ID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 21
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_LOSS corresponds to the value IS_REACHABILITY_LINK_LOSS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_LOSS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 22
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_PROTECTION_TYPE corresponds to the value IS_REACHABILITY_LINK_PROTECTION_TYPE of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_PROTECTION_TYPE E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 23
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_LINK_BANDWIDTH corresponds to the value IS_REACHABILITY_MAX_LINK_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_LINK_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 24
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_RESERVABLE_BANDWIDTH corresponds to the value IS_REACHABILITY_MAX_RESERVABLE_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_RESERVABLE_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 25
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MIN_MAX_LINK_DELAY corresponds to the value IS_REACHABILITY_MIN_MAX_LINK_DELAY of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MIN_MAX_LINK_DELAY E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 26
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_RESIDUAL_BANDWIDTH corresponds to the value IS_REACHABILITY_RESIDUAL_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_RESIDUAL_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 27
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_SUBTLVS_TYPE corresponds to the value IS_REACHABILITY_SUBTLVS_TYPE of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_SUBTLVS_TYPE E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 28
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_TE_DEFAULT_METRIC corresponds to the value IS_REACHABILITY_TE_DEFAULT_METRIC of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_TE_DEFAULT_METRIC E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 29
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNCONSTRAINED_LSP corresponds to the value IS_REACHABILITY_UNCONSTRAINED_LSP of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNCONSTRAINED_LSP E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 30
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNRESERVED_BANDWIDTH corresponds to the value IS_REACHABILITY_UNRESERVED_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNRESERVED_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 31
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UTILIZED_BANDWIDTH corresponds to the value IS_REACHABILITY_UTILIZED_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UTILIZED_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 32
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_ALGORITHM corresponds to the value ROUTER_CAPABILITY_SR_ALGORITHM of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_ALGORITHM E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 33
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_CAPABILITY corresponds to the value ROUTER_CAPABILITY_SR_CAPABILITY of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_CAPABILITY E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 34
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SUBTLVS_TYPE corresponds to the value ROUTER_CAPABILITY_SUBTLVS_TYPE of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SUBTLVS_TYPE E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 35
)

// E_IsisLsdbTypes_ISIS_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisLsdbTypes_ISIS_TLV_TYPE. An additional value named
// IsisLsdbTypes_ISIS_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisLsdbTypes_ISIS_TLV_TYPE int64

// IsYANGGoEnum ensures that IsisLsdbTypes_ISIS_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that IsisLsdbTypes_ISIS_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisLsdbTypes_ISIS_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisLsdbTypes_ISIS_TLV_TYPE.
func (E_IsisLsdbTypes_ISIS_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisLsdbTypes_ISIS_TLV_TYPE.
func (e E_IsisLsdbTypes_ISIS_TLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisLsdbTypes_ISIS_TLV_TYPE")
}

const (
	// IsisLsdbTypes_ISIS_TLV_TYPE_UNSET corresponds to the value UNSET of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_UNSET E_IsisLsdbTypes_ISIS_TLV_TYPE = 0
	// IsisLsdbTypes_ISIS_TLV_TYPE_AREA_ADDRESSES corresponds to the value AREA_ADDRESSES of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_AREA_ADDRESSES E_IsisLsdbTypes_ISIS_TLV_TYPE = 1
	// IsisLsdbTypes_ISIS_TLV_TYPE_AUTHENTICATION corresponds to the value AUTHENTICATION of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_AUTHENTICATION E_IsisLsdbTypes_ISIS_TLV_TYPE = 2
	// IsisLsdbTypes_ISIS_TLV_TYPE_DYNAMIC_NAME corresponds to the value DYNAMIC_NAME of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_DYNAMIC_NAME E_IsisLsdbTypes_ISIS_TLV_TYPE = 3
	// IsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IPV4_REACHABILITY corresponds to the value EXTENDED_IPV4_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IPV4_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 4
	// IsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IS_REACHABILITY corresponds to the value EXTENDED_IS_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IS_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 5
	// IsisLsdbTypes_ISIS_TLV_TYPE_IIS_NEIGHBORS corresponds to the value IIS_NEIGHBORS of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IIS_NEIGHBORS E_IsisLsdbTypes_ISIS_TLV_TYPE = 6
	// IsisLsdbTypes_ISIS_TLV_TYPE_INSTANCE_ID corresponds to the value INSTANCE_ID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_INSTANCE_ID E_IsisLsdbTypes_ISIS_TLV_TYPE = 7
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_EXTERNAL_REACHABILITY corresponds to the value IPV4_EXTERNAL_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_EXTERNAL_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 8
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERFACE_ADDRESSES corresponds to the value IPV4_INTERFACE_ADDRESSES of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERFACE_ADDRESSES E_IsisLsdbTypes_ISIS_TLV_TYPE = 9
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERNAL_REACHABILITY corresponds to the value IPV4_INTERNAL_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERNAL_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 10
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_SRLG corresponds to the value IPV4_SRLG of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_SRLG E_IsisLsdbTypes_ISIS_TLV_TYPE = 11
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_TE_ROUTER_ID corresponds to the value IPV4_TE_ROUTER_ID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_TE_ROUTER_ID E_IsisLsdbTypes_ISIS_TLV_TYPE = 12
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_INTERFACE_ADDRESSES corresponds to the value IPV6_INTERFACE_ADDRESSES of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_INTERFACE_ADDRESSES E_IsisLsdbTypes_ISIS_TLV_TYPE = 13
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_REACHABILITY corresponds to the value IPV6_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 14
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_SRLG corresponds to the value IPV6_SRLG of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_SRLG E_IsisLsdbTypes_ISIS_TLV_TYPE = 15
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_TE_ROUTER_ID corresponds to the value IPV6_TE_ROUTER_ID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_TE_ROUTER_ID E_IsisLsdbTypes_ISIS_TLV_TYPE = 16
	// IsisLsdbTypes_ISIS_TLV_TYPE_ISIS_ALIAS_ID corresponds to the value ISIS_ALIAS_ID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_ISIS_ALIAS_ID E_IsisLsdbTypes_ISIS_TLV_TYPE = 17
	// IsisLsdbTypes_ISIS_TLV_TYPE_IS_NEIGHBOR_ATTRIBUTE corresponds to the value IS_NEIGHBOR_ATTRIBUTE of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IS_NEIGHBOR_ATTRIBUTE E_IsisLsdbTypes_ISIS_TLV_TYPE = 18
	// IsisLsdbTypes_ISIS_TLV_TYPE_LSP_BUFFER_SIZE corresponds to the value LSP_BUFFER_SIZE of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_LSP_BUFFER_SIZE E_IsisLsdbTypes_ISIS_TLV_TYPE = 19
	// IsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV4_REACHABILITY corresponds to the value MT_IPV4_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV4_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 20
	// IsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV6_REACHABILITY corresponds to the value MT_IPV6_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV6_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 21
	// IsisLsdbTypes_ISIS_TLV_TYPE_MT_ISN corresponds to the value MT_ISN of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MT_ISN E_IsisLsdbTypes_ISIS_TLV_TYPE = 22
	// IsisLsdbTypes_ISIS_TLV_TYPE_MT_IS_NEIGHBOR_ATTRIBUTE corresponds to the value MT_IS_NEIGHBOR_ATTRIBUTE of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MT_IS_NEIGHBOR_ATTRIBUTE E_IsisLsdbTypes_ISIS_TLV_TYPE = 23
	// IsisLsdbTypes_ISIS_TLV_TYPE_MULTI_TOPOLOGY corresponds to the value MULTI_TOPOLOGY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MULTI_TOPOLOGY E_IsisLsdbTypes_ISIS_TLV_TYPE = 24
	// IsisLsdbTypes_ISIS_TLV_TYPE_NLPID corresponds to the value NLPID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_NLPID E_IsisLsdbTypes_ISIS_TLV_TYPE = 25
	// IsisLsdbTypes_ISIS_TLV_TYPE_PURGE_OI corresponds to the value PURGE_OI of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_PURGE_OI E_IsisLsdbTypes_ISIS_TLV_TYPE = 26
	// IsisLsdbTypes_ISIS_TLV_TYPE_ROUTER_CAPABILITY corresponds to the value ROUTER_CAPABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_ROUTER_CAPABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 27
)

// E_IsisTypes_AFI_SAFI_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_AFI_SAFI_TYPE. An additional value named
// IsisTypes_AFI_SAFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_AFI_SAFI_TYPE int64

// IsYANGGoEnum ensures that IsisTypes_AFI_SAFI_TYPE implements the yang.GoEnum
// interface. This ensures that IsisTypes_AFI_SAFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_AFI_SAFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_AFI_SAFI_TYPE.
func (E_IsisTypes_AFI_SAFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_AFI_SAFI_TYPE.
func (e E_IsisTypes_AFI_SAFI_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_AFI_SAFI_TYPE")
}

const (
	// IsisTypes_AFI_SAFI_TYPE_UNSET corresponds to the value UNSET of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_UNSET E_IsisTypes_AFI_SAFI_TYPE = 0
	// IsisTypes_AFI_SAFI_TYPE_IPV4_MULTICAST corresponds to the value IPV4_MULTICAST of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_IPV4_MULTICAST E_IsisTypes_AFI_SAFI_TYPE = 1
	// IsisTypes_AFI_SAFI_TYPE_IPV4_UNICAST corresponds to the value IPV4_UNICAST of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_IPV4_UNICAST E_IsisTypes_AFI_SAFI_TYPE = 2
	// IsisTypes_AFI_SAFI_TYPE_IPV6_MULTICAST corresponds to the value IPV6_MULTICAST of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_IPV6_MULTICAST E_IsisTypes_AFI_SAFI_TYPE = 3
	// IsisTypes_AFI_SAFI_TYPE_IPV6_UNICAST corresponds to the value IPV6_UNICAST of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_IPV6_UNICAST E_IsisTypes_AFI_SAFI_TYPE = 4
)

// E_IsisTypes_AFI_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_AFI_TYPE. An additional value named
// IsisTypes_AFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_AFI_TYPE int64

// IsYANGGoEnum ensures that IsisTypes_AFI_TYPE implements the yang.GoEnum
// interface. This ensures that IsisTypes_AFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_AFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_AFI_TYPE.
func (E_IsisTypes_AFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_AFI_TYPE.
func (e E_IsisTypes_AFI_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_AFI_TYPE")
}

const (
	// IsisTypes_AFI_TYPE_UNSET corresponds to the value UNSET of IsisTypes_AFI_TYPE
	IsisTypes_AFI_TYPE_UNSET E_IsisTypes_AFI_TYPE = 0
	// IsisTypes_AFI_TYPE_IPV4 corresponds to the value IPV4 of IsisTypes_AFI_TYPE
	IsisTypes_AFI_TYPE_IPV4 E_IsisTypes_AFI_TYPE = 1
	// IsisTypes_AFI_TYPE_IPV6 corresponds to the value IPV6 of IsisTypes_AFI_TYPE
	IsisTypes_AFI_TYPE_IPV6 E_IsisTypes_AFI_TYPE = 2
)

// E_IsisTypes_AUTH_MODE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_AUTH_MODE. An additional value named
// IsisTypes_AUTH_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_AUTH_MODE int64

// IsYANGGoEnum ensures that IsisTypes_AUTH_MODE implements the yang.GoEnum
// interface. This ensures that IsisTypes_AUTH_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_AUTH_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_AUTH_MODE.
func (E_IsisTypes_AUTH_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_AUTH_MODE.
func (e E_IsisTypes_AUTH_MODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_AUTH_MODE")
}

const (
	// IsisTypes_AUTH_MODE_UNSET corresponds to the value UNSET of IsisTypes_AUTH_MODE
	IsisTypes_AUTH_MODE_UNSET E_IsisTypes_AUTH_MODE = 0
	// IsisTypes_AUTH_MODE_MD5 corresponds to the value MD5 of IsisTypes_AUTH_MODE
	IsisTypes_AUTH_MODE_MD5 E_IsisTypes_AUTH_MODE = 1
	// IsisTypes_AUTH_MODE_TEXT corresponds to the value TEXT of IsisTypes_AUTH_MODE
	IsisTypes_AUTH_MODE_TEXT E_IsisTypes_AUTH_MODE = 2
)

// E_IsisTypes_AdaptiveTimerType is a derived int64 type which is used to represent
// the enumerated node IsisTypes_AdaptiveTimerType. An additional value named
// IsisTypes_AdaptiveTimerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_AdaptiveTimerType int64

// IsYANGGoEnum ensures that IsisTypes_AdaptiveTimerType implements the yang.GoEnum
// interface. This ensures that IsisTypes_AdaptiveTimerType can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_AdaptiveTimerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_AdaptiveTimerType.
func (E_IsisTypes_AdaptiveTimerType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_AdaptiveTimerType.
func (e E_IsisTypes_AdaptiveTimerType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_AdaptiveTimerType")
}

const (
	// IsisTypes_AdaptiveTimerType_UNSET corresponds to the value UNSET of IsisTypes_AdaptiveTimerType
	IsisTypes_AdaptiveTimerType_UNSET E_IsisTypes_AdaptiveTimerType = 0
	// IsisTypes_AdaptiveTimerType_LINEAR corresponds to the value LINEAR of IsisTypes_AdaptiveTimerType
	IsisTypes_AdaptiveTimerType_LINEAR E_IsisTypes_AdaptiveTimerType = 1
	// IsisTypes_AdaptiveTimerType_EXPONENTIAL corresponds to the value EXPONENTIAL of IsisTypes_AdaptiveTimerType
	IsisTypes_AdaptiveTimerType_EXPONENTIAL E_IsisTypes_AdaptiveTimerType = 2
)

// E_IsisTypes_CircuitType is a derived int64 type which is used to represent
// the enumerated node IsisTypes_CircuitType. An additional value named
// IsisTypes_CircuitType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_CircuitType int64

// IsYANGGoEnum ensures that IsisTypes_CircuitType implements the yang.GoEnum
// interface. This ensures that IsisTypes_CircuitType can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_CircuitType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_CircuitType.
func (E_IsisTypes_CircuitType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_CircuitType.
func (e E_IsisTypes_CircuitType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_CircuitType")
}

const (
	// IsisTypes_CircuitType_UNSET corresponds to the value UNSET of IsisTypes_CircuitType
	IsisTypes_CircuitType_UNSET E_IsisTypes_CircuitType = 0
	// IsisTypes_CircuitType_POINT_TO_POINT corresponds to the value POINT_TO_POINT of IsisTypes_CircuitType
	IsisTypes_CircuitType_POINT_TO_POINT E_IsisTypes_CircuitType = 1
	// IsisTypes_CircuitType_BROADCAST corresponds to the value BROADCAST of IsisTypes_CircuitType
	IsisTypes_CircuitType_BROADCAST E_IsisTypes_CircuitType = 2
)

// E_IsisTypes_HelloPaddingType is a derived int64 type which is used to represent
// the enumerated node IsisTypes_HelloPaddingType. An additional value named
// IsisTypes_HelloPaddingType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_HelloPaddingType int64

// IsYANGGoEnum ensures that IsisTypes_HelloPaddingType implements the yang.GoEnum
// interface. This ensures that IsisTypes_HelloPaddingType can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_HelloPaddingType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_HelloPaddingType.
func (E_IsisTypes_HelloPaddingType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_HelloPaddingType.
func (e E_IsisTypes_HelloPaddingType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_HelloPaddingType")
}

const (
	// IsisTypes_HelloPaddingType_UNSET corresponds to the value UNSET of IsisTypes_HelloPaddingType
	IsisTypes_HelloPaddingType_UNSET E_IsisTypes_HelloPaddingType = 0
	// IsisTypes_HelloPaddingType_STRICT corresponds to the value STRICT of IsisTypes_HelloPaddingType
	IsisTypes_HelloPaddingType_STRICT E_IsisTypes_HelloPaddingType = 1
	// IsisTypes_HelloPaddingType_LOOSE corresponds to the value LOOSE of IsisTypes_HelloPaddingType
	IsisTypes_HelloPaddingType_LOOSE E_IsisTypes_HelloPaddingType = 2
	// IsisTypes_HelloPaddingType_ADAPTIVE corresponds to the value ADAPTIVE of IsisTypes_HelloPaddingType
	IsisTypes_HelloPaddingType_ADAPTIVE E_IsisTypes_HelloPaddingType = 3
	// IsisTypes_HelloPaddingType_DISABLE corresponds to the value DISABLE of IsisTypes_HelloPaddingType
	IsisTypes_HelloPaddingType_DISABLE E_IsisTypes_HelloPaddingType = 4
)

// E_IsisTypes_IsisInterfaceAdjState is a derived int64 type which is used to represent
// the enumerated node IsisTypes_IsisInterfaceAdjState. An additional value named
// IsisTypes_IsisInterfaceAdjState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_IsisInterfaceAdjState int64

// IsYANGGoEnum ensures that IsisTypes_IsisInterfaceAdjState implements the yang.GoEnum
// interface. This ensures that IsisTypes_IsisInterfaceAdjState can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_IsisInterfaceAdjState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_IsisInterfaceAdjState.
func (E_IsisTypes_IsisInterfaceAdjState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_IsisTypes_IsisInterfaceAdjState.
func (e E_IsisTypes_IsisInterfaceAdjState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_IsisInterfaceAdjState")
}

const (
	// IsisTypes_IsisInterfaceAdjState_UNSET corresponds to the value UNSET of IsisTypes_IsisInterfaceAdjState
	IsisTypes_IsisInterfaceAdjState_UNSET E_IsisTypes_IsisInterfaceAdjState = 0
	// IsisTypes_IsisInterfaceAdjState_UP corresponds to the value UP of IsisTypes_IsisInterfaceAdjState
	IsisTypes_IsisInterfaceAdjState_UP E_IsisTypes_IsisInterfaceAdjState = 1
	// IsisTypes_IsisInterfaceAdjState_DOWN corresponds to the value DOWN of IsisTypes_IsisInterfaceAdjState
	IsisTypes_IsisInterfaceAdjState_DOWN E_IsisTypes_IsisInterfaceAdjState = 2
	// IsisTypes_IsisInterfaceAdjState_INIT corresponds to the value INIT of IsisTypes_IsisInterfaceAdjState
	IsisTypes_IsisInterfaceAdjState_INIT E_IsisTypes_IsisInterfaceAdjState = 3
	// IsisTypes_IsisInterfaceAdjState_FAILED corresponds to the value FAILED of IsisTypes_IsisInterfaceAdjState
	IsisTypes_IsisInterfaceAdjState_FAILED E_IsisTypes_IsisInterfaceAdjState = 4
)

// E_IsisTypes_LevelType is a derived int64 type which is used to represent
// the enumerated node IsisTypes_LevelType. An additional value named
// IsisTypes_LevelType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_LevelType int64

// IsYANGGoEnum ensures that IsisTypes_LevelType implements the yang.GoEnum
// interface. This ensures that IsisTypes_LevelType can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_LevelType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_LevelType.
func (E_IsisTypes_LevelType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_LevelType.
func (e E_IsisTypes_LevelType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_LevelType")
}

const (
	// IsisTypes_LevelType_UNSET corresponds to the value UNSET of IsisTypes_LevelType
	IsisTypes_LevelType_UNSET E_IsisTypes_LevelType = 0
	// IsisTypes_LevelType_LEVEL_1 corresponds to the value LEVEL_1 of IsisTypes_LevelType
	IsisTypes_LevelType_LEVEL_1 E_IsisTypes_LevelType = 1
	// IsisTypes_LevelType_LEVEL_2 corresponds to the value LEVEL_2 of IsisTypes_LevelType
	IsisTypes_LevelType_LEVEL_2 E_IsisTypes_LevelType = 2
	// IsisTypes_LevelType_LEVEL_1_2 corresponds to the value LEVEL_1_2 of IsisTypes_LevelType
	IsisTypes_LevelType_LEVEL_1_2 E_IsisTypes_LevelType = 3
)

// E_IsisTypes_MetricStyle is a derived int64 type which is used to represent
// the enumerated node IsisTypes_MetricStyle. An additional value named
// IsisTypes_MetricStyle_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_MetricStyle int64

// IsYANGGoEnum ensures that IsisTypes_MetricStyle implements the yang.GoEnum
// interface. This ensures that IsisTypes_MetricStyle can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_MetricStyle) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_MetricStyle.
func (E_IsisTypes_MetricStyle) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_MetricStyle.
func (e E_IsisTypes_MetricStyle) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_MetricStyle")
}

const (
	// IsisTypes_MetricStyle_UNSET corresponds to the value UNSET of IsisTypes_MetricStyle
	IsisTypes_MetricStyle_UNSET E_IsisTypes_MetricStyle = 0
	// IsisTypes_MetricStyle_NARROW_METRIC corresponds to the value NARROW_METRIC of IsisTypes_MetricStyle
	IsisTypes_MetricStyle_NARROW_METRIC E_IsisTypes_MetricStyle = 1
	// IsisTypes_MetricStyle_WIDE_METRIC corresponds to the value WIDE_METRIC of IsisTypes_MetricStyle
	IsisTypes_MetricStyle_WIDE_METRIC E_IsisTypes_MetricStyle = 2
)

// E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE. An additional value named
// IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE int64

// IsYANGGoEnum ensures that IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE implements the yang.GoEnum
// interface. This ensures that IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE.
func (E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE.
func (e E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE")
}

const (
	// IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_UNSET corresponds to the value UNSET of IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
	IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_UNSET E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE = 0
	// IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_BGP corresponds to the value WAIT_FOR_BGP of IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
	IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_BGP E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE = 1
	// IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_SYSTEM corresponds to the value WAIT_FOR_SYSTEM of IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
	IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_SYSTEM E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE = 2
)

// E_IsisTypes_SAFI_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_SAFI_TYPE. An additional value named
// IsisTypes_SAFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_SAFI_TYPE int64

// IsYANGGoEnum ensures that IsisTypes_SAFI_TYPE implements the yang.GoEnum
// interface. This ensures that IsisTypes_SAFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_SAFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_SAFI_TYPE.
func (E_IsisTypes_SAFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_SAFI_TYPE.
func (e E_IsisTypes_SAFI_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_SAFI_TYPE")
}

const (
	// IsisTypes_SAFI_TYPE_UNSET corresponds to the value UNSET of IsisTypes_SAFI_TYPE
	IsisTypes_SAFI_TYPE_UNSET E_IsisTypes_SAFI_TYPE = 0
	// IsisTypes_SAFI_TYPE_MULTICAST corresponds to the value MULTICAST of IsisTypes_SAFI_TYPE
	IsisTypes_SAFI_TYPE_MULTICAST E_IsisTypes_SAFI_TYPE = 1
	// IsisTypes_SAFI_TYPE_UNICAST corresponds to the value UNICAST of IsisTypes_SAFI_TYPE
	IsisTypes_SAFI_TYPE_UNICAST E_IsisTypes_SAFI_TYPE = 2
)

// E_Isis_IsisMetricFlags is a derived int64 type which is used to represent
// the enumerated node Isis_IsisMetricFlags. An additional value named
// Isis_IsisMetricFlags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Isis_IsisMetricFlags int64

// IsYANGGoEnum ensures that Isis_IsisMetricFlags implements the yang.GoEnum
// interface. This ensures that Isis_IsisMetricFlags can be identified as a
// mapped type for a YANG enumeration.
func (E_Isis_IsisMetricFlags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Isis_IsisMetricFlags.
func (E_Isis_IsisMetricFlags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Isis_IsisMetricFlags.
func (e E_Isis_IsisMetricFlags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Isis_IsisMetricFlags")
}

const (
	// Isis_IsisMetricFlags_UNSET corresponds to the value UNSET of Isis_IsisMetricFlags
	Isis_IsisMetricFlags_UNSET E_Isis_IsisMetricFlags = 0
	// Isis_IsisMetricFlags_INTERNAL corresponds to the value INTERNAL of Isis_IsisMetricFlags
	Isis_IsisMetricFlags_INTERNAL E_Isis_IsisMetricFlags = 1
	// Isis_IsisMetricFlags_UNSUPPORTED corresponds to the value UNSUPPORTED of Isis_IsisMetricFlags
	Isis_IsisMetricFlags_UNSUPPORTED E_Isis_IsisMetricFlags = 2
)

// E_KeychainTypes_AUTH_TYPE is a derived int64 type which is used to represent
// the enumerated node KeychainTypes_AUTH_TYPE. An additional value named
// KeychainTypes_AUTH_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_KeychainTypes_AUTH_TYPE int64

// IsYANGGoEnum ensures that KeychainTypes_AUTH_TYPE implements the yang.GoEnum
// interface. This ensures that KeychainTypes_AUTH_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_KeychainTypes_AUTH_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  KeychainTypes_AUTH_TYPE.
func (E_KeychainTypes_AUTH_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_KeychainTypes_AUTH_TYPE.
func (e E_KeychainTypes_AUTH_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_KeychainTypes_AUTH_TYPE")
}

const (
	// KeychainTypes_AUTH_TYPE_UNSET corresponds to the value UNSET of KeychainTypes_AUTH_TYPE
	KeychainTypes_AUTH_TYPE_UNSET E_KeychainTypes_AUTH_TYPE = 0
	// KeychainTypes_AUTH_TYPE_KEYCHAIN corresponds to the value KEYCHAIN of KeychainTypes_AUTH_TYPE
	KeychainTypes_AUTH_TYPE_KEYCHAIN E_KeychainTypes_AUTH_TYPE = 1
	// KeychainTypes_AUTH_TYPE_SIMPLE_KEY corresponds to the value SIMPLE_KEY of KeychainTypes_AUTH_TYPE
	KeychainTypes_AUTH_TYPE_SIMPLE_KEY E_KeychainTypes_AUTH_TYPE = 2
)

// E_KeychainTypes_CRYPTO_TYPE is a derived int64 type which is used to represent
// the enumerated node KeychainTypes_CRYPTO_TYPE. An additional value named
// KeychainTypes_CRYPTO_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_KeychainTypes_CRYPTO_TYPE int64

// IsYANGGoEnum ensures that KeychainTypes_CRYPTO_TYPE implements the yang.GoEnum
// interface. This ensures that KeychainTypes_CRYPTO_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_KeychainTypes_CRYPTO_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  KeychainTypes_CRYPTO_TYPE.
func (E_KeychainTypes_CRYPTO_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_KeychainTypes_CRYPTO_TYPE.
func (e E_KeychainTypes_CRYPTO_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_KeychainTypes_CRYPTO_TYPE")
}

const (
	// KeychainTypes_CRYPTO_TYPE_UNSET corresponds to the value UNSET of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_UNSET E_KeychainTypes_CRYPTO_TYPE = 0
	// KeychainTypes_CRYPTO_TYPE_AES_28_CMAC_96 corresponds to the value AES_28_CMAC_96 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_AES_28_CMAC_96 E_KeychainTypes_CRYPTO_TYPE = 1
	// KeychainTypes_CRYPTO_TYPE_CRYPTO_NONE corresponds to the value CRYPTO_NONE of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_CRYPTO_NONE E_KeychainTypes_CRYPTO_TYPE = 2
	// KeychainTypes_CRYPTO_TYPE_HMAC_MD5 corresponds to the value HMAC_MD5 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_MD5 E_KeychainTypes_CRYPTO_TYPE = 3
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1 corresponds to the value HMAC_SHA_1 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1 E_KeychainTypes_CRYPTO_TYPE = 4
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_12 corresponds to the value HMAC_SHA_1_12 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_12 E_KeychainTypes_CRYPTO_TYPE = 5
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_20 corresponds to the value HMAC_SHA_1_20 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_20 E_KeychainTypes_CRYPTO_TYPE = 6
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_96 corresponds to the value HMAC_SHA_1_96 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_96 E_KeychainTypes_CRYPTO_TYPE = 7
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_256 corresponds to the value HMAC_SHA_256 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_256 E_KeychainTypes_CRYPTO_TYPE = 8
	// KeychainTypes_CRYPTO_TYPE_MD5 corresponds to the value MD5 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_MD5 E_KeychainTypes_CRYPTO_TYPE = 9
	// KeychainTypes_CRYPTO_TYPE_SHA_1 corresponds to the value SHA_1 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_SHA_1 E_KeychainTypes_CRYPTO_TYPE = 10
)

// E_Keychain_Tolerance_Enum is a derived int64 type which is used to represent
// the enumerated node Keychain_Tolerance_Enum. An additional value named
// Keychain_Tolerance_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Keychain_Tolerance_Enum int64

// IsYANGGoEnum ensures that Keychain_Tolerance_Enum implements the yang.GoEnum
// interface. This ensures that Keychain_Tolerance_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_Keychain_Tolerance_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Keychain_Tolerance_Enum.
func (E_Keychain_Tolerance_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Keychain_Tolerance_Enum.
func (e E_Keychain_Tolerance_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Keychain_Tolerance_Enum")
}

const (
	// Keychain_Tolerance_Enum_UNSET corresponds to the value UNSET of Keychain_Tolerance_Enum
	Keychain_Tolerance_Enum_UNSET E_Keychain_Tolerance_Enum = 0
	// Keychain_Tolerance_Enum_FOREVER corresponds to the value FOREVER of Keychain_Tolerance_Enum
	Keychain_Tolerance_Enum_FOREVER E_Keychain_Tolerance_Enum = 1
)

// E_Lacp_LacpActivityType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpActivityType. An additional value named
// Lacp_LacpActivityType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpActivityType int64

// IsYANGGoEnum ensures that Lacp_LacpActivityType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpActivityType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpActivityType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpActivityType.
func (E_Lacp_LacpActivityType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpActivityType.
func (e E_Lacp_LacpActivityType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpActivityType")
}

const (
	// Lacp_LacpActivityType_UNSET corresponds to the value UNSET of Lacp_LacpActivityType
	Lacp_LacpActivityType_UNSET E_Lacp_LacpActivityType = 0
	// Lacp_LacpActivityType_ACTIVE corresponds to the value ACTIVE of Lacp_LacpActivityType
	Lacp_LacpActivityType_ACTIVE E_Lacp_LacpActivityType = 1
	// Lacp_LacpActivityType_PASSIVE corresponds to the value PASSIVE of Lacp_LacpActivityType
	Lacp_LacpActivityType_PASSIVE E_Lacp_LacpActivityType = 2
)

// E_Lacp_LacpPeriodType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpPeriodType. An additional value named
// Lacp_LacpPeriodType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpPeriodType int64

// IsYANGGoEnum ensures that Lacp_LacpPeriodType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpPeriodType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpPeriodType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpPeriodType.
func (E_Lacp_LacpPeriodType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpPeriodType.
func (e E_Lacp_LacpPeriodType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpPeriodType")
}

const (
	// Lacp_LacpPeriodType_UNSET corresponds to the value UNSET of Lacp_LacpPeriodType
	Lacp_LacpPeriodType_UNSET E_Lacp_LacpPeriodType = 0
	// Lacp_LacpPeriodType_FAST corresponds to the value FAST of Lacp_LacpPeriodType
	Lacp_LacpPeriodType_FAST E_Lacp_LacpPeriodType = 1
	// Lacp_LacpPeriodType_SLOW corresponds to the value SLOW of Lacp_LacpPeriodType
	Lacp_LacpPeriodType_SLOW E_Lacp_LacpPeriodType = 2
)

// E_Lacp_LacpSynchronizationType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpSynchronizationType. An additional value named
// Lacp_LacpSynchronizationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpSynchronizationType int64

// IsYANGGoEnum ensures that Lacp_LacpSynchronizationType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpSynchronizationType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpSynchronizationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpSynchronizationType.
func (E_Lacp_LacpSynchronizationType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpSynchronizationType.
func (e E_Lacp_LacpSynchronizationType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpSynchronizationType")
}

const (
	// Lacp_LacpSynchronizationType_UNSET corresponds to the value UNSET of Lacp_LacpSynchronizationType
	Lacp_LacpSynchronizationType_UNSET E_Lacp_LacpSynchronizationType = 0
	// Lacp_LacpSynchronizationType_IN_SYNC corresponds to the value IN_SYNC of Lacp_LacpSynchronizationType
	Lacp_LacpSynchronizationType_IN_SYNC E_Lacp_LacpSynchronizationType = 1
	// Lacp_LacpSynchronizationType_OUT_SYNC corresponds to the value OUT_SYNC of Lacp_LacpSynchronizationType
	Lacp_LacpSynchronizationType_OUT_SYNC E_Lacp_LacpSynchronizationType = 2
)

// E_Lacp_LacpTimeoutType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpTimeoutType. An additional value named
// Lacp_LacpTimeoutType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpTimeoutType int64

// IsYANGGoEnum ensures that Lacp_LacpTimeoutType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpTimeoutType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpTimeoutType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpTimeoutType.
func (E_Lacp_LacpTimeoutType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpTimeoutType.
func (e E_Lacp_LacpTimeoutType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpTimeoutType")
}

const (
	// Lacp_LacpTimeoutType_UNSET corresponds to the value UNSET of Lacp_LacpTimeoutType
	Lacp_LacpTimeoutType_UNSET E_Lacp_LacpTimeoutType = 0
	// Lacp_LacpTimeoutType_LONG corresponds to the value LONG of Lacp_LacpTimeoutType
	Lacp_LacpTimeoutType_LONG E_Lacp_LacpTimeoutType = 1
	// Lacp_LacpTimeoutType_SHORT corresponds to the value SHORT of Lacp_LacpTimeoutType
	Lacp_LacpTimeoutType_SHORT E_Lacp_LacpTimeoutType = 2
)

// E_LanAdjacencySid_Flags is a derived int64 type which is used to represent
// the enumerated node LanAdjacencySid_Flags. An additional value named
// LanAdjacencySid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LanAdjacencySid_Flags int64

// IsYANGGoEnum ensures that LanAdjacencySid_Flags implements the yang.GoEnum
// interface. This ensures that LanAdjacencySid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_LanAdjacencySid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LanAdjacencySid_Flags.
func (E_LanAdjacencySid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LanAdjacencySid_Flags.
func (e E_LanAdjacencySid_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LanAdjacencySid_Flags")
}

const (
	// LanAdjacencySid_Flags_UNSET corresponds to the value UNSET of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_UNSET E_LanAdjacencySid_Flags = 0
	// LanAdjacencySid_Flags_ADDRESS_FAMILY corresponds to the value ADDRESS_FAMILY of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_ADDRESS_FAMILY E_LanAdjacencySid_Flags = 1
	// LanAdjacencySid_Flags_BACKUP corresponds to the value BACKUP of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_BACKUP E_LanAdjacencySid_Flags = 2
	// LanAdjacencySid_Flags_VALUE corresponds to the value VALUE of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_VALUE E_LanAdjacencySid_Flags = 3
	// LanAdjacencySid_Flags_LOCAL corresponds to the value LOCAL of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_LOCAL E_LanAdjacencySid_Flags = 4
	// LanAdjacencySid_Flags_SET corresponds to the value SET of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_SET E_LanAdjacencySid_Flags = 5
)

// E_LinkAttributes_LocalProtection is a derived int64 type which is used to represent
// the enumerated node LinkAttributes_LocalProtection. An additional value named
// LinkAttributes_LocalProtection_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LinkAttributes_LocalProtection int64

// IsYANGGoEnum ensures that LinkAttributes_LocalProtection implements the yang.GoEnum
// interface. This ensures that LinkAttributes_LocalProtection can be identified as a
// mapped type for a YANG enumeration.
func (E_LinkAttributes_LocalProtection) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LinkAttributes_LocalProtection.
func (E_LinkAttributes_LocalProtection) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_LinkAttributes_LocalProtection.
func (e E_LinkAttributes_LocalProtection) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LinkAttributes_LocalProtection")
}

const (
	// LinkAttributes_LocalProtection_UNSET corresponds to the value UNSET of LinkAttributes_LocalProtection
	LinkAttributes_LocalProtection_UNSET E_LinkAttributes_LocalProtection = 0
	// LinkAttributes_LocalProtection_LOCAL_PROTECTION corresponds to the value LOCAL_PROTECTION of LinkAttributes_LocalProtection
	LinkAttributes_LocalProtection_LOCAL_PROTECTION E_LinkAttributes_LocalProtection = 1
	// LinkAttributes_LocalProtection_LINK_EXCLUDED corresponds to the value LINK_EXCLUDED of LinkAttributes_LocalProtection
	LinkAttributes_LocalProtection_LINK_EXCLUDED E_LinkAttributes_LocalProtection = 2
)

// E_LinkProtectionType_Type is a derived int64 type which is used to represent
// the enumerated node LinkProtectionType_Type. An additional value named
// LinkProtectionType_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LinkProtectionType_Type int64

// IsYANGGoEnum ensures that LinkProtectionType_Type implements the yang.GoEnum
// interface. This ensures that LinkProtectionType_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_LinkProtectionType_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LinkProtectionType_Type.
func (E_LinkProtectionType_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LinkProtectionType_Type.
func (e E_LinkProtectionType_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LinkProtectionType_Type")
}

const (
	// LinkProtectionType_Type_UNSET corresponds to the value UNSET of LinkProtectionType_Type
	LinkProtectionType_Type_UNSET E_LinkProtectionType_Type = 0
	// LinkProtectionType_Type_EXTRA_TRAFFIC corresponds to the value EXTRA_TRAFFIC of LinkProtectionType_Type
	LinkProtectionType_Type_EXTRA_TRAFFIC E_LinkProtectionType_Type = 1
	// LinkProtectionType_Type_UNPROTECTED corresponds to the value UNPROTECTED of LinkProtectionType_Type
	LinkProtectionType_Type_UNPROTECTED E_LinkProtectionType_Type = 2
	// LinkProtectionType_Type_SHARED corresponds to the value SHARED of LinkProtectionType_Type
	LinkProtectionType_Type_SHARED E_LinkProtectionType_Type = 3
	// LinkProtectionType_Type_ONE_ONE corresponds to the value ONE_ONE of LinkProtectionType_Type
	LinkProtectionType_Type_ONE_ONE E_LinkProtectionType_Type = 4
	// LinkProtectionType_Type_PLUS_ONE corresponds to the value PLUS_ONE of LinkProtectionType_Type
	LinkProtectionType_Type_PLUS_ONE E_LinkProtectionType_Type = 5
	// LinkProtectionType_Type_ENHANCED corresponds to the value ENHANCED of LinkProtectionType_Type
	LinkProtectionType_Type_ENHANCED E_LinkProtectionType_Type = 6
)

// E_Link_SubTlv_Type_Enum is a derived int64 type which is used to represent
// the enumerated node Link_SubTlv_Type_Enum. An additional value named
// Link_SubTlv_Type_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Link_SubTlv_Type_Enum int64

// IsYANGGoEnum ensures that Link_SubTlv_Type_Enum implements the yang.GoEnum
// interface. This ensures that Link_SubTlv_Type_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_Link_SubTlv_Type_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Link_SubTlv_Type_Enum.
func (E_Link_SubTlv_Type_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Link_SubTlv_Type_Enum.
func (e E_Link_SubTlv_Type_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Link_SubTlv_Type_Enum")
}

const (
	// Link_SubTlv_Type_Enum_UNSET corresponds to the value UNSET of Link_SubTlv_Type_Enum
	Link_SubTlv_Type_Enum_UNSET E_Link_SubTlv_Type_Enum = 0
	// Link_SubTlv_Type_Enum_UNKNOWN corresponds to the value UNKNOWN of Link_SubTlv_Type_Enum
	Link_SubTlv_Type_Enum_UNKNOWN E_Link_SubTlv_Type_Enum = 1
)

// E_LldpTypes_ChassisIdType is a derived int64 type which is used to represent
// the enumerated node LldpTypes_ChassisIdType. An additional value named
// LldpTypes_ChassisIdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LldpTypes_ChassisIdType int64

// IsYANGGoEnum ensures that LldpTypes_ChassisIdType implements the yang.GoEnum
// interface. This ensures that LldpTypes_ChassisIdType can be identified as a
// mapped type for a YANG enumeration.
func (E_LldpTypes_ChassisIdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LldpTypes_ChassisIdType.
func (E_LldpTypes_ChassisIdType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LldpTypes_ChassisIdType.
func (e E_LldpTypes_ChassisIdType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LldpTypes_ChassisIdType")
}

const (
	// LldpTypes_ChassisIdType_UNSET corresponds to the value UNSET of LldpTypes_ChassisIdType
	LldpTypes_ChassisIdType_UNSET E_LldpTypes_ChassisIdType = 0
	// LldpTypes_ChassisIdType_CHASSIS_COMPONENT corresponds to the value CHASSIS_COMPONENT of LldpTypes_ChassisIdType
	LldpTypes_ChassisIdType_CHASSIS_COMPONENT E_LldpTypes_ChassisIdType = 1
	// LldpTypes_ChassisIdType_INTERFACE_ALIAS corresponds to the value INTERFACE_ALIAS of LldpTypes_ChassisIdType
	LldpTypes_ChassisIdType_INTERFACE_ALIAS E_LldpTypes_ChassisIdType = 2
	// LldpTypes_ChassisIdType_PORT_COMPONENT corresponds to the value PORT_COMPONENT of LldpTypes_ChassisIdType
	LldpTypes_ChassisIdType_PORT_COMPONENT E_LldpTypes_ChassisIdType = 3
	// LldpTypes_ChassisIdType_MAC_ADDRESS corresponds to the value MAC_ADDRESS of LldpTypes_ChassisIdType
	LldpTypes_ChassisIdType_MAC_ADDRESS E_LldpTypes_ChassisIdType = 4
	// LldpTypes_ChassisIdType_NETWORK_ADDRESS corresponds to the value NETWORK_ADDRESS of LldpTypes_ChassisIdType
	LldpTypes_ChassisIdType_NETWORK_ADDRESS E_LldpTypes_ChassisIdType = 5
	// LldpTypes_ChassisIdType_INTERFACE_NAME corresponds to the value INTERFACE_NAME of LldpTypes_ChassisIdType
	LldpTypes_ChassisIdType_INTERFACE_NAME E_LldpTypes_ChassisIdType = 6
	// LldpTypes_ChassisIdType_LOCAL corresponds to the value LOCAL of LldpTypes_ChassisIdType
	LldpTypes_ChassisIdType_LOCAL E_LldpTypes_ChassisIdType = 7
)

// E_LldpTypes_LLDP_SYSTEM_CAPABILITY is a derived int64 type which is used to represent
// the enumerated node LldpTypes_LLDP_SYSTEM_CAPABILITY. An additional value named
// LldpTypes_LLDP_SYSTEM_CAPABILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LldpTypes_LLDP_SYSTEM_CAPABILITY int64

// IsYANGGoEnum ensures that LldpTypes_LLDP_SYSTEM_CAPABILITY implements the yang.GoEnum
// interface. This ensures that LldpTypes_LLDP_SYSTEM_CAPABILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_LldpTypes_LLDP_SYSTEM_CAPABILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LldpTypes_LLDP_SYSTEM_CAPABILITY.
func (E_LldpTypes_LLDP_SYSTEM_CAPABILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_LldpTypes_LLDP_SYSTEM_CAPABILITY.
func (e E_LldpTypes_LLDP_SYSTEM_CAPABILITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LldpTypes_LLDP_SYSTEM_CAPABILITY")
}

const (
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_UNSET corresponds to the value UNSET of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_UNSET E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 0
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_C_VLAN corresponds to the value C_VLAN of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_C_VLAN E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 1
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_DOCSIS_CABLE_DEVICE corresponds to the value DOCSIS_CABLE_DEVICE of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_DOCSIS_CABLE_DEVICE E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 2
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_MAC_BRIDGE corresponds to the value MAC_BRIDGE of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_MAC_BRIDGE E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 3
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_OTHER corresponds to the value OTHER of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_OTHER E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 4
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_REPEATER corresponds to the value REPEATER of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_REPEATER E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 5
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_ROUTER corresponds to the value ROUTER of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_ROUTER E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 6
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_STATION_ONLY corresponds to the value STATION_ONLY of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_STATION_ONLY E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 7
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_S_VLAN corresponds to the value S_VLAN of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_S_VLAN E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 8
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_TELEPHONE corresponds to the value TELEPHONE of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_TELEPHONE E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 9
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_TWO_PORT_MAC_RELAY corresponds to the value TWO_PORT_MAC_RELAY of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_TWO_PORT_MAC_RELAY E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 10
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_WLAN_ACCESS_POINT corresponds to the value WLAN_ACCESS_POINT of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_WLAN_ACCESS_POINT E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 11
)

// E_LldpTypes_LLDP_TLV is a derived int64 type which is used to represent
// the enumerated node LldpTypes_LLDP_TLV. An additional value named
// LldpTypes_LLDP_TLV_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LldpTypes_LLDP_TLV int64

// IsYANGGoEnum ensures that LldpTypes_LLDP_TLV implements the yang.GoEnum
// interface. This ensures that LldpTypes_LLDP_TLV can be identified as a
// mapped type for a YANG enumeration.
func (E_LldpTypes_LLDP_TLV) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LldpTypes_LLDP_TLV.
func (E_LldpTypes_LLDP_TLV) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LldpTypes_LLDP_TLV.
func (e E_LldpTypes_LLDP_TLV) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LldpTypes_LLDP_TLV")
}

const (
	// LldpTypes_LLDP_TLV_UNSET corresponds to the value UNSET of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_UNSET E_LldpTypes_LLDP_TLV = 0
	// LldpTypes_LLDP_TLV_CHASSIS_ID corresponds to the value CHASSIS_ID of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_CHASSIS_ID E_LldpTypes_LLDP_TLV = 1
	// LldpTypes_LLDP_TLV_MANAGEMENT_ADDRESS corresponds to the value MANAGEMENT_ADDRESS of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_MANAGEMENT_ADDRESS E_LldpTypes_LLDP_TLV = 2
	// LldpTypes_LLDP_TLV_PORT_DESCRIPTION corresponds to the value PORT_DESCRIPTION of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_PORT_DESCRIPTION E_LldpTypes_LLDP_TLV = 3
	// LldpTypes_LLDP_TLV_PORT_ID corresponds to the value PORT_ID of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_PORT_ID E_LldpTypes_LLDP_TLV = 4
	// LldpTypes_LLDP_TLV_SYSTEM_CAPABILITIES corresponds to the value SYSTEM_CAPABILITIES of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_SYSTEM_CAPABILITIES E_LldpTypes_LLDP_TLV = 5
	// LldpTypes_LLDP_TLV_SYSTEM_DESCRIPTION corresponds to the value SYSTEM_DESCRIPTION of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_SYSTEM_DESCRIPTION E_LldpTypes_LLDP_TLV = 6
	// LldpTypes_LLDP_TLV_SYSTEM_NAME corresponds to the value SYSTEM_NAME of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_SYSTEM_NAME E_LldpTypes_LLDP_TLV = 7
)

// E_LldpTypes_PortIdType is a derived int64 type which is used to represent
// the enumerated node LldpTypes_PortIdType. An additional value named
// LldpTypes_PortIdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LldpTypes_PortIdType int64

// IsYANGGoEnum ensures that LldpTypes_PortIdType implements the yang.GoEnum
// interface. This ensures that LldpTypes_PortIdType can be identified as a
// mapped type for a YANG enumeration.
func (E_LldpTypes_PortIdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LldpTypes_PortIdType.
func (E_LldpTypes_PortIdType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LldpTypes_PortIdType.
func (e E_LldpTypes_PortIdType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LldpTypes_PortIdType")
}

const (
	// LldpTypes_PortIdType_UNSET corresponds to the value UNSET of LldpTypes_PortIdType
	LldpTypes_PortIdType_UNSET E_LldpTypes_PortIdType = 0
	// LldpTypes_PortIdType_INTERFACE_ALIAS corresponds to the value INTERFACE_ALIAS of LldpTypes_PortIdType
	LldpTypes_PortIdType_INTERFACE_ALIAS E_LldpTypes_PortIdType = 1
	// LldpTypes_PortIdType_PORT_COMPONENT corresponds to the value PORT_COMPONENT of LldpTypes_PortIdType
	LldpTypes_PortIdType_PORT_COMPONENT E_LldpTypes_PortIdType = 2
	// LldpTypes_PortIdType_MAC_ADDRESS corresponds to the value MAC_ADDRESS of LldpTypes_PortIdType
	LldpTypes_PortIdType_MAC_ADDRESS E_LldpTypes_PortIdType = 3
	// LldpTypes_PortIdType_NETWORK_ADDRESS corresponds to the value NETWORK_ADDRESS of LldpTypes_PortIdType
	LldpTypes_PortIdType_NETWORK_ADDRESS E_LldpTypes_PortIdType = 4
	// LldpTypes_PortIdType_INTERFACE_NAME corresponds to the value INTERFACE_NAME of LldpTypes_PortIdType
	LldpTypes_PortIdType_INTERFACE_NAME E_LldpTypes_PortIdType = 5
	// LldpTypes_PortIdType_AGENT_CIRCUIT_ID corresponds to the value AGENT_CIRCUIT_ID of LldpTypes_PortIdType
	LldpTypes_PortIdType_AGENT_CIRCUIT_ID E_LldpTypes_PortIdType = 6
	// LldpTypes_PortIdType_LOCAL corresponds to the value LOCAL of LldpTypes_PortIdType
	LldpTypes_PortIdType_LOCAL E_LldpTypes_PortIdType = 7
)

// E_LocalRouting_LOCAL_DEFINED_NEXT_HOP is a derived int64 type which is used to represent
// the enumerated node LocalRouting_LOCAL_DEFINED_NEXT_HOP. An additional value named
// LocalRouting_LOCAL_DEFINED_NEXT_HOP_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LocalRouting_LOCAL_DEFINED_NEXT_HOP int64

// IsYANGGoEnum ensures that LocalRouting_LOCAL_DEFINED_NEXT_HOP implements the yang.GoEnum
// interface. This ensures that LocalRouting_LOCAL_DEFINED_NEXT_HOP can be identified as a
// mapped type for a YANG enumeration.
func (E_LocalRouting_LOCAL_DEFINED_NEXT_HOP) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LocalRouting_LOCAL_DEFINED_NEXT_HOP.
func (E_LocalRouting_LOCAL_DEFINED_NEXT_HOP) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_LocalRouting_LOCAL_DEFINED_NEXT_HOP.
func (e E_LocalRouting_LOCAL_DEFINED_NEXT_HOP) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LocalRouting_LOCAL_DEFINED_NEXT_HOP")
}

const (
	// LocalRouting_LOCAL_DEFINED_NEXT_HOP_UNSET corresponds to the value UNSET of LocalRouting_LOCAL_DEFINED_NEXT_HOP
	LocalRouting_LOCAL_DEFINED_NEXT_HOP_UNSET E_LocalRouting_LOCAL_DEFINED_NEXT_HOP = 0
	// LocalRouting_LOCAL_DEFINED_NEXT_HOP_DROP corresponds to the value DROP of LocalRouting_LOCAL_DEFINED_NEXT_HOP
	LocalRouting_LOCAL_DEFINED_NEXT_HOP_DROP E_LocalRouting_LOCAL_DEFINED_NEXT_HOP = 1
	// LocalRouting_LOCAL_DEFINED_NEXT_HOP_LOCAL_LINK corresponds to the value LOCAL_LINK of LocalRouting_LOCAL_DEFINED_NEXT_HOP
	LocalRouting_LOCAL_DEFINED_NEXT_HOP_LOCAL_LINK E_LocalRouting_LOCAL_DEFINED_NEXT_HOP = 2
)

// E_LsaGeneration_TimerType is a derived int64 type which is used to represent
// the enumerated node LsaGeneration_TimerType. An additional value named
// LsaGeneration_TimerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LsaGeneration_TimerType int64

// IsYANGGoEnum ensures that LsaGeneration_TimerType implements the yang.GoEnum
// interface. This ensures that LsaGeneration_TimerType can be identified as a
// mapped type for a YANG enumeration.
func (E_LsaGeneration_TimerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LsaGeneration_TimerType.
func (E_LsaGeneration_TimerType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LsaGeneration_TimerType.
func (e E_LsaGeneration_TimerType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LsaGeneration_TimerType")
}

const (
	// LsaGeneration_TimerType_UNSET corresponds to the value UNSET of LsaGeneration_TimerType
	LsaGeneration_TimerType_UNSET E_LsaGeneration_TimerType = 0
	// LsaGeneration_TimerType_LINEAR_BACKOFF corresponds to the value LINEAR_BACKOFF of LsaGeneration_TimerType
	LsaGeneration_TimerType_LINEAR_BACKOFF E_LsaGeneration_TimerType = 1
	// LsaGeneration_TimerType_EXPONENTIAL_BACKOFF corresponds to the value EXPONENTIAL_BACKOFF of LsaGeneration_TimerType
	LsaGeneration_TimerType_EXPONENTIAL_BACKOFF E_LsaGeneration_TimerType = 2
)

// E_Lsp_Flags is a derived int64 type which is used to represent
// the enumerated node Lsp_Flags. An additional value named
// Lsp_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lsp_Flags int64

// IsYANGGoEnum ensures that Lsp_Flags implements the yang.GoEnum
// interface. This ensures that Lsp_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Lsp_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lsp_Flags.
func (E_Lsp_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lsp_Flags.
func (e E_Lsp_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lsp_Flags")
}

const (
	// Lsp_Flags_UNSET corresponds to the value UNSET of Lsp_Flags
	Lsp_Flags_UNSET E_Lsp_Flags = 0
	// Lsp_Flags_PARTITION_REPAIR corresponds to the value PARTITION_REPAIR of Lsp_Flags
	Lsp_Flags_PARTITION_REPAIR E_Lsp_Flags = 1
	// Lsp_Flags_ATTACHED_ERROR corresponds to the value ATTACHED_ERROR of Lsp_Flags
	Lsp_Flags_ATTACHED_ERROR E_Lsp_Flags = 2
	// Lsp_Flags_ATTACHED_EXPENSE corresponds to the value ATTACHED_EXPENSE of Lsp_Flags
	Lsp_Flags_ATTACHED_EXPENSE E_Lsp_Flags = 3
	// Lsp_Flags_ATTACHED_DELAY corresponds to the value ATTACHED_DELAY of Lsp_Flags
	Lsp_Flags_ATTACHED_DELAY E_Lsp_Flags = 4
	// Lsp_Flags_ATTACHED_DEFAULT corresponds to the value ATTACHED_DEFAULT of Lsp_Flags
	Lsp_Flags_ATTACHED_DEFAULT E_Lsp_Flags = 5
	// Lsp_Flags_OVERLOAD corresponds to the value OVERLOAD of Lsp_Flags
	Lsp_Flags_OVERLOAD E_Lsp_Flags = 6
)

// E_Lsp_PduType is a derived int64 type which is used to represent
// the enumerated node Lsp_PduType. An additional value named
// Lsp_PduType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lsp_PduType int64

// IsYANGGoEnum ensures that Lsp_PduType implements the yang.GoEnum
// interface. This ensures that Lsp_PduType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lsp_PduType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lsp_PduType.
func (E_Lsp_PduType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lsp_PduType.
func (e E_Lsp_PduType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lsp_PduType")
}

const (
	// Lsp_PduType_UNSET corresponds to the value UNSET of Lsp_PduType
	Lsp_PduType_UNSET E_Lsp_PduType = 0
	// Lsp_PduType_LEVEL_1 corresponds to the value LEVEL_1 of Lsp_PduType
	Lsp_PduType_LEVEL_1 E_Lsp_PduType = 1
	// Lsp_PduType_LEVEL_2 corresponds to the value LEVEL_2 of Lsp_PduType
	Lsp_PduType_LEVEL_2 E_Lsp_PduType = 2
)

// E_Messages_DEBUG_SERVICE is a derived int64 type which is used to represent
// the enumerated node Messages_DEBUG_SERVICE. An additional value named
// Messages_DEBUG_SERVICE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Messages_DEBUG_SERVICE int64

// IsYANGGoEnum ensures that Messages_DEBUG_SERVICE implements the yang.GoEnum
// interface. This ensures that Messages_DEBUG_SERVICE can be identified as a
// mapped type for a YANG enumeration.
func (E_Messages_DEBUG_SERVICE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Messages_DEBUG_SERVICE.
func (E_Messages_DEBUG_SERVICE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Messages_DEBUG_SERVICE.
func (e E_Messages_DEBUG_SERVICE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Messages_DEBUG_SERVICE")
}

const (
	// Messages_DEBUG_SERVICE_UNSET corresponds to the value UNSET of Messages_DEBUG_SERVICE
	Messages_DEBUG_SERVICE_UNSET E_Messages_DEBUG_SERVICE = 0
)

// E_MplsLdp_MplsLdpAdjacencyType is a derived int64 type which is used to represent
// the enumerated node MplsLdp_MplsLdpAdjacencyType. An additional value named
// MplsLdp_MplsLdpAdjacencyType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsLdp_MplsLdpAdjacencyType int64

// IsYANGGoEnum ensures that MplsLdp_MplsLdpAdjacencyType implements the yang.GoEnum
// interface. This ensures that MplsLdp_MplsLdpAdjacencyType can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsLdp_MplsLdpAdjacencyType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsLdp_MplsLdpAdjacencyType.
func (E_MplsLdp_MplsLdpAdjacencyType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsLdp_MplsLdpAdjacencyType.
func (e E_MplsLdp_MplsLdpAdjacencyType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsLdp_MplsLdpAdjacencyType")
}

const (
	// MplsLdp_MplsLdpAdjacencyType_UNSET corresponds to the value UNSET of MplsLdp_MplsLdpAdjacencyType
	MplsLdp_MplsLdpAdjacencyType_UNSET E_MplsLdp_MplsLdpAdjacencyType = 0
	// MplsLdp_MplsLdpAdjacencyType_LINK corresponds to the value LINK of MplsLdp_MplsLdpAdjacencyType
	MplsLdp_MplsLdpAdjacencyType_LINK E_MplsLdp_MplsLdpAdjacencyType = 1
	// MplsLdp_MplsLdpAdjacencyType_TARGETED corresponds to the value TARGETED of MplsLdp_MplsLdpAdjacencyType
	MplsLdp_MplsLdpAdjacencyType_TARGETED E_MplsLdp_MplsLdpAdjacencyType = 2
)

// E_MplsLdp_MplsLdpAfi is a derived int64 type which is used to represent
// the enumerated node MplsLdp_MplsLdpAfi. An additional value named
// MplsLdp_MplsLdpAfi_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsLdp_MplsLdpAfi int64

// IsYANGGoEnum ensures that MplsLdp_MplsLdpAfi implements the yang.GoEnum
// interface. This ensures that MplsLdp_MplsLdpAfi can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsLdp_MplsLdpAfi) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsLdp_MplsLdpAfi.
func (E_MplsLdp_MplsLdpAfi) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsLdp_MplsLdpAfi.
func (e E_MplsLdp_MplsLdpAfi) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsLdp_MplsLdpAfi")
}

const (
	// MplsLdp_MplsLdpAfi_UNSET corresponds to the value UNSET of MplsLdp_MplsLdpAfi
	MplsLdp_MplsLdpAfi_UNSET E_MplsLdp_MplsLdpAfi = 0
	// MplsLdp_MplsLdpAfi_IPV4 corresponds to the value IPV4 of MplsLdp_MplsLdpAfi
	MplsLdp_MplsLdpAfi_IPV4 E_MplsLdp_MplsLdpAfi = 1
	// MplsLdp_MplsLdpAfi_IPV6 corresponds to the value IPV6 of MplsLdp_MplsLdpAfi
	MplsLdp_MplsLdpAfi_IPV6 E_MplsLdp_MplsLdpAfi = 2
)

// E_MplsLdp_Neighbor_SessionState is a derived int64 type which is used to represent
// the enumerated node MplsLdp_Neighbor_SessionState. An additional value named
// MplsLdp_Neighbor_SessionState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsLdp_Neighbor_SessionState int64

// IsYANGGoEnum ensures that MplsLdp_Neighbor_SessionState implements the yang.GoEnum
// interface. This ensures that MplsLdp_Neighbor_SessionState can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsLdp_Neighbor_SessionState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsLdp_Neighbor_SessionState.
func (E_MplsLdp_Neighbor_SessionState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsLdp_Neighbor_SessionState.
func (e E_MplsLdp_Neighbor_SessionState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsLdp_Neighbor_SessionState")
}

const (
	// MplsLdp_Neighbor_SessionState_UNSET corresponds to the value UNSET of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_UNSET E_MplsLdp_Neighbor_SessionState = 0
	// MplsLdp_Neighbor_SessionState_NON_EXISTENT corresponds to the value NON_EXISTENT of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_NON_EXISTENT E_MplsLdp_Neighbor_SessionState = 1
	// MplsLdp_Neighbor_SessionState_INITIALIZED corresponds to the value INITIALIZED of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_INITIALIZED E_MplsLdp_Neighbor_SessionState = 2
	// MplsLdp_Neighbor_SessionState_OPENREC corresponds to the value OPENREC of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_OPENREC E_MplsLdp_Neighbor_SessionState = 3
	// MplsLdp_Neighbor_SessionState_OPENSENT corresponds to the value OPENSENT of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_OPENSENT E_MplsLdp_Neighbor_SessionState = 4
	// MplsLdp_Neighbor_SessionState_OPERATIONAL corresponds to the value OPERATIONAL of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_OPERATIONAL E_MplsLdp_Neighbor_SessionState = 5
)

// E_MplsTypes_LSP_METRIC_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_LSP_METRIC_TYPE. An additional value named
// MplsTypes_LSP_METRIC_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_LSP_METRIC_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_LSP_METRIC_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_LSP_METRIC_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_LSP_METRIC_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_LSP_METRIC_TYPE.
func (E_MplsTypes_LSP_METRIC_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_LSP_METRIC_TYPE.
func (e E_MplsTypes_LSP_METRIC_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_LSP_METRIC_TYPE")
}

const (
	// MplsTypes_LSP_METRIC_TYPE_UNSET corresponds to the value UNSET of MplsTypes_LSP_METRIC_TYPE
	MplsTypes_LSP_METRIC_TYPE_UNSET E_MplsTypes_LSP_METRIC_TYPE = 0
	// MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_ABSOLUTE corresponds to the value LSP_METRIC_ABSOLUTE of MplsTypes_LSP_METRIC_TYPE
	MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_ABSOLUTE E_MplsTypes_LSP_METRIC_TYPE = 1
	// MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_INHERITED corresponds to the value LSP_METRIC_INHERITED of MplsTypes_LSP_METRIC_TYPE
	MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_INHERITED E_MplsTypes_LSP_METRIC_TYPE = 2
	// MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_RELATIVE corresponds to the value LSP_METRIC_RELATIVE of MplsTypes_LSP_METRIC_TYPE
	MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_RELATIVE E_MplsTypes_LSP_METRIC_TYPE = 3
)

// E_MplsTypes_LSP_OPER_STATUS is a derived int64 type which is used to represent
// the enumerated node MplsTypes_LSP_OPER_STATUS. An additional value named
// MplsTypes_LSP_OPER_STATUS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_LSP_OPER_STATUS int64

// IsYANGGoEnum ensures that MplsTypes_LSP_OPER_STATUS implements the yang.GoEnum
// interface. This ensures that MplsTypes_LSP_OPER_STATUS can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_LSP_OPER_STATUS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_LSP_OPER_STATUS.
func (E_MplsTypes_LSP_OPER_STATUS) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_LSP_OPER_STATUS.
func (e E_MplsTypes_LSP_OPER_STATUS) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_LSP_OPER_STATUS")
}

const (
	// MplsTypes_LSP_OPER_STATUS_UNSET corresponds to the value UNSET of MplsTypes_LSP_OPER_STATUS
	MplsTypes_LSP_OPER_STATUS_UNSET E_MplsTypes_LSP_OPER_STATUS = 0
	// MplsTypes_LSP_OPER_STATUS_DOWN corresponds to the value DOWN of MplsTypes_LSP_OPER_STATUS
	MplsTypes_LSP_OPER_STATUS_DOWN E_MplsTypes_LSP_OPER_STATUS = 1
	// MplsTypes_LSP_OPER_STATUS_UP corresponds to the value UP of MplsTypes_LSP_OPER_STATUS
	MplsTypes_LSP_OPER_STATUS_UP E_MplsTypes_LSP_OPER_STATUS = 2
)

// E_MplsTypes_LSP_ROLE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_LSP_ROLE. An additional value named
// MplsTypes_LSP_ROLE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_LSP_ROLE int64

// IsYANGGoEnum ensures that MplsTypes_LSP_ROLE implements the yang.GoEnum
// interface. This ensures that MplsTypes_LSP_ROLE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_LSP_ROLE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_LSP_ROLE.
func (E_MplsTypes_LSP_ROLE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_LSP_ROLE.
func (e E_MplsTypes_LSP_ROLE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_LSP_ROLE")
}

const (
	// MplsTypes_LSP_ROLE_UNSET corresponds to the value UNSET of MplsTypes_LSP_ROLE
	MplsTypes_LSP_ROLE_UNSET E_MplsTypes_LSP_ROLE = 0
	// MplsTypes_LSP_ROLE_EGRESS corresponds to the value EGRESS of MplsTypes_LSP_ROLE
	MplsTypes_LSP_ROLE_EGRESS E_MplsTypes_LSP_ROLE = 1
	// MplsTypes_LSP_ROLE_INGRESS corresponds to the value INGRESS of MplsTypes_LSP_ROLE
	MplsTypes_LSP_ROLE_INGRESS E_MplsTypes_LSP_ROLE = 2
	// MplsTypes_LSP_ROLE_TRANSIT corresponds to the value TRANSIT of MplsTypes_LSP_ROLE
	MplsTypes_LSP_ROLE_TRANSIT E_MplsTypes_LSP_ROLE = 3
)

// E_MplsTypes_MplsLabel_Enum is a derived int64 type which is used to represent
// the enumerated node MplsTypes_MplsLabel_Enum. An additional value named
// MplsTypes_MplsLabel_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_MplsLabel_Enum int64

// IsYANGGoEnum ensures that MplsTypes_MplsLabel_Enum implements the yang.GoEnum
// interface. This ensures that MplsTypes_MplsLabel_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_MplsLabel_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_MplsLabel_Enum.
func (E_MplsTypes_MplsLabel_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_MplsLabel_Enum.
func (e E_MplsTypes_MplsLabel_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_MplsLabel_Enum")
}

const (
	// MplsTypes_MplsLabel_Enum_UNSET corresponds to the value UNSET of MplsTypes_MplsLabel_Enum
	MplsTypes_MplsLabel_Enum_UNSET E_MplsTypes_MplsLabel_Enum = 0
	// MplsTypes_MplsLabel_Enum_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of MplsTypes_MplsLabel_Enum
	MplsTypes_MplsLabel_Enum_IPV4_EXPLICIT_NULL E_MplsTypes_MplsLabel_Enum = 1
	// MplsTypes_MplsLabel_Enum_ROUTER_ALERT corresponds to the value ROUTER_ALERT of MplsTypes_MplsLabel_Enum
	MplsTypes_MplsLabel_Enum_ROUTER_ALERT E_MplsTypes_MplsLabel_Enum = 2
	// MplsTypes_MplsLabel_Enum_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of MplsTypes_MplsLabel_Enum
	MplsTypes_MplsLabel_Enum_IPV6_EXPLICIT_NULL E_MplsTypes_MplsLabel_Enum = 3
	// MplsTypes_MplsLabel_Enum_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of MplsTypes_MplsLabel_Enum
	MplsTypes_MplsLabel_Enum_IMPLICIT_NULL E_MplsTypes_MplsLabel_Enum = 4
	// MplsTypes_MplsLabel_Enum_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of MplsTypes_MplsLabel_Enum
	MplsTypes_MplsLabel_Enum_ENTROPY_LABEL_INDICATOR E_MplsTypes_MplsLabel_Enum = 5
	// MplsTypes_MplsLabel_Enum_NO_LABEL corresponds to the value NO_LABEL of MplsTypes_MplsLabel_Enum
	MplsTypes_MplsLabel_Enum_NO_LABEL E_MplsTypes_MplsLabel_Enum = 6
)

// E_MplsTypes_NULL_LABEL_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_NULL_LABEL_TYPE. An additional value named
// MplsTypes_NULL_LABEL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_NULL_LABEL_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_NULL_LABEL_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_NULL_LABEL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_NULL_LABEL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_NULL_LABEL_TYPE.
func (E_MplsTypes_NULL_LABEL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_NULL_LABEL_TYPE.
func (e E_MplsTypes_NULL_LABEL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_NULL_LABEL_TYPE")
}

const (
	// MplsTypes_NULL_LABEL_TYPE_UNSET corresponds to the value UNSET of MplsTypes_NULL_LABEL_TYPE
	MplsTypes_NULL_LABEL_TYPE_UNSET E_MplsTypes_NULL_LABEL_TYPE = 0
	// MplsTypes_NULL_LABEL_TYPE_EXPLICIT corresponds to the value EXPLICIT of MplsTypes_NULL_LABEL_TYPE
	MplsTypes_NULL_LABEL_TYPE_EXPLICIT E_MplsTypes_NULL_LABEL_TYPE = 1
	// MplsTypes_NULL_LABEL_TYPE_IMPLICIT corresponds to the value IMPLICIT of MplsTypes_NULL_LABEL_TYPE
	MplsTypes_NULL_LABEL_TYPE_IMPLICIT E_MplsTypes_NULL_LABEL_TYPE = 2
)

// E_MplsTypes_PATH_COMPUTATION_METHOD is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PATH_COMPUTATION_METHOD. An additional value named
// MplsTypes_PATH_COMPUTATION_METHOD_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PATH_COMPUTATION_METHOD int64

// IsYANGGoEnum ensures that MplsTypes_PATH_COMPUTATION_METHOD implements the yang.GoEnum
// interface. This ensures that MplsTypes_PATH_COMPUTATION_METHOD can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PATH_COMPUTATION_METHOD) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PATH_COMPUTATION_METHOD.
func (E_MplsTypes_PATH_COMPUTATION_METHOD) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsTypes_PATH_COMPUTATION_METHOD.
func (e E_MplsTypes_PATH_COMPUTATION_METHOD) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PATH_COMPUTATION_METHOD")
}

const (
	// MplsTypes_PATH_COMPUTATION_METHOD_UNSET corresponds to the value UNSET of MplsTypes_PATH_COMPUTATION_METHOD
	MplsTypes_PATH_COMPUTATION_METHOD_UNSET E_MplsTypes_PATH_COMPUTATION_METHOD = 0
	// MplsTypes_PATH_COMPUTATION_METHOD_EXPLICITLY_DEFINED corresponds to the value EXPLICITLY_DEFINED of MplsTypes_PATH_COMPUTATION_METHOD
	MplsTypes_PATH_COMPUTATION_METHOD_EXPLICITLY_DEFINED E_MplsTypes_PATH_COMPUTATION_METHOD = 1
	// MplsTypes_PATH_COMPUTATION_METHOD_EXTERNALLY_QUERIED corresponds to the value EXTERNALLY_QUERIED of MplsTypes_PATH_COMPUTATION_METHOD
	MplsTypes_PATH_COMPUTATION_METHOD_EXTERNALLY_QUERIED E_MplsTypes_PATH_COMPUTATION_METHOD = 2
	// MplsTypes_PATH_COMPUTATION_METHOD_LOCALLY_COMPUTED corresponds to the value LOCALLY_COMPUTED of MplsTypes_PATH_COMPUTATION_METHOD
	MplsTypes_PATH_COMPUTATION_METHOD_LOCALLY_COMPUTED E_MplsTypes_PATH_COMPUTATION_METHOD = 3
)

// E_MplsTypes_PATH_METRIC_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PATH_METRIC_TYPE. An additional value named
// MplsTypes_PATH_METRIC_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PATH_METRIC_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_PATH_METRIC_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_PATH_METRIC_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PATH_METRIC_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PATH_METRIC_TYPE.
func (E_MplsTypes_PATH_METRIC_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_PATH_METRIC_TYPE.
func (e E_MplsTypes_PATH_METRIC_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PATH_METRIC_TYPE")
}

const (
	// MplsTypes_PATH_METRIC_TYPE_UNSET corresponds to the value UNSET of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_UNSET E_MplsTypes_PATH_METRIC_TYPE = 0
	// MplsTypes_PATH_METRIC_TYPE_HOP_COUNT corresponds to the value HOP_COUNT of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_HOP_COUNT E_MplsTypes_PATH_METRIC_TYPE = 1
	// MplsTypes_PATH_METRIC_TYPE_IGP_METRIC corresponds to the value IGP_METRIC of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_IGP_METRIC E_MplsTypes_PATH_METRIC_TYPE = 2
	// MplsTypes_PATH_METRIC_TYPE_PATH_DELAY corresponds to the value PATH_DELAY of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_PATH_DELAY E_MplsTypes_PATH_METRIC_TYPE = 3
	// MplsTypes_PATH_METRIC_TYPE_TE_METRIC corresponds to the value TE_METRIC of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_TE_METRIC E_MplsTypes_PATH_METRIC_TYPE = 4
)

// E_MplsTypes_PATH_SETUP_PROTOCOL is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PATH_SETUP_PROTOCOL. An additional value named
// MplsTypes_PATH_SETUP_PROTOCOL_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PATH_SETUP_PROTOCOL int64

// IsYANGGoEnum ensures that MplsTypes_PATH_SETUP_PROTOCOL implements the yang.GoEnum
// interface. This ensures that MplsTypes_PATH_SETUP_PROTOCOL can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PATH_SETUP_PROTOCOL) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PATH_SETUP_PROTOCOL.
func (E_MplsTypes_PATH_SETUP_PROTOCOL) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsTypes_PATH_SETUP_PROTOCOL.
func (e E_MplsTypes_PATH_SETUP_PROTOCOL) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PATH_SETUP_PROTOCOL")
}

const (
	// MplsTypes_PATH_SETUP_PROTOCOL_UNSET corresponds to the value UNSET of MplsTypes_PATH_SETUP_PROTOCOL
	MplsTypes_PATH_SETUP_PROTOCOL_UNSET E_MplsTypes_PATH_SETUP_PROTOCOL = 0
	// MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_LDP corresponds to the value PATH_SETUP_LDP of MplsTypes_PATH_SETUP_PROTOCOL
	MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_LDP E_MplsTypes_PATH_SETUP_PROTOCOL = 1
	// MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_RSVP corresponds to the value PATH_SETUP_RSVP of MplsTypes_PATH_SETUP_PROTOCOL
	MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_RSVP E_MplsTypes_PATH_SETUP_PROTOCOL = 2
	// MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_SR corresponds to the value PATH_SETUP_SR of MplsTypes_PATH_SETUP_PROTOCOL
	MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_SR E_MplsTypes_PATH_SETUP_PROTOCOL = 3
)

// E_MplsTypes_PROTECTION_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PROTECTION_TYPE. An additional value named
// MplsTypes_PROTECTION_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PROTECTION_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_PROTECTION_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_PROTECTION_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PROTECTION_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PROTECTION_TYPE.
func (E_MplsTypes_PROTECTION_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_PROTECTION_TYPE.
func (e E_MplsTypes_PROTECTION_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PROTECTION_TYPE")
}

const (
	// MplsTypes_PROTECTION_TYPE_UNSET corresponds to the value UNSET of MplsTypes_PROTECTION_TYPE
	MplsTypes_PROTECTION_TYPE_UNSET E_MplsTypes_PROTECTION_TYPE = 0
	// MplsTypes_PROTECTION_TYPE_LINK_NODE_PROTECTION_REQUESTED corresponds to the value LINK_NODE_PROTECTION_REQUESTED of MplsTypes_PROTECTION_TYPE
	MplsTypes_PROTECTION_TYPE_LINK_NODE_PROTECTION_REQUESTED E_MplsTypes_PROTECTION_TYPE = 1
	// MplsTypes_PROTECTION_TYPE_LINK_PROTECTION_REQUIRED corresponds to the value LINK_PROTECTION_REQUIRED of MplsTypes_PROTECTION_TYPE
	MplsTypes_PROTECTION_TYPE_LINK_PROTECTION_REQUIRED E_MplsTypes_PROTECTION_TYPE = 2
	// MplsTypes_PROTECTION_TYPE_UNPROTECTED corresponds to the value UNPROTECTED of MplsTypes_PROTECTION_TYPE
	MplsTypes_PROTECTION_TYPE_UNPROTECTED E_MplsTypes_PROTECTION_TYPE = 3
)

// E_MplsTypes_PSEUDOWIRE_ENCAPSULATION is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PSEUDOWIRE_ENCAPSULATION. An additional value named
// MplsTypes_PSEUDOWIRE_ENCAPSULATION_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PSEUDOWIRE_ENCAPSULATION int64

// IsYANGGoEnum ensures that MplsTypes_PSEUDOWIRE_ENCAPSULATION implements the yang.GoEnum
// interface. This ensures that MplsTypes_PSEUDOWIRE_ENCAPSULATION can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PSEUDOWIRE_ENCAPSULATION) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PSEUDOWIRE_ENCAPSULATION.
func (E_MplsTypes_PSEUDOWIRE_ENCAPSULATION) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsTypes_PSEUDOWIRE_ENCAPSULATION.
func (e E_MplsTypes_PSEUDOWIRE_ENCAPSULATION) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PSEUDOWIRE_ENCAPSULATION")
}

const (
	// MplsTypes_PSEUDOWIRE_ENCAPSULATION_UNSET corresponds to the value UNSET of MplsTypes_PSEUDOWIRE_ENCAPSULATION
	MplsTypes_PSEUDOWIRE_ENCAPSULATION_UNSET E_MplsTypes_PSEUDOWIRE_ENCAPSULATION = 0
	// MplsTypes_PSEUDOWIRE_ENCAPSULATION_PWE_ETHERNET_RAW_MODE corresponds to the value PWE_ETHERNET_RAW_MODE of MplsTypes_PSEUDOWIRE_ENCAPSULATION
	MplsTypes_PSEUDOWIRE_ENCAPSULATION_PWE_ETHERNET_RAW_MODE E_MplsTypes_PSEUDOWIRE_ENCAPSULATION = 1
	// MplsTypes_PSEUDOWIRE_ENCAPSULATION_PWE_ETHERNET_TAGGED_MODE corresponds to the value PWE_ETHERNET_TAGGED_MODE of MplsTypes_PSEUDOWIRE_ENCAPSULATION
	MplsTypes_PSEUDOWIRE_ENCAPSULATION_PWE_ETHERNET_TAGGED_MODE E_MplsTypes_PSEUDOWIRE_ENCAPSULATION = 2
)

// E_MplsTypes_RSVP_AUTH_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_RSVP_AUTH_TYPE. An additional value named
// MplsTypes_RSVP_AUTH_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_RSVP_AUTH_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_RSVP_AUTH_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_RSVP_AUTH_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_RSVP_AUTH_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_RSVP_AUTH_TYPE.
func (E_MplsTypes_RSVP_AUTH_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_RSVP_AUTH_TYPE.
func (e E_MplsTypes_RSVP_AUTH_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_RSVP_AUTH_TYPE")
}

const (
	// MplsTypes_RSVP_AUTH_TYPE_UNSET corresponds to the value UNSET of MplsTypes_RSVP_AUTH_TYPE
	MplsTypes_RSVP_AUTH_TYPE_UNSET E_MplsTypes_RSVP_AUTH_TYPE = 0
	// MplsTypes_RSVP_AUTH_TYPE_RSVP_AUTH_MD5 corresponds to the value RSVP_AUTH_MD5 of MplsTypes_RSVP_AUTH_TYPE
	MplsTypes_RSVP_AUTH_TYPE_RSVP_AUTH_MD5 E_MplsTypes_RSVP_AUTH_TYPE = 1
)

// E_MplsTypes_TUNNEL_ADMIN_STATUS is a derived int64 type which is used to represent
// the enumerated node MplsTypes_TUNNEL_ADMIN_STATUS. An additional value named
// MplsTypes_TUNNEL_ADMIN_STATUS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_TUNNEL_ADMIN_STATUS int64

// IsYANGGoEnum ensures that MplsTypes_TUNNEL_ADMIN_STATUS implements the yang.GoEnum
// interface. This ensures that MplsTypes_TUNNEL_ADMIN_STATUS can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_TUNNEL_ADMIN_STATUS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_TUNNEL_ADMIN_STATUS.
func (E_MplsTypes_TUNNEL_ADMIN_STATUS) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsTypes_TUNNEL_ADMIN_STATUS.
func (e E_MplsTypes_TUNNEL_ADMIN_STATUS) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_TUNNEL_ADMIN_STATUS")
}

const (
	// MplsTypes_TUNNEL_ADMIN_STATUS_UNSET corresponds to the value UNSET of MplsTypes_TUNNEL_ADMIN_STATUS
	MplsTypes_TUNNEL_ADMIN_STATUS_UNSET E_MplsTypes_TUNNEL_ADMIN_STATUS = 0
	// MplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_DOWN corresponds to the value ADMIN_DOWN of MplsTypes_TUNNEL_ADMIN_STATUS
	MplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_DOWN E_MplsTypes_TUNNEL_ADMIN_STATUS = 1
	// MplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_UP corresponds to the value ADMIN_UP of MplsTypes_TUNNEL_ADMIN_STATUS
	MplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_UP E_MplsTypes_TUNNEL_ADMIN_STATUS = 2
)

// E_MplsTypes_TUNNEL_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_TUNNEL_TYPE. An additional value named
// MplsTypes_TUNNEL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_TUNNEL_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_TUNNEL_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_TUNNEL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_TUNNEL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_TUNNEL_TYPE.
func (E_MplsTypes_TUNNEL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_TUNNEL_TYPE.
func (e E_MplsTypes_TUNNEL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_TUNNEL_TYPE")
}

const (
	// MplsTypes_TUNNEL_TYPE_UNSET corresponds to the value UNSET of MplsTypes_TUNNEL_TYPE
	MplsTypes_TUNNEL_TYPE_UNSET E_MplsTypes_TUNNEL_TYPE = 0
	// MplsTypes_TUNNEL_TYPE_P2MP corresponds to the value P2MP of MplsTypes_TUNNEL_TYPE
	MplsTypes_TUNNEL_TYPE_P2MP E_MplsTypes_TUNNEL_TYPE = 1
	// MplsTypes_TUNNEL_TYPE_P2P corresponds to the value P2P of MplsTypes_TUNNEL_TYPE
	MplsTypes_TUNNEL_TYPE_P2P E_MplsTypes_TUNNEL_TYPE = 2
)

// E_Mpls_CspfTieBreaking is a derived int64 type which is used to represent
// the enumerated node Mpls_CspfTieBreaking. An additional value named
// Mpls_CspfTieBreaking_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_CspfTieBreaking int64

// IsYANGGoEnum ensures that Mpls_CspfTieBreaking implements the yang.GoEnum
// interface. This ensures that Mpls_CspfTieBreaking can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_CspfTieBreaking) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_CspfTieBreaking.
func (E_Mpls_CspfTieBreaking) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_CspfTieBreaking.
func (e E_Mpls_CspfTieBreaking) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_CspfTieBreaking")
}

const (
	// Mpls_CspfTieBreaking_UNSET corresponds to the value UNSET of Mpls_CspfTieBreaking
	Mpls_CspfTieBreaking_UNSET E_Mpls_CspfTieBreaking = 0
	// Mpls_CspfTieBreaking_RANDOM corresponds to the value RANDOM of Mpls_CspfTieBreaking
	Mpls_CspfTieBreaking_RANDOM E_Mpls_CspfTieBreaking = 1
	// Mpls_CspfTieBreaking_LEAST_FILL corresponds to the value LEAST_FILL of Mpls_CspfTieBreaking
	Mpls_CspfTieBreaking_LEAST_FILL E_Mpls_CspfTieBreaking = 2
	// Mpls_CspfTieBreaking_MOST_FILL corresponds to the value MOST_FILL of Mpls_CspfTieBreaking
	Mpls_CspfTieBreaking_MOST_FILL E_Mpls_CspfTieBreaking = 3
)

// E_Mpls_MplsHopType is a derived int64 type which is used to represent
// the enumerated node Mpls_MplsHopType. An additional value named
// Mpls_MplsHopType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_MplsHopType int64

// IsYANGGoEnum ensures that Mpls_MplsHopType implements the yang.GoEnum
// interface. This ensures that Mpls_MplsHopType can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_MplsHopType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_MplsHopType.
func (E_Mpls_MplsHopType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_MplsHopType.
func (e E_Mpls_MplsHopType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_MplsHopType")
}

const (
	// Mpls_MplsHopType_UNSET corresponds to the value UNSET of Mpls_MplsHopType
	Mpls_MplsHopType_UNSET E_Mpls_MplsHopType = 0
	// Mpls_MplsHopType_LOOSE corresponds to the value LOOSE of Mpls_MplsHopType
	Mpls_MplsHopType_LOOSE E_Mpls_MplsHopType = 1
	// Mpls_MplsHopType_STRICT corresponds to the value STRICT of Mpls_MplsHopType
	Mpls_MplsHopType_STRICT E_Mpls_MplsHopType = 2
)

// E_Mpls_MplsSrlgFloodingType is a derived int64 type which is used to represent
// the enumerated node Mpls_MplsSrlgFloodingType. An additional value named
// Mpls_MplsSrlgFloodingType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_MplsSrlgFloodingType int64

// IsYANGGoEnum ensures that Mpls_MplsSrlgFloodingType implements the yang.GoEnum
// interface. This ensures that Mpls_MplsSrlgFloodingType can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_MplsSrlgFloodingType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_MplsSrlgFloodingType.
func (E_Mpls_MplsSrlgFloodingType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_MplsSrlgFloodingType.
func (e E_Mpls_MplsSrlgFloodingType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_MplsSrlgFloodingType")
}

const (
	// Mpls_MplsSrlgFloodingType_UNSET corresponds to the value UNSET of Mpls_MplsSrlgFloodingType
	Mpls_MplsSrlgFloodingType_UNSET E_Mpls_MplsSrlgFloodingType = 0
	// Mpls_MplsSrlgFloodingType_FLOODED_SRLG corresponds to the value FLOODED_SRLG of Mpls_MplsSrlgFloodingType
	Mpls_MplsSrlgFloodingType_FLOODED_SRLG E_Mpls_MplsSrlgFloodingType = 1
	// Mpls_MplsSrlgFloodingType_STATIC_SRLG corresponds to the value STATIC_SRLG of Mpls_MplsSrlgFloodingType
	Mpls_MplsSrlgFloodingType_STATIC_SRLG E_Mpls_MplsSrlgFloodingType = 2
)

// E_Mpls_TeBandwidthType is a derived int64 type which is used to represent
// the enumerated node Mpls_TeBandwidthType. An additional value named
// Mpls_TeBandwidthType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_TeBandwidthType int64

// IsYANGGoEnum ensures that Mpls_TeBandwidthType implements the yang.GoEnum
// interface. This ensures that Mpls_TeBandwidthType can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_TeBandwidthType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_TeBandwidthType.
func (E_Mpls_TeBandwidthType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_TeBandwidthType.
func (e E_Mpls_TeBandwidthType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_TeBandwidthType")
}

const (
	// Mpls_TeBandwidthType_UNSET corresponds to the value UNSET of Mpls_TeBandwidthType
	Mpls_TeBandwidthType_UNSET E_Mpls_TeBandwidthType = 0
	// Mpls_TeBandwidthType_SPECIFIED corresponds to the value SPECIFIED of Mpls_TeBandwidthType
	Mpls_TeBandwidthType_SPECIFIED E_Mpls_TeBandwidthType = 1
	// Mpls_TeBandwidthType_AUTO corresponds to the value AUTO of Mpls_TeBandwidthType
	Mpls_TeBandwidthType_AUTO E_Mpls_TeBandwidthType = 2
)

// E_NamedExplicitPath_SidSelectionMode is a derived int64 type which is used to represent
// the enumerated node NamedExplicitPath_SidSelectionMode. An additional value named
// NamedExplicitPath_SidSelectionMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NamedExplicitPath_SidSelectionMode int64

// IsYANGGoEnum ensures that NamedExplicitPath_SidSelectionMode implements the yang.GoEnum
// interface. This ensures that NamedExplicitPath_SidSelectionMode can be identified as a
// mapped type for a YANG enumeration.
func (E_NamedExplicitPath_SidSelectionMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NamedExplicitPath_SidSelectionMode.
func (E_NamedExplicitPath_SidSelectionMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NamedExplicitPath_SidSelectionMode.
func (e E_NamedExplicitPath_SidSelectionMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NamedExplicitPath_SidSelectionMode")
}

const (
	// NamedExplicitPath_SidSelectionMode_UNSET corresponds to the value UNSET of NamedExplicitPath_SidSelectionMode
	NamedExplicitPath_SidSelectionMode_UNSET E_NamedExplicitPath_SidSelectionMode = 0
	// NamedExplicitPath_SidSelectionMode_ADJ_SID_ONLY corresponds to the value ADJ_SID_ONLY of NamedExplicitPath_SidSelectionMode
	NamedExplicitPath_SidSelectionMode_ADJ_SID_ONLY E_NamedExplicitPath_SidSelectionMode = 1
	// NamedExplicitPath_SidSelectionMode_MIXED_MODE corresponds to the value MIXED_MODE of NamedExplicitPath_SidSelectionMode
	NamedExplicitPath_SidSelectionMode_MIXED_MODE E_NamedExplicitPath_SidSelectionMode = 2
)

// E_Neighbor_NeighborState is a derived int64 type which is used to represent
// the enumerated node Neighbor_NeighborState. An additional value named
// Neighbor_NeighborState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Neighbor_NeighborState int64

// IsYANGGoEnum ensures that Neighbor_NeighborState implements the yang.GoEnum
// interface. This ensures that Neighbor_NeighborState can be identified as a
// mapped type for a YANG enumeration.
func (E_Neighbor_NeighborState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Neighbor_NeighborState.
func (E_Neighbor_NeighborState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Neighbor_NeighborState.
func (e E_Neighbor_NeighborState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Neighbor_NeighborState")
}

const (
	// Neighbor_NeighborState_UNSET corresponds to the value UNSET of Neighbor_NeighborState
	Neighbor_NeighborState_UNSET E_Neighbor_NeighborState = 0
	// Neighbor_NeighborState_INCOMPLETE corresponds to the value INCOMPLETE of Neighbor_NeighborState
	Neighbor_NeighborState_INCOMPLETE E_Neighbor_NeighborState = 1
	// Neighbor_NeighborState_REACHABLE corresponds to the value REACHABLE of Neighbor_NeighborState
	Neighbor_NeighborState_REACHABLE E_Neighbor_NeighborState = 2
	// Neighbor_NeighborState_STALE corresponds to the value STALE of Neighbor_NeighborState
	Neighbor_NeighborState_STALE E_Neighbor_NeighborState = 3
	// Neighbor_NeighborState_DELAY corresponds to the value DELAY of Neighbor_NeighborState
	Neighbor_NeighborState_DELAY E_Neighbor_NeighborState = 4
	// Neighbor_NeighborState_PROBE corresponds to the value PROBE of Neighbor_NeighborState
	Neighbor_NeighborState_PROBE E_Neighbor_NeighborState = 5
)

// E_Neighbor_NeighborStatus is a derived int64 type which is used to represent
// the enumerated node Neighbor_NeighborStatus. An additional value named
// Neighbor_NeighborStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Neighbor_NeighborStatus int64

// IsYANGGoEnum ensures that Neighbor_NeighborStatus implements the yang.GoEnum
// interface. This ensures that Neighbor_NeighborStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_Neighbor_NeighborStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Neighbor_NeighborStatus.
func (E_Neighbor_NeighborStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Neighbor_NeighborStatus.
func (e E_Neighbor_NeighborStatus) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Neighbor_NeighborStatus")
}

const (
	// Neighbor_NeighborStatus_UNSET corresponds to the value UNSET of Neighbor_NeighborStatus
	Neighbor_NeighborStatus_UNSET E_Neighbor_NeighborStatus = 0
	// Neighbor_NeighborStatus_UP corresponds to the value UP of Neighbor_NeighborStatus
	Neighbor_NeighborStatus_UP E_Neighbor_NeighborStatus = 1
	// Neighbor_NeighborStatus_DOWN corresponds to the value DOWN of Neighbor_NeighborStatus
	Neighbor_NeighborStatus_DOWN E_Neighbor_NeighborStatus = 2
)

// E_NetworkInstanceTypes_ENCAPSULATION is a derived int64 type which is used to represent
// the enumerated node NetworkInstanceTypes_ENCAPSULATION. An additional value named
// NetworkInstanceTypes_ENCAPSULATION_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NetworkInstanceTypes_ENCAPSULATION int64

// IsYANGGoEnum ensures that NetworkInstanceTypes_ENCAPSULATION implements the yang.GoEnum
// interface. This ensures that NetworkInstanceTypes_ENCAPSULATION can be identified as a
// mapped type for a YANG enumeration.
func (E_NetworkInstanceTypes_ENCAPSULATION) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NetworkInstanceTypes_ENCAPSULATION.
func (E_NetworkInstanceTypes_ENCAPSULATION) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NetworkInstanceTypes_ENCAPSULATION.
func (e E_NetworkInstanceTypes_ENCAPSULATION) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NetworkInstanceTypes_ENCAPSULATION")
}

const (
	// NetworkInstanceTypes_ENCAPSULATION_UNSET corresponds to the value UNSET of NetworkInstanceTypes_ENCAPSULATION
	NetworkInstanceTypes_ENCAPSULATION_UNSET E_NetworkInstanceTypes_ENCAPSULATION = 0
	// NetworkInstanceTypes_ENCAPSULATION_MPLS corresponds to the value MPLS of NetworkInstanceTypes_ENCAPSULATION
	NetworkInstanceTypes_ENCAPSULATION_MPLS E_NetworkInstanceTypes_ENCAPSULATION = 1
	// NetworkInstanceTypes_ENCAPSULATION_VXLAN corresponds to the value VXLAN of NetworkInstanceTypes_ENCAPSULATION
	NetworkInstanceTypes_ENCAPSULATION_VXLAN E_NetworkInstanceTypes_ENCAPSULATION = 2
)

// E_NetworkInstanceTypes_ENDPOINT_TYPE is a derived int64 type which is used to represent
// the enumerated node NetworkInstanceTypes_ENDPOINT_TYPE. An additional value named
// NetworkInstanceTypes_ENDPOINT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NetworkInstanceTypes_ENDPOINT_TYPE int64

// IsYANGGoEnum ensures that NetworkInstanceTypes_ENDPOINT_TYPE implements the yang.GoEnum
// interface. This ensures that NetworkInstanceTypes_ENDPOINT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_NetworkInstanceTypes_ENDPOINT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NetworkInstanceTypes_ENDPOINT_TYPE.
func (E_NetworkInstanceTypes_ENDPOINT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NetworkInstanceTypes_ENDPOINT_TYPE.
func (e E_NetworkInstanceTypes_ENDPOINT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NetworkInstanceTypes_ENDPOINT_TYPE")
}

const (
	// NetworkInstanceTypes_ENDPOINT_TYPE_UNSET corresponds to the value UNSET of NetworkInstanceTypes_ENDPOINT_TYPE
	NetworkInstanceTypes_ENDPOINT_TYPE_UNSET E_NetworkInstanceTypes_ENDPOINT_TYPE = 0
	// NetworkInstanceTypes_ENDPOINT_TYPE_LOCAL corresponds to the value LOCAL of NetworkInstanceTypes_ENDPOINT_TYPE
	NetworkInstanceTypes_ENDPOINT_TYPE_LOCAL E_NetworkInstanceTypes_ENDPOINT_TYPE = 1
	// NetworkInstanceTypes_ENDPOINT_TYPE_REMOTE corresponds to the value REMOTE of NetworkInstanceTypes_ENDPOINT_TYPE
	NetworkInstanceTypes_ENDPOINT_TYPE_REMOTE E_NetworkInstanceTypes_ENDPOINT_TYPE = 2
)

// E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE is a derived int64 type which is used to represent
// the enumerated node NetworkInstanceTypes_LABEL_ALLOCATION_MODE. An additional value named
// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE int64

// IsYANGGoEnum ensures that NetworkInstanceTypes_LABEL_ALLOCATION_MODE implements the yang.GoEnum
// interface. This ensures that NetworkInstanceTypes_LABEL_ALLOCATION_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NetworkInstanceTypes_LABEL_ALLOCATION_MODE.
func (E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE.
func (e E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE")
}

const (
	// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_UNSET corresponds to the value UNSET of NetworkInstanceTypes_LABEL_ALLOCATION_MODE
	NetworkInstanceTypes_LABEL_ALLOCATION_MODE_UNSET E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE = 0
	// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_INSTANCE_LABEL corresponds to the value INSTANCE_LABEL of NetworkInstanceTypes_LABEL_ALLOCATION_MODE
	NetworkInstanceTypes_LABEL_ALLOCATION_MODE_INSTANCE_LABEL E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE = 1
	// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_NEXTHOP corresponds to the value PER_NEXTHOP of NetworkInstanceTypes_LABEL_ALLOCATION_MODE
	NetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_NEXTHOP E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE = 2
	// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_PREFIX corresponds to the value PER_PREFIX of NetworkInstanceTypes_LABEL_ALLOCATION_MODE
	NetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_PREFIX E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE = 3
)

// E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE is a derived int64 type which is used to represent
// the enumerated node NetworkInstanceTypes_NETWORK_INSTANCE_TYPE. An additional value named
// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE int64

// IsYANGGoEnum ensures that NetworkInstanceTypes_NETWORK_INSTANCE_TYPE implements the yang.GoEnum
// interface. This ensures that NetworkInstanceTypes_NETWORK_INSTANCE_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NetworkInstanceTypes_NETWORK_INSTANCE_TYPE.
func (E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE.
func (e E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE")
}

const (
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_UNSET corresponds to the value UNSET of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_UNSET E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 0
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_DEFAULT_INSTANCE corresponds to the value DEFAULT_INSTANCE of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_DEFAULT_INSTANCE E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 1
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2L3 corresponds to the value L2L3 of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2L3 E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 2
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2P2P corresponds to the value L2P2P of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2P2P E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 3
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2VSI corresponds to the value L2VSI of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2VSI E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 4
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L3VRF corresponds to the value L3VRF of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L3VRF E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 5
)

// E_Nlpid_Nlpid is a derived int64 type which is used to represent
// the enumerated node Nlpid_Nlpid. An additional value named
// Nlpid_Nlpid_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Nlpid_Nlpid int64

// IsYANGGoEnum ensures that Nlpid_Nlpid implements the yang.GoEnum
// interface. This ensures that Nlpid_Nlpid can be identified as a
// mapped type for a YANG enumeration.
func (E_Nlpid_Nlpid) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Nlpid_Nlpid.
func (E_Nlpid_Nlpid) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Nlpid_Nlpid.
func (e E_Nlpid_Nlpid) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Nlpid_Nlpid")
}

const (
	// Nlpid_Nlpid_UNSET corresponds to the value UNSET of Nlpid_Nlpid
	Nlpid_Nlpid_UNSET E_Nlpid_Nlpid = 0
	// Nlpid_Nlpid_IPV4 corresponds to the value IPV4 of Nlpid_Nlpid
	Nlpid_Nlpid_IPV4 E_Nlpid_Nlpid = 1
	// Nlpid_Nlpid_IPV6 corresponds to the value IPV6 of Nlpid_Nlpid
	Nlpid_Nlpid_IPV6 E_Nlpid_Nlpid = 2
)

// E_NodeAttribute_SubTlv_Type_Enum is a derived int64 type which is used to represent
// the enumerated node NodeAttribute_SubTlv_Type_Enum. An additional value named
// NodeAttribute_SubTlv_Type_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NodeAttribute_SubTlv_Type_Enum int64

// IsYANGGoEnum ensures that NodeAttribute_SubTlv_Type_Enum implements the yang.GoEnum
// interface. This ensures that NodeAttribute_SubTlv_Type_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_NodeAttribute_SubTlv_Type_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NodeAttribute_SubTlv_Type_Enum.
func (E_NodeAttribute_SubTlv_Type_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NodeAttribute_SubTlv_Type_Enum.
func (e E_NodeAttribute_SubTlv_Type_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NodeAttribute_SubTlv_Type_Enum")
}

const (
	// NodeAttribute_SubTlv_Type_Enum_UNSET corresponds to the value UNSET of NodeAttribute_SubTlv_Type_Enum
	NodeAttribute_SubTlv_Type_Enum_UNSET E_NodeAttribute_SubTlv_Type_Enum = 0
	// NodeAttribute_SubTlv_Type_Enum_UNKNOWN corresponds to the value UNKNOWN of NodeAttribute_SubTlv_Type_Enum
	NodeAttribute_SubTlv_Type_Enum_UNKNOWN E_NodeAttribute_SubTlv_Type_Enum = 1
)

// E_OpaqueLsa_Scope is a derived int64 type which is used to represent
// the enumerated node OpaqueLsa_Scope. An additional value named
// OpaqueLsa_Scope_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpaqueLsa_Scope int64

// IsYANGGoEnum ensures that OpaqueLsa_Scope implements the yang.GoEnum
// interface. This ensures that OpaqueLsa_Scope can be identified as a
// mapped type for a YANG enumeration.
func (E_OpaqueLsa_Scope) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpaqueLsa_Scope.
func (E_OpaqueLsa_Scope) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OpaqueLsa_Scope.
func (e E_OpaqueLsa_Scope) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OpaqueLsa_Scope")
}

const (
	// OpaqueLsa_Scope_UNSET corresponds to the value UNSET of OpaqueLsa_Scope
	OpaqueLsa_Scope_UNSET E_OpaqueLsa_Scope = 0
	// OpaqueLsa_Scope_LINK corresponds to the value LINK of OpaqueLsa_Scope
	OpaqueLsa_Scope_LINK E_OpaqueLsa_Scope = 1
	// OpaqueLsa_Scope_AREA corresponds to the value AREA of OpaqueLsa_Scope
	OpaqueLsa_Scope_AREA E_OpaqueLsa_Scope = 2
	// OpaqueLsa_Scope_AS corresponds to the value AS of OpaqueLsa_Scope
	OpaqueLsa_Scope_AS E_OpaqueLsa_Scope = 3
)

// E_OspfTypes_GRACE_LSA_TLV_TYPES is a derived int64 type which is used to represent
// the enumerated node OspfTypes_GRACE_LSA_TLV_TYPES. An additional value named
// OspfTypes_GRACE_LSA_TLV_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_GRACE_LSA_TLV_TYPES int64

// IsYANGGoEnum ensures that OspfTypes_GRACE_LSA_TLV_TYPES implements the yang.GoEnum
// interface. This ensures that OspfTypes_GRACE_LSA_TLV_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_GRACE_LSA_TLV_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_GRACE_LSA_TLV_TYPES.
func (E_OspfTypes_GRACE_LSA_TLV_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_GRACE_LSA_TLV_TYPES.
func (e E_OspfTypes_GRACE_LSA_TLV_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_GRACE_LSA_TLV_TYPES")
}

const (
	// OspfTypes_GRACE_LSA_TLV_TYPES_UNSET corresponds to the value UNSET of OspfTypes_GRACE_LSA_TLV_TYPES
	OspfTypes_GRACE_LSA_TLV_TYPES_UNSET E_OspfTypes_GRACE_LSA_TLV_TYPES = 0
	// OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_IP_INTERFACE_ADDRESS corresponds to the value GRACE_IP_INTERFACE_ADDRESS of OspfTypes_GRACE_LSA_TLV_TYPES
	OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_IP_INTERFACE_ADDRESS E_OspfTypes_GRACE_LSA_TLV_TYPES = 1
	// OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_PERIOD corresponds to the value GRACE_PERIOD of OspfTypes_GRACE_LSA_TLV_TYPES
	OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_PERIOD E_OspfTypes_GRACE_LSA_TLV_TYPES = 2
	// OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_RESTART_REASON corresponds to the value GRACE_RESTART_REASON of OspfTypes_GRACE_LSA_TLV_TYPES
	OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_RESTART_REASON E_OspfTypes_GRACE_LSA_TLV_TYPES = 3
)

// E_OspfTypes_MAX_METRIC_INCLUDE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_MAX_METRIC_INCLUDE. An additional value named
// OspfTypes_MAX_METRIC_INCLUDE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_MAX_METRIC_INCLUDE int64

// IsYANGGoEnum ensures that OspfTypes_MAX_METRIC_INCLUDE implements the yang.GoEnum
// interface. This ensures that OspfTypes_MAX_METRIC_INCLUDE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_MAX_METRIC_INCLUDE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_MAX_METRIC_INCLUDE.
func (E_OspfTypes_MAX_METRIC_INCLUDE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_MAX_METRIC_INCLUDE.
func (e E_OspfTypes_MAX_METRIC_INCLUDE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_MAX_METRIC_INCLUDE")
}

const (
	// OspfTypes_MAX_METRIC_INCLUDE_UNSET corresponds to the value UNSET of OspfTypes_MAX_METRIC_INCLUDE
	OspfTypes_MAX_METRIC_INCLUDE_UNSET E_OspfTypes_MAX_METRIC_INCLUDE = 0
	// OspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_STUB corresponds to the value MAX_METRIC_INCLUDE_STUB of OspfTypes_MAX_METRIC_INCLUDE
	OspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_STUB E_OspfTypes_MAX_METRIC_INCLUDE = 1
	// OspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_TYPE2_EXTERNAL corresponds to the value MAX_METRIC_INCLUDE_TYPE2_EXTERNAL of OspfTypes_MAX_METRIC_INCLUDE
	OspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_TYPE2_EXTERNAL E_OspfTypes_MAX_METRIC_INCLUDE = 2
)

// E_OspfTypes_MAX_METRIC_TRIGGER is a derived int64 type which is used to represent
// the enumerated node OspfTypes_MAX_METRIC_TRIGGER. An additional value named
// OspfTypes_MAX_METRIC_TRIGGER_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_MAX_METRIC_TRIGGER int64

// IsYANGGoEnum ensures that OspfTypes_MAX_METRIC_TRIGGER implements the yang.GoEnum
// interface. This ensures that OspfTypes_MAX_METRIC_TRIGGER can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_MAX_METRIC_TRIGGER) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_MAX_METRIC_TRIGGER.
func (E_OspfTypes_MAX_METRIC_TRIGGER) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_MAX_METRIC_TRIGGER.
func (e E_OspfTypes_MAX_METRIC_TRIGGER) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_MAX_METRIC_TRIGGER")
}

const (
	// OspfTypes_MAX_METRIC_TRIGGER_UNSET corresponds to the value UNSET of OspfTypes_MAX_METRIC_TRIGGER
	OspfTypes_MAX_METRIC_TRIGGER_UNSET E_OspfTypes_MAX_METRIC_TRIGGER = 0
	// OspfTypes_MAX_METRIC_TRIGGER_MAX_METRIC_ON_SYSTEM_BOOT corresponds to the value MAX_METRIC_ON_SYSTEM_BOOT of OspfTypes_MAX_METRIC_TRIGGER
	OspfTypes_MAX_METRIC_TRIGGER_MAX_METRIC_ON_SYSTEM_BOOT E_OspfTypes_MAX_METRIC_TRIGGER = 1
)

// E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE. An additional value named
// OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE.
func (E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE.
func (e E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE")
}

const (
	// OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_UNSET E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE = 0
	// OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_ADJACENCY_SID corresponds to the value ADJACENCY_SID of OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_ADJACENCY_SID E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE = 1
)

// E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE. An additional value named
// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE.
func (E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE.
func (e E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE")
}

const (
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_UNSET E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 0
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_METRIC corresponds to the value ERO_METRIC of OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_METRIC E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 1
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_PATH corresponds to the value ERO_PATH of OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_PATH E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 2
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_SID_MPLS_LABEL_BINDING corresponds to the value SID_MPLS_LABEL_BINDING of OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_SID_MPLS_LABEL_BINDING E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 3
)

// E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE. An additional value named
// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE.
func (E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE.
func (e E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE")
}

const (
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_UNSET E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 0
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_EXTENDED_PREFIX_RANGE corresponds to the value EXTENDED_PREFIX_RANGE of OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_EXTENDED_PREFIX_RANGE E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 1
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_PREFIX_SID corresponds to the value PREFIX_SID of OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_PREFIX_SID E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 2
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_SID_LABEL_BINDING corresponds to the value SID_LABEL_BINDING of OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_SID_LABEL_BINDING E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 3
)

// E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE. An additional value named
// OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE.
func (E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE.
func (e E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE")
}

const (
	// OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE
	OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNSET E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE = 0
	// OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_IPV4_SEGMENT corresponds to the value IPV4_SEGMENT of OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE
	OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_IPV4_SEGMENT E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE = 1
	// OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNNUMBERED_INTERFACE_SEGMENT corresponds to the value UNNUMBERED_INTERFACE_SEGMENT of OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE
	OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNNUMBERED_INTERFACE_SEGMENT E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE = 2
)

// E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_ROUTER_LINK_TYPE. An additional value named
// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_ROUTER_LINK_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_ROUTER_LINK_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_ROUTER_LINK_TYPE.
func (E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE.
func (e E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE")
}

const (
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_UNSET E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 0
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_POINT_TO_POINT_LINK corresponds to the value POINT_TO_POINT_LINK of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_POINT_TO_POINT_LINK E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 1
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_STUB_NETWORK_LINK corresponds to the value STUB_NETWORK_LINK of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_STUB_NETWORK_LINK E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 2
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_TRANSIT_NETWORK_LINK corresponds to the value TRANSIT_NETWORK_LINK of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_TRANSIT_NETWORK_LINK E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 3
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_VIRTUAL_LINK corresponds to the value VIRTUAL_LINK of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_VIRTUAL_LINK E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 4
)

// E_OspfTypes_OSPF_LSA_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_LSA_TYPE. An additional value named
// OspfTypes_OSPF_LSA_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_LSA_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_LSA_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_LSA_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_LSA_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_LSA_TYPE.
func (E_OspfTypes_OSPF_LSA_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_OSPF_LSA_TYPE.
func (e E_OspfTypes_OSPF_LSA_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_LSA_TYPE")
}

const (
	// OspfTypes_OSPF_LSA_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_UNSET E_OspfTypes_OSPF_LSA_TYPE = 0
	// OspfTypes_OSPF_LSA_TYPE_AS_EXTERNAL_LSA corresponds to the value AS_EXTERNAL_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_AS_EXTERNAL_LSA E_OspfTypes_OSPF_LSA_TYPE = 1
	// OspfTypes_OSPF_LSA_TYPE_NETWORK_LSA corresponds to the value NETWORK_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_NETWORK_LSA E_OspfTypes_OSPF_LSA_TYPE = 2
	// OspfTypes_OSPF_LSA_TYPE_NSSA_AS_EXTERNAL_LSA corresponds to the value NSSA_AS_EXTERNAL_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_NSSA_AS_EXTERNAL_LSA E_OspfTypes_OSPF_LSA_TYPE = 3
	// OspfTypes_OSPF_LSA_TYPE_OSPFV2_AREA_SCOPE_OPAQUE_LSA corresponds to the value OSPFV2_AREA_SCOPE_OPAQUE_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_OSPFV2_AREA_SCOPE_OPAQUE_LSA E_OspfTypes_OSPF_LSA_TYPE = 4
	// OspfTypes_OSPF_LSA_TYPE_OSPFV2_AS_SCOPE_OPAQUE_LSA corresponds to the value OSPFV2_AS_SCOPE_OPAQUE_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_OSPFV2_AS_SCOPE_OPAQUE_LSA E_OspfTypes_OSPF_LSA_TYPE = 5
	// OspfTypes_OSPF_LSA_TYPE_OSPFV2_LINK_SCOPE_OPAQUE_LSA corresponds to the value OSPFV2_LINK_SCOPE_OPAQUE_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_OSPFV2_LINK_SCOPE_OPAQUE_LSA E_OspfTypes_OSPF_LSA_TYPE = 6
	// OspfTypes_OSPF_LSA_TYPE_ROUTER_LSA corresponds to the value ROUTER_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_ROUTER_LSA E_OspfTypes_OSPF_LSA_TYPE = 7
	// OspfTypes_OSPF_LSA_TYPE_SUMMARY_ASBR_LSA corresponds to the value SUMMARY_ASBR_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_SUMMARY_ASBR_LSA E_OspfTypes_OSPF_LSA_TYPE = 8
	// OspfTypes_OSPF_LSA_TYPE_SUMMARY_IP_NETWORK_LSA corresponds to the value SUMMARY_IP_NETWORK_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_SUMMARY_IP_NETWORK_LSA E_OspfTypes_OSPF_LSA_TYPE = 9
)

// E_OspfTypes_OSPF_NEIGHBOR_STATE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_NEIGHBOR_STATE. An additional value named
// OspfTypes_OSPF_NEIGHBOR_STATE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_NEIGHBOR_STATE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_NEIGHBOR_STATE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_NEIGHBOR_STATE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_NEIGHBOR_STATE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_NEIGHBOR_STATE.
func (E_OspfTypes_OSPF_NEIGHBOR_STATE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_NEIGHBOR_STATE.
func (e E_OspfTypes_OSPF_NEIGHBOR_STATE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_NEIGHBOR_STATE")
}

const (
	// OspfTypes_OSPF_NEIGHBOR_STATE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_UNSET E_OspfTypes_OSPF_NEIGHBOR_STATE = 0
	// OspfTypes_OSPF_NEIGHBOR_STATE_ATTEMPT corresponds to the value ATTEMPT of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_ATTEMPT E_OspfTypes_OSPF_NEIGHBOR_STATE = 1
	// OspfTypes_OSPF_NEIGHBOR_STATE_DOWN corresponds to the value DOWN of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_DOWN E_OspfTypes_OSPF_NEIGHBOR_STATE = 2
	// OspfTypes_OSPF_NEIGHBOR_STATE_EXCHANGE corresponds to the value EXCHANGE of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_EXCHANGE E_OspfTypes_OSPF_NEIGHBOR_STATE = 3
	// OspfTypes_OSPF_NEIGHBOR_STATE_EXSTART corresponds to the value EXSTART of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_EXSTART E_OspfTypes_OSPF_NEIGHBOR_STATE = 4
	// OspfTypes_OSPF_NEIGHBOR_STATE_FULL corresponds to the value FULL of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_FULL E_OspfTypes_OSPF_NEIGHBOR_STATE = 5
	// OspfTypes_OSPF_NEIGHBOR_STATE_INIT corresponds to the value INIT of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_INIT E_OspfTypes_OSPF_NEIGHBOR_STATE = 6
	// OspfTypes_OSPF_NEIGHBOR_STATE_LOADING corresponds to the value LOADING of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_LOADING E_OspfTypes_OSPF_NEIGHBOR_STATE = 7
	// OspfTypes_OSPF_NEIGHBOR_STATE_TWO_WAY corresponds to the value TWO_WAY of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_TWO_WAY E_OspfTypes_OSPF_NEIGHBOR_STATE = 8
)

// E_OspfTypes_OSPF_NETWORK_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_NETWORK_TYPE. An additional value named
// OspfTypes_OSPF_NETWORK_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_NETWORK_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_NETWORK_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_NETWORK_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_NETWORK_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_NETWORK_TYPE.
func (E_OspfTypes_OSPF_NETWORK_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_OSPF_NETWORK_TYPE.
func (e E_OspfTypes_OSPF_NETWORK_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_NETWORK_TYPE")
}

const (
	// OspfTypes_OSPF_NETWORK_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_NETWORK_TYPE
	OspfTypes_OSPF_NETWORK_TYPE_UNSET E_OspfTypes_OSPF_NETWORK_TYPE = 0
	// OspfTypes_OSPF_NETWORK_TYPE_BROADCAST_NETWORK corresponds to the value BROADCAST_NETWORK of OspfTypes_OSPF_NETWORK_TYPE
	OspfTypes_OSPF_NETWORK_TYPE_BROADCAST_NETWORK E_OspfTypes_OSPF_NETWORK_TYPE = 1
	// OspfTypes_OSPF_NETWORK_TYPE_NON_BROADCAST_NETWORK corresponds to the value NON_BROADCAST_NETWORK of OspfTypes_OSPF_NETWORK_TYPE
	OspfTypes_OSPF_NETWORK_TYPE_NON_BROADCAST_NETWORK E_OspfTypes_OSPF_NETWORK_TYPE = 2
	// OspfTypes_OSPF_NETWORK_TYPE_POINT_TO_POINT_NETWORK corresponds to the value POINT_TO_POINT_NETWORK of OspfTypes_OSPF_NETWORK_TYPE
	OspfTypes_OSPF_NETWORK_TYPE_POINT_TO_POINT_NETWORK E_OspfTypes_OSPF_NETWORK_TYPE = 3
)

// E_OspfTypes_OSPF_OPAQUE_LSA_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_OPAQUE_LSA_TYPE. An additional value named
// OspfTypes_OSPF_OPAQUE_LSA_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_OPAQUE_LSA_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_OPAQUE_LSA_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_OPAQUE_LSA_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_OPAQUE_LSA_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_OPAQUE_LSA_TYPE.
func (E_OspfTypes_OSPF_OPAQUE_LSA_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_OPAQUE_LSA_TYPE.
func (e E_OspfTypes_OSPF_OPAQUE_LSA_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_OPAQUE_LSA_TYPE")
}

const (
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_UNSET E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 0
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_GRACE_LSA corresponds to the value GRACE_LSA of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_GRACE_LSA E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 1
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_LINK corresponds to the value OSPFV2_EXTENDED_LINK of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_LINK E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 2
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_PREFIX corresponds to the value OSPFV2_EXTENDED_PREFIX of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_PREFIX E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 3
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_ROUTER_INFORMATION corresponds to the value ROUTER_INFORMATION of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_ROUTER_INFORMATION E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 4
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_TRAFFIC_ENGINEERING corresponds to the value TRAFFIC_ENGINEERING of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_TRAFFIC_ENGINEERING E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 5
)

// E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES. An additional value named
// OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES.
func (E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES.
func (e E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES")
}

const (
	// OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_UNSET corresponds to the value UNSET of OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES
	OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_UNSET E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES = 0
	// OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_SR_SID_LABEL_TLV corresponds to the value SR_SID_LABEL_TLV of OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES
	OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_SR_SID_LABEL_TLV E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES = 1
)

// E_OspfTypes_OSPF_TE_LINK_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_TE_LINK_TLV_TYPE. An additional value named
// OspfTypes_OSPF_TE_LINK_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_TE_LINK_TLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_TE_LINK_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_TE_LINK_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_TE_LINK_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_TE_LINK_TLV_TYPE.
func (E_OspfTypes_OSPF_TE_LINK_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_TE_LINK_TLV_TYPE.
func (e E_OspfTypes_OSPF_TE_LINK_TLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_TE_LINK_TLV_TYPE")
}

const (
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_UNSET E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 0
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ADMIN_GROUP corresponds to the value TE_LINK_ADMIN_GROUP of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ADMIN_GROUP E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 1
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ID corresponds to the value TE_LINK_ID of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ID E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 2
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_LOCAL_IP corresponds to the value TE_LINK_LOCAL_IP of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_LOCAL_IP E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 3
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_BANDWIDTH corresponds to the value TE_LINK_MAXIMUM_BANDWIDTH of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_BANDWIDTH E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 4
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_RESERVABLE_BANDWIDTH corresponds to the value TE_LINK_MAXIMUM_RESERVABLE_BANDWIDTH of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_RESERVABLE_BANDWIDTH E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 5
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_METRIC corresponds to the value TE_LINK_METRIC of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_METRIC E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 6
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_REMOTE_IP corresponds to the value TE_LINK_REMOTE_IP of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_REMOTE_IP E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 7
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_TYPE corresponds to the value TE_LINK_TYPE of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_TYPE E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 8
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_UNRESERVED_BANDWIDTH corresponds to the value TE_LINK_UNRESERVED_BANDWIDTH of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_UNRESERVED_BANDWIDTH E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 9
)

// E_OspfTypes_OSPF_TE_LSA_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_TE_LSA_TLV_TYPE. An additional value named
// OspfTypes_OSPF_TE_LSA_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_TE_LSA_TLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_TE_LSA_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_TE_LSA_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_TE_LSA_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_TE_LSA_TLV_TYPE.
func (E_OspfTypes_OSPF_TE_LSA_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_TE_LSA_TLV_TYPE.
func (e E_OspfTypes_OSPF_TE_LSA_TLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_TE_LSA_TLV_TYPE")
}

const (
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_UNSET E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 0
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK corresponds to the value TE_LINK of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 1
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK_LOCAL corresponds to the value TE_LINK_LOCAL of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK_LOCAL E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 2
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_NODE_ATTRIBUTE corresponds to the value TE_NODE_ATTRIBUTE of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_NODE_ATTRIBUTE E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 3
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_OPTICAL_NODE_PROPERTY corresponds to the value TE_OPTICAL_NODE_PROPERTY of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_OPTICAL_NODE_PROPERTY E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 4
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_ADDRESS corresponds to the value TE_ROUTER_ADDRESS of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_ADDRESS E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 5
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_IPV6_ADDRESS corresponds to the value TE_ROUTER_IPV6_ADDRESS of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_IPV6_ADDRESS E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 6
)

// E_OspfTypes_RI_LSA_TLV_TYPES is a derived int64 type which is used to represent
// the enumerated node OspfTypes_RI_LSA_TLV_TYPES. An additional value named
// OspfTypes_RI_LSA_TLV_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_RI_LSA_TLV_TYPES int64

// IsYANGGoEnum ensures that OspfTypes_RI_LSA_TLV_TYPES implements the yang.GoEnum
// interface. This ensures that OspfTypes_RI_LSA_TLV_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_RI_LSA_TLV_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_RI_LSA_TLV_TYPES.
func (E_OspfTypes_RI_LSA_TLV_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_RI_LSA_TLV_TYPES.
func (e E_OspfTypes_RI_LSA_TLV_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_RI_LSA_TLV_TYPES")
}

const (
	// OspfTypes_RI_LSA_TLV_TYPES_UNSET corresponds to the value UNSET of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_UNSET E_OspfTypes_RI_LSA_TLV_TYPES = 0
	// OspfTypes_RI_LSA_TLV_TYPES_RI_FUNCTIONAL_CAPABILITIES corresponds to the value RI_FUNCTIONAL_CAPABILITIES of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_FUNCTIONAL_CAPABILITIES E_OspfTypes_RI_LSA_TLV_TYPES = 1
	// OspfTypes_RI_LSA_TLV_TYPES_RI_INFORMATIONAL_CAPABILITIES corresponds to the value RI_INFORMATIONAL_CAPABILITIES of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_INFORMATIONAL_CAPABILITIES E_OspfTypes_RI_LSA_TLV_TYPES = 2
	// OspfTypes_RI_LSA_TLV_TYPES_RI_NODE_ADMIN_TAG corresponds to the value RI_NODE_ADMIN_TAG of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_NODE_ADMIN_TAG E_OspfTypes_RI_LSA_TLV_TYPES = 3
	// OspfTypes_RI_LSA_TLV_TYPES_RI_SR_ALGORITHM corresponds to the value RI_SR_ALGORITHM of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_SR_ALGORITHM E_OspfTypes_RI_LSA_TLV_TYPES = 4
	// OspfTypes_RI_LSA_TLV_TYPES_RI_SR_SID_LABEL_RANGE corresponds to the value RI_SR_SID_LABEL_RANGE of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_SR_SID_LABEL_RANGE E_OspfTypes_RI_LSA_TLV_TYPES = 5
)

// E_OspfTypes_ROUTER_LSA_TYPES is a derived int64 type which is used to represent
// the enumerated node OspfTypes_ROUTER_LSA_TYPES. An additional value named
// OspfTypes_ROUTER_LSA_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_ROUTER_LSA_TYPES int64

// IsYANGGoEnum ensures that OspfTypes_ROUTER_LSA_TYPES implements the yang.GoEnum
// interface. This ensures that OspfTypes_ROUTER_LSA_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_ROUTER_LSA_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_ROUTER_LSA_TYPES.
func (E_OspfTypes_ROUTER_LSA_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_ROUTER_LSA_TYPES.
func (e E_OspfTypes_ROUTER_LSA_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_ROUTER_LSA_TYPES")
}

const (
	// OspfTypes_ROUTER_LSA_TYPES_UNSET corresponds to the value UNSET of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_UNSET E_OspfTypes_ROUTER_LSA_TYPES = 0
	// OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_P2P corresponds to the value ROUTER_LSA_P2P of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_P2P E_OspfTypes_ROUTER_LSA_TYPES = 1
	// OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_STUB_NETWORK corresponds to the value ROUTER_LSA_STUB_NETWORK of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_STUB_NETWORK E_OspfTypes_ROUTER_LSA_TYPES = 2
	// OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_TRANSIT_NETWORK corresponds to the value ROUTER_LSA_TRANSIT_NETWORK of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_TRANSIT_NETWORK E_OspfTypes_ROUTER_LSA_TYPES = 3
	// OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_VIRTUAL_LINK corresponds to the value ROUTER_LSA_VIRTUAL_LINK of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_VIRTUAL_LINK E_OspfTypes_ROUTER_LSA_TYPES = 4
)

// E_OspfTypes_SR_ALGORITHM is a derived int64 type which is used to represent
// the enumerated node OspfTypes_SR_ALGORITHM. An additional value named
// OspfTypes_SR_ALGORITHM_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_SR_ALGORITHM int64

// IsYANGGoEnum ensures that OspfTypes_SR_ALGORITHM implements the yang.GoEnum
// interface. This ensures that OspfTypes_SR_ALGORITHM can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_SR_ALGORITHM) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_SR_ALGORITHM.
func (E_OspfTypes_SR_ALGORITHM) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_SR_ALGORITHM.
func (e E_OspfTypes_SR_ALGORITHM) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_SR_ALGORITHM")
}

const (
	// OspfTypes_SR_ALGORITHM_UNSET corresponds to the value UNSET of OspfTypes_SR_ALGORITHM
	OspfTypes_SR_ALGORITHM_UNSET E_OspfTypes_SR_ALGORITHM = 0
	// OspfTypes_SR_ALGORITHM_SPF corresponds to the value SPF of OspfTypes_SR_ALGORITHM
	OspfTypes_SR_ALGORITHM_SPF E_OspfTypes_SR_ALGORITHM = 1
	// OspfTypes_SR_ALGORITHM_STRICT_SPF corresponds to the value STRICT_SPF of OspfTypes_SR_ALGORITHM
	OspfTypes_SR_ALGORITHM_STRICT_SPF E_OspfTypes_SR_ALGORITHM = 2
)

// E_OspfTypes_SrSidType is a derived int64 type which is used to represent
// the enumerated node OspfTypes_SrSidType. An additional value named
// OspfTypes_SrSidType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_SrSidType int64

// IsYANGGoEnum ensures that OspfTypes_SrSidType implements the yang.GoEnum
// interface. This ensures that OspfTypes_SrSidType can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_SrSidType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_SrSidType.
func (E_OspfTypes_SrSidType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_SrSidType.
func (e E_OspfTypes_SrSidType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_SrSidType")
}

const (
	// OspfTypes_SrSidType_UNSET corresponds to the value UNSET of OspfTypes_SrSidType
	OspfTypes_SrSidType_UNSET E_OspfTypes_SrSidType = 0
	// OspfTypes_SrSidType_LABEL corresponds to the value LABEL of OspfTypes_SrSidType
	OspfTypes_SrSidType_LABEL E_OspfTypes_SrSidType = 1
	// OspfTypes_SrSidType_SID corresponds to the value SID of OspfTypes_SrSidType
	OspfTypes_SrSidType_SID E_OspfTypes_SrSidType = 2
)

// E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE. An additional value named
// OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE.
func (E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE.
func (e E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE")
}

const (
	// OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
	OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_UNSET E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE = 0
	// OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV4_LOCAL_ADDRESS corresponds to the value NODE_IPV4_LOCAL_ADDRESS of OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
	OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV4_LOCAL_ADDRESS E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE = 1
	// OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV6_LOCAL_ADDRESS corresponds to the value NODE_IPV6_LOCAL_ADDRESS of OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
	OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV6_LOCAL_ADDRESS E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE = 2
)

// E_Output_OutputType is a derived int64 type which is used to represent
// the enumerated node Output_OutputType. An additional value named
// Output_OutputType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Output_OutputType int64

// IsYANGGoEnum ensures that Output_OutputType implements the yang.GoEnum
// interface. This ensures that Output_OutputType can be identified as a
// mapped type for a YANG enumeration.
func (E_Output_OutputType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Output_OutputType.
func (E_Output_OutputType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Output_OutputType.
func (e E_Output_OutputType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Output_OutputType")
}

const (
	// Output_OutputType_UNSET corresponds to the value UNSET of Output_OutputType
	Output_OutputType_UNSET E_Output_OutputType = 0
	// Output_OutputType_SCHEDULER corresponds to the value SCHEDULER of Output_OutputType
	Output_OutputType_SCHEDULER E_Output_OutputType = 1
	// Output_OutputType_FWD_GROUP corresponds to the value FWD_GROUP of Output_OutputType
	Output_OutputType_FWD_GROUP E_Output_OutputType = 2
	// Output_OutputType_INTERFACE corresponds to the value INTERFACE of Output_OutputType
	Output_OutputType_INTERFACE E_Output_OutputType = 3
)

// E_PacketMatchTypes_ETHERTYPE is a derived int64 type which is used to represent
// the enumerated node PacketMatchTypes_ETHERTYPE. An additional value named
// PacketMatchTypes_ETHERTYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PacketMatchTypes_ETHERTYPE int64

// IsYANGGoEnum ensures that PacketMatchTypes_ETHERTYPE implements the yang.GoEnum
// interface. This ensures that PacketMatchTypes_ETHERTYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PacketMatchTypes_ETHERTYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PacketMatchTypes_ETHERTYPE.
func (E_PacketMatchTypes_ETHERTYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PacketMatchTypes_ETHERTYPE.
func (e E_PacketMatchTypes_ETHERTYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PacketMatchTypes_ETHERTYPE")
}

const (
	// PacketMatchTypes_ETHERTYPE_UNSET corresponds to the value UNSET of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_UNSET E_PacketMatchTypes_ETHERTYPE = 0
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_ARP corresponds to the value ETHERTYPE_ARP of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_ARP E_PacketMatchTypes_ETHERTYPE = 1
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV4 corresponds to the value ETHERTYPE_IPV4 of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV4 E_PacketMatchTypes_ETHERTYPE = 2
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV6 corresponds to the value ETHERTYPE_IPV6 of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV6 E_PacketMatchTypes_ETHERTYPE = 3
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_LLDP corresponds to the value ETHERTYPE_LLDP of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_LLDP E_PacketMatchTypes_ETHERTYPE = 4
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_MPLS corresponds to the value ETHERTYPE_MPLS of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_MPLS E_PacketMatchTypes_ETHERTYPE = 5
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_ROCE corresponds to the value ETHERTYPE_ROCE of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_ROCE E_PacketMatchTypes_ETHERTYPE = 6
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_VLAN corresponds to the value ETHERTYPE_VLAN of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_VLAN E_PacketMatchTypes_ETHERTYPE = 7
)

// E_PacketMatchTypes_IP_PROTOCOL is a derived int64 type which is used to represent
// the enumerated node PacketMatchTypes_IP_PROTOCOL. An additional value named
// PacketMatchTypes_IP_PROTOCOL_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PacketMatchTypes_IP_PROTOCOL int64

// IsYANGGoEnum ensures that PacketMatchTypes_IP_PROTOCOL implements the yang.GoEnum
// interface. This ensures that PacketMatchTypes_IP_PROTOCOL can be identified as a
// mapped type for a YANG enumeration.
func (E_PacketMatchTypes_IP_PROTOCOL) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PacketMatchTypes_IP_PROTOCOL.
func (E_PacketMatchTypes_IP_PROTOCOL) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PacketMatchTypes_IP_PROTOCOL.
func (e E_PacketMatchTypes_IP_PROTOCOL) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PacketMatchTypes_IP_PROTOCOL")
}

const (
	// PacketMatchTypes_IP_PROTOCOL_UNSET corresponds to the value UNSET of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_UNSET E_PacketMatchTypes_IP_PROTOCOL = 0
	// PacketMatchTypes_IP_PROTOCOL_IP_AUTH corresponds to the value IP_AUTH of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_AUTH E_PacketMatchTypes_IP_PROTOCOL = 1
	// PacketMatchTypes_IP_PROTOCOL_IP_GRE corresponds to the value IP_GRE of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_GRE E_PacketMatchTypes_IP_PROTOCOL = 2
	// PacketMatchTypes_IP_PROTOCOL_IP_ICMP corresponds to the value IP_ICMP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_ICMP E_PacketMatchTypes_IP_PROTOCOL = 3
	// PacketMatchTypes_IP_PROTOCOL_IP_IGMP corresponds to the value IP_IGMP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_IGMP E_PacketMatchTypes_IP_PROTOCOL = 4
	// PacketMatchTypes_IP_PROTOCOL_IP_IN_IP corresponds to the value IP_IN_IP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_IN_IP E_PacketMatchTypes_IP_PROTOCOL = 5
	// PacketMatchTypes_IP_PROTOCOL_IP_L2TP corresponds to the value IP_L2TP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_L2TP E_PacketMatchTypes_IP_PROTOCOL = 6
	// PacketMatchTypes_IP_PROTOCOL_IP_PIM corresponds to the value IP_PIM of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_PIM E_PacketMatchTypes_IP_PROTOCOL = 7
	// PacketMatchTypes_IP_PROTOCOL_IP_RSVP corresponds to the value IP_RSVP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_RSVP E_PacketMatchTypes_IP_PROTOCOL = 8
	// PacketMatchTypes_IP_PROTOCOL_IP_TCP corresponds to the value IP_TCP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_TCP E_PacketMatchTypes_IP_PROTOCOL = 9
	// PacketMatchTypes_IP_PROTOCOL_IP_UDP corresponds to the value IP_UDP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_UDP E_PacketMatchTypes_IP_PROTOCOL = 10
)

// E_PacketMatchTypes_PortNumRange_Enum is a derived int64 type which is used to represent
// the enumerated node PacketMatchTypes_PortNumRange_Enum. An additional value named
// PacketMatchTypes_PortNumRange_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PacketMatchTypes_PortNumRange_Enum int64

// IsYANGGoEnum ensures that PacketMatchTypes_PortNumRange_Enum implements the yang.GoEnum
// interface. This ensures that PacketMatchTypes_PortNumRange_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_PacketMatchTypes_PortNumRange_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PacketMatchTypes_PortNumRange_Enum.
func (E_PacketMatchTypes_PortNumRange_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PacketMatchTypes_PortNumRange_Enum.
func (e E_PacketMatchTypes_PortNumRange_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PacketMatchTypes_PortNumRange_Enum")
}

const (
	// PacketMatchTypes_PortNumRange_Enum_UNSET corresponds to the value UNSET of PacketMatchTypes_PortNumRange_Enum
	PacketMatchTypes_PortNumRange_Enum_UNSET E_PacketMatchTypes_PortNumRange_Enum = 0
	// PacketMatchTypes_PortNumRange_Enum_ANY corresponds to the value ANY of PacketMatchTypes_PortNumRange_Enum
	PacketMatchTypes_PortNumRange_Enum_ANY E_PacketMatchTypes_PortNumRange_Enum = 1
)

// E_PacketMatchTypes_TCP_FLAGS is a derived int64 type which is used to represent
// the enumerated node PacketMatchTypes_TCP_FLAGS. An additional value named
// PacketMatchTypes_TCP_FLAGS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PacketMatchTypes_TCP_FLAGS int64

// IsYANGGoEnum ensures that PacketMatchTypes_TCP_FLAGS implements the yang.GoEnum
// interface. This ensures that PacketMatchTypes_TCP_FLAGS can be identified as a
// mapped type for a YANG enumeration.
func (E_PacketMatchTypes_TCP_FLAGS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PacketMatchTypes_TCP_FLAGS.
func (E_PacketMatchTypes_TCP_FLAGS) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PacketMatchTypes_TCP_FLAGS.
func (e E_PacketMatchTypes_TCP_FLAGS) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PacketMatchTypes_TCP_FLAGS")
}

const (
	// PacketMatchTypes_TCP_FLAGS_UNSET corresponds to the value UNSET of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_UNSET E_PacketMatchTypes_TCP_FLAGS = 0
	// PacketMatchTypes_TCP_FLAGS_TCP_ACK corresponds to the value TCP_ACK of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_ACK E_PacketMatchTypes_TCP_FLAGS = 1
	// PacketMatchTypes_TCP_FLAGS_TCP_CWR corresponds to the value TCP_CWR of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_CWR E_PacketMatchTypes_TCP_FLAGS = 2
	// PacketMatchTypes_TCP_FLAGS_TCP_ECE corresponds to the value TCP_ECE of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_ECE E_PacketMatchTypes_TCP_FLAGS = 3
	// PacketMatchTypes_TCP_FLAGS_TCP_FIN corresponds to the value TCP_FIN of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_FIN E_PacketMatchTypes_TCP_FLAGS = 4
	// PacketMatchTypes_TCP_FLAGS_TCP_PSH corresponds to the value TCP_PSH of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_PSH E_PacketMatchTypes_TCP_FLAGS = 5
	// PacketMatchTypes_TCP_FLAGS_TCP_RST corresponds to the value TCP_RST of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_RST E_PacketMatchTypes_TCP_FLAGS = 6
	// PacketMatchTypes_TCP_FLAGS_TCP_SYN corresponds to the value TCP_SYN of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_SYN E_PacketMatchTypes_TCP_FLAGS = 7
	// PacketMatchTypes_TCP_FLAGS_TCP_URG corresponds to the value TCP_URG of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_URG E_PacketMatchTypes_TCP_FLAGS = 8
)

// E_PimTypes_PIM_MODE is a derived int64 type which is used to represent
// the enumerated node PimTypes_PIM_MODE. An additional value named
// PimTypes_PIM_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PimTypes_PIM_MODE int64

// IsYANGGoEnum ensures that PimTypes_PIM_MODE implements the yang.GoEnum
// interface. This ensures that PimTypes_PIM_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_PimTypes_PIM_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PimTypes_PIM_MODE.
func (E_PimTypes_PIM_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PimTypes_PIM_MODE.
func (e E_PimTypes_PIM_MODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PimTypes_PIM_MODE")
}

const (
	// PimTypes_PIM_MODE_UNSET corresponds to the value UNSET of PimTypes_PIM_MODE
	PimTypes_PIM_MODE_UNSET E_PimTypes_PIM_MODE = 0
	// PimTypes_PIM_MODE_PIM_MODE_DENSE corresponds to the value PIM_MODE_DENSE of PimTypes_PIM_MODE
	PimTypes_PIM_MODE_PIM_MODE_DENSE E_PimTypes_PIM_MODE = 1
	// PimTypes_PIM_MODE_PIM_MODE_SPARSE corresponds to the value PIM_MODE_SPARSE of PimTypes_PIM_MODE
	PimTypes_PIM_MODE_PIM_MODE_SPARSE E_PimTypes_PIM_MODE = 2
)

// E_PlatformSoftware_SOFTWARE_MODULE_TYPE is a derived int64 type which is used to represent
// the enumerated node PlatformSoftware_SOFTWARE_MODULE_TYPE. An additional value named
// PlatformSoftware_SOFTWARE_MODULE_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformSoftware_SOFTWARE_MODULE_TYPE int64

// IsYANGGoEnum ensures that PlatformSoftware_SOFTWARE_MODULE_TYPE implements the yang.GoEnum
// interface. This ensures that PlatformSoftware_SOFTWARE_MODULE_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformSoftware_SOFTWARE_MODULE_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformSoftware_SOFTWARE_MODULE_TYPE.
func (E_PlatformSoftware_SOFTWARE_MODULE_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformSoftware_SOFTWARE_MODULE_TYPE.
func (e E_PlatformSoftware_SOFTWARE_MODULE_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformSoftware_SOFTWARE_MODULE_TYPE")
}

const (
	// PlatformSoftware_SOFTWARE_MODULE_TYPE_UNSET corresponds to the value UNSET of PlatformSoftware_SOFTWARE_MODULE_TYPE
	PlatformSoftware_SOFTWARE_MODULE_TYPE_UNSET E_PlatformSoftware_SOFTWARE_MODULE_TYPE = 0
	// PlatformSoftware_SOFTWARE_MODULE_TYPE_USERSPACE_PACKAGE corresponds to the value USERSPACE_PACKAGE of PlatformSoftware_SOFTWARE_MODULE_TYPE
	PlatformSoftware_SOFTWARE_MODULE_TYPE_USERSPACE_PACKAGE E_PlatformSoftware_SOFTWARE_MODULE_TYPE = 1
	// PlatformSoftware_SOFTWARE_MODULE_TYPE_USERSPACE_PACKAGE_BUNDLE corresponds to the value USERSPACE_PACKAGE_BUNDLE of PlatformSoftware_SOFTWARE_MODULE_TYPE
	PlatformSoftware_SOFTWARE_MODULE_TYPE_USERSPACE_PACKAGE_BUNDLE E_PlatformSoftware_SOFTWARE_MODULE_TYPE = 2
)

// E_PlatformTypes_COMPONENT_OPER_STATUS is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_COMPONENT_OPER_STATUS. An additional value named
// PlatformTypes_COMPONENT_OPER_STATUS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_COMPONENT_OPER_STATUS int64

// IsYANGGoEnum ensures that PlatformTypes_COMPONENT_OPER_STATUS implements the yang.GoEnum
// interface. This ensures that PlatformTypes_COMPONENT_OPER_STATUS can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_COMPONENT_OPER_STATUS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_COMPONENT_OPER_STATUS.
func (E_PlatformTypes_COMPONENT_OPER_STATUS) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_COMPONENT_OPER_STATUS.
func (e E_PlatformTypes_COMPONENT_OPER_STATUS) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_COMPONENT_OPER_STATUS")
}

const (
	// PlatformTypes_COMPONENT_OPER_STATUS_UNSET corresponds to the value UNSET of PlatformTypes_COMPONENT_OPER_STATUS
	PlatformTypes_COMPONENT_OPER_STATUS_UNSET E_PlatformTypes_COMPONENT_OPER_STATUS = 0
	// PlatformTypes_COMPONENT_OPER_STATUS_ACTIVE corresponds to the value ACTIVE of PlatformTypes_COMPONENT_OPER_STATUS
	PlatformTypes_COMPONENT_OPER_STATUS_ACTIVE E_PlatformTypes_COMPONENT_OPER_STATUS = 1
	// PlatformTypes_COMPONENT_OPER_STATUS_DISABLED corresponds to the value DISABLED of PlatformTypes_COMPONENT_OPER_STATUS
	PlatformTypes_COMPONENT_OPER_STATUS_DISABLED E_PlatformTypes_COMPONENT_OPER_STATUS = 2
	// PlatformTypes_COMPONENT_OPER_STATUS_INACTIVE corresponds to the value INACTIVE of PlatformTypes_COMPONENT_OPER_STATUS
	PlatformTypes_COMPONENT_OPER_STATUS_INACTIVE E_PlatformTypes_COMPONENT_OPER_STATUS = 3
)

// E_PlatformTypes_COMPONENT_REBOOT_REASON is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_COMPONENT_REBOOT_REASON. An additional value named
// PlatformTypes_COMPONENT_REBOOT_REASON_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_COMPONENT_REBOOT_REASON int64

// IsYANGGoEnum ensures that PlatformTypes_COMPONENT_REBOOT_REASON implements the yang.GoEnum
// interface. This ensures that PlatformTypes_COMPONENT_REBOOT_REASON can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_COMPONENT_REBOOT_REASON) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_COMPONENT_REBOOT_REASON.
func (E_PlatformTypes_COMPONENT_REBOOT_REASON) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_COMPONENT_REBOOT_REASON.
func (e E_PlatformTypes_COMPONENT_REBOOT_REASON) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_COMPONENT_REBOOT_REASON")
}

const (
	// PlatformTypes_COMPONENT_REBOOT_REASON_UNSET corresponds to the value UNSET of PlatformTypes_COMPONENT_REBOOT_REASON
	PlatformTypes_COMPONENT_REBOOT_REASON_UNSET E_PlatformTypes_COMPONENT_REBOOT_REASON = 0
	// PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_CRITICAL_ERROR corresponds to the value REBOOT_CRITICAL_ERROR of PlatformTypes_COMPONENT_REBOOT_REASON
	PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_CRITICAL_ERROR E_PlatformTypes_COMPONENT_REBOOT_REASON = 1
	// PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_POWER_FAILURE corresponds to the value REBOOT_POWER_FAILURE of PlatformTypes_COMPONENT_REBOOT_REASON
	PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_POWER_FAILURE E_PlatformTypes_COMPONENT_REBOOT_REASON = 2
	// PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_USER_INITIATED corresponds to the value REBOOT_USER_INITIATED of PlatformTypes_COMPONENT_REBOOT_REASON
	PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_USER_INITIATED E_PlatformTypes_COMPONENT_REBOOT_REASON = 3
)

// E_PlatformTypes_ComponentRedundantRole is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_ComponentRedundantRole. An additional value named
// PlatformTypes_ComponentRedundantRole_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_ComponentRedundantRole int64

// IsYANGGoEnum ensures that PlatformTypes_ComponentRedundantRole implements the yang.GoEnum
// interface. This ensures that PlatformTypes_ComponentRedundantRole can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_ComponentRedundantRole) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_ComponentRedundantRole.
func (E_PlatformTypes_ComponentRedundantRole) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_ComponentRedundantRole.
func (e E_PlatformTypes_ComponentRedundantRole) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_ComponentRedundantRole")
}

const (
	// PlatformTypes_ComponentRedundantRole_UNSET corresponds to the value UNSET of PlatformTypes_ComponentRedundantRole
	PlatformTypes_ComponentRedundantRole_UNSET E_PlatformTypes_ComponentRedundantRole = 0
	// PlatformTypes_ComponentRedundantRole_PRIMARY corresponds to the value PRIMARY of PlatformTypes_ComponentRedundantRole
	PlatformTypes_ComponentRedundantRole_PRIMARY E_PlatformTypes_ComponentRedundantRole = 1
	// PlatformTypes_ComponentRedundantRole_SECONDARY corresponds to the value SECONDARY of PlatformTypes_ComponentRedundantRole
	PlatformTypes_ComponentRedundantRole_SECONDARY E_PlatformTypes_ComponentRedundantRole = 2
)

// E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger. An additional value named
// PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger int64

// IsYANGGoEnum ensures that PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger implements the yang.GoEnum
// interface. This ensures that PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger.
func (E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger.
func (e E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger")
}

const (
	// PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_UNSET corresponds to the value UNSET of PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger
	PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_UNSET E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger = 0
	// PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_USER_INITIATED corresponds to the value USER_INITIATED of PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger
	PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_USER_INITIATED E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger = 1
	// PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_SYSTEM_INITIATED corresponds to the value SYSTEM_INITIATED of PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger
	PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_SYSTEM_INITIATED E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger = 2
)

// E_PlatformTypes_FEC_MODE_TYPE is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_FEC_MODE_TYPE. An additional value named
// PlatformTypes_FEC_MODE_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_FEC_MODE_TYPE int64

// IsYANGGoEnum ensures that PlatformTypes_FEC_MODE_TYPE implements the yang.GoEnum
// interface. This ensures that PlatformTypes_FEC_MODE_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_FEC_MODE_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_FEC_MODE_TYPE.
func (E_PlatformTypes_FEC_MODE_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PlatformTypes_FEC_MODE_TYPE.
func (e E_PlatformTypes_FEC_MODE_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_FEC_MODE_TYPE")
}

const (
	// PlatformTypes_FEC_MODE_TYPE_UNSET corresponds to the value UNSET of PlatformTypes_FEC_MODE_TYPE
	PlatformTypes_FEC_MODE_TYPE_UNSET E_PlatformTypes_FEC_MODE_TYPE = 0
	// PlatformTypes_FEC_MODE_TYPE_FEC_AUTO corresponds to the value FEC_AUTO of PlatformTypes_FEC_MODE_TYPE
	PlatformTypes_FEC_MODE_TYPE_FEC_AUTO E_PlatformTypes_FEC_MODE_TYPE = 1
	// PlatformTypes_FEC_MODE_TYPE_FEC_DISABLED corresponds to the value FEC_DISABLED of PlatformTypes_FEC_MODE_TYPE
	PlatformTypes_FEC_MODE_TYPE_FEC_DISABLED E_PlatformTypes_FEC_MODE_TYPE = 2
	// PlatformTypes_FEC_MODE_TYPE_FEC_ENABLED corresponds to the value FEC_ENABLED of PlatformTypes_FEC_MODE_TYPE
	PlatformTypes_FEC_MODE_TYPE_FEC_ENABLED E_PlatformTypes_FEC_MODE_TYPE = 3
)

// E_PlatformTypes_FEC_STATUS_TYPE is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_FEC_STATUS_TYPE. An additional value named
// PlatformTypes_FEC_STATUS_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_FEC_STATUS_TYPE int64

// IsYANGGoEnum ensures that PlatformTypes_FEC_STATUS_TYPE implements the yang.GoEnum
// interface. This ensures that PlatformTypes_FEC_STATUS_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_FEC_STATUS_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_FEC_STATUS_TYPE.
func (E_PlatformTypes_FEC_STATUS_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_FEC_STATUS_TYPE.
func (e E_PlatformTypes_FEC_STATUS_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_FEC_STATUS_TYPE")
}

const (
	// PlatformTypes_FEC_STATUS_TYPE_UNSET corresponds to the value UNSET of PlatformTypes_FEC_STATUS_TYPE
	PlatformTypes_FEC_STATUS_TYPE_UNSET E_PlatformTypes_FEC_STATUS_TYPE = 0
	// PlatformTypes_FEC_STATUS_TYPE_FEC_STATUS_LOCKED corresponds to the value FEC_STATUS_LOCKED of PlatformTypes_FEC_STATUS_TYPE
	PlatformTypes_FEC_STATUS_TYPE_FEC_STATUS_LOCKED E_PlatformTypes_FEC_STATUS_TYPE = 1
	// PlatformTypes_FEC_STATUS_TYPE_FEC_STATUS_UNLOCKED corresponds to the value FEC_STATUS_UNLOCKED of PlatformTypes_FEC_STATUS_TYPE
	PlatformTypes_FEC_STATUS_TYPE_FEC_STATUS_UNLOCKED E_PlatformTypes_FEC_STATUS_TYPE = 2
)

// E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT. An additional value named
// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT int64

// IsYANGGoEnum ensures that PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT implements the yang.GoEnum
// interface. This ensures that PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT.
func (E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT.
func (e E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT")
}

const (
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_UNSET corresponds to the value UNSET of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_UNSET E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 0
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_BACKPLANE corresponds to the value BACKPLANE of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_BACKPLANE E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 1
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CHASSIS corresponds to the value CHASSIS of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CHASSIS E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 2
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CONTROLLER_CARD corresponds to the value CONTROLLER_CARD of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CONTROLLER_CARD E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 3
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CPU corresponds to the value CPU of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CPU E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 4
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FABRIC corresponds to the value FABRIC of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FABRIC E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 5
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN corresponds to the value FAN of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 6
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FRU corresponds to the value FRU of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FRU E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 7
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_INTEGRATED_CIRCUIT corresponds to the value INTEGRATED_CIRCUIT of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_INTEGRATED_CIRCUIT E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 8
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_LINECARD corresponds to the value LINECARD of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_LINECARD E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 9
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_OPTICAL_CHANNEL corresponds to the value OPTICAL_CHANNEL of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_OPTICAL_CHANNEL E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 10
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_PORT corresponds to the value PORT of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_PORT E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 11
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_POWER_SUPPLY corresponds to the value POWER_SUPPLY of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_POWER_SUPPLY E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 12
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_SENSOR corresponds to the value SENSOR of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_SENSOR E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 13
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_STORAGE corresponds to the value STORAGE of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_STORAGE E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 14
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_TRANSCEIVER corresponds to the value TRANSCEIVER of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_TRANSCEIVER E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 15
)

// E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT. An additional value named
// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT int64

// IsYANGGoEnum ensures that PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT implements the yang.GoEnum
// interface. This ensures that PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT.
func (E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT.
func (e E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT")
}

const (
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_UNSET corresponds to the value UNSET of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_UNSET E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 0
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_BIOS corresponds to the value BIOS of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_BIOS E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 1
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_BOOT_LOADER corresponds to the value BOOT_LOADER of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_BOOT_LOADER E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 2
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM corresponds to the value OPERATING_SYSTEM of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 3
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM_UPDATE corresponds to the value OPERATING_SYSTEM_UPDATE of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM_UPDATE E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 4
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_SOFTWARE_MODULE corresponds to the value SOFTWARE_MODULE of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_SOFTWARE_MODULE E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 5
)

// E_PolicyTypes_ATTRIBUTE_COMPARISON is a derived int64 type which is used to represent
// the enumerated node PolicyTypes_ATTRIBUTE_COMPARISON. An additional value named
// PolicyTypes_ATTRIBUTE_COMPARISON_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PolicyTypes_ATTRIBUTE_COMPARISON int64

// IsYANGGoEnum ensures that PolicyTypes_ATTRIBUTE_COMPARISON implements the yang.GoEnum
// interface. This ensures that PolicyTypes_ATTRIBUTE_COMPARISON can be identified as a
// mapped type for a YANG enumeration.
func (E_PolicyTypes_ATTRIBUTE_COMPARISON) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PolicyTypes_ATTRIBUTE_COMPARISON.
func (E_PolicyTypes_ATTRIBUTE_COMPARISON) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PolicyTypes_ATTRIBUTE_COMPARISON.
func (e E_PolicyTypes_ATTRIBUTE_COMPARISON) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PolicyTypes_ATTRIBUTE_COMPARISON")
}

const (
	// PolicyTypes_ATTRIBUTE_COMPARISON_UNSET corresponds to the value UNSET of PolicyTypes_ATTRIBUTE_COMPARISON
	PolicyTypes_ATTRIBUTE_COMPARISON_UNSET E_PolicyTypes_ATTRIBUTE_COMPARISON = 0
	// PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_EQ corresponds to the value ATTRIBUTE_EQ of PolicyTypes_ATTRIBUTE_COMPARISON
	PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_EQ E_PolicyTypes_ATTRIBUTE_COMPARISON = 1
	// PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_GE corresponds to the value ATTRIBUTE_GE of PolicyTypes_ATTRIBUTE_COMPARISON
	PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_GE E_PolicyTypes_ATTRIBUTE_COMPARISON = 2
	// PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_LE corresponds to the value ATTRIBUTE_LE of PolicyTypes_ATTRIBUTE_COMPARISON
	PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_LE E_PolicyTypes_ATTRIBUTE_COMPARISON = 3
)

// E_PolicyTypes_INSTALL_PROTOCOL_TYPE is a derived int64 type which is used to represent
// the enumerated node PolicyTypes_INSTALL_PROTOCOL_TYPE. An additional value named
// PolicyTypes_INSTALL_PROTOCOL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PolicyTypes_INSTALL_PROTOCOL_TYPE int64

// IsYANGGoEnum ensures that PolicyTypes_INSTALL_PROTOCOL_TYPE implements the yang.GoEnum
// interface. This ensures that PolicyTypes_INSTALL_PROTOCOL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PolicyTypes_INSTALL_PROTOCOL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PolicyTypes_INSTALL_PROTOCOL_TYPE.
func (E_PolicyTypes_INSTALL_PROTOCOL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PolicyTypes_INSTALL_PROTOCOL_TYPE.
func (e E_PolicyTypes_INSTALL_PROTOCOL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PolicyTypes_INSTALL_PROTOCOL_TYPE")
}

const (
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_UNSET corresponds to the value UNSET of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_UNSET E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 0
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_BGP corresponds to the value BGP of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_BGP E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 1
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_DIRECTLY_CONNECTED corresponds to the value DIRECTLY_CONNECTED of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_DIRECTLY_CONNECTED E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 2
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_GRIBI corresponds to the value GRIBI of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_GRIBI E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 3
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_IGMP corresponds to the value IGMP of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_IGMP E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 4
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_ISIS corresponds to the value ISIS of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_ISIS E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 5
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_LOCAL_AGGREGATE corresponds to the value LOCAL_AGGREGATE of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_LOCAL_AGGREGATE E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 6
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF corresponds to the value OSPF of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 7
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF3 corresponds to the value OSPF3 of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF3 E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 8
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_PIM corresponds to the value PIM of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_PIM E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 9
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_STATIC corresponds to the value STATIC of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_STATIC E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 10
)

// E_PolicyTypes_MatchSetOptionsRestrictedType is a derived int64 type which is used to represent
// the enumerated node PolicyTypes_MatchSetOptionsRestrictedType. An additional value named
// PolicyTypes_MatchSetOptionsRestrictedType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PolicyTypes_MatchSetOptionsRestrictedType int64

// IsYANGGoEnum ensures that PolicyTypes_MatchSetOptionsRestrictedType implements the yang.GoEnum
// interface. This ensures that PolicyTypes_MatchSetOptionsRestrictedType can be identified as a
// mapped type for a YANG enumeration.
func (E_PolicyTypes_MatchSetOptionsRestrictedType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PolicyTypes_MatchSetOptionsRestrictedType.
func (E_PolicyTypes_MatchSetOptionsRestrictedType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PolicyTypes_MatchSetOptionsRestrictedType.
func (e E_PolicyTypes_MatchSetOptionsRestrictedType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PolicyTypes_MatchSetOptionsRestrictedType")
}

const (
	// PolicyTypes_MatchSetOptionsRestrictedType_UNSET corresponds to the value UNSET of PolicyTypes_MatchSetOptionsRestrictedType
	PolicyTypes_MatchSetOptionsRestrictedType_UNSET E_PolicyTypes_MatchSetOptionsRestrictedType = 0
	// PolicyTypes_MatchSetOptionsRestrictedType_ANY corresponds to the value ANY of PolicyTypes_MatchSetOptionsRestrictedType
	PolicyTypes_MatchSetOptionsRestrictedType_ANY E_PolicyTypes_MatchSetOptionsRestrictedType = 1
	// PolicyTypes_MatchSetOptionsRestrictedType_INVERT corresponds to the value INVERT of PolicyTypes_MatchSetOptionsRestrictedType
	PolicyTypes_MatchSetOptionsRestrictedType_INVERT E_PolicyTypes_MatchSetOptionsRestrictedType = 2
)

// E_PolicyTypes_MatchSetOptionsType is a derived int64 type which is used to represent
// the enumerated node PolicyTypes_MatchSetOptionsType. An additional value named
// PolicyTypes_MatchSetOptionsType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PolicyTypes_MatchSetOptionsType int64

// IsYANGGoEnum ensures that PolicyTypes_MatchSetOptionsType implements the yang.GoEnum
// interface. This ensures that PolicyTypes_MatchSetOptionsType can be identified as a
// mapped type for a YANG enumeration.
func (E_PolicyTypes_MatchSetOptionsType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PolicyTypes_MatchSetOptionsType.
func (E_PolicyTypes_MatchSetOptionsType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PolicyTypes_MatchSetOptionsType.
func (e E_PolicyTypes_MatchSetOptionsType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PolicyTypes_MatchSetOptionsType")
}

const (
	// PolicyTypes_MatchSetOptionsType_UNSET corresponds to the value UNSET of PolicyTypes_MatchSetOptionsType
	PolicyTypes_MatchSetOptionsType_UNSET E_PolicyTypes_MatchSetOptionsType = 0
	// PolicyTypes_MatchSetOptionsType_ANY corresponds to the value ANY of PolicyTypes_MatchSetOptionsType
	PolicyTypes_MatchSetOptionsType_ANY E_PolicyTypes_MatchSetOptionsType = 1
	// PolicyTypes_MatchSetOptionsType_ALL corresponds to the value ALL of PolicyTypes_MatchSetOptionsType
	PolicyTypes_MatchSetOptionsType_ALL E_PolicyTypes_MatchSetOptionsType = 2
	// PolicyTypes_MatchSetOptionsType_INVERT corresponds to the value INVERT of PolicyTypes_MatchSetOptionsType
	PolicyTypes_MatchSetOptionsType_INVERT E_PolicyTypes_MatchSetOptionsType = 3
)

// E_Policy_Type is a derived int64 type which is used to represent
// the enumerated node Policy_Type. An additional value named
// Policy_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Policy_Type int64

// IsYANGGoEnum ensures that Policy_Type implements the yang.GoEnum
// interface. This ensures that Policy_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Policy_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Policy_Type.
func (E_Policy_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Policy_Type.
func (e E_Policy_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Policy_Type")
}

const (
	// Policy_Type_UNSET corresponds to the value UNSET of Policy_Type
	Policy_Type_UNSET E_Policy_Type = 0
	// Policy_Type_PBR_POLICY corresponds to the value PBR_POLICY of Policy_Type
	Policy_Type_PBR_POLICY E_Policy_Type = 1
	// Policy_Type_VRF_SELECTION_POLICY corresponds to the value VRF_SELECTION_POLICY of Policy_Type
	Policy_Type_VRF_SELECTION_POLICY E_Policy_Type = 2
)

// E_PrefixSet_Mode is a derived int64 type which is used to represent
// the enumerated node PrefixSet_Mode. An additional value named
// PrefixSet_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSet_Mode int64

// IsYANGGoEnum ensures that PrefixSet_Mode implements the yang.GoEnum
// interface. This ensures that PrefixSet_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSet_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSet_Mode.
func (E_PrefixSet_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSet_Mode.
func (e E_PrefixSet_Mode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSet_Mode")
}

const (
	// PrefixSet_Mode_UNSET corresponds to the value UNSET of PrefixSet_Mode
	PrefixSet_Mode_UNSET E_PrefixSet_Mode = 0
	// PrefixSet_Mode_IPV4 corresponds to the value IPV4 of PrefixSet_Mode
	PrefixSet_Mode_IPV4 E_PrefixSet_Mode = 1
	// PrefixSet_Mode_IPV6 corresponds to the value IPV6 of PrefixSet_Mode
	PrefixSet_Mode_IPV6 E_PrefixSet_Mode = 2
	// PrefixSet_Mode_MIXED corresponds to the value MIXED of PrefixSet_Mode
	PrefixSet_Mode_MIXED E_PrefixSet_Mode = 3
)

// E_PrefixSid_Flags is a derived int64 type which is used to represent
// the enumerated node PrefixSid_Flags. An additional value named
// PrefixSid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_Flags int64

// IsYANGGoEnum ensures that PrefixSid_Flags implements the yang.GoEnum
// interface. This ensures that PrefixSid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_Flags.
func (E_PrefixSid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_Flags.
func (e E_PrefixSid_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_Flags")
}

const (
	// PrefixSid_Flags_UNSET corresponds to the value UNSET of PrefixSid_Flags
	PrefixSid_Flags_UNSET E_PrefixSid_Flags = 0
	// PrefixSid_Flags_READVERTISEMENT corresponds to the value READVERTISEMENT of PrefixSid_Flags
	PrefixSid_Flags_READVERTISEMENT E_PrefixSid_Flags = 1
	// PrefixSid_Flags_NODE corresponds to the value NODE of PrefixSid_Flags
	PrefixSid_Flags_NODE E_PrefixSid_Flags = 2
	// PrefixSid_Flags_NO_PHP corresponds to the value NO_PHP of PrefixSid_Flags
	PrefixSid_Flags_NO_PHP E_PrefixSid_Flags = 3
	// PrefixSid_Flags_EXPLICIT_NULL corresponds to the value EXPLICIT_NULL of PrefixSid_Flags
	PrefixSid_Flags_EXPLICIT_NULL E_PrefixSid_Flags = 4
	// PrefixSid_Flags_VALUE corresponds to the value VALUE of PrefixSid_Flags
	PrefixSid_Flags_VALUE E_PrefixSid_Flags = 5
	// PrefixSid_Flags_LOCAL corresponds to the value LOCAL of PrefixSid_Flags
	PrefixSid_Flags_LOCAL E_PrefixSid_Flags = 6
)

// E_PrefixSid_LabelOptions is a derived int64 type which is used to represent
// the enumerated node PrefixSid_LabelOptions. An additional value named
// PrefixSid_LabelOptions_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_LabelOptions int64

// IsYANGGoEnum ensures that PrefixSid_LabelOptions implements the yang.GoEnum
// interface. This ensures that PrefixSid_LabelOptions can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_LabelOptions) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_LabelOptions.
func (E_PrefixSid_LabelOptions) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_LabelOptions.
func (e E_PrefixSid_LabelOptions) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_LabelOptions")
}

const (
	// PrefixSid_LabelOptions_UNSET corresponds to the value UNSET of PrefixSid_LabelOptions
	PrefixSid_LabelOptions_UNSET E_PrefixSid_LabelOptions = 0
	// PrefixSid_LabelOptions_NO_PHP corresponds to the value NO_PHP of PrefixSid_LabelOptions
	PrefixSid_LabelOptions_NO_PHP E_PrefixSid_LabelOptions = 1
	// PrefixSid_LabelOptions_EXPLICIT_NULL corresponds to the value EXPLICIT_NULL of PrefixSid_LabelOptions
	PrefixSid_LabelOptions_EXPLICIT_NULL E_PrefixSid_LabelOptions = 2
)

// E_PrefixSid_SidScope is a derived int64 type which is used to represent
// the enumerated node PrefixSid_SidScope. An additional value named
// PrefixSid_SidScope_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_SidScope int64

// IsYANGGoEnum ensures that PrefixSid_SidScope implements the yang.GoEnum
// interface. This ensures that PrefixSid_SidScope can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_SidScope) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_SidScope.
func (E_PrefixSid_SidScope) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_SidScope.
func (e E_PrefixSid_SidScope) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_SidScope")
}

const (
	// PrefixSid_SidScope_UNSET corresponds to the value UNSET of PrefixSid_SidScope
	PrefixSid_SidScope_UNSET E_PrefixSid_SidScope = 0
	// PrefixSid_SidScope_LOCAL corresponds to the value LOCAL of PrefixSid_SidScope
	PrefixSid_SidScope_LOCAL E_PrefixSid_SidScope = 1
	// PrefixSid_SidScope_GLOBAL corresponds to the value GLOBAL of PrefixSid_SidScope
	PrefixSid_SidScope_GLOBAL E_PrefixSid_SidScope = 2
)

// E_PrefixSid_SidValueType is a derived int64 type which is used to represent
// the enumerated node PrefixSid_SidValueType. An additional value named
// PrefixSid_SidValueType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_SidValueType int64

// IsYANGGoEnum ensures that PrefixSid_SidValueType implements the yang.GoEnum
// interface. This ensures that PrefixSid_SidValueType can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_SidValueType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_SidValueType.
func (E_PrefixSid_SidValueType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_SidValueType.
func (e E_PrefixSid_SidValueType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_SidValueType")
}

const (
	// PrefixSid_SidValueType_UNSET corresponds to the value UNSET of PrefixSid_SidValueType
	PrefixSid_SidValueType_UNSET E_PrefixSid_SidValueType = 0
	// PrefixSid_SidValueType_ABSOLUTE corresponds to the value ABSOLUTE of PrefixSid_SidValueType
	PrefixSid_SidValueType_ABSOLUTE E_PrefixSid_SidValueType = 1
	// PrefixSid_SidValueType_INDEX corresponds to the value INDEX of PrefixSid_SidValueType
	PrefixSid_SidValueType_INDEX E_PrefixSid_SidValueType = 2
)

// E_Producer_MobilityState is a derived int64 type which is used to represent
// the enumerated node Producer_MobilityState. An additional value named
// Producer_MobilityState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Producer_MobilityState int64

// IsYANGGoEnum ensures that Producer_MobilityState implements the yang.GoEnum
// interface. This ensures that Producer_MobilityState can be identified as a
// mapped type for a YANG enumeration.
func (E_Producer_MobilityState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Producer_MobilityState.
func (E_Producer_MobilityState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Producer_MobilityState.
func (e E_Producer_MobilityState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Producer_MobilityState")
}

const (
	// Producer_MobilityState_UNSET corresponds to the value UNSET of Producer_MobilityState
	Producer_MobilityState_UNSET E_Producer_MobilityState = 0
	// Producer_MobilityState_FROZEN corresponds to the value FROZEN of Producer_MobilityState
	Producer_MobilityState_FROZEN E_Producer_MobilityState = 1
	// Producer_MobilityState_DUPLICATE corresponds to the value DUPLICATE of Producer_MobilityState
	Producer_MobilityState_DUPLICATE E_Producer_MobilityState = 2
)

// E_Producer_Producer is a derived int64 type which is used to represent
// the enumerated node Producer_Producer. An additional value named
// Producer_Producer_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Producer_Producer int64

// IsYANGGoEnum ensures that Producer_Producer implements the yang.GoEnum
// interface. This ensures that Producer_Producer can be identified as a
// mapped type for a YANG enumeration.
func (E_Producer_Producer) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Producer_Producer.
func (E_Producer_Producer) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Producer_Producer.
func (e E_Producer_Producer) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Producer_Producer")
}

const (
	// Producer_Producer_UNSET corresponds to the value UNSET of Producer_Producer
	Producer_Producer_UNSET E_Producer_Producer = 0
	// Producer_Producer_LOCAL corresponds to the value LOCAL of Producer_Producer
	Producer_Producer_LOCAL E_Producer_Producer = 1
	// Producer_Producer_STATIC corresponds to the value STATIC of Producer_Producer
	Producer_Producer_STATIC E_Producer_Producer = 2
	// Producer_Producer_BGP corresponds to the value BGP of Producer_Producer
	Producer_Producer_BGP E_Producer_Producer = 3
)

// E_ProxyArp_Mode is a derived int64 type which is used to represent
// the enumerated node ProxyArp_Mode. An additional value named
// ProxyArp_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ProxyArp_Mode int64

// IsYANGGoEnum ensures that ProxyArp_Mode implements the yang.GoEnum
// interface. This ensures that ProxyArp_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_ProxyArp_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ProxyArp_Mode.
func (E_ProxyArp_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_ProxyArp_Mode.
func (e E_ProxyArp_Mode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ProxyArp_Mode")
}

const (
	// ProxyArp_Mode_UNSET corresponds to the value UNSET of ProxyArp_Mode
	ProxyArp_Mode_UNSET E_ProxyArp_Mode = 0
	// ProxyArp_Mode_DISABLE corresponds to the value DISABLE of ProxyArp_Mode
	ProxyArp_Mode_DISABLE E_ProxyArp_Mode = 1
	// ProxyArp_Mode_REMOTE_ONLY corresponds to the value REMOTE_ONLY of ProxyArp_Mode
	ProxyArp_Mode_REMOTE_ONLY E_ProxyArp_Mode = 2
	// ProxyArp_Mode_ALL corresponds to the value ALL of ProxyArp_Mode
	ProxyArp_Mode_ALL E_ProxyArp_Mode = 3
)

// E_QosTypes_QOS_SCHEDULER_TYPE is a derived int64 type which is used to represent
// the enumerated node QosTypes_QOS_SCHEDULER_TYPE. An additional value named
// QosTypes_QOS_SCHEDULER_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_QosTypes_QOS_SCHEDULER_TYPE int64

// IsYANGGoEnum ensures that QosTypes_QOS_SCHEDULER_TYPE implements the yang.GoEnum
// interface. This ensures that QosTypes_QOS_SCHEDULER_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_QosTypes_QOS_SCHEDULER_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  QosTypes_QOS_SCHEDULER_TYPE.
func (E_QosTypes_QOS_SCHEDULER_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_QosTypes_QOS_SCHEDULER_TYPE.
func (e E_QosTypes_QOS_SCHEDULER_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_QosTypes_QOS_SCHEDULER_TYPE")
}

const (
	// QosTypes_QOS_SCHEDULER_TYPE_UNSET corresponds to the value UNSET of QosTypes_QOS_SCHEDULER_TYPE
	QosTypes_QOS_SCHEDULER_TYPE_UNSET E_QosTypes_QOS_SCHEDULER_TYPE = 0
	// QosTypes_QOS_SCHEDULER_TYPE_ONE_RATE_TWO_COLOR corresponds to the value ONE_RATE_TWO_COLOR of QosTypes_QOS_SCHEDULER_TYPE
	QosTypes_QOS_SCHEDULER_TYPE_ONE_RATE_TWO_COLOR E_QosTypes_QOS_SCHEDULER_TYPE = 1
	// QosTypes_QOS_SCHEDULER_TYPE_TWO_RATE_THREE_COLOR corresponds to the value TWO_RATE_THREE_COLOR of QosTypes_QOS_SCHEDULER_TYPE
	QosTypes_QOS_SCHEDULER_TYPE_TWO_RATE_THREE_COLOR E_QosTypes_QOS_SCHEDULER_TYPE = 2
)

// E_QosTypes_QueueBehavior is a derived int64 type which is used to represent
// the enumerated node QosTypes_QueueBehavior. An additional value named
// QosTypes_QueueBehavior_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_QosTypes_QueueBehavior int64

// IsYANGGoEnum ensures that QosTypes_QueueBehavior implements the yang.GoEnum
// interface. This ensures that QosTypes_QueueBehavior can be identified as a
// mapped type for a YANG enumeration.
func (E_QosTypes_QueueBehavior) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  QosTypes_QueueBehavior.
func (E_QosTypes_QueueBehavior) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_QosTypes_QueueBehavior.
func (e E_QosTypes_QueueBehavior) String() string {
	return ygot.EnumLogString(e, int64(e), "E_QosTypes_QueueBehavior")
}

const (
	// QosTypes_QueueBehavior_UNSET corresponds to the value UNSET of QosTypes_QueueBehavior
	QosTypes_QueueBehavior_UNSET E_QosTypes_QueueBehavior = 0
	// QosTypes_QueueBehavior_SHAPE corresponds to the value SHAPE of QosTypes_QueueBehavior
	QosTypes_QueueBehavior_SHAPE E_QosTypes_QueueBehavior = 1
	// QosTypes_QueueBehavior_POLICE corresponds to the value POLICE of QosTypes_QueueBehavior
	QosTypes_QueueBehavior_POLICE E_QosTypes_QueueBehavior = 2
)

// E_Qos_Classifier_Type is a derived int64 type which is used to represent
// the enumerated node Qos_Classifier_Type. An additional value named
// Qos_Classifier_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Qos_Classifier_Type int64

// IsYANGGoEnum ensures that Qos_Classifier_Type implements the yang.GoEnum
// interface. This ensures that Qos_Classifier_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Qos_Classifier_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Qos_Classifier_Type.
func (E_Qos_Classifier_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Qos_Classifier_Type.
func (e E_Qos_Classifier_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Qos_Classifier_Type")
}

const (
	// Qos_Classifier_Type_UNSET corresponds to the value UNSET of Qos_Classifier_Type
	Qos_Classifier_Type_UNSET E_Qos_Classifier_Type = 0
	// Qos_Classifier_Type_IPV4 corresponds to the value IPV4 of Qos_Classifier_Type
	Qos_Classifier_Type_IPV4 E_Qos_Classifier_Type = 1
	// Qos_Classifier_Type_IPV6 corresponds to the value IPV6 of Qos_Classifier_Type
	Qos_Classifier_Type_IPV6 E_Qos_Classifier_Type = 2
	// Qos_Classifier_Type_MPLS corresponds to the value MPLS of Qos_Classifier_Type
	Qos_Classifier_Type_MPLS E_Qos_Classifier_Type = 3
	// Qos_Classifier_Type_ETHERNET corresponds to the value ETHERNET of Qos_Classifier_Type
	Qos_Classifier_Type_ETHERNET E_Qos_Classifier_Type = 4
)

// E_Qos_SHARED_BUFFER_LIMIT_TYPE is a derived int64 type which is used to represent
// the enumerated node Qos_SHARED_BUFFER_LIMIT_TYPE. An additional value named
// Qos_SHARED_BUFFER_LIMIT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Qos_SHARED_BUFFER_LIMIT_TYPE int64

// IsYANGGoEnum ensures that Qos_SHARED_BUFFER_LIMIT_TYPE implements the yang.GoEnum
// interface. This ensures that Qos_SHARED_BUFFER_LIMIT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_Qos_SHARED_BUFFER_LIMIT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Qos_SHARED_BUFFER_LIMIT_TYPE.
func (E_Qos_SHARED_BUFFER_LIMIT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Qos_SHARED_BUFFER_LIMIT_TYPE.
func (e E_Qos_SHARED_BUFFER_LIMIT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Qos_SHARED_BUFFER_LIMIT_TYPE")
}

const (
	// Qos_SHARED_BUFFER_LIMIT_TYPE_UNSET corresponds to the value UNSET of Qos_SHARED_BUFFER_LIMIT_TYPE
	Qos_SHARED_BUFFER_LIMIT_TYPE_UNSET E_Qos_SHARED_BUFFER_LIMIT_TYPE = 0
	// Qos_SHARED_BUFFER_LIMIT_TYPE_DYNAMIC_BASED_ON_SCALING_FACTOR corresponds to the value DYNAMIC_BASED_ON_SCALING_FACTOR of Qos_SHARED_BUFFER_LIMIT_TYPE
	Qos_SHARED_BUFFER_LIMIT_TYPE_DYNAMIC_BASED_ON_SCALING_FACTOR E_Qos_SHARED_BUFFER_LIMIT_TYPE = 1
	// Qos_SHARED_BUFFER_LIMIT_TYPE_STATIC corresponds to the value STATIC of Qos_SHARED_BUFFER_LIMIT_TYPE
	Qos_SHARED_BUFFER_LIMIT_TYPE_STATIC E_Qos_SHARED_BUFFER_LIMIT_TYPE = 2
)

// E_RibBgpTypes_INVALID_ROUTE_REASON is a derived int64 type which is used to represent
// the enumerated node RibBgpTypes_INVALID_ROUTE_REASON. An additional value named
// RibBgpTypes_INVALID_ROUTE_REASON_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RibBgpTypes_INVALID_ROUTE_REASON int64

// IsYANGGoEnum ensures that RibBgpTypes_INVALID_ROUTE_REASON implements the yang.GoEnum
// interface. This ensures that RibBgpTypes_INVALID_ROUTE_REASON can be identified as a
// mapped type for a YANG enumeration.
func (E_RibBgpTypes_INVALID_ROUTE_REASON) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RibBgpTypes_INVALID_ROUTE_REASON.
func (E_RibBgpTypes_INVALID_ROUTE_REASON) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RibBgpTypes_INVALID_ROUTE_REASON.
func (e E_RibBgpTypes_INVALID_ROUTE_REASON) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RibBgpTypes_INVALID_ROUTE_REASON")
}

const (
	// RibBgpTypes_INVALID_ROUTE_REASON_UNSET corresponds to the value UNSET of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_UNSET E_RibBgpTypes_INVALID_ROUTE_REASON = 0
	// RibBgpTypes_INVALID_ROUTE_REASON_INVALID_AS_LOOP corresponds to the value INVALID_AS_LOOP of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_INVALID_AS_LOOP E_RibBgpTypes_INVALID_ROUTE_REASON = 1
	// RibBgpTypes_INVALID_ROUTE_REASON_INVALID_CLUSTER_LOOP corresponds to the value INVALID_CLUSTER_LOOP of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_INVALID_CLUSTER_LOOP E_RibBgpTypes_INVALID_ROUTE_REASON = 2
	// RibBgpTypes_INVALID_ROUTE_REASON_INVALID_CONFED corresponds to the value INVALID_CONFED of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_INVALID_CONFED E_RibBgpTypes_INVALID_ROUTE_REASON = 3
	// RibBgpTypes_INVALID_ROUTE_REASON_INVALID_ORIGINATOR corresponds to the value INVALID_ORIGINATOR of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_INVALID_ORIGINATOR E_RibBgpTypes_INVALID_ROUTE_REASON = 4
)

// E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE. An additional value named
// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE.
func (E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE.
func (e E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE")
}

const (
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_UNSET corresponds to the value UNSET of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_UNSET E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 0
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_BINDING_SID corresponds to the value SRTE_BINDING_SID of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_BINDING_SID E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 1
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_PREFERENCE corresponds to the value SRTE_PREFERENCE of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_PREFERENCE E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 2
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_SEGMENT_LIST corresponds to the value SRTE_SEGMENT_LIST of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_SEGMENT_LIST E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 3
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_TUNNEL_COLOR corresponds to the value TUNNEL_COLOR of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_TUNNEL_COLOR E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 4
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_TUNNEL_REMOTE_ENDPOINT corresponds to the value TUNNEL_REMOTE_ENDPOINT of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_TUNNEL_REMOTE_ENDPOINT E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 5
)

// E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE is a derived int64 type which is used to represent
// the enumerated node RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE. An additional value named
// RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE int64

// IsYANGGoEnum ensures that RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE implements the yang.GoEnum
// interface. This ensures that RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE.
func (E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE.
func (e E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE")
}

const (
	// RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_UNSET corresponds to the value UNSET of RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_UNSET E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE = 0
	// RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_SRTE_POLICY_TUNNEL corresponds to the value SRTE_POLICY_TUNNEL of RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_SRTE_POLICY_TUNNEL E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE = 1
)

// E_RouterInformation_Tlv_Type_Enum is a derived int64 type which is used to represent
// the enumerated node RouterInformation_Tlv_Type_Enum. An additional value named
// RouterInformation_Tlv_Type_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RouterInformation_Tlv_Type_Enum int64

// IsYANGGoEnum ensures that RouterInformation_Tlv_Type_Enum implements the yang.GoEnum
// interface. This ensures that RouterInformation_Tlv_Type_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_RouterInformation_Tlv_Type_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RouterInformation_Tlv_Type_Enum.
func (E_RouterInformation_Tlv_Type_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RouterInformation_Tlv_Type_Enum.
func (e E_RouterInformation_Tlv_Type_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RouterInformation_Tlv_Type_Enum")
}

const (
	// RouterInformation_Tlv_Type_Enum_UNSET corresponds to the value UNSET of RouterInformation_Tlv_Type_Enum
	RouterInformation_Tlv_Type_Enum_UNSET E_RouterInformation_Tlv_Type_Enum = 0
	// RouterInformation_Tlv_Type_Enum_UNKNOWN corresponds to the value UNKNOWN of RouterInformation_Tlv_Type_Enum
	RouterInformation_Tlv_Type_Enum_UNKNOWN E_RouterInformation_Tlv_Type_Enum = 1
)

// E_RoutingPolicy_DefaultPolicyType is a derived int64 type which is used to represent
// the enumerated node RoutingPolicy_DefaultPolicyType. An additional value named
// RoutingPolicy_DefaultPolicyType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RoutingPolicy_DefaultPolicyType int64

// IsYANGGoEnum ensures that RoutingPolicy_DefaultPolicyType implements the yang.GoEnum
// interface. This ensures that RoutingPolicy_DefaultPolicyType can be identified as a
// mapped type for a YANG enumeration.
func (E_RoutingPolicy_DefaultPolicyType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RoutingPolicy_DefaultPolicyType.
func (E_RoutingPolicy_DefaultPolicyType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RoutingPolicy_DefaultPolicyType.
func (e E_RoutingPolicy_DefaultPolicyType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RoutingPolicy_DefaultPolicyType")
}

const (
	// RoutingPolicy_DefaultPolicyType_UNSET corresponds to the value UNSET of RoutingPolicy_DefaultPolicyType
	RoutingPolicy_DefaultPolicyType_UNSET E_RoutingPolicy_DefaultPolicyType = 0
	// RoutingPolicy_DefaultPolicyType_ACCEPT_ROUTE corresponds to the value ACCEPT_ROUTE of RoutingPolicy_DefaultPolicyType
	RoutingPolicy_DefaultPolicyType_ACCEPT_ROUTE E_RoutingPolicy_DefaultPolicyType = 1
	// RoutingPolicy_DefaultPolicyType_REJECT_ROUTE corresponds to the value REJECT_ROUTE of RoutingPolicy_DefaultPolicyType
	RoutingPolicy_DefaultPolicyType_REJECT_ROUTE E_RoutingPolicy_DefaultPolicyType = 2
)

// E_RoutingPolicy_PolicyResultType is a derived int64 type which is used to represent
// the enumerated node RoutingPolicy_PolicyResultType. An additional value named
// RoutingPolicy_PolicyResultType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RoutingPolicy_PolicyResultType int64

// IsYANGGoEnum ensures that RoutingPolicy_PolicyResultType implements the yang.GoEnum
// interface. This ensures that RoutingPolicy_PolicyResultType can be identified as a
// mapped type for a YANG enumeration.
func (E_RoutingPolicy_PolicyResultType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RoutingPolicy_PolicyResultType.
func (E_RoutingPolicy_PolicyResultType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RoutingPolicy_PolicyResultType.
func (e E_RoutingPolicy_PolicyResultType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RoutingPolicy_PolicyResultType")
}

const (
	// RoutingPolicy_PolicyResultType_UNSET corresponds to the value UNSET of RoutingPolicy_PolicyResultType
	RoutingPolicy_PolicyResultType_UNSET E_RoutingPolicy_PolicyResultType = 0
	// RoutingPolicy_PolicyResultType_ACCEPT_ROUTE corresponds to the value ACCEPT_ROUTE of RoutingPolicy_PolicyResultType
	RoutingPolicy_PolicyResultType_ACCEPT_ROUTE E_RoutingPolicy_PolicyResultType = 1
	// RoutingPolicy_PolicyResultType_REJECT_ROUTE corresponds to the value REJECT_ROUTE of RoutingPolicy_PolicyResultType
	RoutingPolicy_PolicyResultType_REJECT_ROUTE E_RoutingPolicy_PolicyResultType = 2
)

// E_Scheduler_Priority is a derived int64 type which is used to represent
// the enumerated node Scheduler_Priority. An additional value named
// Scheduler_Priority_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Scheduler_Priority int64

// IsYANGGoEnum ensures that Scheduler_Priority implements the yang.GoEnum
// interface. This ensures that Scheduler_Priority can be identified as a
// mapped type for a YANG enumeration.
func (E_Scheduler_Priority) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Scheduler_Priority.
func (E_Scheduler_Priority) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Scheduler_Priority.
func (e E_Scheduler_Priority) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Scheduler_Priority")
}

const (
	// Scheduler_Priority_UNSET corresponds to the value UNSET of Scheduler_Priority
	Scheduler_Priority_UNSET E_Scheduler_Priority = 0
	// Scheduler_Priority_STRICT corresponds to the value STRICT of Scheduler_Priority
	Scheduler_Priority_STRICT E_Scheduler_Priority = 1
)

// E_SegmentRoutingAlgorithms_Algorithm is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingAlgorithms_Algorithm. An additional value named
// SegmentRoutingAlgorithms_Algorithm_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingAlgorithms_Algorithm int64

// IsYANGGoEnum ensures that SegmentRoutingAlgorithms_Algorithm implements the yang.GoEnum
// interface. This ensures that SegmentRoutingAlgorithms_Algorithm can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingAlgorithms_Algorithm) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingAlgorithms_Algorithm.
func (E_SegmentRoutingAlgorithms_Algorithm) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingAlgorithms_Algorithm.
func (e E_SegmentRoutingAlgorithms_Algorithm) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingAlgorithms_Algorithm")
}

const (
	// SegmentRoutingAlgorithms_Algorithm_UNSET corresponds to the value UNSET of SegmentRoutingAlgorithms_Algorithm
	SegmentRoutingAlgorithms_Algorithm_UNSET E_SegmentRoutingAlgorithms_Algorithm = 0
	// SegmentRoutingAlgorithms_Algorithm_SPF corresponds to the value SPF of SegmentRoutingAlgorithms_Algorithm
	SegmentRoutingAlgorithms_Algorithm_SPF E_SegmentRoutingAlgorithms_Algorithm = 1
	// SegmentRoutingAlgorithms_Algorithm_STRICT_SPF corresponds to the value STRICT_SPF of SegmentRoutingAlgorithms_Algorithm
	SegmentRoutingAlgorithms_Algorithm_STRICT_SPF E_SegmentRoutingAlgorithms_Algorithm = 2
)

// E_SegmentRoutingCapability_Flags is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingCapability_Flags. An additional value named
// SegmentRoutingCapability_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingCapability_Flags int64

// IsYANGGoEnum ensures that SegmentRoutingCapability_Flags implements the yang.GoEnum
// interface. This ensures that SegmentRoutingCapability_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingCapability_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingCapability_Flags.
func (E_SegmentRoutingCapability_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingCapability_Flags.
func (e E_SegmentRoutingCapability_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingCapability_Flags")
}

const (
	// SegmentRoutingCapability_Flags_UNSET corresponds to the value UNSET of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_UNSET E_SegmentRoutingCapability_Flags = 0
	// SegmentRoutingCapability_Flags_IPV4_MPLS corresponds to the value IPV4_MPLS of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_IPV4_MPLS E_SegmentRoutingCapability_Flags = 1
	// SegmentRoutingCapability_Flags_IPV6_MPLS corresponds to the value IPV6_MPLS of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_IPV6_MPLS E_SegmentRoutingCapability_Flags = 2
	// SegmentRoutingCapability_Flags_IPV6_SR corresponds to the value IPV6_SR of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_IPV6_SR E_SegmentRoutingCapability_Flags = 3
)

// E_SegmentRoutingSidLabelRange_Tlv_Type_Enum is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingSidLabelRange_Tlv_Type_Enum. An additional value named
// SegmentRoutingSidLabelRange_Tlv_Type_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingSidLabelRange_Tlv_Type_Enum int64

// IsYANGGoEnum ensures that SegmentRoutingSidLabelRange_Tlv_Type_Enum implements the yang.GoEnum
// interface. This ensures that SegmentRoutingSidLabelRange_Tlv_Type_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingSidLabelRange_Tlv_Type_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingSidLabelRange_Tlv_Type_Enum.
func (E_SegmentRoutingSidLabelRange_Tlv_Type_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingSidLabelRange_Tlv_Type_Enum.
func (e E_SegmentRoutingSidLabelRange_Tlv_Type_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingSidLabelRange_Tlv_Type_Enum")
}

const (
	// SegmentRoutingSidLabelRange_Tlv_Type_Enum_UNSET corresponds to the value UNSET of SegmentRoutingSidLabelRange_Tlv_Type_Enum
	SegmentRoutingSidLabelRange_Tlv_Type_Enum_UNSET E_SegmentRoutingSidLabelRange_Tlv_Type_Enum = 0
	// SegmentRoutingSidLabelRange_Tlv_Type_Enum_UNKNOWN corresponds to the value UNKNOWN of SegmentRoutingSidLabelRange_Tlv_Type_Enum
	SegmentRoutingSidLabelRange_Tlv_Type_Enum_UNKNOWN E_SegmentRoutingSidLabelRange_Tlv_Type_Enum = 1
)

// E_SegmentRoutingTypes_EnlpType is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingTypes_EnlpType. An additional value named
// SegmentRoutingTypes_EnlpType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingTypes_EnlpType int64

// IsYANGGoEnum ensures that SegmentRoutingTypes_EnlpType implements the yang.GoEnum
// interface. This ensures that SegmentRoutingTypes_EnlpType can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingTypes_EnlpType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingTypes_EnlpType.
func (E_SegmentRoutingTypes_EnlpType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SegmentRoutingTypes_EnlpType.
func (e E_SegmentRoutingTypes_EnlpType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingTypes_EnlpType")
}

const (
	// SegmentRoutingTypes_EnlpType_UNSET corresponds to the value UNSET of SegmentRoutingTypes_EnlpType
	SegmentRoutingTypes_EnlpType_UNSET E_SegmentRoutingTypes_EnlpType = 0
	// SegmentRoutingTypes_EnlpType_PUSH_IPV4_EXPLICIT_NULL corresponds to the value PUSH_IPV4_EXPLICIT_NULL of SegmentRoutingTypes_EnlpType
	SegmentRoutingTypes_EnlpType_PUSH_IPV4_EXPLICIT_NULL E_SegmentRoutingTypes_EnlpType = 1
	// SegmentRoutingTypes_EnlpType_PUSH_IPV6_EXPLICIT_NULL corresponds to the value PUSH_IPV6_EXPLICIT_NULL of SegmentRoutingTypes_EnlpType
	SegmentRoutingTypes_EnlpType_PUSH_IPV6_EXPLICIT_NULL E_SegmentRoutingTypes_EnlpType = 2
	// SegmentRoutingTypes_EnlpType_PUSH_IPV46_EXPLICIT_NULL corresponds to the value PUSH_IPV46_EXPLICIT_NULL of SegmentRoutingTypes_EnlpType
	SegmentRoutingTypes_EnlpType_PUSH_IPV46_EXPLICIT_NULL E_SegmentRoutingTypes_EnlpType = 3
	// SegmentRoutingTypes_EnlpType_NO_EXPLICIT_NULL corresponds to the value NO_EXPLICIT_NULL of SegmentRoutingTypes_EnlpType
	SegmentRoutingTypes_EnlpType_NO_EXPLICIT_NULL E_SegmentRoutingTypes_EnlpType = 4
)

// E_SegmentRoutingTypes_SrDataplaneType is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingTypes_SrDataplaneType. An additional value named
// SegmentRoutingTypes_SrDataplaneType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingTypes_SrDataplaneType int64

// IsYANGGoEnum ensures that SegmentRoutingTypes_SrDataplaneType implements the yang.GoEnum
// interface. This ensures that SegmentRoutingTypes_SrDataplaneType can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingTypes_SrDataplaneType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingTypes_SrDataplaneType.
func (E_SegmentRoutingTypes_SrDataplaneType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingTypes_SrDataplaneType.
func (e E_SegmentRoutingTypes_SrDataplaneType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingTypes_SrDataplaneType")
}

const (
	// SegmentRoutingTypes_SrDataplaneType_UNSET corresponds to the value UNSET of SegmentRoutingTypes_SrDataplaneType
	SegmentRoutingTypes_SrDataplaneType_UNSET E_SegmentRoutingTypes_SrDataplaneType = 0
	// SegmentRoutingTypes_SrDataplaneType_MPLS corresponds to the value MPLS of SegmentRoutingTypes_SrDataplaneType
	SegmentRoutingTypes_SrDataplaneType_MPLS E_SegmentRoutingTypes_SrDataplaneType = 1
	// SegmentRoutingTypes_SrDataplaneType_IPV6 corresponds to the value IPV6 of SegmentRoutingTypes_SrDataplaneType
	SegmentRoutingTypes_SrDataplaneType_IPV6 E_SegmentRoutingTypes_SrDataplaneType = 2
)

// E_SegmentRoutingTypes_SrteInvalidSlReason is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingTypes_SrteInvalidSlReason. An additional value named
// SegmentRoutingTypes_SrteInvalidSlReason_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingTypes_SrteInvalidSlReason int64

// IsYANGGoEnum ensures that SegmentRoutingTypes_SrteInvalidSlReason implements the yang.GoEnum
// interface. This ensures that SegmentRoutingTypes_SrteInvalidSlReason can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingTypes_SrteInvalidSlReason) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingTypes_SrteInvalidSlReason.
func (E_SegmentRoutingTypes_SrteInvalidSlReason) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingTypes_SrteInvalidSlReason.
func (e E_SegmentRoutingTypes_SrteInvalidSlReason) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingTypes_SrteInvalidSlReason")
}

const (
	// SegmentRoutingTypes_SrteInvalidSlReason_UNSET corresponds to the value UNSET of SegmentRoutingTypes_SrteInvalidSlReason
	SegmentRoutingTypes_SrteInvalidSlReason_UNSET E_SegmentRoutingTypes_SrteInvalidSlReason = 0
	// SegmentRoutingTypes_SrteInvalidSlReason_EMPTY_SL corresponds to the value EMPTY_SL of SegmentRoutingTypes_SrteInvalidSlReason
	SegmentRoutingTypes_SrteInvalidSlReason_EMPTY_SL E_SegmentRoutingTypes_SrteInvalidSlReason = 1
	// SegmentRoutingTypes_SrteInvalidSlReason_ZERO_WEIGHT corresponds to the value ZERO_WEIGHT of SegmentRoutingTypes_SrteInvalidSlReason
	SegmentRoutingTypes_SrteInvalidSlReason_ZERO_WEIGHT E_SegmentRoutingTypes_SrteInvalidSlReason = 2
	// SegmentRoutingTypes_SrteInvalidSlReason_FIRST_SID_UNRESOLVABLE corresponds to the value FIRST_SID_UNRESOLVABLE of SegmentRoutingTypes_SrteInvalidSlReason
	SegmentRoutingTypes_SrteInvalidSlReason_FIRST_SID_UNRESOLVABLE E_SegmentRoutingTypes_SrteInvalidSlReason = 3
	// SegmentRoutingTypes_SrteInvalidSlReason_OTHER_SID_UNRESOLVABLE corresponds to the value OTHER_SID_UNRESOLVABLE of SegmentRoutingTypes_SrteInvalidSlReason
	SegmentRoutingTypes_SrteInvalidSlReason_OTHER_SID_UNRESOLVABLE E_SegmentRoutingTypes_SrteInvalidSlReason = 4
	// SegmentRoutingTypes_SrteInvalidSlReason_VERIFICATION_FAIL corresponds to the value VERIFICATION_FAIL of SegmentRoutingTypes_SrteInvalidSlReason
	SegmentRoutingTypes_SrteInvalidSlReason_VERIFICATION_FAIL E_SegmentRoutingTypes_SrteInvalidSlReason = 5
)

// E_SegmentRoutingTypes_SrteProtocolType is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingTypes_SrteProtocolType. An additional value named
// SegmentRoutingTypes_SrteProtocolType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingTypes_SrteProtocolType int64

// IsYANGGoEnum ensures that SegmentRoutingTypes_SrteProtocolType implements the yang.GoEnum
// interface. This ensures that SegmentRoutingTypes_SrteProtocolType can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingTypes_SrteProtocolType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingTypes_SrteProtocolType.
func (E_SegmentRoutingTypes_SrteProtocolType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingTypes_SrteProtocolType.
func (e E_SegmentRoutingTypes_SrteProtocolType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingTypes_SrteProtocolType")
}

const (
	// SegmentRoutingTypes_SrteProtocolType_UNSET corresponds to the value UNSET of SegmentRoutingTypes_SrteProtocolType
	SegmentRoutingTypes_SrteProtocolType_UNSET E_SegmentRoutingTypes_SrteProtocolType = 0
	// SegmentRoutingTypes_SrteProtocolType_PCEP corresponds to the value PCEP of SegmentRoutingTypes_SrteProtocolType
	SegmentRoutingTypes_SrteProtocolType_PCEP E_SegmentRoutingTypes_SrteProtocolType = 1
	// SegmentRoutingTypes_SrteProtocolType_BGP corresponds to the value BGP of SegmentRoutingTypes_SrteProtocolType
	SegmentRoutingTypes_SrteProtocolType_BGP E_SegmentRoutingTypes_SrteProtocolType = 2
	// SegmentRoutingTypes_SrteProtocolType_CONFIG corresponds to the value CONFIG of SegmentRoutingTypes_SrteProtocolType
	SegmentRoutingTypes_SrteProtocolType_CONFIG E_SegmentRoutingTypes_SrteProtocolType = 3
)

// E_Segment_Type is a derived int64 type which is used to represent
// the enumerated node Segment_Type. An additional value named
// Segment_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Segment_Type int64

// IsYANGGoEnum ensures that Segment_Type implements the yang.GoEnum
// interface. This ensures that Segment_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Segment_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Segment_Type.
func (E_Segment_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Segment_Type.
func (e E_Segment_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Segment_Type")
}

const (
	// Segment_Type_UNSET corresponds to the value UNSET of Segment_Type
	Segment_Type_UNSET E_Segment_Type = 0
	// Segment_Type_MPLS_SID corresponds to the value MPLS_SID of Segment_Type
	Segment_Type_MPLS_SID E_Segment_Type = 1
	// Segment_Type_IPV6_SID corresponds to the value IPV6_SID of Segment_Type
	Segment_Type_IPV6_SID E_Segment_Type = 2
	// Segment_Type_IPV4_NODE_ADDRESS corresponds to the value IPV4_NODE_ADDRESS of Segment_Type
	Segment_Type_IPV4_NODE_ADDRESS E_Segment_Type = 3
	// Segment_Type_IPV6_NODE_ADDRESS corresponds to the value IPV6_NODE_ADDRESS of Segment_Type
	Segment_Type_IPV6_NODE_ADDRESS E_Segment_Type = 4
	// Segment_Type_IPV4_LOCAL_INTF_ID corresponds to the value IPV4_LOCAL_INTF_ID of Segment_Type
	Segment_Type_IPV4_LOCAL_INTF_ID E_Segment_Type = 5
	// Segment_Type_IPV4_LOCAL_REMOTE_ADDR corresponds to the value IPV4_LOCAL_REMOTE_ADDR of Segment_Type
	Segment_Type_IPV4_LOCAL_REMOTE_ADDR E_Segment_Type = 6
	// Segment_Type_IPV6_LOCAL_INTF_ID corresponds to the value IPV6_LOCAL_INTF_ID of Segment_Type
	Segment_Type_IPV6_LOCAL_INTF_ID E_Segment_Type = 7
	// Segment_Type_IPV6_LOCAL_REMOTE_ADDR corresponds to the value IPV6_LOCAL_REMOTE_ADDR of Segment_Type
	Segment_Type_IPV6_LOCAL_REMOTE_ADDR E_Segment_Type = 8
)

// E_Server_AssociationType is a derived int64 type which is used to represent
// the enumerated node Server_AssociationType. An additional value named
// Server_AssociationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Server_AssociationType int64

// IsYANGGoEnum ensures that Server_AssociationType implements the yang.GoEnum
// interface. This ensures that Server_AssociationType can be identified as a
// mapped type for a YANG enumeration.
func (E_Server_AssociationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Server_AssociationType.
func (E_Server_AssociationType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Server_AssociationType.
func (e E_Server_AssociationType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Server_AssociationType")
}

const (
	// Server_AssociationType_UNSET corresponds to the value UNSET of Server_AssociationType
	Server_AssociationType_UNSET E_Server_AssociationType = 0
	// Server_AssociationType_SERVER corresponds to the value SERVER of Server_AssociationType
	Server_AssociationType_SERVER E_Server_AssociationType = 1
	// Server_AssociationType_PEER corresponds to the value PEER of Server_AssociationType
	Server_AssociationType_PEER E_Server_AssociationType = 2
	// Server_AssociationType_POOL corresponds to the value POOL of Server_AssociationType
	Server_AssociationType_POOL E_Server_AssociationType = 3
)

// E_Session_Status is a derived int64 type which is used to represent
// the enumerated node Session_Status. An additional value named
// Session_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Session_Status int64

// IsYANGGoEnum ensures that Session_Status implements the yang.GoEnum
// interface. This ensures that Session_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_Session_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Session_Status.
func (E_Session_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Session_Status.
func (e E_Session_Status) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Session_Status")
}

const (
	// Session_Status_UNSET corresponds to the value UNSET of Session_Status
	Session_Status_UNSET E_Session_Status = 0
	// Session_Status_UP corresponds to the value UP of Session_Status
	Session_Status_UP E_Session_Status = 1
	// Session_Status_DOWN corresponds to the value DOWN of Session_Status
	Session_Status_DOWN E_Session_Status = 2
)

// E_SetCommunity_Method is a derived int64 type which is used to represent
// the enumerated node SetCommunity_Method. An additional value named
// SetCommunity_Method_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SetCommunity_Method int64

// IsYANGGoEnum ensures that SetCommunity_Method implements the yang.GoEnum
// interface. This ensures that SetCommunity_Method can be identified as a
// mapped type for a YANG enumeration.
func (E_SetCommunity_Method) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SetCommunity_Method.
func (E_SetCommunity_Method) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SetCommunity_Method.
func (e E_SetCommunity_Method) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SetCommunity_Method")
}

const (
	// SetCommunity_Method_UNSET corresponds to the value UNSET of SetCommunity_Method
	SetCommunity_Method_UNSET E_SetCommunity_Method = 0
	// SetCommunity_Method_INLINE corresponds to the value INLINE of SetCommunity_Method
	SetCommunity_Method_INLINE E_SetCommunity_Method = 1
	// SetCommunity_Method_REFERENCE corresponds to the value REFERENCE of SetCommunity_Method
	SetCommunity_Method_REFERENCE E_SetCommunity_Method = 2
)

// E_SetTag_Mode is a derived int64 type which is used to represent
// the enumerated node SetTag_Mode. An additional value named
// SetTag_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SetTag_Mode int64

// IsYANGGoEnum ensures that SetTag_Mode implements the yang.GoEnum
// interface. This ensures that SetTag_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_SetTag_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SetTag_Mode.
func (E_SetTag_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SetTag_Mode.
func (e E_SetTag_Mode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SetTag_Mode")
}

const (
	// SetTag_Mode_UNSET corresponds to the value UNSET of SetTag_Mode
	SetTag_Mode_UNSET E_SetTag_Mode = 0
	// SetTag_Mode_INLINE corresponds to the value INLINE of SetTag_Mode
	SetTag_Mode_INLINE E_SetTag_Mode = 1
	// SetTag_Mode_REFERENCE corresponds to the value REFERENCE of SetTag_Mode
	SetTag_Mode_REFERENCE E_SetTag_Mode = 2
)

// E_SshServer_ProtocolVersion is a derived int64 type which is used to represent
// the enumerated node SshServer_ProtocolVersion. An additional value named
// SshServer_ProtocolVersion_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SshServer_ProtocolVersion int64

// IsYANGGoEnum ensures that SshServer_ProtocolVersion implements the yang.GoEnum
// interface. This ensures that SshServer_ProtocolVersion can be identified as a
// mapped type for a YANG enumeration.
func (E_SshServer_ProtocolVersion) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SshServer_ProtocolVersion.
func (E_SshServer_ProtocolVersion) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SshServer_ProtocolVersion.
func (e E_SshServer_ProtocolVersion) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SshServer_ProtocolVersion")
}

const (
	// SshServer_ProtocolVersion_UNSET corresponds to the value UNSET of SshServer_ProtocolVersion
	SshServer_ProtocolVersion_UNSET E_SshServer_ProtocolVersion = 0
	// SshServer_ProtocolVersion_V2 corresponds to the value V2 of SshServer_ProtocolVersion
	SshServer_ProtocolVersion_V2 E_SshServer_ProtocolVersion = 1
	// SshServer_ProtocolVersion_V1 corresponds to the value V1 of SshServer_ProtocolVersion
	SshServer_ProtocolVersion_V1 E_SshServer_ProtocolVersion = 2
	// SshServer_ProtocolVersion_V1_V2 corresponds to the value V1_V2 of SshServer_ProtocolVersion
	SshServer_ProtocolVersion_V1_V2 E_SshServer_ProtocolVersion = 3
)

// E_SubTlv_LinkType is a derived int64 type which is used to represent
// the enumerated node SubTlv_LinkType. An additional value named
// SubTlv_LinkType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SubTlv_LinkType int64

// IsYANGGoEnum ensures that SubTlv_LinkType implements the yang.GoEnum
// interface. This ensures that SubTlv_LinkType can be identified as a
// mapped type for a YANG enumeration.
func (E_SubTlv_LinkType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SubTlv_LinkType.
func (E_SubTlv_LinkType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SubTlv_LinkType.
func (e E_SubTlv_LinkType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SubTlv_LinkType")
}

const (
	// SubTlv_LinkType_UNSET corresponds to the value UNSET of SubTlv_LinkType
	SubTlv_LinkType_UNSET E_SubTlv_LinkType = 0
	// SubTlv_LinkType_POINT_TO_POINT corresponds to the value POINT_TO_POINT of SubTlv_LinkType
	SubTlv_LinkType_POINT_TO_POINT E_SubTlv_LinkType = 1
	// SubTlv_LinkType_MULTI_ACCESS corresponds to the value MULTI_ACCESS of SubTlv_LinkType
	SubTlv_LinkType_MULTI_ACCESS E_SubTlv_LinkType = 2
	// SubTlv_LinkType_UNKNOWN corresponds to the value UNKNOWN of SubTlv_LinkType
	SubTlv_LinkType_UNKNOWN E_SubTlv_LinkType = 3
)

// E_SystemGrpc_GRPC_SERVICE is a derived int64 type which is used to represent
// the enumerated node SystemGrpc_GRPC_SERVICE. An additional value named
// SystemGrpc_GRPC_SERVICE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SystemGrpc_GRPC_SERVICE int64

// IsYANGGoEnum ensures that SystemGrpc_GRPC_SERVICE implements the yang.GoEnum
// interface. This ensures that SystemGrpc_GRPC_SERVICE can be identified as a
// mapped type for a YANG enumeration.
func (E_SystemGrpc_GRPC_SERVICE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SystemGrpc_GRPC_SERVICE.
func (E_SystemGrpc_GRPC_SERVICE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SystemGrpc_GRPC_SERVICE.
func (e E_SystemGrpc_GRPC_SERVICE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SystemGrpc_GRPC_SERVICE")
}

const (
	// SystemGrpc_GRPC_SERVICE_UNSET corresponds to the value UNSET of SystemGrpc_GRPC_SERVICE
	SystemGrpc_GRPC_SERVICE_UNSET E_SystemGrpc_GRPC_SERVICE = 0
	// SystemGrpc_GRPC_SERVICE_GNMI corresponds to the value GNMI of SystemGrpc_GRPC_SERVICE
	SystemGrpc_GRPC_SERVICE_GNMI E_SystemGrpc_GRPC_SERVICE = 1
	// SystemGrpc_GRPC_SERVICE_P4RT corresponds to the value P4RT of SystemGrpc_GRPC_SERVICE
	SystemGrpc_GRPC_SERVICE_P4RT E_SystemGrpc_GRPC_SERVICE = 2
)

// E_SystemLogging_SYSLOG_FACILITY is a derived int64 type which is used to represent
// the enumerated node SystemLogging_SYSLOG_FACILITY. An additional value named
// SystemLogging_SYSLOG_FACILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SystemLogging_SYSLOG_FACILITY int64

// IsYANGGoEnum ensures that SystemLogging_SYSLOG_FACILITY implements the yang.GoEnum
// interface. This ensures that SystemLogging_SYSLOG_FACILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_SystemLogging_SYSLOG_FACILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SystemLogging_SYSLOG_FACILITY.
func (E_SystemLogging_SYSLOG_FACILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SystemLogging_SYSLOG_FACILITY.
func (e E_SystemLogging_SYSLOG_FACILITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SystemLogging_SYSLOG_FACILITY")
}

const (
	// SystemLogging_SYSLOG_FACILITY_UNSET corresponds to the value UNSET of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_UNSET E_SystemLogging_SYSLOG_FACILITY = 0
	// SystemLogging_SYSLOG_FACILITY_ALL corresponds to the value ALL of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_ALL E_SystemLogging_SYSLOG_FACILITY = 1
	// SystemLogging_SYSLOG_FACILITY_AUDIT corresponds to the value AUDIT of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_AUDIT E_SystemLogging_SYSLOG_FACILITY = 2
	// SystemLogging_SYSLOG_FACILITY_AUTH corresponds to the value AUTH of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_AUTH E_SystemLogging_SYSLOG_FACILITY = 3
	// SystemLogging_SYSLOG_FACILITY_AUTHPRIV corresponds to the value AUTHPRIV of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_AUTHPRIV E_SystemLogging_SYSLOG_FACILITY = 4
	// SystemLogging_SYSLOG_FACILITY_CONSOLE corresponds to the value CONSOLE of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_CONSOLE E_SystemLogging_SYSLOG_FACILITY = 5
	// SystemLogging_SYSLOG_FACILITY_KERNEL corresponds to the value KERNEL of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_KERNEL E_SystemLogging_SYSLOG_FACILITY = 6
	// SystemLogging_SYSLOG_FACILITY_LOCAL0 corresponds to the value LOCAL0 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL0 E_SystemLogging_SYSLOG_FACILITY = 7
	// SystemLogging_SYSLOG_FACILITY_LOCAL1 corresponds to the value LOCAL1 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL1 E_SystemLogging_SYSLOG_FACILITY = 8
	// SystemLogging_SYSLOG_FACILITY_LOCAL2 corresponds to the value LOCAL2 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL2 E_SystemLogging_SYSLOG_FACILITY = 9
	// SystemLogging_SYSLOG_FACILITY_LOCAL3 corresponds to the value LOCAL3 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL3 E_SystemLogging_SYSLOG_FACILITY = 10
	// SystemLogging_SYSLOG_FACILITY_LOCAL4 corresponds to the value LOCAL4 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL4 E_SystemLogging_SYSLOG_FACILITY = 11
	// SystemLogging_SYSLOG_FACILITY_LOCAL5 corresponds to the value LOCAL5 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL5 E_SystemLogging_SYSLOG_FACILITY = 12
	// SystemLogging_SYSLOG_FACILITY_LOCAL6 corresponds to the value LOCAL6 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL6 E_SystemLogging_SYSLOG_FACILITY = 13
	// SystemLogging_SYSLOG_FACILITY_LOCAL7 corresponds to the value LOCAL7 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL7 E_SystemLogging_SYSLOG_FACILITY = 14
	// SystemLogging_SYSLOG_FACILITY_MAIL corresponds to the value MAIL of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_MAIL E_SystemLogging_SYSLOG_FACILITY = 15
	// SystemLogging_SYSLOG_FACILITY_NTP corresponds to the value NTP of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_NTP E_SystemLogging_SYSLOG_FACILITY = 16
	// SystemLogging_SYSLOG_FACILITY_SYSLOG corresponds to the value SYSLOG of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_SYSLOG E_SystemLogging_SYSLOG_FACILITY = 17
	// SystemLogging_SYSLOG_FACILITY_SYSTEM_DAEMON corresponds to the value SYSTEM_DAEMON of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_SYSTEM_DAEMON E_SystemLogging_SYSLOG_FACILITY = 18
	// SystemLogging_SYSLOG_FACILITY_USER corresponds to the value USER of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_USER E_SystemLogging_SYSLOG_FACILITY = 19
)

// E_SystemLogging_SyslogSeverity is a derived int64 type which is used to represent
// the enumerated node SystemLogging_SyslogSeverity. An additional value named
// SystemLogging_SyslogSeverity_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SystemLogging_SyslogSeverity int64

// IsYANGGoEnum ensures that SystemLogging_SyslogSeverity implements the yang.GoEnum
// interface. This ensures that SystemLogging_SyslogSeverity can be identified as a
// mapped type for a YANG enumeration.
func (E_SystemLogging_SyslogSeverity) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SystemLogging_SyslogSeverity.
func (E_SystemLogging_SyslogSeverity) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SystemLogging_SyslogSeverity.
func (e E_SystemLogging_SyslogSeverity) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SystemLogging_SyslogSeverity")
}

const (
	// SystemLogging_SyslogSeverity_UNSET corresponds to the value UNSET of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_UNSET E_SystemLogging_SyslogSeverity = 0
	// SystemLogging_SyslogSeverity_EMERGENCY corresponds to the value EMERGENCY of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_EMERGENCY E_SystemLogging_SyslogSeverity = 1
	// SystemLogging_SyslogSeverity_ALERT corresponds to the value ALERT of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_ALERT E_SystemLogging_SyslogSeverity = 2
	// SystemLogging_SyslogSeverity_CRITICAL corresponds to the value CRITICAL of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_CRITICAL E_SystemLogging_SyslogSeverity = 3
	// SystemLogging_SyslogSeverity_ERROR corresponds to the value ERROR of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_ERROR E_SystemLogging_SyslogSeverity = 4
	// SystemLogging_SyslogSeverity_WARNING corresponds to the value WARNING of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_WARNING E_SystemLogging_SyslogSeverity = 5
	// SystemLogging_SyslogSeverity_NOTICE corresponds to the value NOTICE of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_NOTICE E_SystemLogging_SyslogSeverity = 6
	// SystemLogging_SyslogSeverity_INFORMATIONAL corresponds to the value INFORMATIONAL of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_INFORMATIONAL E_SystemLogging_SyslogSeverity = 7
	// SystemLogging_SyslogSeverity_DEBUG corresponds to the value DEBUG of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_DEBUG E_SystemLogging_SyslogSeverity = 8
)

// E_System_NTP_AUTH_TYPE is a derived int64 type which is used to represent
// the enumerated node System_NTP_AUTH_TYPE. An additional value named
// System_NTP_AUTH_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_System_NTP_AUTH_TYPE int64

// IsYANGGoEnum ensures that System_NTP_AUTH_TYPE implements the yang.GoEnum
// interface. This ensures that System_NTP_AUTH_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_System_NTP_AUTH_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  System_NTP_AUTH_TYPE.
func (E_System_NTP_AUTH_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_System_NTP_AUTH_TYPE.
func (e E_System_NTP_AUTH_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_System_NTP_AUTH_TYPE")
}

const (
	// System_NTP_AUTH_TYPE_UNSET corresponds to the value UNSET of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_UNSET E_System_NTP_AUTH_TYPE = 0
	// System_NTP_AUTH_TYPE_NTP_AUTH_MD5 corresponds to the value NTP_AUTH_MD5 of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_NTP_AUTH_MD5 E_System_NTP_AUTH_TYPE = 1
)

// E_Tlv_Reason is a derived int64 type which is used to represent
// the enumerated node Tlv_Reason. An additional value named
// Tlv_Reason_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Tlv_Reason int64

// IsYANGGoEnum ensures that Tlv_Reason implements the yang.GoEnum
// interface. This ensures that Tlv_Reason can be identified as a
// mapped type for a YANG enumeration.
func (E_Tlv_Reason) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Tlv_Reason.
func (E_Tlv_Reason) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Tlv_Reason.
func (e E_Tlv_Reason) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Tlv_Reason")
}

const (
	// Tlv_Reason_UNSET corresponds to the value UNSET of Tlv_Reason
	Tlv_Reason_UNSET E_Tlv_Reason = 0
	// Tlv_Reason_UNKNOWN corresponds to the value UNKNOWN of Tlv_Reason
	Tlv_Reason_UNKNOWN E_Tlv_Reason = 1
	// Tlv_Reason_SOFTWARE_RESTART corresponds to the value SOFTWARE_RESTART of Tlv_Reason
	Tlv_Reason_SOFTWARE_RESTART E_Tlv_Reason = 2
	// Tlv_Reason_SOFTWARE_RELOAD_UPGRADE corresponds to the value SOFTWARE_RELOAD_UPGRADE of Tlv_Reason
	Tlv_Reason_SOFTWARE_RELOAD_UPGRADE E_Tlv_Reason = 3
	// Tlv_Reason_CONTROL_PROCESSOR_SWITCH corresponds to the value CONTROL_PROCESSOR_SWITCH of Tlv_Reason
	Tlv_Reason_CONTROL_PROCESSOR_SWITCH E_Tlv_Reason = 4
)

// E_Topology_Attributes is a derived int64 type which is used to represent
// the enumerated node Topology_Attributes. An additional value named
// Topology_Attributes_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Topology_Attributes int64

// IsYANGGoEnum ensures that Topology_Attributes implements the yang.GoEnum
// interface. This ensures that Topology_Attributes can be identified as a
// mapped type for a YANG enumeration.
func (E_Topology_Attributes) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Topology_Attributes.
func (E_Topology_Attributes) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Topology_Attributes.
func (e E_Topology_Attributes) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Topology_Attributes")
}

const (
	// Topology_Attributes_UNSET corresponds to the value UNSET of Topology_Attributes
	Topology_Attributes_UNSET E_Topology_Attributes = 0
	// Topology_Attributes_OVERLOAD corresponds to the value OVERLOAD of Topology_Attributes
	Topology_Attributes_OVERLOAD E_Topology_Attributes = 1
	// Topology_Attributes_ATTACHED corresponds to the value ATTACHED of Topology_Attributes
	Topology_Attributes_ATTACHED E_Topology_Attributes = 2
)

// E_Transceiver_Present is a derived int64 type which is used to represent
// the enumerated node Transceiver_Present. An additional value named
// Transceiver_Present_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Transceiver_Present int64

// IsYANGGoEnum ensures that Transceiver_Present implements the yang.GoEnum
// interface. This ensures that Transceiver_Present can be identified as a
// mapped type for a YANG enumeration.
func (E_Transceiver_Present) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Transceiver_Present.
func (E_Transceiver_Present) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Transceiver_Present.
func (e E_Transceiver_Present) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Transceiver_Present")
}

const (
	// Transceiver_Present_UNSET corresponds to the value UNSET of Transceiver_Present
	Transceiver_Present_UNSET E_Transceiver_Present = 0
	// Transceiver_Present_PRESENT corresponds to the value PRESENT of Transceiver_Present
	Transceiver_Present_PRESENT E_Transceiver_Present = 1
	// Transceiver_Present_NOT_PRESENT corresponds to the value NOT_PRESENT of Transceiver_Present
	Transceiver_Present_NOT_PRESENT E_Transceiver_Present = 2
)

// E_TransportTypes_ETHERNET_PMD_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_ETHERNET_PMD_TYPE. An additional value named
// TransportTypes_ETHERNET_PMD_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_ETHERNET_PMD_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_ETHERNET_PMD_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_ETHERNET_PMD_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_ETHERNET_PMD_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_ETHERNET_PMD_TYPE.
func (E_TransportTypes_ETHERNET_PMD_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_ETHERNET_PMD_TYPE.
func (e E_TransportTypes_ETHERNET_PMD_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_ETHERNET_PMD_TYPE")
}

const (
	// TransportTypes_ETHERNET_PMD_TYPE_UNSET corresponds to the value UNSET of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_UNSET E_TransportTypes_ETHERNET_PMD_TYPE = 0
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CLR4 corresponds to the value ETH_100GBASE_CLR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CLR4 E_TransportTypes_ETHERNET_PMD_TYPE = 1
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CR4 corresponds to the value ETH_100GBASE_CR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CR4 E_TransportTypes_ETHERNET_PMD_TYPE = 2
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CWDM4 corresponds to the value ETH_100GBASE_CWDM4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CWDM4 E_TransportTypes_ETHERNET_PMD_TYPE = 3
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_ER4 corresponds to the value ETH_100GBASE_ER4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_ER4 E_TransportTypes_ETHERNET_PMD_TYPE = 4
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_FR corresponds to the value ETH_100GBASE_FR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_FR E_TransportTypes_ETHERNET_PMD_TYPE = 5
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_LR4 corresponds to the value ETH_100GBASE_LR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_LR4 E_TransportTypes_ETHERNET_PMD_TYPE = 6
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_PSM4 corresponds to the value ETH_100GBASE_PSM4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_PSM4 E_TransportTypes_ETHERNET_PMD_TYPE = 7
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR10 corresponds to the value ETH_100GBASE_SR10 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR10 E_TransportTypes_ETHERNET_PMD_TYPE = 8
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR4 corresponds to the value ETH_100GBASE_SR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR4 E_TransportTypes_ETHERNET_PMD_TYPE = 9
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100G_ACC corresponds to the value ETH_100G_ACC of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100G_ACC E_TransportTypes_ETHERNET_PMD_TYPE = 10
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100G_AOC corresponds to the value ETH_100G_AOC of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100G_AOC E_TransportTypes_ETHERNET_PMD_TYPE = 11
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ER corresponds to the value ETH_10GBASE_ER of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ER E_TransportTypes_ETHERNET_PMD_TYPE = 12
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LR corresponds to the value ETH_10GBASE_LR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LR E_TransportTypes_ETHERNET_PMD_TYPE = 13
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LRM corresponds to the value ETH_10GBASE_LRM of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LRM E_TransportTypes_ETHERNET_PMD_TYPE = 14
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_SR corresponds to the value ETH_10GBASE_SR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_SR E_TransportTypes_ETHERNET_PMD_TYPE = 15
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ZR corresponds to the value ETH_10GBASE_ZR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ZR E_TransportTypes_ETHERNET_PMD_TYPE = 16
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_DR4 corresponds to the value ETH_400GBASE_DR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_DR4 E_TransportTypes_ETHERNET_PMD_TYPE = 17
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_FR4 corresponds to the value ETH_400GBASE_FR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_FR4 E_TransportTypes_ETHERNET_PMD_TYPE = 18
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_LR4 corresponds to the value ETH_400GBASE_LR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_LR4 E_TransportTypes_ETHERNET_PMD_TYPE = 19
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_LR8 corresponds to the value ETH_400GBASE_LR8 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_LR8 E_TransportTypes_ETHERNET_PMD_TYPE = 20
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_ZR corresponds to the value ETH_400GBASE_ZR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_ZR E_TransportTypes_ETHERNET_PMD_TYPE = 21
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_CR4 corresponds to the value ETH_40GBASE_CR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_CR4 E_TransportTypes_ETHERNET_PMD_TYPE = 22
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_ER4 corresponds to the value ETH_40GBASE_ER4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_ER4 E_TransportTypes_ETHERNET_PMD_TYPE = 23
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_LR4 corresponds to the value ETH_40GBASE_LR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_LR4 E_TransportTypes_ETHERNET_PMD_TYPE = 24
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_PSM4 corresponds to the value ETH_40GBASE_PSM4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_PSM4 E_TransportTypes_ETHERNET_PMD_TYPE = 25
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_SR4 corresponds to the value ETH_40GBASE_SR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_SR4 E_TransportTypes_ETHERNET_PMD_TYPE = 26
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_LR corresponds to the value ETH_4X10GBASE_LR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_LR E_TransportTypes_ETHERNET_PMD_TYPE = 27
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_SR corresponds to the value ETH_4X10GBASE_SR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_SR E_TransportTypes_ETHERNET_PMD_TYPE = 28
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_UNDEFINED corresponds to the value ETH_UNDEFINED of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_UNDEFINED E_TransportTypes_ETHERNET_PMD_TYPE = 29
)

// E_TransportTypes_FIBER_CONNECTOR_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_FIBER_CONNECTOR_TYPE. An additional value named
// TransportTypes_FIBER_CONNECTOR_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_FIBER_CONNECTOR_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_FIBER_CONNECTOR_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_FIBER_CONNECTOR_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_FIBER_CONNECTOR_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_FIBER_CONNECTOR_TYPE.
func (E_TransportTypes_FIBER_CONNECTOR_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_FIBER_CONNECTOR_TYPE.
func (e E_TransportTypes_FIBER_CONNECTOR_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_FIBER_CONNECTOR_TYPE")
}

const (
	// TransportTypes_FIBER_CONNECTOR_TYPE_UNSET corresponds to the value UNSET of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_UNSET E_TransportTypes_FIBER_CONNECTOR_TYPE = 0
	// TransportTypes_FIBER_CONNECTOR_TYPE_AOC_CONNECTOR corresponds to the value AOC_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_AOC_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 1
	// TransportTypes_FIBER_CONNECTOR_TYPE_DAC_CONNECTOR corresponds to the value DAC_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_DAC_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 2
	// TransportTypes_FIBER_CONNECTOR_TYPE_LC_CONNECTOR corresponds to the value LC_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_LC_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 3
	// TransportTypes_FIBER_CONNECTOR_TYPE_MPO_CONNECTOR corresponds to the value MPO_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_MPO_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 4
	// TransportTypes_FIBER_CONNECTOR_TYPE_SC_CONNECTOR corresponds to the value SC_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_SC_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 5
)

// E_TransportTypes_OTN_APPLICATION_CODE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_OTN_APPLICATION_CODE. An additional value named
// TransportTypes_OTN_APPLICATION_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_OTN_APPLICATION_CODE int64

// IsYANGGoEnum ensures that TransportTypes_OTN_APPLICATION_CODE implements the yang.GoEnum
// interface. This ensures that TransportTypes_OTN_APPLICATION_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_OTN_APPLICATION_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_OTN_APPLICATION_CODE.
func (E_TransportTypes_OTN_APPLICATION_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_OTN_APPLICATION_CODE.
func (e E_TransportTypes_OTN_APPLICATION_CODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_OTN_APPLICATION_CODE")
}

const (
	// TransportTypes_OTN_APPLICATION_CODE_UNSET corresponds to the value UNSET of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_UNSET E_TransportTypes_OTN_APPLICATION_CODE = 0
	// TransportTypes_OTN_APPLICATION_CODE_OTN_UNDEFINED corresponds to the value OTN_UNDEFINED of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_OTN_UNDEFINED E_TransportTypes_OTN_APPLICATION_CODE = 1
	// TransportTypes_OTN_APPLICATION_CODE_P1L1_2D1 corresponds to the value P1L1_2D1 of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_P1L1_2D1 E_TransportTypes_OTN_APPLICATION_CODE = 2
	// TransportTypes_OTN_APPLICATION_CODE_P1L1_2D2 corresponds to the value P1L1_2D2 of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_P1L1_2D2 E_TransportTypes_OTN_APPLICATION_CODE = 3
	// TransportTypes_OTN_APPLICATION_CODE_P1S1_2D2 corresponds to the value P1S1_2D2 of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_P1S1_2D2 E_TransportTypes_OTN_APPLICATION_CODE = 4
)

// E_TransportTypes_SONET_APPLICATION_CODE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_SONET_APPLICATION_CODE. An additional value named
// TransportTypes_SONET_APPLICATION_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_SONET_APPLICATION_CODE int64

// IsYANGGoEnum ensures that TransportTypes_SONET_APPLICATION_CODE implements the yang.GoEnum
// interface. This ensures that TransportTypes_SONET_APPLICATION_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_SONET_APPLICATION_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_SONET_APPLICATION_CODE.
func (E_TransportTypes_SONET_APPLICATION_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_SONET_APPLICATION_CODE.
func (e E_TransportTypes_SONET_APPLICATION_CODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_SONET_APPLICATION_CODE")
}

const (
	// TransportTypes_SONET_APPLICATION_CODE_UNSET corresponds to the value UNSET of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_UNSET E_TransportTypes_SONET_APPLICATION_CODE = 0
	// TransportTypes_SONET_APPLICATION_CODE_SONET_UNDEFINED corresponds to the value SONET_UNDEFINED of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_SONET_UNDEFINED E_TransportTypes_SONET_APPLICATION_CODE = 1
	// TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R2 corresponds to the value VSR2000_3R2 of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R2 E_TransportTypes_SONET_APPLICATION_CODE = 2
	// TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R3 corresponds to the value VSR2000_3R3 of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R3 E_TransportTypes_SONET_APPLICATION_CODE = 3
	// TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R5 corresponds to the value VSR2000_3R5 of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R5 E_TransportTypes_SONET_APPLICATION_CODE = 4
)

// E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE. An additional value named
// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE.
func (E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE.
func (e E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE")
}

const (
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_UNSET corresponds to the value UNSET of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_UNSET E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 0
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP corresponds to the value CFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 1
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2 corresponds to the value CFP2 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 2
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2_ACO corresponds to the value CFP2_ACO of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2_ACO E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 3
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP4 corresponds to the value CFP4 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP4 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 4
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CPAK corresponds to the value CPAK of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CPAK E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 5
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_NON_PLUGGABLE corresponds to the value NON_PLUGGABLE of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_NON_PLUGGABLE E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 6
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OSFP corresponds to the value OSFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OSFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 7
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OTHER corresponds to the value OTHER of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OTHER E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 8
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP corresponds to the value QSFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 9
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP28 corresponds to the value QSFP28 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP28 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 10
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD_TYPE1 corresponds to the value QSFP56_DD_TYPE1 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD_TYPE1 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 11
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD_TYPE2 corresponds to the value QSFP56_DD_TYPE2 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD_TYPE2 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 12
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP_PLUS corresponds to the value QSFP_PLUS of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP_PLUS E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 13
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP corresponds to the value SFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 14
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP_PLUS corresponds to the value SFP_PLUS of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP_PLUS E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 15
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_X2 corresponds to the value X2 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_X2 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 16
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_XFP corresponds to the value XFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_XFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 17
)

// E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE. An additional value named
// TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE.
func (E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE.
func (e E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE")
}

const (
	// TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_UNSET corresponds to the value UNSET of TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE
	TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_UNSET E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE = 0
	// TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_TYPE_DIGITAL_COHERENT_OPTIC corresponds to the value TYPE_DIGITAL_COHERENT_OPTIC of TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE
	TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_TYPE_DIGITAL_COHERENT_OPTIC E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE = 1
	// TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_TYPE_STANDARD_OPTIC corresponds to the value TYPE_STANDARD_OPTIC of TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE
	TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_TYPE_STANDARD_OPTIC E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE = 2
)

// E_Types_ADDRESS_FAMILY is a derived int64 type which is used to represent
// the enumerated node Types_ADDRESS_FAMILY. An additional value named
// Types_ADDRESS_FAMILY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Types_ADDRESS_FAMILY int64

// IsYANGGoEnum ensures that Types_ADDRESS_FAMILY implements the yang.GoEnum
// interface. This ensures that Types_ADDRESS_FAMILY can be identified as a
// mapped type for a YANG enumeration.
func (E_Types_ADDRESS_FAMILY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Types_ADDRESS_FAMILY.
func (E_Types_ADDRESS_FAMILY) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Types_ADDRESS_FAMILY.
func (e E_Types_ADDRESS_FAMILY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Types_ADDRESS_FAMILY")
}

const (
	// Types_ADDRESS_FAMILY_UNSET corresponds to the value UNSET of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_UNSET E_Types_ADDRESS_FAMILY = 0
	// Types_ADDRESS_FAMILY_IPV4 corresponds to the value IPV4 of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_IPV4 E_Types_ADDRESS_FAMILY = 1
	// Types_ADDRESS_FAMILY_IPV6 corresponds to the value IPV6 of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_IPV6 E_Types_ADDRESS_FAMILY = 2
	// Types_ADDRESS_FAMILY_L2_ETHERNET corresponds to the value L2_ETHERNET of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_L2_ETHERNET E_Types_ADDRESS_FAMILY = 3
	// Types_ADDRESS_FAMILY_MPLS corresponds to the value MPLS of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_MPLS E_Types_ADDRESS_FAMILY = 4
)

// E_VlanTypes_TPID_TYPES is a derived int64 type which is used to represent
// the enumerated node VlanTypes_TPID_TYPES. An additional value named
// VlanTypes_TPID_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_VlanTypes_TPID_TYPES int64

// IsYANGGoEnum ensures that VlanTypes_TPID_TYPES implements the yang.GoEnum
// interface. This ensures that VlanTypes_TPID_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_VlanTypes_TPID_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  VlanTypes_TPID_TYPES.
func (E_VlanTypes_TPID_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_VlanTypes_TPID_TYPES.
func (e E_VlanTypes_TPID_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_VlanTypes_TPID_TYPES")
}

const (
	// VlanTypes_TPID_TYPES_UNSET corresponds to the value UNSET of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_UNSET E_VlanTypes_TPID_TYPES = 0
	// VlanTypes_TPID_TYPES_TPID_0X8100 corresponds to the value TPID_0X8100 of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_0X8100 E_VlanTypes_TPID_TYPES = 1
	// VlanTypes_TPID_TYPES_TPID_0X88A8 corresponds to the value TPID_0X88A8 of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_0X88A8 E_VlanTypes_TPID_TYPES = 2
	// VlanTypes_TPID_TYPES_TPID_0X9100 corresponds to the value TPID_0X9100 of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_0X9100 E_VlanTypes_TPID_TYPES = 3
	// VlanTypes_TPID_TYPES_TPID_0X9200 corresponds to the value TPID_0X9200 of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_0X9200 E_VlanTypes_TPID_TYPES = 4
	// VlanTypes_TPID_TYPES_TPID_ANY corresponds to the value TPID_ANY of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_ANY E_VlanTypes_TPID_TYPES = 5
)

// E_VlanTypes_VlanModeType is a derived int64 type which is used to represent
// the enumerated node VlanTypes_VlanModeType. An additional value named
// VlanTypes_VlanModeType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_VlanTypes_VlanModeType int64

// IsYANGGoEnum ensures that VlanTypes_VlanModeType implements the yang.GoEnum
// interface. This ensures that VlanTypes_VlanModeType can be identified as a
// mapped type for a YANG enumeration.
func (E_VlanTypes_VlanModeType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  VlanTypes_VlanModeType.
func (E_VlanTypes_VlanModeType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_VlanTypes_VlanModeType.
func (e E_VlanTypes_VlanModeType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_VlanTypes_VlanModeType")
}

const (
	// VlanTypes_VlanModeType_UNSET corresponds to the value UNSET of VlanTypes_VlanModeType
	VlanTypes_VlanModeType_UNSET E_VlanTypes_VlanModeType = 0
	// VlanTypes_VlanModeType_ACCESS corresponds to the value ACCESS of VlanTypes_VlanModeType
	VlanTypes_VlanModeType_ACCESS E_VlanTypes_VlanModeType = 1
	// VlanTypes_VlanModeType_TRUNK corresponds to the value TRUNK of VlanTypes_VlanModeType
	VlanTypes_VlanModeType_TRUNK E_VlanTypes_VlanModeType = 2
)

// E_VlanTypes_VlanStackAction is a derived int64 type which is used to represent
// the enumerated node VlanTypes_VlanStackAction. An additional value named
// VlanTypes_VlanStackAction_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_VlanTypes_VlanStackAction int64

// IsYANGGoEnum ensures that VlanTypes_VlanStackAction implements the yang.GoEnum
// interface. This ensures that VlanTypes_VlanStackAction can be identified as a
// mapped type for a YANG enumeration.
func (E_VlanTypes_VlanStackAction) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  VlanTypes_VlanStackAction.
func (E_VlanTypes_VlanStackAction) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_VlanTypes_VlanStackAction.
func (e E_VlanTypes_VlanStackAction) String() string {
	return ygot.EnumLogString(e, int64(e), "E_VlanTypes_VlanStackAction")
}

const (
	// VlanTypes_VlanStackAction_UNSET corresponds to the value UNSET of VlanTypes_VlanStackAction
	VlanTypes_VlanStackAction_UNSET E_VlanTypes_VlanStackAction = 0
	// VlanTypes_VlanStackAction_PUSH corresponds to the value PUSH of VlanTypes_VlanStackAction
	VlanTypes_VlanStackAction_PUSH E_VlanTypes_VlanStackAction = 1
	// VlanTypes_VlanStackAction_POP corresponds to the value POP of VlanTypes_VlanStackAction
	VlanTypes_VlanStackAction_POP E_VlanTypes_VlanStackAction = 2
	// VlanTypes_VlanStackAction_SWAP corresponds to the value SWAP of VlanTypes_VlanStackAction
	VlanTypes_VlanStackAction_SWAP E_VlanTypes_VlanStackAction = 3
)

// E_Vlan_Status is a derived int64 type which is used to represent
// the enumerated node Vlan_Status. An additional value named
// Vlan_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Vlan_Status int64

// IsYANGGoEnum ensures that Vlan_Status implements the yang.GoEnum
// interface. This ensures that Vlan_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_Vlan_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Vlan_Status.
func (E_Vlan_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Vlan_Status.
func (e E_Vlan_Status) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Vlan_Status")
}

const (
	// Vlan_Status_UNSET corresponds to the value UNSET of Vlan_Status
	Vlan_Status_UNSET E_Vlan_Status = 0
	// Vlan_Status_ACTIVE corresponds to the value ACTIVE of Vlan_Status
	Vlan_Status_ACTIVE E_Vlan_Status = 1
	// Vlan_Status_SUSPENDED corresponds to the value SUSPENDED of Vlan_Status
	Vlan_Status_SUSPENDED E_Vlan_Status = 2
)
