/*
Package networkinstance is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/alexmasi/go/pkg/mod/github.com/openconfig/ygot@v0.23.1/genutil/names.go
using the following YANG input files:
  - gnmi-collector-metadata.yang
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/ate/openconfig-ate-flow.yang
  - public/release/models/ate/openconfig-ate-intf.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/p4rt/openconfig-p4rt.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-fan.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package networkinstance

import (
	oc "github.com/openconfig/ondatra/telemetry"
	"github.com/openconfig/ygot/ygot"
)

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrLenPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrLenPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_ExtendedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_ExtendedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_OptionalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_OptionalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_PartialPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_PartialPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_TransitivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_TransitivePathAny struct {
	*ygot.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrLenPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrLenPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrTypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrTypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrValuePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrValuePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_AttrValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_ExtendedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_ExtendedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_ExtendedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_ExtendedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_OptionalPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_OptionalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_OptionalPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_OptionalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_PartialPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_PartialPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_PartialPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_PartialPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_TransitivePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_TransitivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-four-ethernet-segment/type-four-route/paths/path/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_TransitivePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeFourRoute_Path_UnknownAttribute_TransitivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EsiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/state/esi YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EsiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EsiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/state/esi YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EsiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EthernetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/state/ethernet-tag YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EthernetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EthernetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/state/ethernet-tag YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EthernetTagPathAny struct {
	*ygot.NodePath
}

// Esi (leaf): The Ethernet Segment Identifier (ESI) identifying the ethernet
// segment for this route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/esi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/state/esi"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePath) Esi() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EsiPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EsiPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "esi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esi (leaf): The Ethernet Segment Identifier (ESI) identifying the ethernet
// segment for this route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/esi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/state/esi"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePathAny) Esi() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EsiPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EsiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "esi"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetTag (leaf): The Ethernet tag identifying the broadcast domain for this
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ethernet-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/state/ethernet-tag"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePath) EthernetTag() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EthernetTagPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EthernetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetTag (leaf): The Ethernet tag identifying the broadcast domain for this
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ethernet-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/state/ethernet-tag"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePathAny) EthernetTag() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EthernetTagPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_EthernetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathAny (list): List of paths
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "paths/path"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePath) PathAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"paths", "path"},
			map[string]interface{}{"peer-ip": "*", "peer-path-id": "*", "source-route-distinguisher": "*", "source-address-family": "*"},
			n,
		),
	}
}

// PathAny (list): List of paths
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "paths/path"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoutePathAny) PathAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"paths", "path"},
			map[string]interface{}{"peer-ip": "*", "peer-path-id": "*", "source-route-distinguisher": "*", "source-address-family": "*"},
			n,
		),
	}
}

// WithPeerIp sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny's key "peer-ip" to the specified value.
// PeerIp: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) WithPeerIp(PeerIp string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "peer-ip", PeerIp)
	return n
}

// WithPeerPathId sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny's key "peer-path-id" to the specified value.
// PeerPathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) WithPeerPathId(PeerPathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "peer-path-id", PeerPathId)
	return n
}

// WithSourceRouteDistinguisher sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny's key "source-route-distinguisher" to the specified value.
// SourceRouteDistinguisher: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) WithSourceRouteDistinguisher(SourceRouteDistinguisher string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "source-route-distinguisher", SourceRouteDistinguisher)
	return n
}

// WithSourceAddressFamily sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny's key "source-address-family" to the specified value.
// SourceAddressFamily: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) WithSourceAddressFamily(SourceAddressFamily oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "source-address-family", SourceAddressFamily)
	return n
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AdvertisedToPeerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/advertised-to-peer YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AdvertisedToPeerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AdvertisedToPeerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/advertised-to-peer YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AdvertisedToPeerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AttrIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AttrIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BackupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/backup YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BackupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BackupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/backup YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BackupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BestpathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/bestpath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BestpathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BestpathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/bestpath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BestpathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_CommunityIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_CommunityIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ExtCommunityIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ExtCommunityIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_InvalidReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_InvalidReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LabelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/label YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/label YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_Label2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/label2 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_Label2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_Label2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/label2 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_Label2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LastModifiedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LastModifiedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_MultipathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/multipath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_MultipathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_MultipathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/multipath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_MultipathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerIpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/peer-ip YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerIpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerIpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/peer-ip YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerIpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerPathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/peer-path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerPathIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerPathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/peer-path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerPathIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceAddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/source-address-family YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceAddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceAddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/source-address-family YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceAddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceRouteDistinguisherPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/source-route-distinguisher YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceRouteDistinguisherPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceRouteDistinguisherPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/source-route-distinguisher YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceRouteDistinguisherPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ValidRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ValidRoutePathAny struct {
	*ygot.NodePath
}

// AdvertisedToPeer (leaf-list): List of peers to which this path is advertised
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertised-to-peer"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/advertised-to-peer"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) AdvertisedToPeer() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AdvertisedToPeerPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AdvertisedToPeerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertised-to-peer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertisedToPeer (leaf-list): List of peers to which this path is advertised
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertised-to-peer"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/advertised-to-peer"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) AdvertisedToPeer() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AdvertisedToPeerPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AdvertisedToPeerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertised-to-peer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AttrIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AttrIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AttrIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_AttrIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backup (leaf): BGP path marked as a backup path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/backup"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) Backup() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BackupPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BackupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backup (leaf): BGP path marked as a backup path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/backup"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) Backup() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BackupPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BackupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bestpath (leaf): BGP can receive multiple paths to the same destination. This
// parameter indicates that this path is the bestpath to install
// in the IP routing table and use for traffic forwarding
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bestpath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/bestpath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) Bestpath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BestpathPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BestpathPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bestpath"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bestpath (leaf): BGP can receive multiple paths to the same destination. This
// parameter indicates that this path is the bestpath to install
// in the IP routing table and use for traffic forwarding
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bestpath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/bestpath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) Bestpath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BestpathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_BestpathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bestpath"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityIndex (leaf): Reference to the community attribute for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_CommunityIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_CommunityIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityIndex (leaf): Reference to the community attribute for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_CommunityIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_CommunityIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ExtCommunityIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ExtCommunityIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ExtCommunityIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ExtCommunityIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_InvalidReasonPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_InvalidReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_InvalidReasonPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_InvalidReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): MPLS Label field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/label"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) Label() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LabelPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): MPLS Label field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/label"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) Label() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LabelPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label2 (leaf): MPLS Label2 field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label2"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/label2"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) Label2() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_Label2Path {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_Label2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label2 (leaf): MPLS Label2 field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label2"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/label2"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) Label2() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_Label2PathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_Label2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label2"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-modified"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LastModifiedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LastModifiedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-modified"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LastModifiedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_LastModifiedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
	}
}

// Multipath (leaf): BGP can use multiple paths to reach a destination allowing
// BGP to load-balance traffic. This parameter indicates that this
// path is marked as multipath
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multipath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/multipath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) Multipath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_MultipathPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_MultipathPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multipath"},
			map[string]interface{}{},
			n,
		),
	}
}

// Multipath (leaf): BGP can use multiple paths to reach a destination allowing
// BGP to load-balance traffic. This parameter indicates that this
// path is marked as multipath
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multipath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/multipath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) Multipath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_MultipathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_MultipathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multipath"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerIp (leaf): The source peer ip address of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-ip"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/peer-ip"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) PeerIp() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerIpPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerIpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-ip"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerIp (leaf): The source peer ip address of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-ip"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/peer-ip"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) PeerIp() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerIpPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerIpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-ip"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerPathId (leaf): The source peer path id of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-path-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/peer-path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) PeerPathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerPathIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerPathIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerPathId (leaf): The source peer path id of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-path-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/peer-path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) PeerPathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerPathIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_PeerPathIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddressFamily (leaf): The source address-family of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/source-address-family"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) SourceAddressFamily() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceAddressFamilyPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceAddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddressFamily (leaf): The source address-family of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/source-address-family"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) SourceAddressFamily() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceAddressFamilyPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceAddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceRouteDistinguisher (leaf): The source route distinguisher is the remote RD source of the
// imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-route-distinguisher"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/source-route-distinguisher"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) SourceRouteDistinguisher() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceRouteDistinguisherPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceRouteDistinguisherPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceRouteDistinguisher (leaf): The source route distinguisher is the remote RD source of the
// imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-route-distinguisher"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/source-route-distinguisher"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) SourceRouteDistinguisher() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceRouteDistinguisherPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_SourceRouteDistinguisherPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType (wildcarded): uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType (wildcarded): uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ValidRoutePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ValidRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_PathPathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ValidRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_ValidRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrLenPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrLenPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_ExtendedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_ExtendedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_OptionalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_OptionalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_PartialPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_PartialPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_TransitivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_TransitivePathAny struct {
	*ygot.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrLenPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrLenPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrTypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrTypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrValuePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrValuePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_AttrValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_ExtendedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_ExtendedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_ExtendedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_ExtendedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_OptionalPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_OptionalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_OptionalPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_OptionalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_PartialPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_PartialPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_PartialPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_PartialPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_TransitivePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_TransitivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-one-ethernet-auto-discovery/type-one-route/paths/path/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_TransitivePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeOneRoute_Path_UnknownAttribute_TransitivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_EthernetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/ethernet-tag YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_EthernetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_EthernetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/ethernet-tag YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_EthernetTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatingRouterIpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/originating-router-ip YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatingRouterIpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatingRouterIpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/originating-router-ip YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatingRouterIpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatorIpLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/originator-ip-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatorIpLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatorIpLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/originator-ip-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatorIpLengthPathAny struct {
	*ygot.NodePath
}

// EthernetTag (leaf): The Ethernet tag identifying the broadcast domain for this
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ethernet-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/ethernet-tag"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePath) EthernetTag() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_EthernetTagPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_EthernetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetTag (leaf): The Ethernet tag identifying the broadcast domain for this
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ethernet-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/ethernet-tag"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePathAny) EthernetTag() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_EthernetTagPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_EthernetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatingRouterIp (leaf): The Originating Router's IP Address
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originating-router-ip"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/originating-router-ip"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePath) OriginatingRouterIp() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatingRouterIpPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatingRouterIpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originating-router-ip"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatingRouterIp (leaf): The Originating Router's IP Address
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originating-router-ip"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/originating-router-ip"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePathAny) OriginatingRouterIp() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatingRouterIpPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatingRouterIpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originating-router-ip"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorIpLength (leaf): The ip-prefix length for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-ip-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/originator-ip-length"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePath) OriginatorIpLength() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatorIpLengthPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatorIpLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-ip-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorIpLength (leaf): The ip-prefix length for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-ip-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/state/originator-ip-length"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePathAny) OriginatorIpLength() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatorIpLengthPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_OriginatorIpLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-ip-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathAny (list): List of paths
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "paths/path"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePath) PathAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"paths", "path"},
			map[string]interface{}{"peer-ip": "*", "peer-path-id": "*", "source-route-distinguisher": "*", "source-address-family": "*"},
			n,
		),
	}
}

// PathAny (list): List of paths
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "paths/path"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoutePathAny) PathAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"paths", "path"},
			map[string]interface{}{"peer-ip": "*", "peer-path-id": "*", "source-route-distinguisher": "*", "source-address-family": "*"},
			n,
		),
	}
}

// WithPeerIp sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny's key "peer-ip" to the specified value.
// PeerIp: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) WithPeerIp(PeerIp string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "peer-ip", PeerIp)
	return n
}

// WithPeerPathId sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny's key "peer-path-id" to the specified value.
// PeerPathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) WithPeerPathId(PeerPathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "peer-path-id", PeerPathId)
	return n
}

// WithSourceRouteDistinguisher sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny's key "source-route-distinguisher" to the specified value.
// SourceRouteDistinguisher: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) WithSourceRouteDistinguisher(SourceRouteDistinguisher string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "source-route-distinguisher", SourceRouteDistinguisher)
	return n
}

// WithSourceAddressFamily sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny's key "source-address-family" to the specified value.
// SourceAddressFamily: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) WithSourceAddressFamily(SourceAddressFamily oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "source-address-family", SourceAddressFamily)
	return n
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AdvertisedToPeerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/advertised-to-peer YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AdvertisedToPeerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AdvertisedToPeerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/advertised-to-peer YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AdvertisedToPeerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AttrIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AttrIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BackupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/backup YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BackupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BackupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/backup YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BackupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BestpathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/bestpath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BestpathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BestpathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/bestpath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BestpathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_CommunityIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_CommunityIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ExtCommunityIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ExtCommunityIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_InvalidReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_InvalidReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LabelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/label YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/label YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_Label2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/label2 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_Label2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_Label2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/label2 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_Label2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LastModifiedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LastModifiedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_MultipathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/multipath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_MultipathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_MultipathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/multipath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_MultipathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerIpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/peer-ip YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerIpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerIpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/peer-ip YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerIpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerPathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/peer-path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerPathIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerPathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/peer-path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerPathIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceAddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/source-address-family YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceAddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceAddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/source-address-family YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceAddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceRouteDistinguisherPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/source-route-distinguisher YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceRouteDistinguisherPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceRouteDistinguisherPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/source-route-distinguisher YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceRouteDistinguisherPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ValidRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ValidRoutePathAny struct {
	*ygot.NodePath
}

// AdvertisedToPeer (leaf-list): List of peers to which this path is advertised
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertised-to-peer"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/advertised-to-peer"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) AdvertisedToPeer() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AdvertisedToPeerPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AdvertisedToPeerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertised-to-peer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertisedToPeer (leaf-list): List of peers to which this path is advertised
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertised-to-peer"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/advertised-to-peer"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) AdvertisedToPeer() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AdvertisedToPeerPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AdvertisedToPeerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertised-to-peer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AttrIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AttrIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AttrIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_AttrIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backup (leaf): BGP path marked as a backup path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/backup"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) Backup() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BackupPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BackupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backup (leaf): BGP path marked as a backup path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/backup"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) Backup() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BackupPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BackupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bestpath (leaf): BGP can receive multiple paths to the same destination. This
// parameter indicates that this path is the bestpath to install
// in the IP routing table and use for traffic forwarding
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bestpath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/bestpath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) Bestpath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BestpathPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BestpathPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bestpath"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bestpath (leaf): BGP can receive multiple paths to the same destination. This
// parameter indicates that this path is the bestpath to install
// in the IP routing table and use for traffic forwarding
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bestpath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/bestpath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) Bestpath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BestpathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_BestpathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bestpath"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityIndex (leaf): Reference to the community attribute for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_CommunityIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_CommunityIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityIndex (leaf): Reference to the community attribute for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_CommunityIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_CommunityIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ExtCommunityIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ExtCommunityIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ExtCommunityIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ExtCommunityIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_InvalidReasonPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_InvalidReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_InvalidReasonPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_InvalidReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): MPLS Label field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/label"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) Label() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LabelPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): MPLS Label field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/label"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) Label() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LabelPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label2 (leaf): MPLS Label2 field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label2"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/label2"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) Label2() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_Label2Path {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_Label2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label2 (leaf): MPLS Label2 field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label2"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/label2"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) Label2() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_Label2PathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_Label2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label2"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-modified"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LastModifiedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LastModifiedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-modified"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LastModifiedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_LastModifiedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
	}
}

// Multipath (leaf): BGP can use multiple paths to reach a destination allowing
// BGP to load-balance traffic. This parameter indicates that this
// path is marked as multipath
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multipath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/multipath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) Multipath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_MultipathPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_MultipathPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multipath"},
			map[string]interface{}{},
			n,
		),
	}
}

// Multipath (leaf): BGP can use multiple paths to reach a destination allowing
// BGP to load-balance traffic. This parameter indicates that this
// path is marked as multipath
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multipath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/multipath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) Multipath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_MultipathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_MultipathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multipath"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerIp (leaf): The source peer ip address of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-ip"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/peer-ip"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) PeerIp() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerIpPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerIpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-ip"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerIp (leaf): The source peer ip address of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-ip"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/peer-ip"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) PeerIp() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerIpPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerIpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-ip"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerPathId (leaf): The source peer path id of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-path-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/peer-path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) PeerPathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerPathIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerPathIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerPathId (leaf): The source peer path id of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-path-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/peer-path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) PeerPathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerPathIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_PeerPathIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddressFamily (leaf): The source address-family of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/source-address-family"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) SourceAddressFamily() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceAddressFamilyPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceAddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddressFamily (leaf): The source address-family of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/source-address-family"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) SourceAddressFamily() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceAddressFamilyPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceAddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceRouteDistinguisher (leaf): The source route distinguisher is the remote RD source of the
// imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-route-distinguisher"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/source-route-distinguisher"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) SourceRouteDistinguisher() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceRouteDistinguisherPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceRouteDistinguisherPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceRouteDistinguisher (leaf): The source route distinguisher is the remote RD source of the
// imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-route-distinguisher"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/source-route-distinguisher"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) SourceRouteDistinguisher() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceRouteDistinguisherPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_SourceRouteDistinguisherPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType (wildcarded): uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType (wildcarded): uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ValidRoutePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ValidRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_PathPathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ValidRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_ValidRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrLenPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrLenPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_ExtendedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_ExtendedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_OptionalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_OptionalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_PartialPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_PartialPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_TransitivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_TransitivePathAny struct {
	*ygot.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrLenPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrLenPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrTypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrTypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrValuePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrValuePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_AttrValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_ExtendedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_ExtendedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_ExtendedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_ExtendedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_OptionalPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_OptionalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_OptionalPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_OptionalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_PartialPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_PartialPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_PartialPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_PartialPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_TransitivePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_TransitivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-three-inclusive-multicast-ethernet-tag/type-three-route/paths/path/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_TransitivePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeThreeRoute_Path_UnknownAttribute_TransitivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_EthernetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ethernet-tag YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_EthernetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_EthernetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ethernet-tag YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_EthernetTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ip-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ip-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpPrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ip-prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpPrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpPrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ip-prefix YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpPrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/mac-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/mac-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/mac-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/mac-length YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacLengthPathAny struct {
	*ygot.NodePath
}

// EthernetTag (leaf): The Ethernet tag identifying the broadcast domain for this
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ethernet-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ethernet-tag"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePath) EthernetTag() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_EthernetTagPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_EthernetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// EthernetTag (leaf): The Ethernet tag identifying the broadcast domain for this
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ethernet-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ethernet-tag"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePathAny) EthernetTag() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_EthernetTagPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_EthernetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethernet-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpLength (leaf): The ip-prefix length for the IP address specified by ip-prefix
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ip-length"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePath) IpLength() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpLengthPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpLength (leaf): The ip-prefix length for the IP address specified by ip-prefix
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ip-length"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePathAny) IpLength() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpLengthPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpPrefix (leaf): The IP address for end-host reachability information
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ip-prefix"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePath) IpPrefix() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpPrefixPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpPrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpPrefix (leaf): The IP address for end-host reachability information
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/ip-prefix"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePathAny) IpPrefix() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpPrefixPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_IpPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): The MAC address that is learned on a PE from a CE that is
// connected to it or learned from other PEs
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/mac-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePath) MacAddress() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacAddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): The MAC address that is learned on a PE from a CE that is
// connected to it or learned from other PEs
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/mac-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePathAny) MacAddress() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacAddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacLength (leaf): The MAC address length for the mac-address
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/mac-length"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePath) MacLength() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacLengthPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacLength (leaf): The MAC address length for the mac-address
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/state/mac-length"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePathAny) MacLength() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacLengthPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_MacLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PathAny (list): List of paths
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "paths/path"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePath) PathAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"paths", "path"},
			map[string]interface{}{"peer-ip": "*", "peer-path-id": "*", "source-route-distinguisher": "*", "source-address-family": "*"},
			n,
		),
	}
}

// PathAny (list): List of paths
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "paths/path"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoutePathAny) PathAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"paths", "path"},
			map[string]interface{}{"peer-ip": "*", "peer-path-id": "*", "source-route-distinguisher": "*", "source-address-family": "*"},
			n,
		),
	}
}

// WithPeerIp sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny's key "peer-ip" to the specified value.
// PeerIp: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) WithPeerIp(PeerIp string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "peer-ip", PeerIp)
	return n
}

// WithPeerPathId sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny's key "peer-path-id" to the specified value.
// PeerPathId: uint32
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) WithPeerPathId(PeerPathId uint32) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "peer-path-id", PeerPathId)
	return n
}

// WithSourceRouteDistinguisher sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny's key "source-route-distinguisher" to the specified value.
// SourceRouteDistinguisher: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) WithSourceRouteDistinguisher(SourceRouteDistinguisher string) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "source-route-distinguisher", SourceRouteDistinguisher)
	return n
}

// WithSourceAddressFamily sets NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny's key "source-address-family" to the specified value.
// SourceAddressFamily: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) WithSourceAddressFamily(SourceAddressFamily oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny {
	ygot.ModifyKey(n.NodePath, "source-address-family", SourceAddressFamily)
	return n
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AdvertisedToPeerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/advertised-to-peer YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AdvertisedToPeerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AdvertisedToPeerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/advertised-to-peer YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AdvertisedToPeerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AttrIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AttrIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AttrIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/attr-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AttrIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BackupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/backup YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BackupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BackupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/backup YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BackupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BestpathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/bestpath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BestpathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BestpathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/bestpath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BestpathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_CommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_CommunityIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_CommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_CommunityIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_EsiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/esi YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_EsiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_EsiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/esi YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_EsiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ExtCommunityIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ExtCommunityIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ExtCommunityIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/ext-community-index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ExtCommunityIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_InvalidReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/invalid-reason YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_InvalidReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LabelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/label YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/label YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_Label2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/label2 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_Label2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_Label2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/label2 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_Label2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LastModifiedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LastModifiedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LastModifiedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/last-modified YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LastModifiedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_MultipathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/multipath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_MultipathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_MultipathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/multipath YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_MultipathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerIpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/peer-ip YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerIpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerIpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/peer-ip YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerIpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerPathIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/peer-path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerPathIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerPathIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/peer-path-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerPathIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceAddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/source-address-family YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceAddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceAddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/source-address-family YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceAddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceRouteDistinguisherPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/source-route-distinguisher YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceRouteDistinguisherPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceRouteDistinguisherPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/source-route-distinguisher YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceRouteDistinguisherPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ValidRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ValidRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ValidRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/valid-route YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ValidRoutePathAny struct {
	*ygot.NodePath
}

// AdvertisedToPeer (leaf-list): List of peers to which this path is advertised
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertised-to-peer"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/advertised-to-peer"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) AdvertisedToPeer() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AdvertisedToPeerPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AdvertisedToPeerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertised-to-peer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertisedToPeer (leaf-list): List of peers to which this path is advertised
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertised-to-peer"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/advertised-to-peer"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) AdvertisedToPeer() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AdvertisedToPeerPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AdvertisedToPeerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertised-to-peer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AttrIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AttrIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrIndex (leaf): Reference to the common attribute group for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/attr-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) AttrIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AttrIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_AttrIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backup (leaf): BGP path marked as a backup path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/backup"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) Backup() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BackupPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BackupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backup (leaf): BGP path marked as a backup path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/backup"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) Backup() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BackupPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BackupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bestpath (leaf): BGP can receive multiple paths to the same destination. This
// parameter indicates that this path is the bestpath to install
// in the IP routing table and use for traffic forwarding
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bestpath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/bestpath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) Bestpath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BestpathPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BestpathPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bestpath"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bestpath (leaf): BGP can receive multiple paths to the same destination. This
// parameter indicates that this path is the bestpath to install
// in the IP routing table and use for traffic forwarding
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bestpath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/bestpath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) Bestpath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BestpathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_BestpathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bestpath"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityIndex (leaf): Reference to the community attribute for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_CommunityIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_CommunityIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// CommunityIndex (leaf): Reference to the community attribute for the route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) CommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_CommunityIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_CommunityIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esi (leaf): The Ethernet Segment Identifier (ESI) identifying the ethernet
// segment for this route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/esi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/esi"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) Esi() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_EsiPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_EsiPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "esi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esi (leaf): The Ethernet Segment Identifier (ESI) identifying the ethernet
// segment for this route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/esi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/esi"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) Esi() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_EsiPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_EsiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "esi"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ExtCommunityIndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ExtCommunityIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunityIndex (leaf): Reference to the extended community attribute for the
// route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/ext-community-index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) ExtCommunityIndex() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ExtCommunityIndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ExtCommunityIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_InvalidReasonPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_InvalidReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If the route is rejected as invalid, this indicates the
// reason.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/invalid-reason"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) InvalidReason() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_InvalidReasonPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_InvalidReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): MPLS Label field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/label"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) Label() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LabelPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): MPLS Label field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/label"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) Label() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LabelPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label2 (leaf): MPLS Label2 field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label2"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/label2"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) Label2() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_Label2Path {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_Label2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label2 (leaf): MPLS Label2 field used for route attributes
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label2"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/label2"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) Label2() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_Label2PathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_Label2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label2"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-modified"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LastModifiedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LastModifiedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastModified (leaf): Timestamp when this path was last modified.
//
// The value is the timestamp relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-modified"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/last-modified"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) LastModified() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LastModifiedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_LastModifiedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-modified"},
			map[string]interface{}{},
			n,
		),
	}
}

// Multipath (leaf): BGP can use multiple paths to reach a destination allowing
// BGP to load-balance traffic. This parameter indicates that this
// path is marked as multipath
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multipath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/multipath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) Multipath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_MultipathPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_MultipathPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multipath"},
			map[string]interface{}{},
			n,
		),
	}
}

// Multipath (leaf): BGP can use multiple paths to reach a destination allowing
// BGP to load-balance traffic. This parameter indicates that this
// path is marked as multipath
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multipath"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/multipath"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) Multipath() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_MultipathPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_MultipathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multipath"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerIp (leaf): The source peer ip address of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-ip"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/peer-ip"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) PeerIp() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerIpPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerIpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-ip"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerIp (leaf): The source peer ip address of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-ip"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/peer-ip"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) PeerIp() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerIpPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerIpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-ip"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerPathId (leaf): The source peer path id of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-path-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/peer-path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) PeerPathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerPathIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerPathIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerPathId (leaf): The source peer path id of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/peer-path-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/peer-path-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) PeerPathId() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerPathIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_PeerPathIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "peer-path-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddressFamily (leaf): The source address-family of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/source-address-family"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) SourceAddressFamily() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceAddressFamilyPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceAddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddressFamily (leaf): The source address-family of the imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/source-address-family"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) SourceAddressFamily() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceAddressFamilyPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceAddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceRouteDistinguisher (leaf): The source route distinguisher is the remote RD source of the
// imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-route-distinguisher"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/source-route-distinguisher"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) SourceRouteDistinguisher() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceRouteDistinguisherPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceRouteDistinguisherPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceRouteDistinguisher (leaf): The source route distinguisher is the remote RD source of the
// imported route
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-route-distinguisher"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/source-route-distinguisher"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) SourceRouteDistinguisher() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceRouteDistinguisherPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_SourceRouteDistinguisherPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-route-distinguisher"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType (wildcarded): uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
}

// UnknownAttributeAny (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType (wildcarded): uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) UnknownAttributeAny() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": "*"},
			n,
		),
	}
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
}

// UnknownAttribute (list): This list contains received attributes that are unrecognized
// or unsupported by the local router.  The list may be empty.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-attributes/unknown-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute"
// AttrType: uint8
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) UnknownAttribute(AttrType uint8) *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-attributes", "unknown-attribute"},
			map[string]interface{}{"attr-type": AttrType},
			n,
		),
	}
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPath) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ValidRoutePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ValidRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// ValidRoute (leaf): Indicates that the route is considered valid by the
// local router
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-table-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/state/valid-route"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_PathPathAny) ValidRoute() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ValidRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_ValidRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrLenPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrLenPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrLenPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrLenPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_ExtendedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_ExtendedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_ExtendedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/extended YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_ExtendedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_OptionalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_OptionalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_OptionalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/optional YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_OptionalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_PartialPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_PartialPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_PartialPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/partial YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_PartialPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_TransitivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_TransitivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_TransitivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/transitive YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_TransitivePathAny struct {
	*ygot.NodePath
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrLenPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrLen (leaf): One or two octet attribute length field indicating the
// length of the attribute data in octets.  If the Extended
// Length attribute flag is set, the length field is 2 octets,
// otherwise it is 1 octet
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-len"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-len"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny) AttrLen() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrLenPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrTypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrType (leaf): 1-octet value encoding the attribute type code
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny) AttrType() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrTypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrValuePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttrValue (leaf): Raw attribute value, not including the attribute
// flags, type, or length.  The maximum length
// of the attribute value data is 2^16-1 per the max value
// of the attr-len field (2 octets).
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attr-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/attr-value"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny) AttrValue() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrValuePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_AttrValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attr-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_ExtendedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_ExtendedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Extended (leaf): Defines whether the attribute length is one octet
// (if set to false) or two octets (if set to true).  Set in
// the fourth high-order bit of the BGP attribute flags
// octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/extended"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny) Extended() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_ExtendedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_ExtendedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_OptionalPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_OptionalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Optional (leaf): Defines whether the attribute is optional (if
// set to true) or well-known (if set to false).
// Set in the high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/optional"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny) Optional() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_OptionalPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_OptionalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_PartialPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_PartialPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Partial (leaf): Defines whether the information contained in the optional
// transitive attribute is partial (if set to true) or complete
// (if set to false).  For well-known attributes and for
// optional non-transitive attributes, the partial flag
// must be set to false.  Set in the third high-order bit of
// the BGP attribute flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/partial"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/partial"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny) Partial() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_PartialPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_PartialPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "partial"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePath) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_TransitivePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_TransitivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transitive (leaf): Defines whether an optional attribute is transitive
// (if set to true) or non-transitive (if set to false).  For
// well-known attributes, the transitive flag MUST be set to
// true.  Set in the second high-order bit of the BGP attribute
// flags octet.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/transitive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/loc-rib/routes/route-distinguisher/type-two-mac-ip-advertisement/type-two-route/paths/path/unknown-attributes/unknown-attribute/state/transitive"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttributePathAny) Transitive() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_TransitivePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_LocRib_RouteDistinguisher_TypeTwoRoute_Path_UnknownAttribute_TransitivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transitive"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_NeighborAddressPathAny struct {
	*ygot.NodePath
}

// AdjRibInPost (container): Per-neighbor table containing the paths received from
// the neighbor that are eligible for best-path selection
// after local input policy rules have been applied.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adj-rib-in-post"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-in-post"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPath) AdjRibInPost() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPostPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPostPath{
		NodePath: ygot.NewNodePath(
			[]string{"adj-rib-in-post"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjRibInPost (container): Per-neighbor table containing the paths received from
// the neighbor that are eligible for best-path selection
// after local input policy rules have been applied.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adj-rib-in-post"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-in-post"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPathAny) AdjRibInPost() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPostPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPostPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adj-rib-in-post"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjRibInPre (container): Per-neighbor table containing the NLRI updates
// received from the neighbor before any local input
// policy rules or filters have been applied.  This can
// be considered the 'raw' updates from the neighbor.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adj-rib-in-pre"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-in-pre"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPath) AdjRibInPre() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPrePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPrePath{
		NodePath: ygot.NewNodePath(
			[]string{"adj-rib-in-pre"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjRibInPre (container): Per-neighbor table containing the NLRI updates
// received from the neighbor before any local input
// policy rules or filters have been applied.  This can
// be considered the 'raw' updates from the neighbor.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adj-rib-in-pre"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-in-pre"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPathAny) AdjRibInPre() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPrePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPrePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adj-rib-in-pre"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjRibOutPost (container): Per-neighbor table containing paths eligble for
// sending (advertising) to the neighbor after output
// policy rules have been applied
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adj-rib-out-post"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-out-post"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPath) AdjRibOutPost() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPostPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPostPath{
		NodePath: ygot.NewNodePath(
			[]string{"adj-rib-out-post"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjRibOutPost (container): Per-neighbor table containing paths eligble for
// sending (advertising) to the neighbor after output
// policy rules have been applied
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adj-rib-out-post"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-out-post"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPathAny) AdjRibOutPost() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPostPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPostPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adj-rib-out-post"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjRibOutPre (container): Per-neighbor table containing paths eligble for
// sending (advertising) to the neighbor before output
// policy rules have been applied
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adj-rib-out-pre"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-out-pre"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPath) AdjRibOutPre() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPrePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPrePath{
		NodePath: ygot.NewNodePath(
			[]string{"adj-rib-out-pre"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjRibOutPre (container): Per-neighbor table containing paths eligble for
// sending (advertising) to the neighbor before output
// policy rules have been applied
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adj-rib-out-pre"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-out-pre"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPathAny) AdjRibOutPre() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPrePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPrePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adj-rib-out-pre"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): IP address of the BGP neighbor or peer
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPath) NeighborAddress() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_NeighborAddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): IP address of the BGP neighbor or peer
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-tables"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_NeighborPathAny) NeighborAddress() *NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPostPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-in-post YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPostPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPostPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-in-post YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPostPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPrePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-in-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPrePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPrePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-in-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibInPrePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPostPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-out-post YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPostPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPostPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-out-post YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPostPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPrePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-out-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPrePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPrePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/afi-safis/afi-safi/l2vpn-evpn/neighbors/neighbor/adj-rib-out-pre YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AfiSafi_L2VpnEvpn_Neighbor_AdjRibOutPrePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/aigp YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/aigp YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/atomic-aggregate YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/atomic-aggregate YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/cluster-list YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/cluster-list YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/local-pref YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/local-pref YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/med YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/med YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/origin YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/origin YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/originator-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/originator-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPathAny struct {
	*ygot.NodePath
}

// Aggregator (container): BGP attribute indicating the prefix has been aggregated by
// the specified AS and router.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "aggregator"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Aggregator() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath{
		NodePath: ygot.NewNodePath(
			[]string{"aggregator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aggregator (container): BGP attribute indicating the prefix has been aggregated by
// the specified AS and router.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "aggregator"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Aggregator() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"aggregator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aigp (leaf): BGP path attribute representing the accumulated IGP metric
// for the path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/aigp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/aigp"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Aigp() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "aigp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Aigp (leaf): BGP path attribute representing the accumulated IGP metric
// for the path
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/aigp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/aigp"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Aigp() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AigpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "aigp"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicAggregate (leaf): BGP attribute indicating that the prefix is an atomic
// aggregate, i.e., the peer selected a less specific
// route without selecting a more specific route that is
// included in it.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/atomic-aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/atomic-aggregate"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) AtomicAggregate() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "atomic-aggregate"},
			map[string]interface{}{},
			n,
		),
	}
}

// AtomicAggregate (leaf): BGP attribute indicating that the prefix is an atomic
// aggregate, i.e., the peer selected a less specific
// route without selecting a more specific route that is
// included in it.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/atomic-aggregate"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/atomic-aggregate"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) AtomicAggregate() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AtomicAggregatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "atomic-aggregate"},
			map[string]interface{}{},
			n,
		),
	}
}

// ClusterList (leaf-list): Represents the reflection path that the route has passed.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cluster-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/cluster-list"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) ClusterList() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cluster-list"},
			map[string]interface{}{},
			n,
		),
	}
}

// ClusterList (leaf-list): Represents the reflection path that the route has passed.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/cluster-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/cluster-list"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) ClusterList() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_ClusterListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "cluster-list"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Index() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Index() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalPref (leaf): BGP local preference attribute sent to internal peers to
// indicate the degree of preference for externally learned
// routes.  The route with the highest local preference value
// is preferred.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-pref"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/local-pref"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) LocalPref() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-pref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalPref (leaf): BGP local preference attribute sent to internal peers to
// indicate the degree of preference for externally learned
// routes.  The route with the highest local preference value
// is preferred.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-pref"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/local-pref"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) LocalPref() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_LocalPrefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-pref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Med (leaf): BGP multi-exit discriminator attribute used in BGP route
// selection process
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/med"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/med"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Med() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "med"},
			map[string]interface{}{},
			n,
		),
	}
}

// Med (leaf): BGP multi-exit discriminator attribute used in BGP route
// selection process
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/med"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/med"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Med() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_MedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "med"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): BGP next hop attribute defining the IP address of the router
// that should be used as the next hop to the destination
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/next-hop"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) NextHop() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): BGP next hop attribute defining the IP address of the router
// that should be used as the next hop to the destination
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/next-hop"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) NextHop() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Origin (leaf): BGP attribute defining the origin of the path information.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/origin"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) Origin() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// Origin (leaf): BGP attribute defining the origin of the path information.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/origin"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) Origin() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorId (leaf): BGP attribute that provides the id as an IPv4 address
// of the originator of the announcement.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/originator-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) OriginatorId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorId (leaf): BGP attribute that provides the id as an IPv4 address
// of the originator of the announcement.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/state/originator-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) OriginatorId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_OriginatorIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// TunnelEncapsulation (container): The Tunnel Encapsulation attribute specifies a set of
// tunnels to a remote destination. The attribute is TLV
// based and allows description of a tunnel type, and the
// relevant information to create the tunnel to the remote
// destination.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnel-encapsulation"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPath) TunnelEncapsulation() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath{
		NodePath: ygot.NewNodePath(
			[]string{"tunnel-encapsulation"},
			map[string]interface{}{},
			n,
		),
	}
}

// TunnelEncapsulation (container): The Tunnel Encapsulation attribute specifies a set of
// tunnels to a remote destination. The attribute is TLV
// based and allows description of a tunnel type, and the
// relevant information to create the tunnel to the remote
// destination.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnel-encapsulation"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSetPathAny) TunnelEncapsulation() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnel-encapsulation"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4PathAny struct {
	*ygot.NodePath
}

// Address (leaf): IP address of the router that performed the
// aggregation.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath) Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): IP address of the router that performed the
// aggregation.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny) Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// As (leaf): AS number of the autnonomous system that performed the
// aggregation.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath) As() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// As (leaf): AS number of the autnonomous system that performed the
// aggregation.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny) As() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_AsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// As4 (leaf): AS number of the autnonomous system that performed the
// aggregation (4-octet representation).  This value is
// populated if an upstream router is not 4-octet capable.
// Its semantics are similar to the AS4_PATH optional
// transitive attribute
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as4"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPath) As4() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4Path {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as4"},
			map[string]interface{}{},
			n,
		),
	}
}

// As4 (leaf): AS number of the autnonomous system that performed the
// aggregation (4-octet representation).  This value is
// populated if an upstream router is not 4-octet capable.
// Its semantics are similar to the AS4_PATH optional
// transitive attribute
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/aggregator/state/as4"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AggregatorPathAny) As4() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4PathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_Aggregator_As4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as4"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/member YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/member YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePathAny struct {
	*ygot.NodePath
}

// Member (leaf-list): List of the AS numbers in the AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/member"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/member"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPath) Member() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// Member (leaf-list): List of the AS numbers in the AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/member"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/member"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPathAny) Member() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_MemberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as4-path/as4-segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4SegmentPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_As4Segment_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/member YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/member YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePathAny struct {
	*ygot.NodePath
}

// Member (leaf-list): List of the AS numbers in the AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/member"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/member"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPath) Member() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// Member (leaf-list): List of the AS numbers in the AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/member"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/member"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPathAny) Member() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_MemberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "member"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of AS-PATH segment
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/as-path/as-segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegmentPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_AsSegment_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny struct {
	*ygot.NodePath
}

// TunnelAny (list): List of the tunnels that are specified within the
// attribute. Keyed on the type of tunnel that the
// TLV describes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel"
// Type (wildcarded): oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath) TunnelAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// TunnelAny (list): List of the tunnels that are specified within the
// attribute. Keyed on the type of tunnel that the
// TLV describes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel"
// Type (wildcarded): oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny) TunnelAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Tunnel (list): List of the tunnels that are specified within the
// attribute. Keyed on the type of tunnel that the
// TLV describes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel"
// Type: oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPath) Tunnel(Type oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Tunnel (list): List of the tunnels that are specified within the
// attribute. Keyed on the type of tunnel that the
// TLV describes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tunnels/tunnel"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel"
// Type: oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulationPathAny) Tunnel(Type oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tunnels", "tunnel"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePathAny struct {
	*ygot.NodePath
}

// SubtlvAny (list): List of the subTLVs that are specified within the
// TLV instance inside the tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv"
// Type (wildcarded): oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath) SubtlvAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of the subTLVs that are specified within the
// TLV instance inside the tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv"
// Type (wildcarded): oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny) SubtlvAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of the subTLVs that are specified within the
// TLV instance inside the tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv"
// Type: oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath) Subtlv(Type oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of the subTLVs that are specified within the
// TLV instance inside the tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv"
// Type: oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny) Subtlv(Type oc.E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Type (leaf): Type of the tunnel described within the tunnel encapsulation
// attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of the tunnel described within the tunnel encapsulation
// attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_TunnelPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/binding-sid YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/binding-sid YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/colors YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/colors YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/preference YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/preference YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// BindingSid (leaf): Binding SID associated with the SR-TE policy
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/binding-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/binding-sid"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) BindingSid() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "binding-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// BindingSid (leaf): Binding SID associated with the SR-TE policy
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/binding-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/binding-sid"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) BindingSid() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_BindingSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "binding-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Colors (leaf-list): The colours associated with the tunnel encapsulation attribute,
// as described by RFC5512.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/colors"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/colors"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) Colors() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "colors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Colors (leaf-list): The colours associated with the tunnel encapsulation attribute,
// as described by RFC5512.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/colors"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/colors"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) Colors() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_ColorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "colors"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): The preference of the SR-TE policy described by the tunnel
// encapsulation attribute. If unspecified, the preference
// defaults to 100.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/preference"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) Preference() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): The preference of the SR-TE policy described by the tunnel
// encapsulation attribute. If unspecified, the preference
// defaults to 100.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/preference"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) Preference() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteEndpointAny (list): List of the remote endpoints described within the TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote-endpoints/remote-endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint"
// Endpoint (wildcarded): string
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) RemoteEndpointAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"remote-endpoints", "remote-endpoint"},
			map[string]interface{}{"endpoint": "*"},
			n,
		),
	}
}

// RemoteEndpointAny (list): List of the remote endpoints described within the TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote-endpoints/remote-endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint"
// Endpoint (wildcarded): string
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) RemoteEndpointAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"remote-endpoints", "remote-endpoint"},
			map[string]interface{}{"endpoint": "*"},
			n,
		),
	}
}

// RemoteEndpoint (list): List of the remote endpoints described within the TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote-endpoints/remote-endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint"
// Endpoint: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) RemoteEndpoint(Endpoint string) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath{
		NodePath: ygot.NewNodePath(
			[]string{"remote-endpoints", "remote-endpoint"},
			map[string]interface{}{"endpoint": Endpoint},
			n,
		),
	}
}

// RemoteEndpoint (list): List of the remote endpoints described within the TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "remote-endpoints/remote-endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint"
// Endpoint: string
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) RemoteEndpoint(Endpoint string) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"remote-endpoints", "remote-endpoint"},
			map[string]interface{}{"endpoint": Endpoint},
			n,
		),
	}
}

// SegmentListAny (list): List of segment lists that are specified within the
// tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list"
// InstanceId (wildcarded): uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) SegmentListAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"instance-id": "*"},
			n,
		),
	}
}

// SegmentListAny (list): List of segment lists that are specified within the
// tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list"
// InstanceId (wildcarded): uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) SegmentListAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"instance-id": "*"},
			n,
		),
	}
}

// SegmentList (list): List of segment lists that are specified within the
// tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list"
// InstanceId: uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) SegmentList(InstanceId uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"instance-id": InstanceId},
			n,
		),
	}
}

// SegmentList (list): List of segment lists that are specified within the
// tunnel encapsulation attribute.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list"
// InstanceId: uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) SegmentList(InstanceId uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"instance-id": InstanceId},
			n,
		),
	}
}

// Type (leaf): Type of the sub-TLV within the tunnel encapsulation attribute
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of the sub-TLV within the tunnel encapsulation attribute
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_SubtlvPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/as YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/endpoint YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPathAny struct {
	*ygot.NodePath
}

// As (leaf): The remote AS to which the IP address of the remote endpoint
// belongs.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/as"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath) As() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// As (leaf): The remote AS to which the IP address of the remote endpoint
// belongs.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/as"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny) As() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_AsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "as"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): IP address of the remote endpoint.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPath) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): IP address of the remote endpoint.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/remote-endpoints/remote-endpoint/state/endpoint"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpointPathAny) Endpoint() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_RemoteEndpoint_EndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/instance-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/instance-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPathAny struct {
	*ygot.NodePath
}

// InstanceId (leaf): Instance of the segment list within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/instance-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath) InstanceId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceId (leaf): Instance of the segment list within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/instance-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny) InstanceId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_InstanceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentAny (list): List of segments within the SR-TE segment list.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segments/segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment"
// Index (wildcarded): uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath) SegmentAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segments", "segment"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// SegmentAny (list): List of segments within the SR-TE segment list.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segments/segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment"
// Index (wildcarded): uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny) SegmentAny() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segments", "segment"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Segment (list): List of segments within the SR-TE segment list.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segments/segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment"
// Index: uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath) Segment(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath{
		NodePath: ygot.NewNodePath(
			[]string{"segments", "segment"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Segment (list): List of segments within the SR-TE segment list.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segments/segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment"
// Index: uint64
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny) Segment(Index uint64) *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segments", "segment"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Weight (leaf): The weight given to the path within the set of segment
// lists that are included in the tunnel attribute sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPath) Weight() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight given to the path within the set of segment
// lists that are included in the tunnel attribute sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentListPathAny) Weight() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-interface-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-interface-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-bos YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-bos YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-tc YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-tc YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/sid YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/sid YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePathAny struct {
	*ygot.NodePath
}

// Index (leaf): Index of the segment within the segment list. The segments are
// ordered in ascending order, beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) Index() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): Index of the segment within the segment list. The segments are
// ordered in ascending order, beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) Index() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalInterfaceId (leaf): The local interface identifier to be utilised for the segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-interface-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) LocalInterfaceId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalInterfaceId (leaf): The local interface identifier to be utilised for the segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-interface-id"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) LocalInterfaceId() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalInterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv4Address (leaf): An IPv4 address of a local adjacency that is used to identify
// the segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv4-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) LocalIpv4Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv4Address (leaf): An IPv4 address of a local adjacency that is used to identify
// the segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv4-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) LocalIpv4Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv4AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Address (leaf): An IPv6 address of a local adjacency that is used to identify the
// segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv6-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) LocalIpv6Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Address (leaf): An IPv6 address of a local adjacency that is used to identify the
// segment.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/local-ipv6-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) LocalIpv6Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_LocalIpv6AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsBos (leaf): When this leaf is set to true the MPLS bottom-of-stack
// (BoS) bit is set in the MPLS segment. The BoS bit should
// always be set to zero by the sender.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-bos"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-bos"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) MplsBos() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-bos"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsBos (leaf): When this leaf is set to true the MPLS bottom-of-stack
// (BoS) bit is set in the MPLS segment. The BoS bit should
// always be set to zero by the sender.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-bos"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-bos"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) MplsBos() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsBosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-bos"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The MPLS TC bits used when the SID is specified as an MPLS
// label. If set to zero, the receiving system specifies the
// value of the TC bits.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-tc"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) MplsTc() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The MPLS TC bits used when the SID is specified as an MPLS
// label. If set to zero, the receiving system specifies the
// value of the TC bits.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-tc"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) MplsTc() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The MPLS time to live (TTL) to be set for the MPLS
// segment. If set to 255, the receiver specifies the
// TTL value that is used for packets sent with this
// segment in the stack.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-ttl"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) MplsTtl() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The MPLS time to live (TTL) to be set for the MPLS
// segment. If set to 255, the receiver specifies the
// TTL value that is used for packets sent with this
// segment in the stack.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/mpls-ttl"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) MplsTtl() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_MplsTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpv4Address (leaf): An IPv4 address specified as the remote node address. When the type
// of the segment specifies only the remote address, no other addresses
// are specified. When the type of the segment requires a local address,
// this leaf specifies the remote IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv4-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) RemoteIpv4Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpv4Address (leaf): An IPv4 address specified as the remote node address. When the type
// of the segment specifies only the remote address, no other addresses
// are specified. When the type of the segment requires a local address,
// this leaf specifies the remote IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv4-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) RemoteIpv4Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv4AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpv6Address (leaf): An IPv6 address specified as the remote node address. When the type
// of the segment specifies only the remote address, no other addresses
// are specified. When the type of the segment requires a local address,
// this leaf specifies the remote IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv6-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) RemoteIpv6Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpv6Address (leaf): An IPv6 address specified as the remote node address. When the type
// of the segment specifies only the remote address, no other addresses
// are specified. When the type of the segment requires a local address,
// this leaf specifies the remote IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/remote-ipv6-address"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) RemoteIpv6Address() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_RemoteIpv6AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sid (leaf): SID value for the segment entry, specified as an MPLS label
// or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/sid"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) Sid() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sid (leaf): SID value for the segment entry, specified as an MPLS label
// or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/sid"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) Sid() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of segment specified within the segment entry.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPath) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePath {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of segment specified within the segment entry.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/attr-sets/attr-set/tunnel-encapsulation/tunnels/tunnel/subtlvs/subtlv/segment-lists/segment-list/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_SegmentPathAny) Type() *NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_AttrSet_TunnelEncapsulation_Tunnel_Subtlv_SegmentList_Segment_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_CommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_CommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_Community_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_Community_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_Community_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_Community_IndexPathAny struct {
	*ygot.NodePath
}

// Community (leaf-list): List of standard or well-known BGP community
// attributes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/community"
func (n *NetworkInstance_Protocol_Bgp_Rib_CommunityPath) Community() *NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPath {
	return &NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community"},
			map[string]interface{}{},
			n,
		),
	}
}

// Community (leaf-list): List of standard or well-known BGP community
// attributes.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/community"
func (n *NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny) Community() *NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_Community_CommunityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "community"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_CommunityPath) Index() *NetworkInstance_Protocol_Bgp_Rib_Community_IndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_Community_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/communities/community/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_CommunityPathAny) Index() *NetworkInstance_Protocol_Bgp_Rib_Community_IndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_Community_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/ext-community YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/index YANG schema element.
type NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPathAny struct {
	*ygot.NodePath
}

// ExtCommunity (leaf-list): List of BGP extended community attributes.  The received
// extended community may be an explicitly modeled
// type or unknown, represented by an 8-octet value
// formatted according to RFC 4360.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/ext-community"
func (n *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath) ExtCommunity() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPath {
	return &NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtCommunity (leaf-list): List of BGP extended community attributes.  The received
// extended community may be an explicitly modeled
// type or unknown, represented by an 8-octet value
// formatted according to RFC 4360.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ext-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/ext-community"
func (n *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny) ExtCommunity() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_ExtCommunityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ext-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPath) Index() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPath {
	return &NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): System generated index for each attribute set.  The
// index is used to reference an attribute set from a
// specific path.  Multiple paths may reference the same
// attribute set.
// ----------------------------------------
// Defining module: "openconfig-rib-bgp-shared-attributes"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/rib/ext-communities/ext-community/state/index"
func (n *NetworkInstance_Protocol_Bgp_Rib_ExtCommunityPathAny) Index() *NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPathAny {
	return &NetworkInstance_Protocol_Bgp_Rib_ExtCommunity_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_IgmpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp YANG schema element.
type NetworkInstance_Protocol_IgmpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IgmpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp YANG schema element.
type NetworkInstance_Protocol_IgmpPathAny struct {
	*ygot.NodePath
}

// Global (container): Global IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global"
func (n *NetworkInstance_Protocol_IgmpPath) Global() *NetworkInstance_Protocol_Igmp_GlobalPath {
	return &NetworkInstance_Protocol_Igmp_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Global IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global"
func (n *NetworkInstance_Protocol_IgmpPathAny) Global() *NetworkInstance_Protocol_Igmp_GlobalPathAny {
	return &NetworkInstance_Protocol_Igmp_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IgmpPath) InterfaceAny() *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IgmpPathAny) InterfaceAny() *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IgmpPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Igmp_InterfacePath {
	return &NetworkInstance_Protocol_Igmp_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IgmpPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global YANG schema element.
type NetworkInstance_Protocol_Igmp_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global YANG schema element.
type NetworkInstance_Protocol_Igmp_GlobalPathAny struct {
	*ygot.NodePath
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm"
func (n *NetworkInstance_Protocol_Igmp_GlobalPath) Ssm() *NetworkInstance_Protocol_Igmp_Global_SsmPath {
	return &NetworkInstance_Protocol_Igmp_Global_SsmPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm"
func (n *NetworkInstance_Protocol_Igmp_GlobalPathAny) Ssm() *NetworkInstance_Protocol_Igmp_Global_SsmPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_SsmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Global_SsmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_SsmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_SsmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_SsmPathAny struct {
	*ygot.NodePath
}

// MappingAny (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPath) MappingAny() *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": "*"},
			n,
		),
	}
}

// MappingAny (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPathAny) MappingAny() *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": "*"},
			n,
		),
	}
}

// Mapping (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source: string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPath) Mapping(Source string) *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": Source},
			n,
		),
	}
}

// Mapping (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source: string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPathAny) Mapping(Source string) *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": Source},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny struct {
	*ygot.NodePath
}

// Source (leaf): Multicast source address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/source"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath) Source() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Multicast source address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/source"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny) Source() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath) SsmRanges() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny) SsmRanges() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/filter-prefixes YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/filter-prefixes YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-expires YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-expires YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-interval YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-interval YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_VersionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/version YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_VersionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_VersionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/version YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_VersionPathAny struct {
	*ygot.NodePath
}

// Counters (container): Counters avaiable on a per interface bases for IGMP.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Counters() *NetworkInstance_Protocol_Igmp_Interface_CountersPath {
	return &NetworkInstance_Protocol_Igmp_Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Counters avaiable on a per interface bases for IGMP.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Counters() *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Enabled() *NetworkInstance_Protocol_Igmp_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Igmp_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// FilterPrefixes (leaf): List used to filter joins.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/filter-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/filter-prefixes"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) FilterPrefixes() *NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath {
	return &NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "filter-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// FilterPrefixes (leaf): List used to filter joins.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/filter-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/filter-prefixes"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) FilterPrefixes() *NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "filter-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// GroupAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "membership-groups/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group"
// Group (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) GroupAny() *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"membership-groups", "group"},
			map[string]interface{}{"group": "*"},
			n,
		),
	}
}

// GroupAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "membership-groups/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group"
// Group (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) GroupAny() *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"membership-groups", "group"},
			map[string]interface{}{"group": "*"},
			n,
		),
	}
}

// Group (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "membership-groups/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group"
// Group: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Group(Group string) *NetworkInstance_Protocol_Igmp_Interface_GroupPath {
	return &NetworkInstance_Protocol_Igmp_Interface_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"membership-groups", "group"},
			map[string]interface{}{"group": Group},
			n,
		),
	}
}

// Group (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "membership-groups/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group"
// Group: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Group(Group string) *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"membership-groups", "group"},
			map[string]interface{}{"group": Group},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which IGMP is enabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which IGMP is enabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryExpires (leaf): This timestamp indicates the time that the next query is sent
// expressed relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/query-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-expires"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) QueryExpires() *NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPath {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "query-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryExpires (leaf): This timestamp indicates the time that the next query is sent
// expressed relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/query-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-expires"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) QueryExpires() *NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryExpiresPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "query-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryInterval (leaf): Interval at which the router sends the IGMP membership
// queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/query-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-interval"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) QueryInterval() *NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "query-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryInterval (leaf): Interval at which the router sends the IGMP membership
// queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/query-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/query-interval"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) QueryInterval() *NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "query-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroupsAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) StaticGroupsAny() *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": "*"},
			n,
		),
	}
}

// StaticGroupsAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) StaticGroupsAny() *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": "*"},
			n,
		),
	}
}

// StaticGroups (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) StaticGroups(StaticGroup string) *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": StaticGroup},
			n,
		),
	}
}

// StaticGroups (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) StaticGroups(StaticGroup string) *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": StaticGroup},
			n,
		),
	}
}

// Version (leaf): IGMP Version.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/version"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Version() *NetworkInstance_Protocol_Igmp_Interface_VersionPath {
	return &NetworkInstance_Protocol_Igmp_Interface_VersionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version (leaf): IGMP Version.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/state/version"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Version() *NetworkInstance_Protocol_Igmp_Interface_VersionPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_VersionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_CountersPathAny struct {
	*ygot.NodePath
}

// Queries (container): IGMP membership queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "queries"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPath) Queries() *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath{
		NodePath: ygot.NewNodePath(
			[]string{"queries"},
			map[string]interface{}{},
			n,
		),
	}
}

// Queries (container): IGMP membership queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "queries"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny) Queries() *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queries"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reports (container): Number of IGMP membership reports received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reports"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPath) Reports() *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath{
		NodePath: ygot.NewNodePath(
			[]string{"reports"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reports (container): Number of IGMP membership reports received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reports"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny) Reports() *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reports"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny struct {
	*ygot.NodePath
}

// Received (container): Number of IGMP membership queries received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath) Received() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (container): Number of IGMP membership queries received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny) Received() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (container): Number of IGMP membership queries sent.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath) Sent() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (container): Number of IGMP membership queries sent.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny) Sent() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3PathAny struct {
	*ygot.NodePath
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Received_V3PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3PathAny struct {
	*ygot.NodePath
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_Sent_V3PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v1 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v2 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v3 YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3PathAny struct {
	*ygot.NodePath
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V1 (leaf): IGMP v1.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v1"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v1"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny) V1() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v1"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V2 (leaf): IGMP v2.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v2"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v2"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny) V2() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v2"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3Path {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// V3 (leaf): IGMP v3.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/v3"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports/state/v3"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny) V3() *NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3PathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Reports_V3PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "v3"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/reporter YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/reporter YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Group_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Group_SourcePathAny struct {
	*ygot.NodePath
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/group"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPath) Group() *NetworkInstance_Protocol_Igmp_Interface_Group_GroupPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/group"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny) Group() *NetworkInstance_Protocol_Igmp_Interface_Group_GroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reporter (leaf): Address of the last reporter.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reporter"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/reporter"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPath) Reporter() *NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reporter"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reporter (leaf): Address of the last reporter.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reporter"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/reporter"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny) Reporter() *NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_ReporterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reporter"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPath) Source() *NetworkInstance_Protocol_Igmp_Interface_Group_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/membership-groups/group/state/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_GroupPathAny) Source() *NetworkInstance_Protocol_Igmp_Interface_Group_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Group_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/static-group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/static-group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny struct {
	*ygot.NodePath
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath) Source() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny) Source() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroup (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/static-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/static-group"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath) StaticGroup() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "static-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroup (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/static-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/state/static-group"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny) StaticGroup() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "static-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_IsisPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis YANG schema element.
type NetworkInstance_Protocol_IsisPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IsisPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis YANG schema element.
type NetworkInstance_Protocol_IsisPathAny struct {
	*ygot.NodePath
}

// Global (container): This container defines global ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global"
func (n *NetworkInstance_Protocol_IsisPath) Global() *NetworkInstance_Protocol_Isis_GlobalPath {
	return &NetworkInstance_Protocol_Isis_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): This container defines global ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global"
func (n *NetworkInstance_Protocol_IsisPathAny) Global() *NetworkInstance_Protocol_Isis_GlobalPathAny {
	return &NetworkInstance_Protocol_Isis_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IsisPath) InterfaceAny() *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IsisPathAny) InterfaceAny() *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IsisPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Isis_InterfacePath {
	return &NetworkInstance_Protocol_Isis_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IsisPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_IsisPath) LevelAny() *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_IsisPathAny) LevelAny() *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_IsisPath) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_LevelPath {
	return &NetworkInstance_Protocol_Isis_LevelPath{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_IsisPathAny) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global YANG schema element.
type NetworkInstance_Protocol_Isis_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global YANG schema element.
type NetworkInstance_Protocol_Isis_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_FastFloodingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/fast-flooding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_FastFloodingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/fast-flooding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_HelloPaddingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_HelloPaddingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_IidTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/iid-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_IidTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_IidTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/iid-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_IidTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/level-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/level-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/max-ecmp-paths YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/max-ecmp-paths YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/net YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/net YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_PoiTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/poi-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_PoiTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/state/poi-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAny() *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAny() *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPath {
	return &NetworkInstance_Protocol_Isis_Global_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// AfiAny (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfiAny() *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AfiAny (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfiAny() *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// Afi (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName: oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Afi(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfiPath {
	return &NetworkInstance_Protocol_Isis_Global_AfiPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// Afi (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName: oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Afi(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/authentication-check"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath {
	return &NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/authentication-check"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// FastFlooding (leaf): When set to true, IS will always flood the LSP that triggered an SPF
// before the router actually runs the SPF computation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/fast-flooding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/fast-flooding"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) FastFlooding() *NetworkInstance_Protocol_Isis_Global_FastFloodingPath {
	return &NetworkInstance_Protocol_Isis_Global_FastFloodingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fast-flooding"},
			map[string]interface{}{},
			n,
		),
	}
}

// FastFlooding (leaf): When set to true, IS will always flood the LSP that triggered an SPF
// before the router actually runs the SPF computation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/fast-flooding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/fast-flooding"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) FastFlooding() *NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fast-flooding"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): This container defines ISIS Graceful Restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): This container defines ISIS Graceful Restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs on a global level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/hello-padding"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) HelloPadding() *NetworkInstance_Protocol_Isis_Global_HelloPaddingPath {
	return &NetworkInstance_Protocol_Isis_Global_HelloPaddingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs on a global level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/hello-padding"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) HelloPadding() *NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// IidTlv (leaf): ISIS Instance Identifier TLV. When set to trues, the IID-TLV identifies
// the unique instance as well as the topology/topologies to which the
// PDU applies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/iid-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/iid-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) IidTlv() *NetworkInstance_Protocol_Isis_Global_IidTlvPath {
	return &NetworkInstance_Protocol_Isis_Global_IidTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "iid-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// IidTlv (leaf): ISIS Instance Identifier TLV. When set to trues, the IID-TLV identifies
// the unique instance as well as the topology/topologies to which the
// PDU applies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/iid-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/iid-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) IidTlv() *NetworkInstance_Protocol_Isis_Global_IidTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Global_IidTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "iid-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instance (leaf): ISIS Instance.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/instance"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Instance() *NetworkInstance_Protocol_Isis_Global_InstancePath {
	return &NetworkInstance_Protocol_Isis_Global_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instance (leaf): ISIS Instance.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/instance"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Instance() *NetworkInstance_Protocol_Isis_Global_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Global_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterLevelPropagationPolicies (container): Policies to propagate prefixes between IS-IS levels.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-level-propagation-policies"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) InterLevelPropagationPolicies() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-level-propagation-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterLevelPropagationPolicies (container): Policies to propagate prefixes between IS-IS levels.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-level-propagation-policies"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) InterLevelPropagationPolicies() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-level-propagation-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelCapability (leaf): ISIS level capability(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/level-capability"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) LevelCapability() *NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath {
	return &NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelCapability (leaf): ISIS level capability(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/level-capability"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) LevelCapability() *NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBit (container): This container defines ISIS LSP Operational Bits.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) LspBit() *NetworkInstance_Protocol_Isis_Global_LspBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBit (container): This container defines ISIS LSP Operational Bits.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) LspBit() *NetworkInstance_Protocol_Isis_Global_LspBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxEcmpPaths (leaf): ISIS max-paths count.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-ecmp-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/max-ecmp-paths"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) MaxEcmpPaths() *NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath {
	return &NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-ecmp-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxEcmpPaths (leaf): ISIS max-paths count.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-ecmp-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/max-ecmp-paths"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) MaxEcmpPaths() *NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-ecmp-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Maximum areas supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath {
	return &NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Maximum areas supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Mpls() *NetworkInstance_Protocol_Isis_Global_MplsPath {
	return &NetworkInstance_Protocol_Isis_Global_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Mpls() *NetworkInstance_Protocol_Isis_Global_MplsPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Net (leaf-list): ISIS network entity title (NET). The first 8 bits are usually
// 49 (private AFI), next 16 bits represent area, next 48 bits represent
// system id and final 8 bits are set to 0.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/net"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/net"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Net() *NetworkInstance_Protocol_Isis_Global_NetPath {
	return &NetworkInstance_Protocol_Isis_Global_NetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "net"},
			map[string]interface{}{},
			n,
		),
	}
}

// Net (leaf-list): ISIS network entity title (NET). The first 8 bits are usually
// 49 (private AFI), next 16 bits represent area, next 48 bits represent
// system id and final 8 bits are set to 0.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/net"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/net"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Net() *NetworkInstance_Protocol_Isis_Global_NetPathAny {
	return &NetworkInstance_Protocol_Isis_Global_NetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "net"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nsr (container): This container defines ISIS Non-Stop Routing.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nsr"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Nsr() *NetworkInstance_Protocol_Isis_Global_NsrPath {
	return &NetworkInstance_Protocol_Isis_Global_NsrPath{
		NodePath: ygot.NewNodePath(
			[]string{"nsr"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nsr (container): This container defines ISIS Non-Stop Routing.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nsr"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Nsr() *NetworkInstance_Protocol_Isis_Global_NsrPathAny {
	return &NetworkInstance_Protocol_Isis_Global_NsrPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"nsr"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoiTlv (leaf): ISIS purge TLV. When set to true, a TLV is added to purges to record
// the system ID  of the IS generating the purge.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/poi-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/poi-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) PoiTlv() *NetworkInstance_Protocol_Isis_Global_PoiTlvPath {
	return &NetworkInstance_Protocol_Isis_Global_PoiTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "poi-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoiTlv (leaf): ISIS purge TLV. When set to true, a TLV is added to purges to record
// the system ID  of the IS generating the purge.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/poi-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/state/poi-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) PoiTlv() *NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "poi-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (container): This container defines ISIS Reference Bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (container): This container defines ISIS Reference Bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state relating to segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) SegmentRouting() *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state relating to segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) SegmentRouting() *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Timers() *NetworkInstance_Protocol_Isis_Global_TimersPath {
	return &NetworkInstance_Protocol_Isis_Global_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Timers() *NetworkInstance_Protocol_Isis_Global_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Global_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): This container defines ISIS transport.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Transport() *NetworkInstance_Protocol_Isis_Global_TransportPath {
	return &NetworkInstance_Protocol_Isis_Global_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): This container defines ISIS transport.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Transport() *NetworkInstance_Protocol_Isis_Global_TransportPathAny {
	return &NetworkInstance_Protocol_Isis_Global_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/metric"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) Metric() *NetworkInstance_Protocol_Isis_Global_Af_MetricPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/metric"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) Metric() *NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines multi-topology address-family configuration
// and state information. ISIS TLV 235, 237.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) MultiTopology() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines multi-topology address-family configuration
// and state information. ISIS TLV 235, 237.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) MultiTopology() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_AfiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AfiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/nh-type YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/nh-type YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NhType (leaf-list): Tunnel NH Type(RSVP,SR). When present it implies
// that nh-type shortcut is enabled for a specified AFI.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nh-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/nh-type"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPath) NhType() *NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath {
	return &NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nh-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NhType (leaf-list): Tunnel NH Type(RSVP,SR). When present it implies
// that nh-type shortcut is enabled for a specified AFI.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nh-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/state/nh-type"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPathAny) NhType() *NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nh-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable or disable the IS-IS graceful restart helper function. When
// this leaf is set, the local system does not utilise the IS-IS
// graceful restart procedures during its own restart, but supports
// retaining forwarding information during a remote speaker's restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable or disable the IS-IS graceful restart helper function. When
// this leaf is set, the local system does not utilise the IS-IS
// graceful restart procedures during its own restart, but supports
// retaining forwarding information during a remote speaker's restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny struct {
	*ygot.NodePath
}

// Level1ToLevel2 (container): Policies relating to prefixes to be propagated from
// Level 1 to Level 2.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level1-to-level2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath) Level1ToLevel2() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path{
		NodePath: ygot.NewNodePath(
			[]string{"level1-to-level2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level1ToLevel2 (container): Policies relating to prefixes to be propagated from
// Level 1 to Level 2.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level1-to-level2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny) Level1ToLevel2() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"level1-to-level2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level2ToLevel1 (container): Policies relating to prefixes to be propagated from
// Level2 to Level 1.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level2-to-level1"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath) Level2ToLevel1() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path{
		NodePath: ygot.NewNodePath(
			[]string{"level2-to-level1"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level2ToLevel1 (container): Policies relating to prefixes to be propagated from
// Level2 to Level 1.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level2-to-level1"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny) Level2ToLevel1() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"level2-to-level1"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/state/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/state/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBitPathAny struct {
	*ygot.NodePath
}

// AttachedBit (container): This container defines Attached Bit.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "attached-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPath) AttachedBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"attached-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttachedBit (container): This container defines Attached Bit.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "attached-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPathAny) AttachedBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"attached-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverloadBit (container): This container defines Overload Bit configuration.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overload-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPath) OverloadBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"overload-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverloadBit (container): This container defines Overload Bit configuration.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overload-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPathAny) OverloadBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"overload-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/ignore-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/ignore-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/suppress-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/suppress-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny struct {
	*ygot.NodePath
}

// IgnoreBit (leaf): When set to true, if the attached bit is set on an incoming Level 1
// IS-IS, the local system ignores it. In this case the local system
// does not set a default route to the L1L2 router advertising the PDU
// with the attached bit set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ignore-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/ignore-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath) IgnoreBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ignore-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreBit (leaf): When set to true, if the attached bit is set on an incoming Level 1
// IS-IS, the local system ignores it. In this case the local system
// does not set a default route to the L1L2 router advertising the PDU
// with the attached bit set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ignore-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/ignore-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny) IgnoreBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ignore-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressBit (leaf): When set to true, if the local IS acts as a L1L2 router, then the
// attached bit is not advertised in locally generated PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/suppress-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/suppress-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath) SuppressBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "suppress-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressBit (leaf): When set to true, if the local IS acts as a L1L2 router, then the
// attached bit is not advertised in locally generated PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/suppress-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/state/suppress-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny) SuppressBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "suppress-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/advertise-high-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/advertise-high-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit-on-boot YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit-on-boot YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny struct {
	*ygot.NodePath
}

// AdvertiseHighMetric (leaf): When set to true, the local IS advertises links with the highest
// available metric regardless of their configured metric. The metric
// value is based on the metric style - if wide metrics are utilised
// the metric is advertised as 16777214, otherwise they are advertised
// with a value of 63.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertise-high-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/advertise-high-metric"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) AdvertiseHighMetric() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertise-high-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertiseHighMetric (leaf): When set to true, the local IS advertises links with the highest
// available metric regardless of their configured metric. The metric
// value is based on the metric style - if wide metrics are utilised
// the metric is advertised as 16777214, otherwise they are advertised
// with a value of 63.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertise-high-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/advertise-high-metric"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) AdvertiseHighMetric() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertise-high-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTriggerAny (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger (wildcarded): oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) ResetTriggerAny() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": "*"},
			n,
		),
	}
}

// ResetTriggerAny (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger (wildcarded): oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) ResetTriggerAny() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": "*"},
			n,
		),
	}
}

// ResetTrigger (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger: oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) ResetTrigger(ResetTrigger oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": ResetTrigger},
			n,
		),
	}
}

// ResetTrigger (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger: oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) ResetTrigger(ResetTrigger oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": ResetTrigger},
			n,
		),
	}
}

// SetBit (leaf): When set to true, IS-IS overload bit is set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) SetBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBit (leaf): When set to true, IS-IS overload bit is set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) SetBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBitOnBoot (leaf): When set to true, the IS-IS overload bit is set on system boot.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-bit-on-boot"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit-on-boot"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) SetBitOnBoot() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-bit-on-boot"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBitOnBoot (leaf): When set to true, the IS-IS overload bit is set on system boot.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-bit-on-boot"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/state/set-bit-on-boot"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) SetBitOnBoot() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-bit-on-boot"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): If a reset trigger is specified, the system should delay resetting
// the overload bit for the specified number of seconds after the
// trigger occurs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/delay"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath) Delay() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): If a reset trigger is specified, the system should delay resetting
// the overload bit for the specified number of seconds after the
// trigger occurs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/delay"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny) Delay() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTrigger (leaf): In the case that the system sets the overload bit on start, the
// system should reset the bit (i.e., clear the overload bit) upon
// the specified trigger.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/reset-trigger"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath) ResetTrigger() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reset-trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTrigger (leaf): In the case that the system sets the overload bit on start, the
// system should reset the bit (i.e., clear the overload bit) upon
// the specified trigger.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/state/reset-trigger"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny) ResetTrigger() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reset-trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MplsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Global_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Global_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_NsrPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NsrPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NsrPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NsrPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_NsrPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_NsrPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/state/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/state/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny struct {
	*ygot.NodePath
}

// ReferenceBandwidth (leaf): ISIS Reference Bandwidth value
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/state/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (leaf): ISIS Reference Bandwidth value
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/state/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srgb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srgb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srlb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srlb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, the segment routing extensions are
// utilised within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Enabled() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, the segment routing extensions are
// utilised within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srgb (leaf): A reference to the Segment Routing Global Block (SRGB) that is
// to be used by this IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srgb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srgb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Srgb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srgb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srgb (leaf): A reference to the Segment Routing Global Block (SRGB) that is
// to be used by this IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srgb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srgb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Srgb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srgb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srlb (leaf): A reference to the Segment Routing Local Block (SRLB) that is to
// be advertised by the IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srlb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srlb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Srlb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srlb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srlb (leaf): A reference to the Segment Routing Local Block (SRLB) that is to
// be advertised by the IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srlb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/state/srlb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Srlb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srlb"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-lifetime-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-lifetime-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-refresh-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-refresh-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny struct {
	*ygot.NodePath
}

// LspGeneration (container): This container defines ISIS LSP Generation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspGeneration() *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspGeneration (container): This container defines ISIS LSP Generation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspGeneration() *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspLifetimeInterval (leaf): Time interval in seconds that specifies how long an LSP remains in
// LSDB without being refreshed.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-lifetime-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-lifetime-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspLifetimeInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-lifetime-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspLifetimeInterval (leaf): Time interval in seconds that specifies how long an LSP remains in
// LSDB without being refreshed.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-lifetime-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-lifetime-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspLifetimeInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-lifetime-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspRefreshInterval (leaf): Time interval in seconds that specifies how often route topology
// that a device originates is transmitted in LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-refresh-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-refresh-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspRefreshInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-refresh-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspRefreshInterval (leaf): Time interval in seconds that specifies how often route topology
// that a device originates is transmitted in LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-refresh-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/state/lsp-refresh-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspRefreshInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-refresh-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): This container defines ISIS SPF timer settings.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) Spf() *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_SpfPath{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): This container defines ISIS SPF timer settings.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) Spf() *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/adaptive-timer YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/adaptive-timer YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-first-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-first-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-max-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-max-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-second-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-second-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny struct {
	*ygot.NodePath
}

// AdaptiveTimer (leaf): ISIS adaptive timer types (linear, exponential).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adaptive-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/adaptive-timer"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) AdaptiveTimer() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adaptive-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdaptiveTimer (leaf): ISIS adaptive timer types (linear, exponential).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adaptive-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/adaptive-timer"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) AdaptiveTimer() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_AdaptiveTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adaptive-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspFirstWaitInterval (leaf): Time interval in milliseconds that specifies the first LSP generation
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-first-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-first-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspFirstWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-first-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspFirstWaitInterval (leaf): Time interval in milliseconds that specifies the first LSP generation
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-first-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-first-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspFirstWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-first-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMaxWaitInterval (leaf): Time interval in milliseconds that specifies max interval between
// two consecutive occurrences of an LSP being generated.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-max-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-max-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspMaxWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-max-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMaxWaitInterval (leaf): Time interval in milliseconds that specifies max interval between
// two consecutive occurrences of an LSP being generated.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-max-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-max-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspMaxWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-max-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspSecondWaitInterval (leaf): Time interval in milliseconds that specifies the millisecond LSP
// generation delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-second-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-second-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspSecondWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-second-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspSecondWaitInterval (leaf): Time interval in milliseconds that specifies the millisecond LSP
// generation delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-second-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/state/lsp-second-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspSecondWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-second-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Timers_SpfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_SpfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/adaptive-timer YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/adaptive-timer YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-first-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-first-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-hold-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-hold-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-second-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-second-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny struct {
	*ygot.NodePath
}

// AdaptiveTimer (leaf): ISIS adaptive timer types (linear, exponential).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adaptive-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/adaptive-timer"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) AdaptiveTimer() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adaptive-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdaptiveTimer (leaf): ISIS adaptive timer types (linear, exponential).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adaptive-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/adaptive-timer"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) AdaptiveTimer() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_AdaptiveTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adaptive-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfFirstInterval (leaf): Time interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-first-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-first-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfFirstInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-first-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfFirstInterval (leaf): Time interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-first-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-first-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfFirstInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-first-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfHoldInterval (leaf): SPF Hold Down time interval in milliseconds.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-hold-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-hold-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfHoldInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-hold-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfHoldInterval (leaf): SPF Hold Down time interval in milliseconds.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-hold-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-hold-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfHoldInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-hold-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfSecondInterval (leaf): Time interval in milliseconds between the first and second
// SPF calculation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-second-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-second-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfSecondInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-second-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfSecondInterval (leaf): Time interval in milliseconds between the first and second
// SPF calculation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-second-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/state/spf-second-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfSecondInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-second-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport/state/lsp-mtu-size YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport/state/lsp-mtu-size YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny struct {
	*ygot.NodePath
}

// LspMtuSize (leaf): The maximum size in bytes of an IS-IS Link state PDU.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-mtu-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport/state/lsp-mtu-size"
func (n *NetworkInstance_Protocol_Isis_Global_TransportPath) LspMtuSize() *NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath {
	return &NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-mtu-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMtuSize (leaf): The maximum size in bytes of an IS-IS Link state PDU.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-mtu-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport/state/lsp-mtu-size"
func (n *NetworkInstance_Protocol_Isis_Global_TransportPathAny) LspMtuSize() *NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-mtu-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Isis_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Isis_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_PassivePathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAny() *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAny() *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPath {
	return &NetworkInstance_Protocol_Isis_Interface_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Authentication() *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Interface_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Authentication() *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bfd (container): This container defines BFD.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Bfd() *NetworkInstance_Protocol_Isis_Interface_BfdPath {
	return &NetworkInstance_Protocol_Isis_Interface_BfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bfd (container): This container defines BFD.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Bfd() *NetworkInstance_Protocol_Isis_Interface_BfdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_BfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitCounters (container): This container defines state information for ISIS circuit counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "circuit-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) CircuitCounters() *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"circuit-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitCounters (container): This container defines state information for ISIS circuit counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "circuit-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) CircuitCounters() *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"circuit-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitType (leaf): ISIS circuit type (p2p, broadcast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/circuit-type"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) CircuitType() *NetworkInstance_Protocol_Isis_Interface_CircuitTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitType (leaf): ISIS circuit type (p2p, broadcast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/circuit-type"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) CircuitType() *NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Isis_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/hello-padding"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) HelloPadding() *NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath {
	return &NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/hello-padding"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) HelloPadding() *NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Interface for which ISIS configuration is to be applied.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Interface for which ISIS configuration is to be applied.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePath) LevelAny() *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) LevelAny() *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_Interface_LevelPath {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPath{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Mpls() *NetworkInstance_Protocol_Isis_Interface_MplsPath {
	return &NetworkInstance_Protocol_Isis_Interface_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Mpls() *NetworkInstance_Protocol_Isis_Interface_MplsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When set to true, the referenced interface is a passive interface
// such that it is not eligible to establish adjacencies with other
// systems, but is advertised into the IS-IS topology.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/passive"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Passive() *NetworkInstance_Protocol_Isis_Interface_PassivePath {
	return &NetworkInstance_Protocol_Isis_Interface_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When set to true, the referenced interface is a passive interface
// such that it is not eligible to establish adjacencies with other
// systems, but is advertised into the IS-IS topology.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/state/passive"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Passive() *NetworkInstance_Protocol_Isis_Interface_PassivePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container describes ISIS interface timers configuration
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Timers() *NetworkInstance_Protocol_Isis_Interface_TimersPath {
	return &NetworkInstance_Protocol_Isis_Interface_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container describes ISIS interface timers configuration
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Timers() *NetworkInstance_Protocol_Isis_Interface_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_BfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_BfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_BfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_BfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/state/bfd-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/state/bfd-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny struct {
	*ygot.NodePath
}

// BfdTlv (leaf): When set to true, BFD TLV is used. This enables support for the IS-IS
// BFD TLV options, which specify that a BFD session must be established
// before an IS-IS adjacency can transition to the established state.
// This option should be enabled on all IS-IS neighbors on a shared
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bfd-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/state/bfd-tlv"
func (n *NetworkInstance_Protocol_Isis_Interface_BfdPath) BfdTlv() *NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath {
	return &NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bfd-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// BfdTlv (leaf): When set to true, BFD TLV is used. This enables support for the IS-IS
// BFD TLV options, which specify that a BFD session must be established
// before an IS-IS adjacency can transition to the established state.
// This option should be enabled on all IS-IS neighbors on a shared
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bfd-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/state/bfd-tlv"
func (n *NetworkInstance_Protocol_Isis_Interface_BfdPathAny) BfdTlv() *NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bfd-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-type-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-type-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/id-field-len-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/id-field-len-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/init-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/init-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/lan-dis-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/lan-dis-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/max-area-address-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/max-area-address-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/rejected-adj YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/rejected-adj YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPathAny struct {
	*ygot.NodePath
}

// AdjChanges (leaf): Number of times an adjacency state change has occurred on this circuit.
// MIB Entry: CircAdjChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adj-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-changes"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) AdjChanges() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adj-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjChanges (leaf): Number of times an adjacency state change has occurred on this circuit.
// MIB Entry: CircAdjChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adj-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-changes"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) AdjChanges() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adj-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjNumber (leaf): Number of adjacencies on this circuit.
// MIB Entry: CircNumAdj.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adj-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-number"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) AdjNumber() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adj-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjNumber (leaf): Number of adjacencies on this circuit.
// MIB Entry: CircNumAdj.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adj-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/adj-number"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) AdjNumber() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AdjNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adj-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthFails (leaf): Number of times an IS-IS control PDU with the correct auth type has
// failed to pass authentication validation. MIB Entry: CircAuthFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) AuthFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthFails (leaf): Number of times an IS-IS control PDU with the correct auth type has
// failed to pass authentication validation. MIB Entry: CircAuthFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) AuthFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthTypeFails (leaf): Number of times an IS-IS control PDU with an auth type field different
// from that for this system has been received. MIB Entry:
// CircAuthTypeFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-type-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) AuthTypeFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthTypeFails (leaf): Number of times an IS-IS control PDU with an auth type field different
// from that for this system has been received. MIB Entry:
// CircAuthTypeFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/auth-type-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) AuthTypeFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_AuthTypeFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdFieldLenMismatches (leaf): Number of times an IS-IS control PDU with an ID field length different
// from that for this system has been received.
// MIB Entry: CircIDFieldLenMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-field-len-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/id-field-len-mismatches"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) IdFieldLenMismatches() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-field-len-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdFieldLenMismatches (leaf): Number of times an IS-IS control PDU with an ID field length different
// from that for this system has been received.
// MIB Entry: CircIDFieldLenMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-field-len-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/id-field-len-mismatches"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) IdFieldLenMismatches() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_IdFieldLenMismatchesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-field-len-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitFails (leaf): Number of times initialization of this circuit has failed. This counts
// events such as PPP NCP failures. MIB Entry: CircInitFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/init-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/init-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) InitFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "init-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitFails (leaf): Number of times initialization of this circuit has failed. This counts
// events such as PPP NCP failures. MIB Entry: CircInitFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/init-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/init-fails"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) InitFails() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_InitFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "init-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanDisChanges (leaf): Number of times the Designated IS has changed on this circuit at this
// level. If the circuit is point to point, this count is zero. MIB Entry:
// CircLANDesISChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lan-dis-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/lan-dis-changes"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) LanDisChanges() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lan-dis-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanDisChanges (leaf): Number of times the Designated IS has changed on this circuit at this
// level. If the circuit is point to point, this count is zero. MIB Entry:
// CircLANDesISChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lan-dis-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/lan-dis-changes"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) LanDisChanges() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_LanDisChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lan-dis-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxAreaAddressMismatches (leaf): Number of times an IS-IS control PDU with a max area address field
// different from that for this system has been received. MIB Entry:
// CircMaxAreaAddrMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-area-address-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/max-area-address-mismatches"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) MaxAreaAddressMismatches() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-area-address-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxAreaAddressMismatches (leaf): Number of times an IS-IS control PDU with a max area address field
// different from that for this system has been received. MIB Entry:
// CircMaxAreaAddrMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-area-address-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/max-area-address-mismatches"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) MaxAreaAddressMismatches() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_MaxAreaAddressMismatchesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-area-address-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// RejectedAdj (leaf): Number of times an adjacency has been rejected on this circuit. MIB
// Entry: CircRejAdjs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/rejected-adj"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/rejected-adj"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath) RejectedAdj() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "rejected-adj"},
			map[string]interface{}{},
			n,
		),
	}
}

// RejectedAdj (leaf): Number of times an adjacency has been rejected on this circuit. MIB
// Entry: CircRejAdjs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/rejected-adj"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters/state/rejected-adj"
func (n *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny) RejectedAdj() *NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCounters_RejectedAdjPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "rejected-adj"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_LevelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_LevelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_LevelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_LevelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny struct {
	*ygot.NodePath
}

// AdjacencyAny (list): List of the local system's IS-IS adjacencies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacencies/adjacency"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AdjacencyAny() *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacencies", "adjacency"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// AdjacencyAny (list): List of the local system's IS-IS adjacencies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacencies/adjacency"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AdjacencyAny() *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacencies", "adjacency"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// Adjacency (list): List of the local system's IS-IS adjacencies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacencies/adjacency"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Adjacency(SystemId string) *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacencies", "adjacency"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// Adjacency (list): List of the local system's IS-IS adjacencies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacencies/adjacency"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Adjacency(SystemId string) *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacencies", "adjacency"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAny() *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAny() *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAuthentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) HelloAuthentication() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAuthentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) HelloAuthentication() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number(level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/level-number"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) LevelNumber() *NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number(level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/level-number"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) LevelNumber() *NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// PacketCounters (container): This container defines ISIS interface packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "packet-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) PacketCounters() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"packet-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// PacketCounters (container): This container defines ISIS interface packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "packet-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) PacketCounters() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"packet-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): ISIS passive interface admin enable/disable function.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/passive"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Passive() *NetworkInstance_Protocol_Isis_Interface_Level_PassivePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): ISIS passive interface admin enable/disable function.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/passive"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Passive() *NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): ISIS neighbor priority(LAN hello PDU only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): ISIS neighbor priority(LAN hello PDU only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/state/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Timers() *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Timers() *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/area-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/area-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/dis-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/dis-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/local-extended-circuit-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/local-extended-circuit-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-extended-circuit-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-extended-circuit-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv4-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv6-address YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-snpa YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-snpa YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-status YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-status YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-support YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-support YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-suppress YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-suppress YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/topology YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/topology YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/up-timestamp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/up-timestamp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPathAny struct {
	*ygot.NodePath
}

// AdjacencyState (leaf): P2P 3-way ISIS adjacency state(up, down, init, failed).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-state"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) AdjacencyState() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyState (leaf): P2P 3-way ISIS adjacency state(up, down, init, failed).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-state"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) AdjacencyState() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyType (leaf): Formed ISIS adjacency type(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) AdjacencyType() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyType (leaf): Formed ISIS adjacency type(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/adjacency-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) AdjacencyType() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AdjacencyTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AreaAddress (leaf-list): List of ISIS area-address(es).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/area-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/area-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) AreaAddress() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "area-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// AreaAddress (leaf-list): List of ISIS area-address(es).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/area-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/area-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) AreaAddress() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_AreaAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "area-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisSystemId (leaf): DIS System ID(LAN hello only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dis-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/dis-system-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) DisSystemId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dis-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisSystemId (leaf): DIS System ID(LAN hello only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dis-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/dis-system-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) DisSystemId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_DisSystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dis-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalExtendedCircuitId (leaf): Local extended circuit ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-extended-circuit-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/local-extended-circuit-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) LocalExtendedCircuitId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-extended-circuit-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalExtendedCircuitId (leaf): Local extended circuit ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-extended-circuit-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/local-extended-circuit-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) LocalExtendedCircuitId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_LocalExtendedCircuitIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-extended-circuit-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (leaf): When set to true, ISIS multi-topology is supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) MultiTopology() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (leaf): When set to true, ISIS multi-topology is supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) MultiTopology() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_MultiTopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCircuitType (leaf): Received ISIS circuit type (level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-circuit-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborCircuitType() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCircuitType (leaf): Received ISIS circuit type (level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-circuit-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborCircuitType() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborCircuitTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExtendedCircuitId (leaf): ISIS neighbor extended circuit ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-extended-circuit-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-extended-circuit-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborExtendedCircuitId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-extended-circuit-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExtendedCircuitId (leaf): ISIS neighbor extended circuit ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-extended-circuit-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-extended-circuit-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborExtendedCircuitId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborExtendedCircuitIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-extended-circuit-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborIpv4Address (leaf): ISIS Neighbor IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv4-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborIpv4Address() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborIpv4Address (leaf): ISIS Neighbor IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-ipv4-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv4-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborIpv4Address() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv4AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-ipv4-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborIpv6Address (leaf): ISIS Neighbor IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv6-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborIpv6Address() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborIpv6Address (leaf): ISIS Neighbor IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-ipv6-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-ipv6-address"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborIpv6Address() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborIpv6AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-ipv6-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborSnpa (leaf): ISIS neighbor SNPA.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-snpa"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-snpa"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) NeighborSnpa() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-snpa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborSnpa (leaf): ISIS neighbor SNPA.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-snpa"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/neighbor-snpa"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) NeighborSnpa() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NeighborSnpaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-snpa"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (leaf-list): Supported Protocol. IPv4 is defined as (0xcc)
// and IPv6 - (0x8e). ISIS reference is TLV 129.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/nlpid"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) Nlpid() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (leaf-list): Supported Protocol. IPv4 is defined as (0xcc)
// and IPv6 - (0x8e). ISIS reference is TLV 129.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/nlpid"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) Nlpid() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_NlpidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Priority of the neighboring IS(LAN Hello only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Priority of the neighboring IS(LAN Hello only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartStatus (leaf): When set to true, neighbor is being helped. The RR bit is used by a
// (re)starting router to signal to its neighbors that a (re)start is in
// progress.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-status"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-status"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) RestartStatus() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartStatus (leaf): When set to true, neighbor is being helped. The RR bit is used by a
// (re)starting router to signal to its neighbors that a (re)start is in
// progress.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-status"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-status"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) RestartStatus() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartStatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-status"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartSupport (leaf): When set to true, Graceful-restart signaling is supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-support"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-support"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) RestartSupport() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-support"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartSupport (leaf): When set to true, Graceful-restart signaling is supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-support"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-support"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) RestartSupport() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSupportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-support"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartSuppress (leaf): When set to true, adjacency is not advertised. The SA bit is used by a
// starting router to  request that its neighbor suppress advertisement of
// the adjacency  to the starting router in the neighbor's LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-suppress"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-suppress"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) RestartSuppress() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-suppress"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartSuppress (leaf): When set to true, adjacency is not advertised. The SA bit is used by a
// starting router to  request that its neighbor suppress advertisement of
// the adjacency  to the starting router in the neighbor's LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/restart-suppress"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/restart-suppress"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) RestartSuppress() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_RestartSuppressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "restart-suppress"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): ISIS neighbor system-id.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) SystemId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): ISIS neighbor system-id.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) SystemId() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Topology (leaf-list): ISIS topology type support(ipv4-unicast, ipv6-unicast,
// ipv4-multicast, ipv6-multicast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/topology"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) Topology() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// Topology (leaf-list): ISIS topology type support(ipv4-unicast, ipv6-unicast,
// ipv4-multicast, ipv6-multicast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/topology"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) Topology() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_TopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpTimestamp (leaf): Time at which the adjacency transitioned into the up state, expressed
// as number of nanoseconds since the Unix epoch (Jan 1, 1970 00:00:00
// UTC).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-timestamp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/up-timestamp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPath) UpTimestamp() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-timestamp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpTimestamp (leaf): Time at which the adjacency transitioned into the up state, expressed
// as number of nanoseconds since the Unix epoch (Jan 1, 1970 00:00:00
// UTC).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-timestamp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/adjacencies/adjacency/state/up-timestamp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AdjacencyPathAny) UpTimestamp() *NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Adjacency_UpTimestampPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-timestamp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/metric"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) Metric() *NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/metric"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) Metric() *NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/state/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operatioanl state parameters relating to segment
// routing for an interface within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) SegmentRouting() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operatioanl state parameters relating to segment
// routing for an interface within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) SegmentRouting() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnySidId (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAnySidId(Neighbor string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnySidId (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAnySidId(Neighbor string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnyNeighbor (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAnyNeighbor(SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySidAnyNeighbor (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAnyNeighbor(SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySid (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySid(Neighbor string, SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySid (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySid(Neighbor string, SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": SidId},
			n,
		),
	}
}

// PrefixSidAny (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixSid (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) PrefixSid(Prefix string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// PrefixSid (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) PrefixSid(Prefix string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/group YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/group YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/protection-eligible YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/protection-eligible YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny struct {
	*ygot.NodePath
}

// AllocatedDynamicLocal (leaf): Where an Adjacency SID with a dynamic value is to be allocated by
// the system, this leaf reports to the value of the Adj-SID allocated
// to this interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/allocated-dynamic-local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) AllocatedDynamicLocal() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "allocated-dynamic-local"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllocatedDynamicLocal (leaf): Where an Adjacency SID with a dynamic value is to be allocated by
// the system, this leaf reports to the value of the Adj-SID allocated
// to this interface.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/allocated-dynamic-local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/allocated-dynamic-local"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) AllocatedDynamicLocal() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_AllocatedDynamicLocalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "allocated-dynamic-local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When set to true, the Adj-SID is indicated to be part of a group, and
// the G flag is set to 1 in the corresponding advertisement in the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/group"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) Group() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When set to true, the Adj-SID is indicated to be part of a group, and
// the G flag is set to 1 in the corresponding advertisement in the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/group"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) Group() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Neighbor (leaf): The remote system on the interface with which the Adj-SID is
// associated.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/neighbor"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) Neighbor() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor"},
			map[string]interface{}{},
			n,
		),
	}
}

// Neighbor (leaf): The remote system on the interface with which the Adj-SID is
// associated.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/neighbor"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) Neighbor() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionEligible (leaf): Whether the Adj-SID should be considered to be eligible for protection
// using IP or MPLS FRR during a network failure. When this value is set to
// true, the B-flag of the Adj-SID is set to 1, and the local system should
// provide FRR paths for the associated label forwarding entry. When it is
// set to false, the local system must not provide FRR for the specified
// LFIB entry.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protection-eligible"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/protection-eligible"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) ProtectionEligible() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protection-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionEligible (leaf): Whether the Adj-SID should be considered to be eligible for protection
// using IP or MPLS FRR during a network failure. When this value is set to
// true, the B-flag of the Adj-SID is set to 1, and the local system should
// provide FRR paths for the associated label forwarding entry. When it is
// set to false, the local system must not provide FRR for the specified
// LFIB entry.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protection-eligible"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/protection-eligible"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) ProtectionEligible() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protection-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The value of the Adj-SID to be advertised. Where a static SID
// identifier is specified, this should be advertised directly by the
// system. Where the DYNAMIC value is specified, this should be treated
// as a dynamically allocated value. When the MPLS data plane is in use
// the dynamic value should not fall within a reserved-label-block.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The value of the Adj-SID to be advertised. Where a static SID
// identifier is specified, this should be advertised directly by the
// system. Where the DYNAMIC value is specified, this should be treated
// as a dynamically allocated value. When the MPLS data plane is in use
// the dynamic value should not fall within a reserved-label-block.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/state/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/label-options YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/label-options YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny struct {
	*ygot.NodePath
}

// LabelOptions (leaf): The options associated with the IGP prefix SID for MPLS. The value
// of this leaf specifies the option that the SID should be advertised
// into the IGP with.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/label-options"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) LabelOptions() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelOptions (leaf): The options associated with the IGP prefix SID for MPLS. The value
// of this leaf specifies the option that the SID should be advertised
// into the IGP with.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/label-options"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) LabelOptions() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix for which the IGP prefix SID should be advertised. The
// value specified is a local prefix on the interface which is advertised
// into the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) Prefix() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix for which the IGP prefix SID should be advertised. The
// value specified is a local prefix on the interface which is advertised
// into the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) Prefix() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The Segment Identifier to be used when advertising the IGP Prefix SID.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The Segment Identifier to be used when advertising the IGP Prefix SID.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/state/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny struct {
	*ygot.NodePath
}

// Csnp (container): Operational state parameters relating to CSNPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Csnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Csnp (container): Operational state parameters relating to CSNPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Csnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esh (container): This container defines ESH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "esh"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Esh() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath{
		NodePath: ygot.NewNodePath(
			[]string{"esh"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esh (container): This container defines ESH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "esh"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Esh() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"esh"},
			map[string]interface{}{},
			n,
		),
	}
}

// Iih (container): This container defines IIH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "iih"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Iih() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath{
		NodePath: ygot.NewNodePath(
			[]string{"iih"},
			map[string]interface{}{},
			n,
		),
	}
}

// Iih (container): This container defines IIH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "iih"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Iih() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"iih"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ish (container): This container defines ISH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ish"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Ish() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath{
		NodePath: ygot.NewNodePath(
			[]string{"ish"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ish (container): This container defines ISH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ish"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Ish() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ish"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsp (container): This container defines LSP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Lsp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsp (container): This container defines LSP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Lsp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Psnp (container): This container defines PSNP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Psnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Psnp (container): This container defines PSNP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Psnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Unknown (container): Operational state parameters relating to IS-IS PDUs that are not
// otherwise classified - referred to as Unknown PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Unknown() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown"},
			map[string]interface{}{},
			n,
		),
	}
}

// Unknown (container): Operational state parameters relating to IS-IS PDUs that are not
// otherwise classified - referred to as Unknown PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Unknown() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Csnp_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Esh_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Iih_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Ish_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Lsp_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Psnp_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/dropped YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/processed YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/received YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/retransmit YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/sent YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPathAny struct {
	*ygot.NodePath
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dropped (leaf): The number of the specified type of PDU received on the interface
// that have been dropped.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dropped"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/dropped"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Dropped() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_DroppedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Processed (leaf): The number of the specified type of PDU received on the interface
// that have been processed by the local system.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/processed"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/processed"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Processed() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ProcessedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "processed"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (leaf): The number of the specified type of PDU received on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/received"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Received() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Retransmit (leaf): The number of the specified type of PDU that that have been
// retransmitted by the local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/retransmit"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Retransmit() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_RetransmitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (leaf): The number of the specified type of PDU that have been sent by the
// local system on the interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown/state/sent"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny) Sent() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_Unknown_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-multiplier YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-multiplier YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny struct {
	*ygot.NodePath
}

// HelloInterval (leaf): ISIS hello-interval value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath) HelloInterval() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): ISIS hello-interval value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny) HelloInterval() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMultiplier (leaf): ISIS hello-multiplier value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-multiplier"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-multiplier"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath) HelloMultiplier() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-multiplier"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMultiplier (leaf): ISIS hello-multiplier value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-multiplier"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/state/hello-multiplier"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny) HelloMultiplier() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-multiplier"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_MplsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Interface_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Interface_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/csnp-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/csnp-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/lsp-pacing-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/lsp-pacing-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny struct {
	*ygot.NodePath
}

// CsnpInterval (leaf): The interval, specified in seconds, at which periodic CSNP packets
// should be transmitted by the local IS.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/csnp-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/csnp-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPath) CsnpInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "csnp-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// CsnpInterval (leaf): The interval, specified in seconds, at which periodic CSNP packets
// should be transmitted by the local IS.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/csnp-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/csnp-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPathAny) CsnpInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "csnp-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspPacingInterval (leaf): The interval interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-pacing-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/lsp-pacing-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPath) LspPacingInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-pacing-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspPacingInterval (leaf): The interval interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-pacing-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/state/lsp-pacing-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPathAny) LspPacingInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-pacing-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_LevelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_LevelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_LevelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_LevelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LevelNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LevelNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_MetricStylePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/metric-style YANG schema element.
type NetworkInstance_Protocol_Isis_Level_MetricStylePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_MetricStylePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/state/metric-style YANG schema element.
type NetworkInstance_Protocol_Isis_Level_MetricStylePathAny struct {
	*ygot.NodePath
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication"
func (n *NetworkInstance_Protocol_Isis_LevelPath) Authentication() *NetworkInstance_Protocol_Isis_Level_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Authentication() *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/authentication-check"
func (n *NetworkInstance_Protocol_Isis_LevelPath) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/authentication-check"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/enabled"
func (n *NetworkInstance_Protocol_Isis_LevelPath) Enabled() *NetworkInstance_Protocol_Isis_Level_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/enabled"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number (level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/level-number"
func (n *NetworkInstance_Protocol_Isis_LevelPath) LevelNumber() *NetworkInstance_Protocol_Isis_Level_LevelNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_LevelNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number (level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/level-number"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) LevelNumber() *NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspAny (list): This list describes LSPs in the LSDB.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-state-database/lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp"
// LspId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_LevelPath) LspAny() *NetworkInstance_Protocol_Isis_Level_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-state-database", "lsp"},
			map[string]interface{}{"lsp-id": "*"},
			n,
		),
	}
}

// LspAny (list): This list describes LSPs in the LSDB.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-state-database/lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp"
// LspId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) LspAny() *NetworkInstance_Protocol_Isis_Level_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-state-database", "lsp"},
			map[string]interface{}{"lsp-id": "*"},
			n,
		),
	}
}

// Lsp (list): This list describes LSPs in the LSDB.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-state-database/lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp"
// LspId: string
func (n *NetworkInstance_Protocol_Isis_LevelPath) Lsp(LspId string) *NetworkInstance_Protocol_Isis_Level_LspPath {
	return &NetworkInstance_Protocol_Isis_Level_LspPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-state-database", "lsp"},
			map[string]interface{}{"lsp-id": LspId},
			n,
		),
	}
}

// Lsp (list): This list describes LSPs in the LSDB.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-state-database/lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp"
// LspId: string
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Lsp(LspId string) *NetworkInstance_Protocol_Isis_Level_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-state-database", "lsp"},
			map[string]interface{}{"lsp-id": LspId},
			n,
		),
	}
}

// MetricStyle (leaf): ISIS metric style types(narrow, wide).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-style"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/metric-style"
func (n *NetworkInstance_Protocol_Isis_LevelPath) MetricStyle() *NetworkInstance_Protocol_Isis_Level_MetricStylePath {
	return &NetworkInstance_Protocol_Isis_Level_MetricStylePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-style"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricStyle (leaf): ISIS metric style types(narrow, wide).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-style"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/state/metric-style"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) MetricStyle() *NetworkInstance_Protocol_Isis_Level_MetricStylePathAny {
	return &NetworkInstance_Protocol_Isis_Level_MetricStylePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-style"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutePreference (container): This container defines Administrative Distance (or preference)
// assigned to ISIS routes (level1 internal, level2 internal, level1
// external, level2 external).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference"
func (n *NetworkInstance_Protocol_Isis_LevelPath) RoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutePreference (container): This container defines Administrative Distance (or preference)
// assigned to ISIS routes (level1 internal, level2 internal, level1
// external, level2 external).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) RoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemLevelCounters (container): This container defines ISIS system level counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "system-level-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters"
func (n *NetworkInstance_Protocol_Isis_LevelPath) SystemLevelCounters() *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"system-level-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemLevelCounters (container): This container defines ISIS system level counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "system-level-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) SystemLevelCounters() *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"system-level-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): This container defines ISIS TE.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering"
func (n *NetworkInstance_Protocol_Isis_LevelPath) TrafficEngineering() *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): This container defines ISIS TE.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) TrafficEngineering() *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-password"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/auth-type"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableCsnp (leaf): When this leaf is set to true, authentication is disabled for CSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-csnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisableCsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableCsnp (leaf): When this leaf is set to true, authentication is disabled for CSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-csnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisableCsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableLsp (leaf): When this leaf is set to true, authentication is disabled for LSP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisableLsp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableLsp (leaf): When this leaf is set to true, authentication is disabled for LSP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisableLsp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePsnp (leaf): When this leaf is set to true, authentication is disabled for PSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-psnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisablePsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePsnp (leaf): When this leaf is set to true, authentication is disabled for PSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/disable-psnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisablePsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, authentication of IS-IS PSNP, CSNP and
// LSP packets is enabled using the specified authentication details in
// the sibling leaves.
//
// The sibling 'disable-<type>' leaves can be used to override the value
// of this leaf and disable authentication for a specific packet type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, authentication of IS-IS PSNP, CSNP and
// LSP packets is enabled using the specified authentication details in
// the sibling leaves.
//
// The sibling 'disable-<type>' leaves can be used to override the value
// of this leaf and disable authentication for a specific packet type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to the keychain that should be used for authenticating IS-IS
// packets - the keychain may contain either a simple password, or
// HMAC-MD5 key that is used for authenticating CSNP, PSNP and LSP packets
// within the specified IS-IS level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to the keychain that should be used for authenticating IS-IS
// packets - the keychain may contain either a simple password, or
// HMAC-MD5 key that is used for authenticating CSNP, PSNP and LSP packets
// within the specified IS-IS level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_LspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/checksum YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/checksum YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/id-length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/id-length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/is-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/is-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/lsp-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/lsp-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/remaining-lifetime YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/remaining-lifetime YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/sequence-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/sequence-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_VersionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_VersionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_VersionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_VersionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Version2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version2 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Version2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Version2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version2 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Version2PathAny struct {
	*ygot.NodePath
}

// Checksum (leaf): Checksum of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/checksum"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/checksum"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Checksum() *NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Checksum (leaf): Checksum of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/checksum"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/checksum"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Checksum() *NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_ChecksumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): LSP Type-Block flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): LSP Type-Block flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdLength (leaf): Length of the ID field of NSAP addresses and NETs used in
// this routing domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/id-length"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) IdLength() *NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdLength (leaf): Length of the ID field of NSAP addresses and NETs used in
// this routing domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/id-length"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) IdLength() *NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_IdLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsType (leaf): Type of neighboring system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/is-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/is-type"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) IsType() *NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "is-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsType (leaf): Type of neighboring system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/is-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/is-type"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) IsType() *NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_IsTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "is-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspId (leaf): LSP ID of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/lsp-id"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) LspId() *NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspId (leaf): LSP ID of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/lsp-id"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) LspId() *NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_LspIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Number of area addresses permitted for this ISs area. 0
// indicates the IS only supports three area addresses (by
// default). Any number inclusive of 1 and 254 indicates the
// number of areas allowed.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Number of area addresses permitted for this ISs area. 0
// indicates the IS only supports three area addresses (by
// default). Any number inclusive of 1 and 254 indicates the
// number of areas allowed.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_MaximumAreaAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// PduLength (leaf): Total length of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pdu-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-length"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) PduLength() *NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pdu-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PduLength (leaf): Total length of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pdu-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-length"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) PduLength() *NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_PduLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pdu-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PduType (leaf): Link State PDU type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pdu-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-type"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) PduType() *NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pdu-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// PduType (leaf): Link State PDU type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pdu-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/pdu-type"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) PduType() *NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_PduTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pdu-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemainingLifetime (leaf): Remaining lifetime in seconds before the LSP expiration.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remaining-lifetime"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/remaining-lifetime"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) RemainingLifetime() *NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remaining-lifetime"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemainingLifetime (leaf): Remaining lifetime in seconds before the LSP expiration.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remaining-lifetime"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/remaining-lifetime"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) RemainingLifetime() *NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_RemainingLifetimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remaining-lifetime"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceNumber (leaf): Sequence number of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/sequence-number"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) SequenceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceNumber (leaf): Sequence number of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/sequence-number"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) SequenceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_SequenceNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// TlvAny (list): List of TLV types in the LSDB for the specified LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tlvs/tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_TLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) TlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlvs", "tlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// TlvAny (list): List of TLV types in the LSDB for the specified LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tlvs/tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_TLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) TlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlvs", "tlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Tlv (list): List of TLV types in the LSDB for the specified LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tlvs/tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv"
// Type: oc.E_IsisLsdbTypes_ISIS_TLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Tlv(Type oc.E_IsisLsdbTypes_ISIS_TLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"tlvs", "tlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Tlv (list): List of TLV types in the LSDB for the specified LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tlvs/tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv"
// Type: oc.E_IsisLsdbTypes_ISIS_TLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Tlv(Type oc.E_IsisLsdbTypes_ISIS_TLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tlvs", "tlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedTlvAny (list): List of TLVs that are not defined within the model, or are
// not recognised by the system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-tlvs/undefined-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) UndefinedTlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-tlvs", "undefined-tlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedTlvAny (list): List of TLVs that are not defined within the model, or are
// not recognised by the system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-tlvs/undefined-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) UndefinedTlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-tlvs", "undefined-tlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedTlv (list): List of TLVs that are not defined within the model, or are
// not recognised by the system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-tlvs/undefined-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) UndefinedTlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-tlvs", "undefined-tlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedTlv (list): List of TLVs that are not defined within the model, or are
// not recognised by the system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-tlvs/undefined-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) UndefinedTlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-tlvs", "undefined-tlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Version (leaf): PDU version. This is set to 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Version() *NetworkInstance_Protocol_Isis_Level_Lsp_VersionPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_VersionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version (leaf): PDU version. This is set to 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Version() *NetworkInstance_Protocol_Isis_Level_Lsp_VersionPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_VersionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version2 (leaf): PDU version2. This is set to 1
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version2"
func (n *NetworkInstance_Protocol_Isis_Level_LspPath) Version2() *NetworkInstance_Protocol_Isis_Level_Lsp_Version2Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Version2Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version2 (leaf): PDU version2. This is set to 1
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/version2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/state/version2"
func (n *NetworkInstance_Protocol_Isis_Level_LspPathAny) Version2() *NetworkInstance_Protocol_Isis_Level_Lsp_Version2PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Version2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "version2"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// AreaAddress (container): This container defines TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "area-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) AreaAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"area-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// AreaAddress (container): This container defines TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "area-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) AreaAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"area-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines authentication information of the
// node.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Authentication() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines authentication information of the
// node.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Authentication() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// CapabilityAny (list): This list describes IS Router capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-capabilities/capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) CapabilityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-capabilities", "capability"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// CapabilityAny (list): This list describes IS Router capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-capabilities/capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) CapabilityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-capabilities", "capability"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Capability (list): This list describes IS Router capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-capabilities/capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Capability(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"router-capabilities", "capability"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Capability (list): This list describes IS Router capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-capabilities/capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Capability(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-capabilities", "capability"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// ExtendedIpv4Reachability (container): This container defines list of IPv4 extended reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-ipv4-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) ExtendedIpv4Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-ipv4-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedIpv4Reachability (container): This container defines list of IPv4 extended reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-ipv4-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) ExtendedIpv4Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-ipv4-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedIsReachability (container): This container defines list of ISIS extended reachability
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-is-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) ExtendedIsReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-is-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedIsReachability (container): This container defines list of ISIS extended reachability
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-is-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) ExtendedIsReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-is-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hostname (container): This container defines TLV 137.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hostname"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Hostname() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePath{
		NodePath: ygot.NewNodePath(
			[]string{"hostname"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hostname (container): This container defines TLV 137.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hostname"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Hostname() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hostname"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceIdAny (list): A list of instance IDs received within TLV 7 within an
// IS-IS LSP. In the case that more than one instance of
// TLV 7 is included in the LSP, the instance IDs specified
// within the instances are concatenated within this
// list.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instance-ids/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id"
// InstanceId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) InstanceIdAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instance-ids", "instance-id"},
			map[string]interface{}{"instance-id": "*"},
			n,
		),
	}
}

// InstanceIdAny (list): A list of instance IDs received within TLV 7 within an
// IS-IS LSP. In the case that more than one instance of
// TLV 7 is included in the LSP, the instance IDs specified
// within the instances are concatenated within this
// list.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instance-ids/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id"
// InstanceId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) InstanceIdAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instance-ids", "instance-id"},
			map[string]interface{}{"instance-id": "*"},
			n,
		),
	}
}

// InstanceId (list): A list of instance IDs received within TLV 7 within an
// IS-IS LSP. In the case that more than one instance of
// TLV 7 is included in the LSP, the instance IDs specified
// within the instances are concatenated within this
// list.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instance-ids/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id"
// InstanceId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) InstanceId(InstanceId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"instance-ids", "instance-id"},
			map[string]interface{}{"instance-id": InstanceId},
			n,
		),
	}
}

// InstanceId (list): A list of instance IDs received within TLV 7 within an
// IS-IS LSP. In the case that more than one instance of
// TLV 7 is included in the LSP, the instance IDs specified
// within the instances are concatenated within this
// list.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instance-ids/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id"
// InstanceId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) InstanceId(InstanceId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instance-ids", "instance-id"},
			map[string]interface{}{"instance-id": InstanceId},
			n,
		),
	}
}

// Ipv4ExternalReachability (container): This container defines list of IPv4 external reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-external-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4ExternalReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-external-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4ExternalReachability (container): This container defines list of IPv4 external reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-external-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4ExternalReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-external-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddresses (container): This container defines TLV 132.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4InterfaceAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddresses (container): This container defines TLV 132.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4InterfaceAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InternalReachability (container): This container defines list of IPv4 internal reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-internal-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4InternalReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-internal-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InternalReachability (container): This container defines list of IPv4 internal reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-internal-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4InternalReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-internal-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SrlgAny (list): Instance of the IPv4 SRLG TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-srlgs/ipv4-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4SrlgAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-srlgs", "ipv4-srlg"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Ipv4SrlgAny (list): Instance of the IPv4 SRLG TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-srlgs/ipv4-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4SrlgAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-srlgs", "ipv4-srlg"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Ipv4Srlg (list): Instance of the IPv4 SRLG TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-srlgs/ipv4-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4Srlg(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-srlgs", "ipv4-srlg"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Ipv4Srlg (list): Instance of the IPv4 SRLG TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-srlgs/ipv4-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4Srlg(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-srlgs", "ipv4-srlg"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Ipv4TeRouterId (container): This container defines TLV 134.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-te-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv4TeRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-te-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4TeRouterId (container): This container defines TLV 134.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-te-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv4TeRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-te-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddresses (container): This container defines TLV 232.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6InterfaceAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddresses (container): This container defines TLV 232.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6InterfaceAddresses() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Reachability (container): This container defines list of IPv6 reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Reachability (container): This container defines list of IPv6 reachability
// information.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SrlgAny (list): Instance of the IPv6 SRLG TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-srlgs/ipv6-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6SrlgAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-srlgs", "ipv6-srlg"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Ipv6SrlgAny (list): Instance of the IPv6 SRLG TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-srlgs/ipv6-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg"
// InstanceNumber (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6SrlgAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-srlgs", "ipv6-srlg"},
			map[string]interface{}{"instance-number": "*"},
			n,
		),
	}
}

// Ipv6Srlg (list): Instance of the IPv6 SRLG TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-srlgs/ipv6-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6Srlg(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-srlgs", "ipv6-srlg"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Ipv6Srlg (list): Instance of the IPv6 SRLG TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-srlgs/ipv6-srlg"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg"
// InstanceNumber: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6Srlg(InstanceNumber uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-srlgs", "ipv6-srlg"},
			map[string]interface{}{"instance-number": InstanceNumber},
			n,
		),
	}
}

// Ipv6TeRouterId (container): This container defines TLV 140.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-te-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Ipv6TeRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-te-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6TeRouterId (container): This container defines TLV 140.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-te-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Ipv6TeRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-te-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsAliasId (container): This container defines the IS-Alias TLV which allows
// extension-capable ISs to recognize the Originating System
// of an Extended LSP set. It identifies the Normal system-
// id of the Originating System.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "is-alias-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) IsAliasId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"is-alias-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsAliasId (container): This container defines the IS-Alias TLV which allows
// extension-capable ISs to recognize the Originating System
// of an Extended LSP set. It identifies the Normal system-
// id of the Originating System.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "is-alias-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) IsAliasId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"is-alias-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsReachability (container): This container describes list of ISIS neighbors and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "is-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) IsReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"is-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsReachability (container): This container describes list of ISIS neighbors and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "is-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) IsReachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"is-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsisNeighborAttribute (container): This container defines list of ISIS topology neighbors
// for extended ISIS LSP (multiple system IDs).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "isis-neighbor-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) IsisNeighborAttribute() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"isis-neighbor-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// IsisNeighborAttribute (container): This container defines list of ISIS topology neighbors
// for extended ISIS LSP (multiple system IDs).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "isis-neighbor-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) IsisNeighborAttribute() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"isis-neighbor-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBufferSize (container): This container defines TLV 14 - the LSP Buffer Size
// TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-buffer-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) LspBufferSize() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-buffer-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBufferSize (container): This container defines TLV 14 - the LSP Buffer Size
// TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-buffer-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) LspBufferSize() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-buffer-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIpv4Reachability (container): This container defines list of IPv4 reachability
// Information in multi-topology environment.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-ipv4-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MtIpv4Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"mt-ipv4-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIpv4Reachability (container): This container defines list of IPv4 reachability
// Information in multi-topology environment.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-ipv4-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MtIpv4Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mt-ipv4-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIpv6Reachability (container): This container defines list of IPv6 reachability
// information in multi - topology environment.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-ipv6-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MtIpv6Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"mt-ipv6-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIpv6Reachability (container): This container defines list of IPv6 reachability
// information in multi - topology environment.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-ipv6-reachability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MtIpv6Reachability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mt-ipv6-reachability"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIsisNeighborAttribute (container): This container defines list of ISIS multi-topology
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-isis-neighbor-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MtIsisNeighborAttribute() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"mt-isis-neighbor-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIsisNeighborAttribute (container): This container defines list of ISIS multi-topology
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-isis-neighbor-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MtIsisNeighborAttribute() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mt-isis-neighbor-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIsn (container): This container defines list of ISIS multi-topology
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-isn"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MtIsn() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath{
		NodePath: ygot.NewNodePath(
			[]string{"mt-isn"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtIsn (container): This container defines list of ISIS multi-topology
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mt-isn"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MtIsn() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mt-isn"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines the topology supported.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) MultiTopology() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines the topology supported.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) MultiTopology() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (container): This container defines TLV 129.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Nlpid() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath{
		NodePath: ygot.NewNodePath(
			[]string{"nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (container): This container defines TLV 129.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Nlpid() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// PurgeOi (container): This container defines ISIS purge TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "purge-oi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) PurgeOi() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath{
		NodePath: ygot.NewNodePath(
			[]string{"purge-oi"},
			map[string]interface{}{},
			n,
		),
	}
}

// PurgeOi (container): This container defines ISIS purge TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "purge-oi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) PurgeOi() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"purge-oi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV being described. The type of TLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV being described. The type of TLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_TlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Area adress(es) of the IS. Set of manual area
// addresses of this IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Area adress(es) of the IS. Set of manual area
// addresses of this IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/area-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AreaAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/crypto-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/crypto-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): Authentication key to be used.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/authentication-key"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath) AuthenticationKey() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): Authentication key to be used.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/authentication-key"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// CryptoType (leaf): Authentication type to be used.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/crypto-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/crypto-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPath) CryptoType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "crypto-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CryptoType (leaf): Authentication type to be used.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/crypto-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/authentication/state/crypto-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_AuthenticationPathAny) CryptoType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Authentication_CryptoTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "crypto-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/instance-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/instance-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Router capability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Router capability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceNumber (leaf): A unique instance number for the instance of the
// router capabilities TLV. The instance number should
// be autogenerated by the producer of the data and may
// be renumbered if the entire LSP contents are
// replaced in subsequent advertisements.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/instance-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) InstanceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceNumber (leaf): A unique instance number for the instance of the
// router capabilities TLV. The instance number should
// be autogenerated by the producer of the data and may
// be renumbered if the entire LSP contents are
// replaced in subsequent advertisements.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/instance-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) InstanceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_InstanceNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 router-id.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 router-id.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified
// TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified
// TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified
// TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified
// TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_CapabilityPathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// SegmentRoutingAlgorithms (container): This container defines SR algorithm sub-TLV 19.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath) SegmentRoutingAlgorithms() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingAlgorithms (container): This container defines SR algorithm sub-TLV 19.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny) SegmentRoutingAlgorithms() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingCapability (container): This container defines SR Capability sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath) SegmentRoutingCapability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingCapability (container): This container defines SR Capability sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny) SegmentRoutingCapability() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf-list): The Segment Routing algorithm that is
// described by the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPath) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf-list): The Segment Routing algorithm that is
// described by the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-algorithms/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithmsPathAny) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingAlgorithms_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Segment Routing Capability Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Segment Routing Capability Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrgbDescriptorAny (list): Descriptor entry within the SR capabilty
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgb-descriptors/srgb-descriptor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor"
// Range (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath) SrgbDescriptorAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgb-descriptors", "srgb-descriptor"},
			map[string]interface{}{"range": "*"},
			n,
		),
	}
}

// SrgbDescriptorAny (list): Descriptor entry within the SR capabilty
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgb-descriptors/srgb-descriptor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor"
// Range (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny) SrgbDescriptorAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgb-descriptors", "srgb-descriptor"},
			map[string]interface{}{"range": "*"},
			n,
		),
	}
}

// SrgbDescriptor (list): Descriptor entry within the SR capabilty
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgb-descriptors/srgb-descriptor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor"
// Range: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPath) SrgbDescriptor(Range uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath{
		NodePath: ygot.NewNodePath(
			[]string{"srgb-descriptors", "srgb-descriptor"},
			map[string]interface{}{"range": Range},
			n,
		),
	}
}

// SrgbDescriptor (list): Descriptor entry within the SR capabilty
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgb-descriptors/srgb-descriptor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor"
// Range: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapabilityPathAny) SrgbDescriptor(Range uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgb-descriptors", "srgb-descriptor"},
			map[string]interface{}{"range": Range},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/range YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/range YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePathAny struct {
	*ygot.NodePath
}

// Label (leaf): The first value of the SRGB when
// expressed as an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath) Label() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Label (leaf): The first value of the SRGB when
// expressed as an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/label"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/label"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny) Label() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_LabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Range (leaf): Number of SRGB elements. The range
// value MUST be greater than 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/range"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPath) Range() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range"},
			map[string]interface{}{},
			n,
		),
	}
}

// Range (leaf): Number of SRGB elements. The range
// value MUST be greater than 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/subtlvs/subtlv/segment-routing-capability/srgb-descriptors/srgb-descriptor/state/range"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptorPathAny) Range() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_Subtlv_SegmentRoutingCapability_SrgbDescriptor_RangePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/router-capabilities/capability/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Capability_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny struct {
	*ygot.NodePath
}

// PrefixAny (list): This list describes IPv4 extended prefixes and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixAny (list): This list describes IPv4 extended prefixes and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Prefix (list): This list describes IPv4 extended prefixes and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPath) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Prefix (list): This list describes IPv4 extended prefixes and
// attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4ReachabilityPathAny) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The Sub-TLV present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The Sub-TLV present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPath) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_PrefixPathAny) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UpDownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_FlagsPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny struct {
	*ygot.NodePath
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPath) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_TagPathAny) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny struct {
	*ygot.NodePath
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64Path) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64PathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny struct {
	*ygot.NodePath
}

// NeighborAny (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// Neighbor (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPath) Neighbor(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachabilityPathAny) Neighbor(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPathAny struct {
	*ygot.NodePath
}

// InstanceAny (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InstanceAny (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Instance (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Instance (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// SystemId (leaf): System-id of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_NeighborPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Unique identifier for the instance of the
// TLV for the IS neighbor. The instance
// ID is not required to be consistent across
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique identifier for the instance of the
// TLV for the IS neighbor. The instance
// ID is not required to be consistent across
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): Metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): Metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_InstancePathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPath) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_SubtlvPathAny) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny struct {
	*ygot.NodePath
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroupPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny struct {
	*ygot.NodePath
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPath) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny struct {
	*ygot.NodePath
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPath) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributesPathAny) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_LocalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_LocalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_LocalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_LocalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_RemotePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_RemotePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_RemotePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_RemotePathAny struct {
	*ygot.NodePath
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPath) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_LocalPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_LocalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPathAny) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_LocalPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_LocalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPath) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_RemotePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_RemotePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkIdPathAny) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_RemotePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkId_RemotePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLossPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny struct {
	*ygot.NodePath
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPath) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny struct {
	*ygot.NodePath
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/extended-is-reachability/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_ExtendedIsReachability_Neighbor_Instance_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Hostname_HostnamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname/state/hostname YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Hostname_HostnamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Hostname_HostnamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname/state/hostname YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Hostname_HostnamePathAny struct {
	*ygot.NodePath
}

// Hostname (leaf-list): Name of the node.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hostname"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname/state/hostname"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePath) Hostname() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Hostname_HostnamePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Hostname_HostnamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hostname"},
			map[string]interface{}{},
			n,
		),
	}
}

// Hostname (leaf-list): Name of the node.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hostname"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/hostname/state/hostname"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_HostnamePathAny) Hostname() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Hostname_HostnamePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Hostname_HostnamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hostname"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_InstanceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id/state/instance-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_InstanceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_InstanceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id/state/instance-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_InstanceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_TopologyIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id/state/topology-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_TopologyIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_TopologyIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id/state/topology-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_TopologyIdPathAny struct {
	*ygot.NodePath
}

// InstanceId (leaf): An Instance Identifier (IID) to uniquely identify
// an IS-IS instance. When the IID = 0, the list of
// supported ITIDs MUST NOT be present. An IID-TLV with
// IID = 0 MUST NOT appear in an SNP or LSP. When the
// TLV appears (with a non-zero IID) in an SNP or LSP,
// exactly one ITID. MUST be present indicating the
// topology with which the PDU is associated. If no
// ITIDs or multiple ITIDs are present or the IID is
// zero, then the PDU MUST be ignored.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id/state/instance-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPath) InstanceId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_InstanceIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_InstanceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceId (leaf): An Instance Identifier (IID) to uniquely identify
// an IS-IS instance. When the IID = 0, the list of
// supported ITIDs MUST NOT be present. An IID-TLV with
// IID = 0 MUST NOT appear in an SNP or LSP. When the
// TLV appears (with a non-zero IID) in an SNP or LSP,
// exactly one ITID. MUST be present indicating the
// topology with which the PDU is associated. If no
// ITIDs or multiple ITIDs are present or the IID is
// zero, then the PDU MUST be ignored.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id/state/instance-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny) InstanceId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_InstanceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_InstanceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// TopologyId (leaf-list): Instance-Specific Topology Identifiers (ITIDs).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/topology-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id/state/topology-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPath) TopologyId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_TopologyIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_TopologyIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "topology-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// TopologyId (leaf-list): Instance-Specific Topology Identifiers (ITIDs).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/topology-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/instance-ids/instance-id/state/topology-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceIdPathAny) TopologyId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_TopologyIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_InstanceId_TopologyIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "topology-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPathAny struct {
	*ygot.NodePath
}

// PrefixAny (list): IPv4 external prefixes and reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPath) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixAny (list): IPv4 external prefixes and reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPathAny) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Prefix (list): IPv4 external prefixes and reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPath) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Prefix (list): IPv4 external prefixes and reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachabilityPathAny) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_UpDownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_UpDownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_UpDownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_UpDownPathAny struct {
	*ygot.NodePath
}

// DefaultMetric (container): This container defines ISIS Default Metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath) DefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultMetric (container): This container defines ISIS Default Metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny) DefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DelayMetric (container): This container defines the ISIS delay metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "delay-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath) DelayMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"delay-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DelayMetric (container): This container defines the ISIS delay metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "delay-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny) DelayMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"delay-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorMetric (container): This container defines the ISIS error metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath) ErrorMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"error-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorMetric (container): This container defines the ISIS error metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny) ErrorMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"error-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExpenseMetric (container): This container defines the ISIS expense metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "expense-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath) ExpenseMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"expense-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExpenseMetric (container): This container defines the ISIS expense metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "expense-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny) ExpenseMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"expense-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPath) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_UpDownPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_UpDownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_PrefixPathAny) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_UpDownPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_UpDownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf): ISIS Default-Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): ISIS Default-Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS default metric value. This is a metric understood by
// every Intermediate system in the domain. Each circuit
// shall have a positive  integral value assigned for this
// metric. The value may be associated with any  objective
// function of the circuit, but by convention is intended to
// measure the capacity of the circuit for handling traffic,
// for example, its throughput in  bits-per-second. Higher
// values indicate a lower capacity.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS default metric value. This is a metric understood by
// every Intermediate system in the domain. Each circuit
// shall have a positive  integral value assigned for this
// metric. The value may be associated with any  objective
// function of the circuit, but by convention is intended to
// measure the capacity of the circuit for handling traffic,
// for example, its throughput in  bits-per-second. Higher
// values indicate a lower capacity.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DefaultMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): ISIS Delay Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): ISIS Delay Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS delay metric value. This metric measures the transit
// delay of the associated circuit. It is an optional metric,
// which if assigned to a circuit shall have a positive
// integral value. Higher values indicate a longer transit
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS delay metric value. This metric measures the transit
// delay of the associated circuit. It is an optional metric,
// which if assigned to a circuit shall have a positive
// integral value. Higher values indicate a longer transit
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/delay-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_DelayMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): IS-IS error metric flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): IS-IS error metric flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS error metric value. This metric measures the
// residual error probability of the associated circuit. It
// is an optional metric, which if assigned to a circuit
// shall have a non-zero value. Higher values indicate a
// larger probability of undetected errors on the circuit.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS error metric value. This metric measures the
// residual error probability of the associated circuit. It
// is an optional metric, which if assigned to a circuit
// shall have a non-zero value. Higher values indicate a
// larger probability of undetected errors on the circuit.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/error-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ErrorMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): ISIS Expense Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): ISIS Expense Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS expense metric value. This metric measures the
// monetary cost of utilising the associated circuit. It is
// an optional metric, which if assigned to a circuit shall
// have a positive integral value1). Higher values indicate a
// larger monetary expense.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS expense metric value. This metric measures the
// monetary cost of utilising the associated circuit. It is
// an optional metric, which if assigned to a circuit shall
// have a positive integral value1). Higher values indicate a
// larger monetary expense.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-external-reachability/prefixes/prefix/expense-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4ExternalReachability_Prefix_ExpenseMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddresses_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddresses_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddresses_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddresses_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): IPv4 address(es) of the interface corresponding to
// the SNPA over which this PDU is to be transmitted.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddresses_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddresses_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): IPv4 address(es) of the interface corresponding to
// the SNPA over which this PDU is to be transmitted.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-interface-addresses/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddressesPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddresses_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InterfaceAddresses_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPathAny struct {
	*ygot.NodePath
}

// PrefixAny (list): IPv4 prefixes and internal reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPath) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixAny (list): IPv4 prefixes and internal reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPathAny) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Prefix (list): IPv4 prefixes and internal reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPath) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Prefix (list): IPv4 prefixes and internal reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachabilityPathAny) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_UpDownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_UpDownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_UpDownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_UpDownPathAny struct {
	*ygot.NodePath
}

// DefaultMetric (container): This container defines ISIS Default Metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath) DefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultMetric (container): This container defines ISIS Default Metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny) DefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DelayMetric (container): This container defines the ISIS delay metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "delay-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath) DelayMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"delay-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DelayMetric (container): This container defines the ISIS delay metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "delay-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny) DelayMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"delay-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorMetric (container): This container defines the ISIS error metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath) ErrorMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"error-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorMetric (container): This container defines the ISIS error metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny) ErrorMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"error-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExpenseMetric (container): This container defines the ISIS expense metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "expense-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath) ExpenseMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"expense-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExpenseMetric (container): This container defines the ISIS expense metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "expense-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny) ExpenseMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"expense-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPath) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_UpDownPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_UpDownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_PrefixPathAny) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_UpDownPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_UpDownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf): ISIS Default-Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): ISIS Default-Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS default metric value. This is a metric understood by
// every Intermediate system in the domain. Each circuit
// shall have a positive  integral value assigned for this
// metric. The value may be associated with any  objective
// function of the circuit, but by convention is intended to
// measure the capacity of the circuit for handling traffic,
// for example, its throughput in  bits-per-second. Higher
// values indicate a lower capacity.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS default metric value. This is a metric understood by
// every Intermediate system in the domain. Each circuit
// shall have a positive  integral value assigned for this
// metric. The value may be associated with any  objective
// function of the circuit, but by convention is intended to
// measure the capacity of the circuit for handling traffic,
// for example, its throughput in  bits-per-second. Higher
// values indicate a lower capacity.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DefaultMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): ISIS Delay Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): ISIS Delay Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS delay metric value. This metric measures the transit
// delay of the associated circuit. It is an optional metric,
// which if assigned to a circuit shall have a positive
// integral value. Higher values indicate a longer transit
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS delay metric value. This metric measures the transit
// delay of the associated circuit. It is an optional metric,
// which if assigned to a circuit shall have a positive
// integral value. Higher values indicate a longer transit
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/delay-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_DelayMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): IS-IS error metric flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): IS-IS error metric flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS error metric value. This metric measures the
// residual error probability of the associated circuit. It
// is an optional metric, which if assigned to a circuit
// shall have a non-zero value. Higher values indicate a
// larger probability of undetected errors on the circuit.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS error metric value. This metric measures the
// residual error probability of the associated circuit. It
// is an optional metric, which if assigned to a circuit
// shall have a non-zero value. Higher values indicate a
// larger probability of undetected errors on the circuit.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/error-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ErrorMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): ISIS Expense Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): ISIS Expense Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS expense metric value. This metric measures the
// monetary cost of utilising the associated circuit. It is
// an optional metric, which if assigned to a circuit shall
// have a positive integral value1). Higher values indicate a
// larger monetary expense.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS expense metric value. This metric measures the
// monetary cost of utilising the associated circuit. It is
// an optional metric, which if assigned to a circuit shall
// have a positive integral value1). Higher values indicate a
// larger monetary expense.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-internal-reachability/prefixes/prefix/expense-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4InternalReachability_Prefix_ExpenseMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_InstanceNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/instance-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_InstanceNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_InstanceNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/instance-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_InstanceNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_PsnNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/psn-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_PsnNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_PsnNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/psn-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_PsnNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SrlgValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/srlg-value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SrlgValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SrlgValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/srlg-value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SrlgValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SystemIdPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): SRLG flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): SRLG flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceNumber (leaf): An arbitrary unsigned 32-bit integer used to
// disambiguate the instance of TLV 138. The instance
// identifier is synthesised by the system
// and may be renumbered for the same SRLG definition
// in subsequent advertised LSPs if (and only if) the
// entire list of SRLGs is replaced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/instance-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath) InstanceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_InstanceNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_InstanceNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceNumber (leaf): An arbitrary unsigned 32-bit integer used to
// disambiguate the instance of TLV 138. The instance
// identifier is synthesised by the system
// and may be renumbered for the same SRLG definition
// in subsequent advertised LSPs if (and only if) the
// entire list of SRLGs is replaced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/instance-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny) InstanceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_InstanceNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_InstanceNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (leaf): IPv4 interface address.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (leaf): IPv4 interface address.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (leaf): IPv4 neighbor address.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (leaf): IPv4 neighbor address.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_Ipv4NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// PsnNumber (leaf): Pseudonode number if the neighbor is on a LAN
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/psn-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/psn-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath) PsnNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_PsnNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_PsnNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "psn-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// PsnNumber (leaf): Pseudonode number if the neighbor is on a LAN
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/psn-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/psn-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny) PsnNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_PsnNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_PsnNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "psn-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrlgValue (leaf-list): List of SRLG values.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srlg-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/srlg-value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath) SrlgValue() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SrlgValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SrlgValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srlg-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrlgValue (leaf-list): List of SRLG values.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srlg-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/srlg-value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny) SrlgValue() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SrlgValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SrlgValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srlg-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): Neighbor system ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): Neighbor system ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-srlgs/ipv4-srlg/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4SrlgPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4Srlg_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// RouterId (leaf-list): IPv4 Traffic Engineering router ID of the node. For
// traffic engineering, it guarantees that we have a
// single stable address that can always be referenced in
// a path that will be reachable from multiple hops away,
// regardless of the state of the node's interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf-list): IPv4 Traffic Engineering router ID of the node. For
// traffic engineering, it guarantees that we have a
// single stable address that can always be referenced in
// a path that will be reachable from multiple hops away,
// regardless of the state of the node's interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv4-te-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv4TeRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddresses_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddresses_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddresses_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddresses_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): IPv6 interface addresses of the node.  MUST contain
// only the non-link-local IPv6 addresses assigned to the
// IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddresses_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddresses_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): IPv6 interface addresses of the node.  MUST contain
// only the non-link-local IPv6 addresses assigned to the
// IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-interface-addresses/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddressesPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddresses_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6InterfaceAddresses_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPathAny struct {
	*ygot.NodePath
}

// PrefixAny (list): This list defines IPv6 extended prefix attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPath) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixAny (list): This list defines IPv6 extended prefix attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPathAny) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// Prefix (list): This list defines IPv6 extended prefix attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPath) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// Prefix (list): This list defines IPv6 extended prefix attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6ReachabilityPathAny) Prefix(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UpDownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UpDownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UpDownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UpDownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_XBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/x-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_XBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_XBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/x-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_XBitPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv6 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv6 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The sub-tlv present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The sub-tlv present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UpDownPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UpDownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UpDownPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UpDownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// XBit (leaf): The external bit. Set when the prefix was distributed into
// IS-IS from another routing protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/x-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/x-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPath) XBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_XBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_XBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "x-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// XBit (leaf): The external bit. Set when the prefix was distributed into
// IS-IS from another routing protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/x-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/state/x-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_PrefixPathAny) XBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_XBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_XBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "x-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPath{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_TypePathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_FlagsPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Flags_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPath) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag_Tag32Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag_Tag32Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny struct {
	*ygot.NodePath
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPath) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag_Tag32Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag_Tag32Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_TagPathAny) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny struct {
	*ygot.NodePath
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64Path) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64PathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_InstanceNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/instance-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_InstanceNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_InstanceNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/instance-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_InstanceNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_PsnNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/psn-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_PsnNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_PsnNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/psn-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_PsnNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SrlgValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/srlg-value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SrlgValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SrlgValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/srlg-value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SrlgValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SystemIdPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): IPv6 SRLG flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): IPv6 SRLG flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceNumber (leaf): An arbitrary unsigned 32-bit integer used to
// disambiguate the instance of TLV 138. The instance
// identifier is synthesised by the system
// and may be renumbered for the same SRLG definition
// in subsequent advertised LSPs if (and only if) the
// entire list of SRLGs is replaced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/instance-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath) InstanceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_InstanceNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_InstanceNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstanceNumber (leaf): An arbitrary unsigned 32-bit integer used to
// disambiguate the instance of TLV 138. The instance
// identifier is synthesised by the system
// and may be renumbered for the same SRLG definition
// in subsequent advertised LSPs if (and only if) the
// entire list of SRLGs is replaced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/instance-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/instance-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny) InstanceNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_InstanceNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_InstanceNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "instance-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (leaf): IPv6 interface address or Link Local Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (leaf): IPv6 interface address or Link Local Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (leaf): IPv6 neighbor address or Link Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (leaf): IPv6 neighbor address or Link Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_Ipv6NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// PsnNumber (leaf): Pseudonode number if the neighbor is on a LAN
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/psn-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/psn-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath) PsnNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_PsnNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_PsnNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "psn-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// PsnNumber (leaf): Pseudonode number if the neighbor is on a LAN
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/psn-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/psn-number"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny) PsnNumber() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_PsnNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_PsnNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "psn-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrlgValue (leaf-list): SRLG values.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srlg-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/srlg-value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath) SrlgValue() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SrlgValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SrlgValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srlg-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrlgValue (leaf-list): SRLG values.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/srlg-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/srlg-value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny) SrlgValue() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SrlgValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SrlgValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "srlg-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): Neighbor system ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): Neighbor system ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-srlgs/ipv6-srlg/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6SrlgPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6Srlg_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// RouterId (leaf-list): IPv6 Traffic Engineering router ID of the node. For
// traffic engineering, it guarantees that we have a
// single stable address that can always be referenced in
// a path that will be reachable from multiple hops away,
// regardless of the state of the node's interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf-list): IPv6 Traffic Engineering router ID of the node. For
// traffic engineering, it guarantees that we have a
// single stable address that can always be referenced in
// a path that will be reachable from multiple hops away,
// regardless of the state of the node's interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/ipv6-te-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Ipv6TeRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasId_AliasIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id/state/alias-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasId_AliasIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasId_AliasIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id/state/alias-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasId_AliasIdPathAny struct {
	*ygot.NodePath
}

// AliasId (leaf): List of alias ID(s).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/alias-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id/state/alias-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPath) AliasId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasId_AliasIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasId_AliasIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "alias-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// AliasId (leaf): List of alias ID(s).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/alias-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-alias-id/state/alias-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasIdPathAny) AliasId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasId_AliasIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsAliasId_AliasIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "alias-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPathAny struct {
	*ygot.NodePath
}

// NeighborAny (list): IS reachability neighbor attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPath) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): IS reachability neighbor attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPathAny) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// Neighbor (list): IS reachability neighbor attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPath) Neighbor(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): IS reachability neighbor attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachabilityPathAny) Neighbor(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_SystemIdPathAny struct {
	*ygot.NodePath
}

// DefaultMetric (container): This container defines ISIS Default Metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPath) DefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultMetric (container): This container defines ISIS Default Metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny) DefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DelayMetric (container): This container defines the ISIS delay metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "delay-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPath) DelayMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"delay-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// DelayMetric (container): This container defines the ISIS delay metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "delay-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny) DelayMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"delay-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorMetric (container): This container defines the ISIS error metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPath) ErrorMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"error-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorMetric (container): This container defines the ISIS error metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny) ErrorMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"error-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExpenseMetric (container): This container defines the ISIS expense metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "expense-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPath) ExpenseMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"expense-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExpenseMetric (container): This container defines the ISIS expense metric.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "expense-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny) ExpenseMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"expense-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-ID of IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-ID of IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_NeighborPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf): ISIS Default-Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf): ISIS Default-Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS default metric value. This is a metric understood by
// every Intermediate system in the domain. Each circuit
// shall have a positive  integral value assigned for this
// metric. The value may be associated with any  objective
// function of the circuit, but by convention is intended to
// measure the capacity of the circuit for handling traffic,
// for example, its throughput in  bits-per-second. Higher
// values indicate a lower capacity.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS default metric value. This is a metric understood by
// every Intermediate system in the domain. Each circuit
// shall have a positive  integral value assigned for this
// metric. The value may be associated with any  objective
// function of the circuit, but by convention is intended to
// measure the capacity of the circuit for handling traffic,
// for example, its throughput in  bits-per-second. Higher
// values indicate a lower capacity.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DefaultMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): ISIS Delay Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): ISIS Delay Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS delay metric value. This metric measures the transit
// delay of the associated circuit. It is an optional metric,
// which if assigned to a circuit shall have a positive
// integral value. Higher values indicate a longer transit
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS delay metric value. This metric measures the transit
// delay of the associated circuit. It is an optional metric,
// which if assigned to a circuit shall have a positive
// integral value. Higher values indicate a longer transit
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/delay-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_DelayMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): IS-IS error metric flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): IS-IS error metric flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS error metric value. This metric measures the
// residual error probability of the associated circuit. It
// is an optional metric, which if assigned to a circuit
// shall have a non-zero value. Higher values indicate a
// larger probability of undetected errors on the circuit.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS error metric value. This metric measures the
// residual error probability of the associated circuit. It
// is an optional metric, which if assigned to a circuit
// shall have a non-zero value. Higher values indicate a
// larger probability of undetected errors on the circuit.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/error-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ErrorMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): ISIS Expense Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): ISIS Expense Metric Flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS expense metric value. This metric measures the
// monetary cost of utilising the associated circuit. It is
// an optional metric, which if assigned to a circuit shall
// have a positive integral value1). Higher values indicate a
// larger monetary expense.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS expense metric value. This metric measures the
// monetary cost of utilising the associated circuit. It is
// an optional metric, which if assigned to a circuit shall
// have a positive integral value1). Higher values indicate a
// larger monetary expense.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/is-reachability/neighbors/neighbor/expense-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsReachability_Neighbor_ExpenseMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePathAny struct {
	*ygot.NodePath
}

// NeighborAny (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePath) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor"
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePathAny) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": "*"},
			n,
		),
	}
}

// Neighbor (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePath) Neighbor(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This list describes ISIS extended neighbors and
// reachability attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor"
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttributePathAny) Neighbor(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"system-id": SystemId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_SystemIdPathAny struct {
	*ygot.NodePath
}

// InstanceAny (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPath) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InstanceAny (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Instance (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPath) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Instance (list): Instance of the TLV to the remote IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// SystemId (leaf): System-id of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_NeighborPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_MetricPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Unique identifier for the instance of the
// TLV for the IS neighbor. The instance
// ID is not required to be consistent across
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_IdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique identifier for the instance of the
// TLV for the IS neighbor. The instance
// ID is not required to be consistent across
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_IdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): Metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): Metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_InstancePathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPath) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny struct {
	*ygot.NodePath
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny struct {
	*ygot.NodePath
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny struct {
	*ygot.NodePath
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny struct {
	*ygot.NodePath
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny struct {
	*ygot.NodePath
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny struct {
	*ygot.NodePath
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_IsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size/state/size YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size/state/size YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePathAny struct {
	*ygot.NodePath
}

// Size (leaf): The maximum MTU that the advertising system can
// receive, expressed in bytes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size/state/size"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath) Size() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The maximum MTU that the advertising system can
// receive, expressed in bytes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size/state/size"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny) Size() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny struct {
	*ygot.NodePath
}

// PrefixAny (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId (wildcarded): uint16
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": "*", "prefix": "*"},
			n,
		),
	}
}

// PrefixAny (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId (wildcarded): uint16
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": "*", "prefix": "*"},
			n,
		),
	}
}

// PrefixAnyPrefix (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId: uint16
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath) PrefixAnyPrefix(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": MtId, "prefix": "*"},
			n,
		),
	}
}

// PrefixAnyPrefix (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId: uint16
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny) PrefixAnyPrefix(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": MtId, "prefix": "*"},
			n,
		),
	}
}

// PrefixAnyMtId (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId (wildcarded): uint16
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath) PrefixAnyMtId(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": "*", "prefix": Prefix},
			n,
		),
	}
}

// PrefixAnyMtId (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId (wildcarded): uint16
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny) PrefixAnyMtId(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": "*", "prefix": Prefix},
			n,
		),
	}
}

// Prefix (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId: uint16
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath) Prefix(MtId uint16, Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": MtId, "prefix": Prefix},
			n,
		),
	}
}

// Prefix (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId: uint16
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny) Prefix(MtId uint16, Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": MtId, "prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The Sub-TLV present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The Sub-TLV present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny struct {
	*ygot.NodePath
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny struct {
	*ygot.NodePath
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny struct {
	*ygot.NodePath
}

// PrefixAny (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*", "mt-id": "*"},
			n,
		),
	}
}

// PrefixAny (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*", "mt-id": "*"},
			n,
		),
	}
}

// PrefixAnyMtId (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix: string
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath) PrefixAnyMtId(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix, "mt-id": "*"},
			n,
		),
	}
}

// PrefixAnyMtId (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix: string
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny) PrefixAnyMtId(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix, "mt-id": "*"},
			n,
		),
	}
}

// PrefixAnyPrefix (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath) PrefixAnyPrefix(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*", "mt-id": MtId},
			n,
		),
	}
}

// PrefixAnyPrefix (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny) PrefixAnyPrefix(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*", "mt-id": MtId},
			n,
		),
	}
}

// Prefix (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix: string
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath) Prefix(Prefix string, MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix, "mt-id": MtId},
			n,
		),
	}
}

// Prefix (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix: string
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny) Prefix(Prefix string, MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix, "mt-id": MtId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/x-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/x-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv6 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv6 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The sub-tlv present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The sub-tlv present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// XBit (leaf): The external bit. Set when the prefix was distributed into
// IS-IS from another routing protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/x-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/x-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) XBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "x-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// XBit (leaf): The external bit. Set when the prefix was distributed into
// IS-IS from another routing protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/x-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/x-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) XBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "x-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny struct {
	*ygot.NodePath
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny struct {
	*ygot.NodePath
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny struct {
	*ygot.NodePath
}

// NeighborAny (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": "*"},
			n,
		),
	}
}

// NeighborAnySystemId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId: uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath) NeighborAnySystemId(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": "*"},
			n,
		),
	}
}

// NeighborAnySystemId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId: uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny) NeighborAnySystemId(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": "*"},
			n,
		),
	}
}

// NeighborAnyMtId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath) NeighborAnyMtId(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": SystemId},
			n,
		),
	}
}

// NeighborAnyMtId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny) NeighborAnyMtId(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId: uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath) Neighbor(MtId uint16, SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId: uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny) Neighbor(MtId uint16, SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": SystemId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPathAny struct {
	*ygot.NodePath
}

// InstanceAny (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InstanceAny (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Instance (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Instance (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// MtId (leaf): Identifier of a topology being announced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Identifier of a topology being announced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Unique identifier for the TLV instance for the
// neighbor. The ID is not required to be consistent
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique identifier for the TLV instance for the
// neighbor. The ID is not required to be consistent
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny struct {
	*ygot.NodePath
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny struct {
	*ygot.NodePath
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny struct {
	*ygot.NodePath
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny struct {
	*ygot.NodePath
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny struct {
	*ygot.NodePath
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny struct {
	*ygot.NodePath
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny struct {
	*ygot.NodePath
}

// NeighborAny (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": "*"},
			n,
		),
	}
}

// NeighborAnySystemId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId: uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath) NeighborAnySystemId(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": "*"},
			n,
		),
	}
}

// NeighborAnySystemId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId: uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny) NeighborAnySystemId(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": "*"},
			n,
		),
	}
}

// NeighborAnyMtId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath) NeighborAnyMtId(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": SystemId},
			n,
		),
	}
}

// NeighborAnyMtId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny) NeighborAnyMtId(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId: uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath) Neighbor(MtId uint16, SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId: uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny) Neighbor(MtId uint16, SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": SystemId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPathAny struct {
	*ygot.NodePath
}

// InstanceAny (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InstanceAny (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Instance (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Instance (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// MtId (leaf): Identifier of a topology being announced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Identifier of a topology being announced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Unique identifier for the TLV instance for the
// neighbor. The ID is not required to be consistent
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique identifier for the TLV instance for the
// neighbor. The ID is not required to be consistent
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny struct {
	*ygot.NodePath
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny struct {
	*ygot.NodePath
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny struct {
	*ygot.NodePath
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePathAny struct {
	*ygot.NodePath
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny struct {
	*ygot.NodePath
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny struct {
	*ygot.NodePath
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny struct {
	*ygot.NodePath
}

// TopologyAny (list): This list describes a topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "topologies/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology"
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath) TopologyAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"topologies", "topology"},
			map[string]interface{}{"mt-id": "*"},
			n,
		),
	}
}

// TopologyAny (list): This list describes a topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "topologies/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology"
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny) TopologyAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"topologies", "topology"},
			map[string]interface{}{"mt-id": "*"},
			n,
		),
	}
}

// Topology (list): This list describes a topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "topologies/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology"
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath) Topology(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"topologies", "topology"},
			map[string]interface{}{"mt-id": MtId},
			n,
		),
	}
}

// Topology (list): This list describes a topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "topologies/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology"
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny) Topology(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"topologies", "topology"},
			map[string]interface{}{"mt-id": MtId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPathAny struct {
	*ygot.NodePath
}

// Attributes (leaf): Attributes of the LSP for the associated
// topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath) Attributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Attributes (leaf): Attributes of the LSP for the associated
// topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny) Attributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid/state/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid/state/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPathAny struct {
	*ygot.NodePath
}

// Nlpid (leaf-list): Protocol supported. IPv4 is defined as (0xcc) and IPv6 -
// (0x8e)
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid/state/nlpid"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath) Nlpid() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (leaf-list): Protocol supported. IPv4 is defined as (0xcc) and IPv6 -
// (0x8e)
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid/state/nlpid"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny) Nlpid() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/received-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/received-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/source-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/source-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/system-id-count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/system-id-count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPathAny struct {
	*ygot.NodePath
}

// ReceivedSystemId (leaf): System ID of the Intermediate System from which the
// purge was received.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/received-system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath) ReceivedSystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceivedSystemId (leaf): System ID of the Intermediate System from which the
// purge was received.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/received-system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny) ReceivedSystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceSystemId (leaf): System ID of the Intermediate System that inserted
// this TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/source-system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath) SourceSystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceSystemId (leaf): System ID of the Intermediate System that inserted
// this TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/source-system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny) SourceSystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemIdCount (leaf): Number of system IDs carried in this TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/system-id-count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath) SystemIdCount() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemIdCount (leaf): Number of system IDs carried in this TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/system-id-count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny) SystemIdCount() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_RoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/external-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/external-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/internal-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/internal-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny struct {
	*ygot.NodePath
}

// ExternalRoutePreference (leaf): Administrative Distance (preference) for external ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/external-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath) ExternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRoutePreference (leaf): Administrative Distance (preference) for external ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/external-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny) ExternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRoutePreference (leaf): Administrative Distance (preference) for internal ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/internal-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/internal-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath) InternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "internal-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRoutePreference (leaf): Administrative Distance (preference) for internal ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/internal-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/internal-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny) InternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "internal-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-type-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-type-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/corrupted-lsps YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/corrupted-lsps YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/database-overloads YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/database-overloads YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/exceed-max-seq-nums YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/exceed-max-seq-nums YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/id-len-mismatch YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/id-len-mismatch YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/lsp-errors YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/lsp-errors YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/manual-address-drop-from-areas YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/manual-address-drop-from-areas YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/max-area-address-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/max-area-address-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/own-lsp-purges YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/own-lsp-purges YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/part-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/part-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/seq-num-skips YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/seq-num-skips YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/spf-runs YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/spf-runs YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPathAny struct {
	*ygot.NodePath
}

// AuthFails (leaf): The number of authentication key failures.
// MIB Entry: SysAuthFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-fails"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) AuthFails() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthFails (leaf): The number of authentication key failures.
// MIB Entry: SysAuthFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-fails"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) AuthFails() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthTypeFails (leaf): The number of authentication type mismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-type-fails"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) AuthTypeFails() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthTypeFails (leaf): The number of authentication type mismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-type-fails"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) AuthTypeFails() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// CorruptedLsps (leaf): Number of corrupted in-memory LSPs detected. LSPs received from the
// wire with a bad checksum are silently dropped and not counted. LSPs
// received from the wire with parse errors are counted by lsp-errors. MIB
// Entry: SysCorrLSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/corrupted-lsps"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/corrupted-lsps"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) CorruptedLsps() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "corrupted-lsps"},
			map[string]interface{}{},
			n,
		),
	}
}

// CorruptedLsps (leaf): Number of corrupted in-memory LSPs detected. LSPs received from the
// wire with a bad checksum are silently dropped and not counted. LSPs
// received from the wire with parse errors are counted by lsp-errors. MIB
// Entry: SysCorrLSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/corrupted-lsps"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/corrupted-lsps"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) CorruptedLsps() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "corrupted-lsps"},
			map[string]interface{}{},
			n,
		),
	}
}

// DatabaseOverloads (leaf): Number of times the database has become
// overloaded.
// MIB entry: SysLSPL(Level)DbaseOloads.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/database-overloads"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/database-overloads"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) DatabaseOverloads() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "database-overloads"},
			map[string]interface{}{},
			n,
		),
	}
}

// DatabaseOverloads (leaf): Number of times the database has become
// overloaded.
// MIB entry: SysLSPL(Level)DbaseOloads.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/database-overloads"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/database-overloads"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) DatabaseOverloads() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "database-overloads"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedMaxSeqNums (leaf): The number of times the system has attempted to exceed the maximum
// sequence number. MIB Entry: SysAttmptToExMaxSeqNums.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exceed-max-seq-nums"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/exceed-max-seq-nums"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) ExceedMaxSeqNums() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceed-max-seq-nums"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedMaxSeqNums (leaf): The number of times the system has attempted to exceed the maximum
// sequence number. MIB Entry: SysAttmptToExMaxSeqNums.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exceed-max-seq-nums"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/exceed-max-seq-nums"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) ExceedMaxSeqNums() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceed-max-seq-nums"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdLenMismatch (leaf): Number of times a PDU is received with a different value for ID field
// length from that of the receiving system. MIB Entry:
// isisSysIDFieldLenMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-len-mismatch"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/id-len-mismatch"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) IdLenMismatch() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-len-mismatch"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdLenMismatch (leaf): Number of times a PDU is received with a different value for ID field
// length from that of the receiving system. MIB Entry:
// isisSysIDFieldLenMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-len-mismatch"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/id-len-mismatch"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) IdLenMismatch() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-len-mismatch"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspErrors (leaf): The number of received LSPs with errors.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-errors"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/lsp-errors"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) LspErrors() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspErrors (leaf): The number of received LSPs with errors.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-errors"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/lsp-errors"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) LspErrors() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ManualAddressDropFromAreas (leaf): Number of times a manual address has been dropped from area.
// MIB Entry: SysManAddrDropFromAreas.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/manual-address-drop-from-areas"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/manual-address-drop-from-areas"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) ManualAddressDropFromAreas() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "manual-address-drop-from-areas"},
			map[string]interface{}{},
			n,
		),
	}
}

// ManualAddressDropFromAreas (leaf): Number of times a manual address has been dropped from area.
// MIB Entry: SysManAddrDropFromAreas.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/manual-address-drop-from-areas"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/manual-address-drop-from-areas"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) ManualAddressDropFromAreas() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "manual-address-drop-from-areas"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxAreaAddressMismatches (leaf): Number of times a PDU is received with a different value for
// MaximumAreaAddresses from that of the receiving system. MIB Entry:
// SysMaxAreaAddrMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-area-address-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/max-area-address-mismatches"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) MaxAreaAddressMismatches() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-area-address-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxAreaAddressMismatches (leaf): Number of times a PDU is received with a different value for
// MaximumAreaAddresses from that of the receiving system. MIB Entry:
// SysMaxAreaAddrMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-area-address-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/max-area-address-mismatches"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) MaxAreaAddressMismatches() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-area-address-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// OwnLspPurges (leaf): Number of times a zero-aged copy of the system's
// own LSP is received from some other node.
// MIB Entry: isisSysOwnLSPPurges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/own-lsp-purges"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/own-lsp-purges"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) OwnLspPurges() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "own-lsp-purges"},
			map[string]interface{}{},
			n,
		),
	}
}

// OwnLspPurges (leaf): Number of times a zero-aged copy of the system's
// own LSP is received from some other node.
// MIB Entry: isisSysOwnLSPPurges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/own-lsp-purges"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/own-lsp-purges"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) OwnLspPurges() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "own-lsp-purges"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartChanges (leaf): The number of partition changes detected. MIB Entry: SysPartChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/part-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/part-changes"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) PartChanges() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "part-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartChanges (leaf): The number of partition changes detected. MIB Entry: SysPartChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/part-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/part-changes"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) PartChanges() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "part-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// SeqNumSkips (leaf): Number of times a sequence number skip has occurred. MIB Entry:
// SysSeqNumSkips.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/seq-num-skips"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/seq-num-skips"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) SeqNumSkips() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "seq-num-skips"},
			map[string]interface{}{},
			n,
		),
	}
}

// SeqNumSkips (leaf): Number of times a sequence number skip has occurred. MIB Entry:
// SysSeqNumSkips.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/seq-num-skips"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/seq-num-skips"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) SeqNumSkips() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "seq-num-skips"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfRuns (leaf): The number of times SPF was ran at this level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-runs"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/spf-runs"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) SpfRuns() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-runs"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfRuns (leaf): The number of times SPF was ran at this level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-runs"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/spf-runs"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) SpfRuns() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-runs"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv4-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv4-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv6-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv6-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Enabled() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4RouterId (leaf): IPv4 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv4-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv4-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Ipv4RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv4-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4RouterId (leaf): IPv4 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv4-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv4-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Ipv4RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv4-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6RouterId (leaf): IPv6 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv6-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Ipv6RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6RouterId (leaf): IPv6 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv6-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Ipv6RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2 YANG schema element.
type NetworkInstance_Protocol_Ospfv2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2 YANG schema element.
type NetworkInstance_Protocol_Ospfv2PathAny struct {
	*ygot.NodePath
}

// AreaAny (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2Path) AreaAny() *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": "*"},
			n,
		),
	}
}

// AreaAny (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2PathAny) AreaAny() *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": "*"},
			n,
		),
	}
}

// Area (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2Path) Area(Identifier oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_AreaPath {
	return &NetworkInstance_Protocol_Ospfv2_AreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": Identifier},
			n,
		),
	}
}

// Area (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2PathAny) Area(Identifier oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": Identifier},
			n,
		),
	}
}

// Global (container): Configuration and operational state parameters for settings
// that are global to the OSPFv2 instance
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global"
func (n *NetworkInstance_Protocol_Ospfv2Path) Global() *NetworkInstance_Protocol_Ospfv2_GlobalPath {
	return &NetworkInstance_Protocol_Ospfv2_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Configuration and operational state parameters for settings
// that are global to the OSPFv2 instance
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global"
func (n *NetworkInstance_Protocol_Ospfv2PathAny) Global() *NetworkInstance_Protocol_Ospfv2_GlobalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_AreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_AreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_AreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_AreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny struct {
	*ygot.NodePath
}

// Identifier (leaf): An identifier for the OSPFv2 area - described as either a
// 32-bit unsigned integer, or a dotted-quad
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): An identifier for the OSPFv2 area - described as either a
// 32-bit unsigned integer, or a dotted-quad
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) InterfaceAny() *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) InterfaceAny() *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Interface (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Interface(Id string) *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Interface (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Interface(Id string) *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Lsdb (container): The link-state database for the OSPFv2 area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsdb"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Lsdb() *NetworkInstance_Protocol_Ospfv2_Area_LsdbPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_LsdbPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsdb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsdb (container): The link-state database for the OSPFv2 area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsdb"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Lsdb() *NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsdb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for OSPFv2
// extensions relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for OSPFv2
// extensions relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// VirtualLinkAny (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) VirtualLinkAny() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": "*"},
			n,
		),
	}
}

// VirtualLinkAny (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) VirtualLinkAny() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": "*"},
			n,
		),
	}
}

// VirtualLink (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) VirtualLink(RemoteRouterId string) *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": RemoteRouterId},
			n,
		),
	}
}

// VirtualLink (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) VirtualLink(RemoteRouterId string) *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": RemoteRouterId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/authentication-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/authentication-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/hide-network YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/hide-network YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/multi-area-adjacency-primary YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/multi-area-adjacency-primary YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/network-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/network-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/passive YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/passive YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny struct {
	*ygot.NodePath
}

// AuthenticationType (leaf): The type of authentication that should be used on this
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/authentication-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) AuthenticationType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationType (leaf): The type of authentication that should be used on this
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/authentication-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) AuthenticationType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideNetwork (leaf): When this leaf is set to true, the network connected to
// the interface should be hidden from OSPFv2 advertisements
// per the procedure described in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-network"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/hide-network"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) HideNetwork() *NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-network"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideNetwork (leaf): When this leaf is set to true, the network connected to
// the interface should be hidden from OSPFv2 advertisements
// per the procedure described in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-network"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/hide-network"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) HideNetwork() *NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-network"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): An operator-specified string utilised to uniquely
// reference this interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Id() *NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): An operator-specified string utilised to uniquely
// reference this interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Id() *NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaFilter (container): OSPFv2 parameters relating to filtering of LSAs to
// neighbors the specified interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) LsaFilter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaFilter (container): OSPFv2 parameters relating to filtering of LSAs to
// neighbors the specified interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) LsaFilter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric for the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric for the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for
// OSPFv2 extensions related to MPLS on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for
// OSPFv2 extensions related to MPLS on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiAreaAdjacencyPrimary (leaf): When the specified interface is included in more than one
// area's configuration, this leaf marks whether the area should
// be considered the primary (when the value is true). In the
// case that this value is false, the area is considered a
// secondary area.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-area-adjacency-primary"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/multi-area-adjacency-primary"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) MultiAreaAdjacencyPrimary() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-area-adjacency-primary"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiAreaAdjacencyPrimary (leaf): When the specified interface is included in more than one
// area's configuration, this leaf marks whether the area should
// be considered the primary (when the value is true). In the
// case that this value is false, the area is considered a
// secondary area.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-area-adjacency-primary"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/multi-area-adjacency-primary"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) MultiAreaAdjacencyPrimary() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-area-adjacency-primary"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) NeighborAny() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) NeighborAny() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": "*"},
			n,
		),
	}
}

// Neighbor (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Neighbor(RouterId string) *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": RouterId},
			n,
		),
	}
}

// Neighbor (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Neighbor(RouterId string) *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": RouterId},
			n,
		),
	}
}

// NetworkType (leaf): The type of network that OSPFv2 should use for the specified
// interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/network-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) NetworkType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkType (leaf): The type of network that OSPFv2 should use for the specified
// interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/network-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) NetworkType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When this leaf is set to true, the interface should be
// advertised within the OSPF area but OSPF adjacencies should
// not be established over the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/passive"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Passive() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When this leaf is set to true, the interface should be
// advertised within the OSPF area but OSPF adjacencies should
// not be established over the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/passive"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Passive() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The local system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The local system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers relating to OSPFv2 on the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Timers() *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers relating to OSPFv2 on the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Timers() *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/state/all YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/state/all YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny struct {
	*ygot.NodePath
}

// All (leaf): When this leaf is set to true, all LSAs should be
// filtered to the neighbours with whom adjacencies are
// formed on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/all"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/state/all"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath) All() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "all"},
			map[string]interface{}{},
			n,
		),
	}
}

// All (leaf): When this leaf is set to true, all LSAs should be
// filtered to the neighbours with whom adjacencies are
// formed on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/all"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/state/all"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny) All() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "all"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/state/traffic-engineering-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/state/traffic-engineering-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringMetric (leaf): A link metric that should only be considered for traffic
// engineering purposes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/state/traffic-engineering-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath) TrafficEngineeringMetric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringMetric (leaf): A link metric that should only be considered for traffic
// engineering purposes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/state/traffic-engineering-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny) TrafficEngineeringMetric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/synchronized YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/synchronized YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Synchronized (leaf): When the value of this leaf is set to true, the
// LDP neighbors reachable via this interface are considered
// to be synchronized, and hence the link is considered
// usable by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/synchronized"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/synchronized"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) Synchronized() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "synchronized"},
			map[string]interface{}{},
			n,
		),
	}
}

// Synchronized (leaf): When the value of this leaf is set to true, the
// LDP neighbors reachable via this interface are considered
// to be synchronized, and hence the link is considered
// usable by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/synchronized"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/synchronized"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) Synchronized() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "synchronized"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/retransmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/retransmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPathAny struct {
	*ygot.NodePath
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric that should be considered to the remote neighbor
// over this interface. This configuration is only applicable
// for multiple-access networks
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric that should be considered to the remote neighbor
// over this interface. This configuration is only applicable
// for multiple-access networks
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/retransmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) RetransmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/retransmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) RetransmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The router ID of the remote system.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The router ID of the remote system.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/dead-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/dead-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/retransmission-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/retransmission-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny struct {
	*ygot.NodePath
}

// DeadInterval (leaf): The number of seconds that the local system should let
// elapse before declaring a silent router down
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/dead-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) DeadInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadInterval (leaf): The number of seconds that the local system should let
// elapse before declaring a silent router down
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/dead-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) DeadInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): The number of seconds the local system waits between the
// transmission of subsequent Hello packets
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/hello-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) HelloInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): The number of seconds the local system waits between the
// transmission of subsequent Hello packets
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/hello-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) HelloInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionInterval (leaf): The number of seconds that the local system waits before
// retransmitting an unacknowledged LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/retransmission-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) RetransmissionInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionInterval (leaf): The number of seconds that the local system waits before
// retransmitting an unacknowledged LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/retransmission-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) RetransmissionInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_LsdbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_LsdbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPathAny struct {
	*ygot.NodePath
}

// Identifier (leaf): An identifier for the area, expressed as a dotted quad or
// an unsigned 32-bit integer
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPath) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): An identifier for the area, expressed as a dotted quad or
// an unsigned 32-bit integer
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaTypeAny (list): List of LSA types in the LSDB for the specified
// area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-types/lsa-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type"
// Type (wildcarded): oc.E_OspfTypes_OSPF_LSA_TYPE
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPath) LsaTypeAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-types", "lsa-type"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// LsaTypeAny (list): List of LSA types in the LSDB for the specified
// area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-types/lsa-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type"
// Type (wildcarded): oc.E_OspfTypes_OSPF_LSA_TYPE
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny) LsaTypeAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-types", "lsa-type"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// LsaType (list): List of LSA types in the LSDB for the specified
// area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-types/lsa-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type"
// Type: oc.E_OspfTypes_OSPF_LSA_TYPE
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPath) LsaType(Type oc.E_OspfTypes_OSPF_LSA_TYPE) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-types", "lsa-type"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// LsaType (list): List of LSA types in the LSDB for the specified
// area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-types/lsa-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type"
// Type: oc.E_OspfTypes_OSPF_LSA_TYPE
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny) LsaType(Type oc.E_OspfTypes_OSPF_LSA_TYPE) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-types", "lsa-type"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePathAny struct {
	*ygot.NodePath
}

// LsaAny (list): List of the LSAs of a specified type in the
// LSDB for the specified area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsas/lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa"
// LinkStateId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath) LsaAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsas", "lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
}

// LsaAny (list): List of the LSAs of a specified type in the
// LSDB for the specified area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsas/lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa"
// LinkStateId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny) LsaAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsas", "lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
}

// Lsa (list): List of the LSAs of a specified type in the
// LSDB for the specified area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsas/lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa"
// LinkStateId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath) Lsa(LinkStateId string) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsas", "lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
}

// Lsa (list): List of the LSAs of a specified type in the
// LSDB for the specified area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsas/lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa"
// LinkStateId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny) Lsa(LinkStateId string) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsas", "lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
}

// Type (leaf): The type of LSA being described. The type of the LSA is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of LSA being described. The type of the LSA is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/advertising-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/advertising-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/age YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/age YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/checksum YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/checksum YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/link-state-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/link-state-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/sequence-number YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/sequence-number YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPathAny struct {
	*ygot.NodePath
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertising-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/advertising-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) AdvertisingRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertising-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/advertising-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) AdvertisingRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// Age (leaf): The time since the LSA's generation in seconds
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/age"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/age"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) Age() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
	}
}

// Age (leaf): The time since the LSA's generation in seconds
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/age"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/age"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) Age() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsExternalLsa (container): Contents of the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-external-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) AsExternalLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"as-external-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsExternalLsa (container): Contents of the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-external-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) AsExternalLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"as-external-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// Checksum (leaf): The checksum of the complete contents of the LSA excluding
// the age field.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/checksum"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/checksum"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) Checksum() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Checksum (leaf): The checksum of the complete contents of the LSA excluding
// the age field.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/checksum"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/checksum"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) Checksum() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkStateId (leaf): The Link State ID for the specified LSA type. The exact
// defined value of the Link State ID is dependent on the LSA
// type.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-state-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/link-state-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) LinkStateId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-state-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkStateId (leaf): The Link State ID for the specified LSA type. The exact
// defined value of the Link State ID is dependent on the LSA
// type.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-state-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/link-state-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) LinkStateId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-state-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkLsa (container): Contents of the network LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "network-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) NetworkLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"network-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkLsa (container): Contents of the network LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "network-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) NetworkLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"network-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NssaExternalLsa (container): Contents of the NSSA External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nssa-external-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) NssaExternalLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"nssa-external-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NssaExternalLsa (container): Contents of the NSSA External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nssa-external-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) NssaExternalLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"nssa-external-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// OpaqueLsa (container): Contents of the opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "opaque-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) OpaqueLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"opaque-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// OpaqueLsa (container): Contents of the opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "opaque-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) OpaqueLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"opaque-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterLsa (container): Contents of the router LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) RouterLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"router-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterLsa (container): Contents of the router LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) RouterLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceNumber (leaf): A signed 32-bit integer used to detect old and duplicate
// LSAs. The greater the sequence number the more recent the
// LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/sequence-number"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) SequenceNumber() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceNumber (leaf): A signed 32-bit integer used to detect old and duplicate
// LSAs. The greater the sequence number the more recent the
// LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/sequence-number"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) SequenceNumber() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryLsa (container): Contents of the summary LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "summary-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) SummaryLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"summary-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryLsa (container): Contents of the summary LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "summary-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) SummaryLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"summary-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePathAny struct {
	*ygot.NodePath
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mask (leaf): The subnet mask for the advertised destination
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) Mask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mask (leaf): The subnet mask for the advertised destination
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) Mask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost to reach the external network specified. The exact
// interpretation of this cost is dependent on the type of
// metric specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost to reach the external network specified. The exact
// interpretation of this cost is dependent on the type of
// metric specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric included within the AS External LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) MetricType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric included within the AS External LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) MetricType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/attached-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/attached-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPathAny struct {
	*ygot.NodePath
}

// AttachedRouter (leaf-list): A list of the router ID of the routers that are attached to
// the network described by the Network LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attached-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/attached-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath) AttachedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attached-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttachedRouter (leaf-list): A list of the router ID of the routers that are attached to
// the network described by the Network LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attached-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/attached-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny) AttachedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attached-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkMask (leaf): The mask of the network described by the Network LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkMask (leaf): The mask of the network described by the Network LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/propagate YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/propagate YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePathAny struct {
	*ygot.NodePath
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mask (leaf): The subnet mask for the advertised destination
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) Mask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mask (leaf): The subnet mask for the advertised destination
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) Mask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost to reach the external network specified. The exact
// interpretation of this cost is dependent on the type of
// metric specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost to reach the external network specified. The exact
// interpretation of this cost is dependent on the type of
// metric specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric included within the AS External LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) MetricType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric included within the AS External LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) MetricType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Propagate (leaf): When this bit is set to true, an NSSA border router will
// translate a Type 7 LSA (NSSA External) to a Type 5 LSA
// (AS External).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/propagate"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/propagate"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) Propagate() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "propagate"},
			map[string]interface{}{},
			n,
		),
	}
}

// Propagate (leaf): When this bit is set to true, an NSSA border router will
// translate a Type 7 LSA (NSSA External) to a Type 5 LSA
// (AS External).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/propagate"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/propagate"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) Propagate() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "propagate"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the NSSA external LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the NSSA external LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the NSSA external LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the NSSA external LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/scope YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/scope YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePathAny struct {
	*ygot.NodePath
}

// ExtendedLink (container): The OSPFv2 Extended Link Opaque LSA, used to encapsulate TLV
// attributes associated with a link advertised in OSPF.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) ExtendedLink() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-link"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedLink (container): The OSPFv2 Extended Link Opaque LSA, used to encapsulate TLV
// attributes associated with a link advertised in OSPF.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) ExtendedLink() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-link"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedPrefix (container): An OSPFv2 Extended Prefix Opaque LSA, used to encapsulate
// TLV attributes associated with a prefix advertised in OSPF.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) ExtendedPrefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedPrefix (container): An OSPFv2 Extended Prefix Opaque LSA, used to encapsulate
// TLV attributes associated with a prefix advertised in OSPF.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) ExtendedPrefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// GraceLsa (container): The Grace LSA is utilised when a remote system is undergoing
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "grace-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) GraceLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"grace-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// GraceLsa (container): The Grace LSA is utilised when a remote system is undergoing
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "grace-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) GraceLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"grace-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterInformation (container): The router information LSA is utilised to advertise capabilities
// of a system to other systems who receive the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-information"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) RouterInformation() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath{
		NodePath: ygot.NewNodePath(
			[]string{"router-information"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterInformation (container): The router information LSA is utilised to advertise capabilities
// of a system to other systems who receive the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-information"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) RouterInformation() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-information"},
			map[string]interface{}{},
			n,
		),
	}
}

// Scope (leaf): The scope of the opaque LSA. The type of the LSA
// indicates its scope - the value of this leaf
// determines both the flooding domain, and the type
// of the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/scope"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/scope"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) Scope() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "scope"},
			map[string]interface{}{},
			n,
		),
	}
}

// Scope (leaf): The scope of the opaque LSA. The type of the LSA
// indicates its scope - the value of this leaf
// determines both the flooding domain, and the type
// of the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/scope"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/scope"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) Scope() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "scope"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): Contents of the Traffic Engineering Opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): Contents of the Traffic Engineering Opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The Opaque Type of the LSA. This value is used to
// indicate the type of data carried by the opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The Opaque Type of the LSA. This value is used to
// indicate the type of data carried by the opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePathAny struct {
	*ygot.NodePath
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1. Neighbouring router's router ID.
//  2. IP address of DR.
//  3. IP network address.
//  4. Neighbouring router router's ID.
//
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1. Neighbouring router's router ID.
//  2. IP address of DR.
//  3. IP network address.
//  4. Neighbouring router router's ID.
//
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of link with which extended attributes are associated
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of link with which extended attributes are associated
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// AdjacencySid (container): Parameters relating to an Adjacency SID sub-TLV of the
// extended link LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath) AdjacencySid() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencySid (container): Parameters relating to an Adjacency SID sub-TLV of the
// extended link LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny) AdjacencySid() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV contained within the extended link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV contained within the extended link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/backup YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/backup YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Backup (leaf): When this flag is set, it indicates that the adjacency SID refers to
// an adjacency which is eligible for protection
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/backup"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) Backup() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backup (leaf): When this flag is set, it indicates that the adjacency SID refers to
// an adjacency which is eligible for protection
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/backup"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) Backup() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When this flag is set it indicates that the adjacency SID refers to
// a group of adjacencies that have a common value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/group"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) Group() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When this flag is set it indicates that the adjacency SID refers to
// a group of adjacencies that have a common value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/group"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) Group() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The multi-topology identifier with which the adjacency SID is
// associated
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The multi-topology identifier with which the adjacency SID is
// associated
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the Adjacency SID when used for load-balancing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) Weight() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the Adjacency SID when used for load-balancing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/address-family YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/address-family YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/attached YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/attached YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/node YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/node YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/route-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/route-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family of the prefix contained in the Extended Prefix
// LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/address-family"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) AddressFamily() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family of the prefix contained in the Extended Prefix
// LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/address-family"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) AddressFamily() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// Attached (leaf): If this value is set to true, the prefix being advertised was
// generated by an ABR for an inter-area prefix. The value corresponds
// to the A-flag of the flags field of the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attached"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/attached"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) Attached() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attached"},
			map[string]interface{}{},
			n,
		),
	}
}

// Attached (leaf): If this value is set to true, the prefix being advertised was
// generated by an ABR for an inter-area prefix. The value corresponds
// to the A-flag of the flags field of the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attached"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/attached"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) Attached() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attached"},
			map[string]interface{}{},
			n,
		),
	}
}

// Node (leaf): If this value is set to true, the prefix being advertised represents
// the advertising router. Typically, the prefix within the LSA is
// expected to be globally-reachable prefix associated with a loopback
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/node"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/node"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) Node() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "node"},
			map[string]interface{}{},
			n,
		),
	}
}

// Node (leaf): If this value is set to true, the prefix being advertised represents
// the advertising router. Typically, the prefix within the LSA is
// expected to be globally-reachable prefix associated with a loopback
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/node"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/node"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) Node() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "node"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IPv4 prefix contained within the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) Prefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IPv4 prefix contained within the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) Prefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The length of the IPv4 prefix contained in the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) PrefixLength() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The length of the IPv4 prefix contained in the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) PrefixLength() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteType (leaf): The type of prefix that is contained within the Extended Prefix LSA.
// The information contained in sub-TLVs of the attribute is applicable
// regardless of this value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/route-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/route-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) RouteType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "route-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteType (leaf): The type of prefix that is contained within the Extended Prefix LSA.
// The information contained in sub-TLVs of the attribute is applicable
// regardless of this value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/route-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/route-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) RouteType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "route-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// ExtendedPrefixRange (container): State parameters relating to the extended prefix range
// sub-TLV of the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-prefix-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) ExtendedPrefixRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-prefix-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedPrefixRange (container): State parameters relating to the extended prefix range
// sub-TLV of the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-prefix-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) ExtendedPrefixRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-prefix-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSid (container): State parameters relating to the Prefix SID sub-TLV of the
// extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) PrefixSid() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSid (container): State parameters relating to the Prefix SID sub-TLV of the
// extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) PrefixSid() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabelBinding (container): State parameters relating to the SID/Label binding sub-TLV
// of the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label-binding"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) SidLabelBinding() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label-binding"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabelBinding (container): State parameters relating to the SID/Label binding sub-TLV
// of the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label-binding"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) SidLabelBinding() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label-binding"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV as indicated by the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV as indicated by the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/address-family YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/address-family YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/inter-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/inter-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family of the prefix contained in the Extended Prefix
// LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/address-family"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) AddressFamily() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family of the prefix contained in the Extended Prefix
// LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/address-family"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) AddressFamily() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterArea (leaf): When this leaf is set to true, then the prefix range is inter-area -
// the flag is set by the ABR that advertises the Extended Prefix Range
// TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/inter-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/inter-area"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) InterArea() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "inter-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterArea (leaf): When this leaf is set to true, then the prefix range is inter-area -
// the flag is set by the ABR that advertises the Extended Prefix Range
// TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/inter-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/inter-area"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) InterArea() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "inter-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The first prefix in the range of prefixes being described by the
// extended prefix range sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) Prefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The first prefix in the range of prefixes being described by the
// extended prefix range sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) Prefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The length of the IPv4 prefix contained in the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) PrefixLength() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The length of the IPv4 prefix contained in the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) PrefixLength() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RangeSize (leaf): The number of prefixes that are covered by the advertisement.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// RangeSize (leaf): The number of prefixes that are covered by the advertisement.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/explicit-null YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/explicit-null YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/mapping-server YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/mapping-server YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/no-php YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/no-php YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-scope YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-scope YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): The algorithm that computes the path associated with the Prefix SID
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) Algorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): The algorithm that computes the path associated with the Prefix SID
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) Algorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitNull (leaf): If this leaf is set, the advertising system has requested that the
// prefix SID value should be replaced with the explicit null label
// value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/explicit-null"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/explicit-null"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) ExplicitNull() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "explicit-null"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitNull (leaf): If this leaf is set, the advertising system has requested that the
// prefix SID value should be replaced with the explicit null label
// value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/explicit-null"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/explicit-null"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) ExplicitNull() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "explicit-null"},
			map[string]interface{}{},
			n,
		),
	}
}

// MappingServer (leaf): If this leaf is set the SID was advertised by a Segment Routing
// mapping server
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mapping-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/mapping-server"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) MappingServer() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mapping-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// MappingServer (leaf): If this leaf is set the SID was advertised by a Segment Routing
// mapping server
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mapping-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/mapping-server"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) MappingServer() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mapping-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The identifier for the topology to which the Prefix SID relates. The
// value of this leaf is a MT-ID as defined in RFC4915
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The identifier for the topology to which the Prefix SID relates. The
// value of this leaf is a MT-ID as defined in RFC4915
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// NoPhp (leaf): If this leaf is set the advertising system has indicated that the
// prefix SID must not be popped before delivering packets to it
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/no-php"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/no-php"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) NoPhp() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "no-php"},
			map[string]interface{}{},
			n,
		),
	}
}

// NoPhp (leaf): If this leaf is set the advertising system has indicated that the
// prefix SID must not be popped before delivering packets to it
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/no-php"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/no-php"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) NoPhp() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "no-php"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidScope (leaf): Specifies the scope of the SID advertisement within the Prefix SID
// sub-TLV. The scope of the SID is independent of whether the SID
// contained is an index, or an absolute value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-scope"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-scope"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) SidScope() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-scope"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidScope (leaf): Specifies the scope of the SID advertisement within the Prefix SID
// sub-TLV. The scope of the SID is independent of whether the SID
// contained is an index, or an absolute value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-scope"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-scope"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) SidScope() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-scope"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the Prefix SID. The meaning of this value is dependent
// upon the type of SID, and its scope. The value contained is either a
// 32-bit value indicating the index of the SID, or a 24-bit label where
// the 20 right-most bits are used for encoding the label value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the Prefix SID. The meaning of this value is dependent
// upon the type of SID, and its scope. The value contained is either a
// 32-bit value indicating the index of the SID, or a 24-bit label where
// the 20 right-most bits are used for encoding the label value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValueType (leaf): Specifies the type of the value specified within the Prefix SID
// sub-TLV - in particular, whether the value is an index or an
// absolute value. This value corresponds with the V-flag of the Prefix
// SID sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) SidValueType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValueType (leaf): Specifies the type of the value specified within the Prefix SID
// sub-TLV - in particular, whether the value is an index or an
// absolute value. This value corresponds with the V-flag of the Prefix
// SID sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) SidValueType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/mirroring YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/mirroring YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/weight YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/weight YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPathAny struct {
	*ygot.NodePath
}

// Mirroring (leaf): When set to true, this indicates that the SID/Label Binding sub-TLV
// entries contained within this TLV are indicative of a mirroring
// context
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mirroring"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/mirroring"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath) Mirroring() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mirroring"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mirroring (leaf): When set to true, this indicates that the SID/Label Binding sub-TLV
// entries contained within this TLV are indicative of a mirroring
// context
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mirroring"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/mirroring"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny) Mirroring() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mirroring"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The identifier for the topology to which the SID/Label Binding
// sub-TLV is associated. The value of this leaf is a MT-ID as defined
// in RFC4915
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The identifier for the topology to which the SID/Label Binding
// sub-TLV is associated. The value of this leaf is a MT-ID as defined
// in RFC4915
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the advertised binding when used for load-balancing
// purposes
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/weight"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath) Weight() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the advertised binding when used for load-balancing
// purposes
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/weight"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny) Weight() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// EroMetric (container): Parameters for the ERO Metric Sub-TLV of the SID/Label
// binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ero-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath) EroMetric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"ero-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// EroMetric (container): Parameters for the ERO Metric Sub-TLV of the SID/Label
// binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ero-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny) EroMetric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ero-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// EroPath (container): Parameters for the ERO Path Sub-TLV of the SID/Label
// binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ero-path"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath) EroPath() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"ero-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// EroPath (container): Parameters for the ERO Path Sub-TLV of the SID/Label
// binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ero-path"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny) EroPath() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ero-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabelBinding (container): Parameters for the SID/Label Binding sub-TLV of the
// SID/Label binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label-binding"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath) SidLabelBinding() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label-binding"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabelBinding (container): Parameters for the SID/Label Binding sub-TLV of the
// SID/Label binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label-binding"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny) SidLabelBinding() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label-binding"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV that is being contained within the SID/Label
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV that is being contained within the SID/Label
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric representing the aggregate IGP or TE path cost for the
// binding included within the SID/Label Binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric representing the aggregate IGP or TE path cost for the
// binding included within the SID/Label Binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny struct {
	*ygot.NodePath
}

// Ipv4Segment (container): Details of the IPv4 segment interface of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) Ipv4Segment() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-segment"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Segment (container): Details of the IPv4 segment interface of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) Ipv4Segment() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-segment"},
			map[string]interface{}{},
			n,
		),
	}
}

// Loose (leaf): If this leaf is set the segment is identifier as a loose path
// segment, otherwise the path strictly follows the path specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/loose"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) Loose() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "loose"},
			map[string]interface{}{},
			n,
		),
	}
}

// Loose (leaf): If this leaf is set the segment is identifier as a loose path
// segment, otherwise the path strictly follows the path specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/loose"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) Loose() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "loose"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the segment being specified as part of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the segment being specified as part of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnnumberedHop (container): Details of the unnumbered interface segment of the
// ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unnumbered-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) UnnumberedHop() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"unnumbered-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnnumberedHop (container): Details of the unnumbered interface segment of the
// ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unnumbered-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) UnnumberedHop() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unnumbered-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf): The IPv4 address of the hop within the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): The IPv4 address of the hop within the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny struct {
	*ygot.NodePath
}

// InterfaceId (leaf): The identifier assigned to the link by the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath) InterfaceId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): The identifier assigned to the link by the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny) InterfaceId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The IPv4 router identtifier of the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The IPv4 router identtifier of the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny struct {
	*ygot.NodePath
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// IpInterfaceAddress (leaf): The restarting system's IP address on the interface via which the
// Grace LSA is being advertised.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) IpInterfaceAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpInterfaceAddress (leaf): The restarting system's IP address on the interface via which the
// Grace LSA is being advertised.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) IpInterfaceAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Period (leaf): The number of seconds that the router's neighbors should advertise
// the local system as fully adjacent regardless of database
// synchronization state
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/period"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) Period() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "period"},
			map[string]interface{}{},
			n,
		),
	}
}

// Period (leaf): The number of seconds that the router's neighbors should advertise
// the local system as fully adjacent regardless of database
// synchronization state
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/period"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) Period() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "period"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reason (leaf): The reason for the graceful restart event occurring, as advertised
// by the restarting system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) Reason() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reason (leaf): The reason for the graceful restart event occurring, as advertised
// by the restarting system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) Reason() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received within the Grace LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received within the Grace LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// InformationalCapabilities (container): Information related to the capabilities of the advertising
// router within the scope that the opaque RI LSA is being
// advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "informational-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) InformationalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath{
		NodePath: ygot.NewNodePath(
			[]string{"informational-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// InformationalCapabilities (container): Information related to the capabilities of the advertising
// router within the scope that the opaque RI LSA is being
// advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "informational-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) InformationalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"informational-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAdministrativeTags (container): Per-node administrative tags associated with the local system
// specified by the operator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) NodeAdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"node-administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAdministrativeTags (container): Per-node administrative tags associated with the local system
// specified by the operator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) NodeAdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"node-administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingAlgorithm (container): The algorithms supported for Segment Routing by the local system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) SegmentRoutingAlgorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingAlgorithm (container): The algorithms supported for Segment Routing by the local system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) SegmentRoutingAlgorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingSidLabelRange (container): The Segment Identifier (SID) or label ranges that are supported by
// the local system for Segment Routing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-sid-label-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) SegmentRoutingSidLabelRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-sid-label-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingSidLabelRange (container): The Segment Identifier (SID) or label ranges that are supported by
// the local system for Segment Routing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-sid-label-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) SegmentRoutingSidLabelRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-sid-label-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV of the Router Information opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV of the Router Information opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// ExperimentalTe (leaf): When this leaf is set to ture, the advertising system supports the
// experimental extensions to OSPF for TE described in RFC4973
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/experimental-te"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) ExperimentalTe() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "experimental-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExperimentalTe (leaf): When this leaf is set to ture, the advertising system supports the
// experimental extensions to OSPF for TE described in RFC4973
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/experimental-te"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) ExperimentalTe() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "experimental-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartCapable (leaf): When this leaf is set to true, the advertising system is capable of
// OSPF graceful restart.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-capable"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) GracefulRestartCapable() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-capable"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartCapable (leaf): When this leaf is set to true, the advertising system is capable of
// OSPF graceful restart.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-capable"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) GracefulRestartCapable() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-capable"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartHelper (leaf): When this leaf is set to true, the advertising system is capable of
// being a helper for OSPF graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-helper"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) GracefulRestartHelper() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-helper"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartHelper (leaf): When this leaf is set to true, the advertising system is capable of
// being a helper for OSPF graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-helper"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) GracefulRestartHelper() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-helper"},
			map[string]interface{}{},
			n,
		),
	}
}

// PointToPointOverLan (leaf): When this leaf is set to true, the advertising system supports treating
// LAN adjacencies as though they were point to point
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/point-to-point-over-lan"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) PointToPointOverLan() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "point-to-point-over-lan"},
			map[string]interface{}{},
			n,
		),
	}
}

// PointToPointOverLan (leaf): When this leaf is set to true, the advertising system supports treating
// LAN adjacencies as though they were point to point
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/point-to-point-over-lan"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) PointToPointOverLan() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "point-to-point-over-lan"},
			map[string]interface{}{},
			n,
		),
	}
}

// StubRouter (leaf): When this leaf is set to true, the advertising system is able to
// advertise its status as a stub router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/stub-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) StubRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "stub-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// StubRouter (leaf): When this leaf is set to true, the advertising system is able to
// advertise its status as a stub router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/stub-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) StubRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "stub-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (leaf): When this leaf is set to true, the advertising system supports OSPFv2
// traffic engineering capabilities
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (leaf): When this leaf is set to true, the advertising system supports OSPFv2
// traffic engineering capabilities
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny struct {
	*ygot.NodePath
}

// AdministrativeTags (leaf-list): The set of administrative tags assigned to the local system by
// the network operator. The meaning of these tags is opaque to OSPF
// - and their interpretation is per-domain specific
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath) AdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdministrativeTags (leaf-list): The set of administrative tags assigned to the local system by
// the network operator. The meaning of these tags is opaque to OSPF
// - and their interpretation is per-domain specific
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny) AdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny struct {
	*ygot.NodePath
}

// SupportedAlgorithms (leaf-list): A list of the algorithms that are supported for segment routing
// by the advertising system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/supported-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath) SupportedAlgorithms() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supported-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupportedAlgorithms (leaf-list): A list of the algorithms that are supported for segment routing
// by the advertising system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/supported-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny) SupportedAlgorithms() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supported-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// RangeSize (leaf): The number of entries within the range being described within the
// SID/Label range TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// RangeSize (leaf): The number of entries within the range being described within the
// SID/Label range TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabel (container): Sub-TLV used to advertise the SID or label associated with the
// subset of the SRGB being advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) SidLabel() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabel (container): Sub-TLV used to advertise the SID or label associated with the
// subset of the SRGB being advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) SidLabel() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received by the local system within the
// SR SID/Label Range TLV of the RI LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received by the local system within the
// SR SID/Label Range TLV of the RI LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny struct {
	*ygot.NodePath
}

// EntryType (leaf): The type of entry that is contained within the sub-TLV. The range may
// be represented as either a range of MPLS labels, or numeric segment
// identifiers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/entry-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath) EntryType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "entry-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EntryType (leaf): The type of entry that is contained within the sub-TLV. The range may
// be represented as either a range of MPLS labels, or numeric segment
// identifiers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/entry-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny) EntryType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "entry-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// FirstValue (leaf): The first value within the SRGB range being specified. The type of the
// entry is determined based on the value of the entry type as this value
// may represent either a segment identifier or an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/first-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath) FirstValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "first-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// FirstValue (leaf): The first value within the SRGB range being specified. The type of the
// entry is determined based on the value of the entry type as this value
// may represent either a segment identifier or an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/first-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny) FirstValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "first-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// Link (container): Parameters included in the Link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) Link() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath{
		NodePath: ygot.NewNodePath(
			[]string{"link"},
			map[string]interface{}{},
			n,
		),
	}
}

// Link (container): Parameters included in the Link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) Link() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAttribute (container): Parameters included in the Node Attribute TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) NodeAttribute() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"node-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAttribute (container): Parameters included in the Node Attribute TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) NodeAttribute() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"node-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterAddress (container): Parameters included in the Router Address TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) RouterAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"router-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterAddress (container): Parameters included in the Router Address TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) RouterAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV within the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV within the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny struct {
	*ygot.NodePath
}

// AdminGroupAny (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) AdminGroupAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": "*"},
			n,
		),
	}
}

// AdminGroupAny (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) AdminGroupAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": "*"},
			n,
		),
	}
}

// AdminGroup (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) AdminGroup(BitIndex uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": BitIndex},
			n,
		),
	}
}

// AdminGroup (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) AdminGroup(BitIndex uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": BitIndex},
			n,
		),
	}
}

// LinkId (leaf): The ID of the remote system. For point-to-point links, this is the
// router ID of the neighbor. For multi-access links it is the address
// of the designated router.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The ID of the remote system. For point-to-point links, this is the
// router ID of the neighbor. For multi-access links it is the address
// of the designated router.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of the link that is being described by the TE LSA Link
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of the link that is being described by the TE LSA Link
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpAddress (leaf-list): The IP address(es) of the local system that correspond to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) LocalIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpAddress (leaf-list): The IP address(es) of the local system that correspond to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) LocalIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumBandwidth (leaf): The maximum bandwidth of the link. This value reflects the actual
// bandwidth of the link expressed asn IEEE 32-bit floating point
// number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) MaximumBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumBandwidth (leaf): The maximum bandwidth of the link. This value reflects the actual
// bandwidth of the link expressed asn IEEE 32-bit floating point
// number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) MaximumBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumReservableBandwidth (leaf): The maximum reservable bandwidth for the link. This value represents
// the total bandwidth which may be used for traffic engineering
// purposes. The value may exceed the maximum-bandwidth value
// in cases where the link is oversubscribed. The value is reflected as
// a 32-bit IEEE floating-point number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-reservable-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) MaximumReservableBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-reservable-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumReservableBandwidth (leaf): The maximum reservable bandwidth for the link. This value represents
// the total bandwidth which may be used for traffic engineering
// purposes. The value may exceed the maximum-bandwidth value
// in cases where the link is oversubscribed. The value is reflected as
// a 32-bit IEEE floating-point number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-reservable-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) MaximumReservableBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-reservable-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric of the link that should be used for traffic engineering
// purposes. This link may be different than the standard OSPF link
// metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric of the link that should be used for traffic engineering
// purposes. This link may be different than the standard OSPF link
// metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpAddress (leaf-list): The IP address(es) of the remote systems that are attached to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) RemoteIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpAddress (leaf-list): The IP address(es) of the remote systems that are attached to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) RemoteIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-TLV type specified in the Link TLV. When the value is
// known by the local system, a canonical name of the sub-TLV is utilised
// - the special UNKNOWN value indicates that the system did not
// support the sub-TLV type received in the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-TLV type specified in the Link TLV. When the value is
// known by the local system, a canonical name of the sub-TLV is utilised
// - the special UNKNOWN value indicates that the system did not
// support the sub-TLV type received in the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownType (leaf): The value of the type field of an unknown sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnknownType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownType (leaf): The value of the type field of an unknown sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnknownType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownValue (leaf): The binary contents of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnknownValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownValue (leaf): The binary contents of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnknownValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnreservedBandwidthAny (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnreservedBandwidthAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// UnreservedBandwidthAny (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnreservedBandwidthAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// UnreservedBandwidth (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnreservedBandwidth(Priority uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// UnreservedBandwidth (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnreservedBandwidth(Priority uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny struct {
	*ygot.NodePath
}

// BitIndex (leaf): The index of the bit within the 32-bit administrative group field
// of the Administrative Group sub-TLV of the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bit-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath) BitIndex() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bit-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// BitIndex (leaf): The index of the bit within the 32-bit administrative group field
// of the Administrative Group sub-TLV of the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bit-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny) BitIndex() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bit-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): Whether the bit is set within the administrative group field
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath) Set() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): Whether the bit is set within the administrative group field
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny) Set() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny struct {
	*ygot.NodePath
}

// Priority (leaf): The priority level being described
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The priority level being described
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnreservedBandwidth (leaf): The unreserved bandwidth for at priority level P, where P is
// equal to the priority of the current list entry. The reservable
// bandwidth at priority P is equal to the sum of the reservable
// bandwidth at all levels 0..P.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath) UnreservedBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unreserved-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnreservedBandwidth (leaf): The unreserved bandwidth for at priority level P, where P is
// equal to the priority of the current list entry. The reservable
// bandwidth at priority P is equal to the sum of the reservable
// bandwidth at all levels 0..P.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny) UnreservedBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unreserved-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny struct {
	*ygot.NodePath
}

// LocalIpv4Addresses (leaf-list): The local IPv4 addresses of the node expressed in CIDR notation
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) LocalIpv4Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv4Addresses (leaf-list): The local IPv4 addresses of the node expressed in CIDR notation
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) LocalIpv4Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Addresses (leaf-list): The local IPv6 addreses of the node
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) LocalIpv6Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Addresses (leaf-list): The local IPv6 addreses of the node
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) LocalIpv6Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV of the Node Attribute TLV contained within
// the TE LSA. If the local system can interpret the value received the
// canonical name of the type is utilised, otherwise the special UNKNOWN
// value is used
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV of the Node Attribute TLV contained within
// the TE LSA. If the local system can interpret the value received the
// canonical name of the type is utilised, otherwise the special UNKNOWN
// value is used
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf): A stable IP address of the advertising router, that is always
// reachable when the router is connected to the network. Typically this
// is a loopback address.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): A stable IP address of the advertising router, that is always
// reachable when the router is connected to the network. Typically this
// is a loopback address.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny struct {
	*ygot.NodePath
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1. Neighbouring router's router ID.
//  2. IP address of DR.
//  3. IP network address.
//  4. Neighbouring router router's ID.
//
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1. Neighbouring router's router ID.
//  2. IP address of DR.
//  3. IP network address.
//  4. Neighbouring router router's ID.
//
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost of utilising the link specified independent of TOS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost of utilising the link specified independent of TOS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberLinks (leaf): The number of links that are described within the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-links"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) NumberLinks() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-links"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberLinks (leaf): The number of links that are described within the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-links"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) NumberLinks() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-links"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberTosMetrics (leaf): The number of different TOS metrics given for this link, not
// including the link metric (which is referred to as TOS 0).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-tos-metrics"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) NumberTosMetrics() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-tos-metrics"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberTosMetrics (leaf): The number of different TOS metrics given for this link, not
// including the link metric (which is referred to as TOS 0).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-tos-metrics"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) NumberTosMetrics() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-tos-metrics"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-type of the Router LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-type of the Router LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny struct {
	*ygot.NodePath
}

// NetworkMask (leaf): The mask of the network described by the Summary LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkMask (leaf): The mask of the network described by the Summary LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny struct {
	*ygot.NodePath
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPath) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retransmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retransmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny struct {
	*ygot.NodePath
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retransmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) RetransmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retransmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) RetransmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny struct {
	*ygot.NodePath
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnyDstArea(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnyDstArea(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnySrcArea(DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnySrcArea(DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicy(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicy(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny struct {
	*ygot.NodePath
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny struct {
	*ygot.NodePath
}

// Include (leaf-list): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Include (leaf-list): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf-list): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf-list): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_PimPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_PimPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPathAny struct {
	*ygot.NodePath
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPath) Global() *NetworkInstance_Protocol_Pim_GlobalPath {
	return &NetworkInstance_Protocol_Pim_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPathAny) Global() *NetworkInstance_Protocol_Pim_GlobalPathAny {
	return &NetworkInstance_Protocol_Pim_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPath) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPathAny) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePath {
	return &NetworkInstance_Protocol_Pim_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_NeighborCountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count YANG schema element.
type NetworkInstance_Protocol_Pim_Global_NeighborCountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count YANG schema element.
type NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny struct {
	*ygot.NodePath
}

// Counters (container): Global PIM counters.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Counters() *NetworkInstance_Protocol_Pim_Global_CountersPath {
	return &NetworkInstance_Protocol_Pim_Global_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Global PIM counters.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Counters() *NetworkInstance_Protocol_Pim_Global_CountersPathAny {
	return &NetworkInstance_Protocol_Pim_Global_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCount (leaf): Number of adjacent PIM neighbors.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) NeighborCount() *NetworkInstance_Protocol_Pim_Global_NeighborCountPath {
	return &NetworkInstance_Protocol_Pim_Global_NeighborCountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCount (leaf): Number of adjacent PIM neighbors.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) NeighborCount() *NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny {
	return &NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPath{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// SourceAny (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) SourceAny() *NetworkInstance_Protocol_Pim_Global_SourcePathAny {
	return &NetworkInstance_Protocol_Pim_Global_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// SourceAny (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) SourceAny() *NetworkInstance_Protocol_Pim_Global_SourcePathAny {
	return &NetworkInstance_Protocol_Pim_Global_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// Source (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Source(Address string) *NetworkInstance_Protocol_Pim_Global_SourcePath {
	return &NetworkInstance_Protocol_Pim_Global_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Source (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Source(Address string) *NetworkInstance_Protocol_Pim_Global_SourcePathAny {
	return &NetworkInstance_Protocol_Pim_Global_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPath {
	return &NetworkInstance_Protocol_Pim_Global_SsmPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPathAny {
	return &NetworkInstance_Protocol_Pim_Global_SsmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Global_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Global_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny struct {
	*ygot.NodePath
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPath) BootstrapMessages() *NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath {
	return &NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPathAny) BootstrapMessages() *NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPath) HelloMessages() *NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath {
	return &NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPathAny) HelloMessages() *NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPath) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath {
	return &NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPathAny) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny struct {
	*ygot.NodePath
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny struct {
	*ygot.NodePath
}

// Address (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePath) Address() *NetworkInstance_Protocol_Pim_Global_Source_AddressPath {
	return &NetworkInstance_Protocol_Pim_Global_Source_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePathAny) Address() *NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePath) Group() *NetworkInstance_Protocol_Pim_Global_Source_GroupPath {
	return &NetworkInstance_Protocol_Pim_Global_Source_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePathAny) Group() *NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpstreamInterfaceId (leaf): The upstream interface for this multicast source.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/upstream-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePath) UpstreamInterfaceId() *NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath {
	return &NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "upstream-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpstreamInterfaceId (leaf): The upstream interface for this multicast source.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/upstream-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePathAny) UpstreamInterfaceId() *NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "upstream-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_SsmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_SsmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny struct {
	*ygot.NodePath
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPath) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPathAny) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePathAny struct {
	*ygot.NodePath
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPath {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPath {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): PIM counters for each interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Counters() *NetworkInstance_Protocol_Pim_Interface_CountersPath {
	return &NetworkInstance_Protocol_Pim_Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): PIM counters for each interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Counters() *NetworkInstance_Protocol_Pim_Interface_CountersPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPath {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPath {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePath {
	return &NetworkInstance_Protocol_Pim_Interface_ModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_ModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_InterfacePath) NeighborAny() *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// NeighborAny (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) NeighborAny() *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// Neighbor (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Pim_Interface_NeighborPath {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// Neighbor (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny struct {
	*ygot.NodePath
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPath) BootstrapMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPathAny) BootstrapMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPath) HelloMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPathAny) HelloMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPath) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPathAny) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny struct {
	*ygot.NodePath
}

// DrAddress (leaf): IPv4 address of designated router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) DrAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrAddress (leaf): IPv4 address of designated router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) DrAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode in use when delivering multicast traffic
// via this neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) Mode() *NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode in use when delivering multicast traffic
// via this neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) Mode() *NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): IPv4 address of neighbor router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) NeighborAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): IPv4 address of neighbor router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) NeighborAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborEstablished (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency established. It is expressed
// relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// The PIM session uptime can be computed by clients
// as the difference between this value and the
// current time in UTC.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-established"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) NeighborEstablished() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-established"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborEstablished (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency established. It is expressed
// relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// The PIM session uptime can be computed by clients
// as the difference between this value and the
// current time in UTC.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-established"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) NeighborEstablished() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-established"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExpires (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency will expire should hello
// messages fail to arrive from the neighbor. The value
// is expressed relative to the Unix Epoch (Jan 1, 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) NeighborExpires() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExpires (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency will expire should hello
// messages fail to arrive from the neighbor. The value
// is expressed relative to the Unix Epoch (Jan 1, 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) NeighborExpires() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_StaticPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_StaticPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPathAny struct {
	*ygot.NodePath
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/description"
func (n *NetworkInstance_Protocol_StaticPath) Description() *NetworkInstance_Protocol_Static_DescriptionPath {
	return &NetworkInstance_Protocol_Static_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/description"
func (n *NetworkInstance_Protocol_StaticPathAny) Description() *NetworkInstance_Protocol_Static_DescriptionPathAny {
	return &NetworkInstance_Protocol_Static_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPath) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPath) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix"
func (n *NetworkInstance_Protocol_StaticPath) Prefix() *NetworkInstance_Protocol_Static_PrefixPath {
	return &NetworkInstance_Protocol_Static_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix"
func (n *NetworkInstance_Protocol_StaticPathAny) Prefix() *NetworkInstance_Protocol_Static_PrefixPathAny {
	return &NetworkInstance_Protocol_Static_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag"
func (n *NetworkInstance_Protocol_StaticPath) SetTag() *NetworkInstance_Protocol_Static_SetTagPath {
	return &NetworkInstance_Protocol_Static_SetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag"
func (n *NetworkInstance_Protocol_StaticPathAny) SetTag() *NetworkInstance_Protocol_Static_SetTagPathAny {
	return &NetworkInstance_Protocol_Static_SetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/preference YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/preference YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePathAny struct {
	*ygot.NodePath
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPath) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPath {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPath) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPath {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPath) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/preference"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Preference() *NetworkInstance_Protocol_Static_NextHop_PreferencePath {
	return &NetworkInstance_Protocol_Static_NextHop_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/preference"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Preference() *NetworkInstance_Protocol_Static_NextHop_PreferencePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePath {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_RouteLimitPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_InstalledRoutesPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/installed-routes YANG schema element.
type NetworkInstance_RouteLimit_InstalledRoutesPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_InstalledRoutesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/installed-routes YANG schema element.
type NetworkInstance_RouteLimit_InstalledRoutesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_ThresholdExceededPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded YANG schema element.
type NetworkInstance_RouteLimit_ThresholdExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_ThresholdExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded YANG schema element.
type NetworkInstance_RouteLimit_ThresholdExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPathAny struct {
	*ygot.NodePath
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/afi"
func (n *NetworkInstance_RouteLimitPath) Afi() *NetworkInstance_RouteLimit_AfiPath {
	return &NetworkInstance_RouteLimit_AfiPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/afi"
func (n *NetworkInstance_RouteLimitPathAny) Afi() *NetworkInstance_RouteLimit_AfiPathAny {
	return &NetworkInstance_RouteLimit_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold"
func (n *NetworkInstance_RouteLimitPath) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPath {
	return &NetworkInstance_RouteLimit_AlarmThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold"
func (n *NetworkInstance_RouteLimitPathAny) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPathAny {
	return &NetworkInstance_RouteLimit_AlarmThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstalledRoutes (leaf): The current number of routes installed for the address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/installed-routes"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/installed-routes"
func (n *NetworkInstance_RouteLimitPath) InstalledRoutes() *NetworkInstance_RouteLimit_InstalledRoutesPath {
	return &NetworkInstance_RouteLimit_InstalledRoutesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "installed-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstalledRoutes (leaf): The current number of routes installed for the address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/installed-routes"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/installed-routes"
func (n *NetworkInstance_RouteLimitPathAny) InstalledRoutes() *NetworkInstance_RouteLimit_InstalledRoutesPathAny {
	return &NetworkInstance_RouteLimit_InstalledRoutesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "installed-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/maximum"
func (n *NetworkInstance_RouteLimitPath) Maximum() *NetworkInstance_RouteLimit_MaximumPath {
	return &NetworkInstance_RouteLimit_MaximumPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/maximum"
func (n *NetworkInstance_RouteLimitPathAny) Maximum() *NetworkInstance_RouteLimit_MaximumPathAny {
	return &NetworkInstance_RouteLimit_MaximumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdExceeded (leaf): This leaf should be set to true in the case that the threshold
// number of routes has been exceeded.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/threshold-exceeded"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded"
func (n *NetworkInstance_RouteLimitPath) ThresholdExceeded() *NetworkInstance_RouteLimit_ThresholdExceededPath {
	return &NetworkInstance_RouteLimit_ThresholdExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "threshold-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdExceeded (leaf): This leaf should be set to true in the case that the threshold
// number of routes has been exceeded.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/threshold-exceeded"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded"
func (n *NetworkInstance_RouteLimitPathAny) ThresholdExceeded() *NetworkInstance_RouteLimit_ThresholdExceededPathAny {
	return &NetworkInstance_RouteLimit_ThresholdExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "threshold-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/warning-only"
func (n *NetworkInstance_RouteLimitPath) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPath {
	return &NetworkInstance_RouteLimit_WarningOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/warning-only"
func (n *NetworkInstance_RouteLimitPathAny) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPathAny {
	return &NetworkInstance_RouteLimit_WarningOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPath {
	return &NetworkInstance_SegmentRouting_SrgbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPath {
	return &NetworkInstance_SegmentRouting_SrlbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// TePolicyAny (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) TePolicyAny() *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAny (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicyAny() *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAnyEndpoint (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) TePolicyAnyEndpoint(Color uint32) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAnyEndpoint (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicyAnyEndpoint(Color uint32) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAnyColor (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPath) TePolicyAnyColor(Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": Endpoint},
			n,
		),
	}
}

// TePolicyAnyColor (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicyAnyColor(Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": Endpoint},
			n,
		),
	}
}

// TePolicy (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPath) TePolicy(Color uint32, Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPath {
	return &NetworkInstance_SegmentRouting_TePolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": Endpoint},
			n,
		),
	}
}

// TePolicy (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicy(Color uint32, Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": Endpoint},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrgbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrgbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_SizePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/size YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_SizePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_SizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/size YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_SizePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_UsedPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/used YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_UsedPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_UsedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/used YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_UsedPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf-list): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf-list): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPath) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf-list): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPath) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf-list): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The total number of SRGB entries that are available within the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/size"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Size() *NetworkInstance_SegmentRouting_Srgb_SizePath {
	return &NetworkInstance_SegmentRouting_Srgb_SizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The total number of SRGB entries that are available within the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/size"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Size() *NetworkInstance_SegmentRouting_Srgb_SizePathAny {
	return &NetworkInstance_SegmentRouting_Srgb_SizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Used (leaf): The total number of SRGB entries that have already been alocated by
// protocols referencing the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/used"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/used"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Used() *NetworkInstance_SegmentRouting_Srgb_UsedPath {
	return &NetworkInstance_SegmentRouting_Srgb_UsedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "used"},
			map[string]interface{}{},
			n,
		),
	}
}

// Used (leaf): The total number of SRGB entries that have already been alocated by
// protocols referencing the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/used"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/used"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Used() *NetworkInstance_SegmentRouting_Srgb_UsedPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_UsedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "used"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrlbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrlbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPath) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPath) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPath) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicyPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy YANG schema element.
type NetworkInstance_SegmentRouting_TePolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy YANG schema element.
type NetworkInstance_SegmentRouting_TePolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActivePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActivePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_BsidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_BsidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_BsidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_BsidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ColorPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ColorPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ColorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ColorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_EndpointPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_NamePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_NamePathAny struct {
	*ygot.NodePath
}

// Active (leaf): A SR-TE policy is marked as active when at least one of its
// candidate paths is valid/active and the policy has been
// instantiated in the forwarding plane.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Active() *NetworkInstance_SegmentRouting_TePolicy_ActivePath {
	return &NetworkInstance_SegmentRouting_TePolicy_ActivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// Active (leaf): A SR-TE policy is marked as active when at least one of its
// candidate paths is valid/active and the policy has been
// instantiated in the forwarding plane.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Active() *NetworkInstance_SegmentRouting_TePolicy_ActivePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ActivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the policy transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the Unix
// Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the policy transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the Unix
// Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bsid (leaf): The Binding SID (BSID) assigned to the SR-TE policy,
// expressed as an MPLS label or IPv6 address. Packets that are
// ingress to the system with active segment matching the SID
// value specified in this leaf should be forwarded according
// to the policy. The specified Binding SID must be removed
// from the segment list by the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Bsid() *NetworkInstance_SegmentRouting_TePolicy_BsidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_BsidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bsid (leaf): The Binding SID (BSID) assigned to the SR-TE policy,
// expressed as an MPLS label or IPv6 address. Packets that are
// ingress to the system with active segment matching the SID
// value specified in this leaf should be forwarded according
// to the policy. The specified Binding SID must be removed
// from the segment list by the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Bsid() *NetworkInstance_SegmentRouting_TePolicy_BsidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_BsidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsid"},
			map[string]interface{}{},
			n,
		),
	}
}

// CandidatePathAny (list): An individual candidate path within the list of candidate
// paths associated with this SR-TE policy. It is uniquely
// identified by the combination of protocol-origin,
// originator and discriminator
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-paths/candidate-path"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) CandidatePathAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-paths", "candidate-path"},
			map[string]interface{}{"protocol-origin": "*", "originator-asn": "*", "originator-addr": "*", "discriminator": "*"},
			n,
		),
	}
}

// CandidatePathAny (list): An individual candidate path within the list of candidate
// paths associated with this SR-TE policy. It is uniquely
// identified by the combination of protocol-origin,
// originator and discriminator
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-paths/candidate-path"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) CandidatePathAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-paths", "candidate-path"},
			map[string]interface{}{"protocol-origin": "*", "originator-asn": "*", "originator-addr": "*", "discriminator": "*"},
			n,
		),
	}
}

// WithProtocolOrigin sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "protocol-origin" to the specified value.
// ProtocolOrigin: oc.E_SegmentRoutingTypes_SrteProtocolType
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithProtocolOrigin(ProtocolOrigin oc.E_SegmentRoutingTypes_SrteProtocolType) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "protocol-origin", ProtocolOrigin)
	return n
}

// WithOriginatorAsn sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "originator-asn" to the specified value.
// OriginatorAsn: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithOriginatorAsn(OriginatorAsn uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "originator-asn", OriginatorAsn)
	return n
}

// WithOriginatorAddr sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "originator-addr" to the specified value.
// OriginatorAddr: string
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithOriginatorAddr(OriginatorAddr string) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "originator-addr", OriginatorAddr)
	return n
}

// WithDiscriminator sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "discriminator" to the specified value.
// Discriminator: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithDiscriminator(Discriminator uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "discriminator", Discriminator)
	return n
}

// Color (leaf): When the policy is used for RIB resolution to a specific
// Segment Routing Traffic Engineering path, the policy is used
// when the color required in the policy (which may be specified
// based on the value of a BGP extended colour community) matches
// the value of this leaf. The color being set to 0 indicates
// that the colour is a wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/color"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Color() *NetworkInstance_SegmentRouting_TePolicy_ColorPath {
	return &NetworkInstance_SegmentRouting_TePolicy_ColorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "color"},
			map[string]interface{}{},
			n,
		),
	}
}

// Color (leaf): When the policy is used for RIB resolution to a specific
// Segment Routing Traffic Engineering path, the policy is used
// when the color required in the policy (which may be specified
// based on the value of a BGP extended colour community) matches
// the value of this leaf. The color being set to 0 indicates
// that the colour is a wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/color"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Color() *NetworkInstance_SegmentRouting_TePolicy_ColorPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ColorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "color"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of counters on the policy level. They
// count the total traffic forwarded by the policy,
// regardless of its installation source. The counters
// should be persistent across policy state changes and
// switches between active protocols.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Counters() *NetworkInstance_SegmentRouting_TePolicy_CountersPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of counters on the policy level. They
// count the total traffic forwarded by the policy,
// regardless of its installation source. The counters
// should be persistent across policy state changes and
// switches between active protocols.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Counters() *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): When the policy is used for RIB resolution to a Segment
// Routing Traffic Engineering path, the policy is used when the
// required endpoint (which may be the protocol next-hop) matches
// the endpoint address specified in this leaf. When the leaf is
// set to all zeros (0.0.0.0 or ::), the endpoint acts as a
// wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Endpoint() *NetworkInstance_SegmentRouting_TePolicy_EndpointPath {
	return &NetworkInstance_SegmentRouting_TePolicy_EndpointPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): When the policy is used for RIB resolution to a Segment
// Routing Traffic Engineering path, the policy is used when the
// required endpoint (which may be the protocol next-hop) matches
// the endpoint address specified in this leaf. When the leaf is
// set to all zeros (0.0.0.0 or ::), the endpoint acts as a
// wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Endpoint() *NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE policy name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Name() *NetworkInstance_SegmentRouting_TePolicy_NamePath {
	return &NetworkInstance_SegmentRouting_TePolicy_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE policy name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Name() *NetworkInstance_SegmentRouting_TePolicy_NamePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny struct {
	*ygot.NodePath
}

// Active (leaf): A candidate path is active when it is valid and it is
// determined to be the best path of the SR-TE Policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Active() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// Active (leaf): A candidate path is active when it is valid and it is
// determined to be the best path of the SR-TE Policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Active() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the path transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the
// Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the path transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the
// Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the candidate
// path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the candidate
// path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discriminator (leaf): A 32 bit value uniquely identifying the path within the
// context of a policy learnt from a protocol.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discriminator"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Discriminator() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discriminator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discriminator (leaf): A 32 bit value uniquely identifying the path within the
// context of a policy learnt from a protocol.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discriminator"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Discriminator() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discriminator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enlp (leaf): ENLP (Explicit NULL Label Policy) indicates whether Explicit
// NULL labels are to be pushed on unlabeled IP packets that are
// being steered into a given SR policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enlp"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Enlp() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enlp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enlp (leaf): ENLP (Explicit NULL Label Policy) indicates whether Explicit
// NULL labels are to be pushed on unlabeled IP packets that are
// being steered into a given SR policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enlp"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Enlp() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enlp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE candidate path name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Name() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE candidate path name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Name() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAddr (leaf): The address of the node originating the candidate path.
// Address in IPv4 can be represented as IPv6-encoded-IPv4 e.g.
// ::FFFF:192.168.1.2 or a normal IPv6 address with the lowest
// 32 bits carrying the actual IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-addr"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) OriginatorAddr() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-addr"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAddr (leaf): The address of the node originating the candidate path.
// Address in IPv4 can be represented as IPv6-encoded-IPv4 e.g.
// ::FFFF:192.168.1.2 or a normal IPv6 address with the lowest
// 32 bits carrying the actual IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-addr"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) OriginatorAddr() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-addr"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAsn (leaf): The autonomous system that node originating the candidate
// path locates.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-asn"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) OriginatorAsn() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-asn"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAsn (leaf): The autonomous system that node originating the candidate
// path locates.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-asn"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) OriginatorAsn() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-asn"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When there are multiple candidate paths specified a
// particular SR-TE policy. The preference is used to resolve
// between them. And the one with higher preference is
// preferred.
// These paths may be learnt from a dynamic routing protocol,
// or interface to the device, or from other static entries
// configured on the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Preference() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When there are multiple candidate paths specified a
// particular SR-TE policy. The preference is used to resolve
// between them. And the one with higher preference is
// preferred.
// These paths may be learnt from a dynamic routing protocol,
// or interface to the device, or from other static entries
// configured on the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Preference() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtocolOrigin (leaf): The component or protocol that originates or signals the
// candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol-origin"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) ProtocolOrigin() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol-origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtocolOrigin (leaf): The component or protocol that originates or signals the
// candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol-origin"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) ProtocolOrigin() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol-origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentListAny (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id (wildcarded): uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) SegmentListAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// SegmentListAny (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id (wildcarded): uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) SegmentListAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// SegmentList (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) SegmentList(Id uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// SegmentList (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) SegmentList(Id uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Valid (leaf): A path should be marked as valid when it is usable e.g. the
// at least one segment-list is valid even though the path may
// not be the best.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Valid (leaf): A path should be marked as valid when it is usable e.g. the
// at least one segment-list is valid even though the path may
// not be the best.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny struct {
	*ygot.NodePath
}

// Counters (container): The counters of traffic steered to the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): The counters of traffic steered to the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique id identifying the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Id() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique id identifying the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Id() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If a segment-list is marked as invalid, this leaf should
// indicate the reason.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) InvalidReason() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If a segment-list is marked as invalid, this leaf should
// indicate the reason.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) InvalidReason() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopAny (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) NextHopAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHopAny (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) NextHopAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHop (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) NextHop(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// NextHop (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) NextHop(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// SidAny (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) SidAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// SidAny (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) SidAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Sid (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Sid(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Sid (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Sid(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Valid (leaf): The validity of a segment-list should marked as true
// when it is usable.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Valid (leaf): The validity of a segment-list should marked as true
// when it is usable.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the segment list within the set of
// segment lists specified for the candidate path. The
// traffic that is forwarded according to the policy is
// distributed across the set of segment-lists such that
// each list receives weight/(sum of all weights) traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Weight() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the segment list within the set of
// segment lists specified for the candidate path. The
// traffic that is forwarded according to the policy is
// distributed across the set of segment-lists such that
// each list receives weight/(sum of all weights) traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Weight() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/decapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/decapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny struct {
	*ygot.NodePath
}

// Counters (container): The counters of traffic steered to the segment-list on
// per next-hop basis.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): The counters of traffic steered to the segment-list on
// per next-hop basis.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateHeader (leaf): When forwarding a packet to the specified next-hop, the local
// system performs a decapsulation of the packet - removing the
// specified header type. In the case that no next-hop is
// specified, the packet header is removed, and a subsequent
// forwarding lookup is performed on the packet encapsulated
// within the header, matched within the relevant AFT within the
// specified network-instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/decapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) DecapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateHeader (leaf): When forwarding a packet to the specified next-hop, the local
// system performs a decapsulation of the packet - removing the
// specified header type. In the case that no next-hop is
// specified, the packet header is removed, and a subsequent
// forwarding lookup is performed on the packet encapsulated
// within the header, matched within the relevant AFT within the
// specified network-instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/decapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) DecapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateHeader (leaf): When forwarding a packet to the specified next-hop the local
// system performs an encapsulation of the packet - adding the
// specified header type.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/encapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) EncapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "encapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateHeader (leaf): When forwarding a packet to the specified next-hop the local
// system performs an encapsulation of the packet - adding the
// specified header type.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/encapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) EncapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "encapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): A unique entry for the next-hop.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): A unique entry for the next-hop.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) InterfaceRef() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) InterfaceRef() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpAddress (leaf): The IP address of the next-hop system.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) IpAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpAddress (leaf): The IP address of the next-hop system.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) IpAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): The MAC address of the next-hop if resolved by the local
// network instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) MacAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): The MAC address of the next-hop if resolved by the local
// network instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) MacAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginProtocol (leaf): The protocol from which the AFT entry was learned.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin-protocol"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) OriginProtocol() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginProtocol (leaf): The protocol from which the AFT entry was learned.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin-protocol"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) OriginProtocol() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// PopTopLabel (leaf): Flag that controls pop action, i.e., the top-most MPLS label
// should be popped from the packet when switched by the system.
//
// The top-most MPLS label associated with pop action is equal to
// the label key used in 'mpls' AFT 'label-entry' list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pop-top-label"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) PopTopLabel() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pop-top-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PopTopLabel (leaf): Flag that controls pop action, i.e., the top-most MPLS label
// should be popped from the packet when switched by the system.
//
// The top-most MPLS label associated with pop action is equal to
// the label key used in 'mpls' AFT 'label-entry' list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pop-top-label"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) PopTopLabel() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pop-top-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProgrammedIndex (leaf): In some routing protocols, or route injection mechanisms it
// is possible to set the index of the next-hop via configuration
// or the protocol itself. In some systems it may not be possible
// to maintain the index provided by an external client when
// advertising the same entry via telemetry.
//
// This leaf reflects the configured or client-supplied index of
// the next-hop. This allows a client to create an assocation or
// mapping back to the original index pushed by the client, and
// the ID used as a key in the next-hop AFT list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/programmed-index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) ProgrammedIndex() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "programmed-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProgrammedIndex (leaf): In some routing protocols, or route injection mechanisms it
// is possible to set the index of the next-hop via configuration
// or the protocol itself. In some systems it may not be possible
// to maintain the index provided by an external client when
// advertising the same entry via telemetry.
//
// This leaf reflects the configured or client-supplied index of
// the next-hop. This allows a client to create an assocation or
// mapping back to the original index pushed by the client, and
// the ID used as a key in the next-hop AFT list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/programmed-index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) ProgrammedIndex() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "programmed-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushedMplsLabelStack (leaf-list): The MPLS label stack imposed when forwarding packets to the
// next-hop
//   - the stack is encoded as a leaf list whereby the order of the
//     entries is such that the first entry in the list is the
//     label at the bottom of the stack to be pushed.
//
// To this end, a packet which is to forwarded to a device using
// a service label of 42, and a transport label of 8072 will be
// represented with a label stack list of [42, 8072].
//
// The MPLS label stack list is ordered by the user, such that no
// system re-ordering of leaves is permitted by the system.
//
// A swap operation is reflected by entries in the
// popped-mpls-label-stack and pushed-mpls-label-stack nodes.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pushed-mpls-label-stack"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) PushedMplsLabelStack() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pushed-mpls-label-stack"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushedMplsLabelStack (leaf-list): The MPLS label stack imposed when forwarding packets to the
// next-hop
//   - the stack is encoded as a leaf list whereby the order of the
//     entries is such that the first entry in the list is the
//     label at the bottom of the stack to be pushed.
//
// To this end, a packet which is to forwarded to a device using
// a service label of 42, and a transport label of 8072 will be
// represented with a label stack list of [42, 8072].
//
// The MPLS label stack list is ordered by the user, such that no
// system re-ordering of leaves is permitted by the system.
//
// A swap operation is reflected by entries in the
// popped-mpls-label-stack and pushed-mpls-label-stack nodes.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pushed-mpls-label-stack"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) PushedMplsLabelStack() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pushed-mpls-label-stack"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath) Interface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny) Interface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath) Subinterface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny) Subinterface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny struct {
	*ygot.NodePath
}

// Index (leaf): The index of the SID within the segment list. The segment list is
// applied by ordering the SID entries in ascending numerical order
// beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): The index of the SID within the segment list. The segment list is
// applied by ordering the SID entries in ascending numerical order
// beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The value of the MPLS Traffic Class (TC) bits to be used if the
// value of the SID is an MPLS label. In the case that the value is
// set to 0, then the local implementation should choose the value.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) MplsTc() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The value of the MPLS Traffic Class (TC) bits to be used if the
// value of the SID is an MPLS label. In the case that the value is
// set to 0, then the local implementation should choose the value.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) MplsTc() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The TTL to be set if the type of the SID is an MPLS label. If the
// value of the TTL is set to be 0, the value is picked by the local
// implementation.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) MplsTtl() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The TTL to be set if the type of the SID is an MPLS label. If the
// value of the TTL is set to be 0, the value is picked by the local
// implementation.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) MplsTtl() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value of the SID that is to be used. Specified as an MPLS
// label or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) Value() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value of the SID that is to be used. Specified as an MPLS
// label or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) Value() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// InLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the SR-TE policy. Labeled traffic carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the SR-TE policy. Labeled traffic carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the SR-TE policy. Labeled packets carries an active SID
// (top-most SID in the stack) that matches the BSID associated
// to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the SR-TE policy. Labeled packets carries an active SID
// (top-most SID in the stack) that matches the BSID associated
// to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total incoming bytes steered
// to the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total incoming bytes steered
// to the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the incoming packets steered to
// the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the incoming packets steered to
// the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of outgoing labeled
// traffic after being steered to the SR-TE policy. Labeled
// traffic carries an active SID (top-most SID in the stack) that
// matches the BSID associated to this policy. The counter should
// include the segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of outgoing labeled
// traffic after being steered to the SR-TE policy. Labeled
// traffic carries an active SID (top-most SID in the stack) that
// matches the BSID associated to this policy. The counter should
// include the segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the outgoing labeled packets after
// being steered to the SR-TE policy. Labeled packets carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the outgoing labeled packets after
// being steered to the SR-TE policy. Labeled packets carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes after
// being steered to the SR-TE policy. It includes both labeled
// and unlabeled steered traffic. The counter should include the
// segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes after
// being steered to the SR-TE policy. It includes both labeled
// and unlabeled steered traffic. The counter should include the
// segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets after being
// steered to the SR-TE policy. It includes both labeled and
// unlabeled steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets after being
// steered to the SR-TE policy. It includes both labeled and
// unlabeled steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TablePath represents the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePath struct {
	*ygot.NodePath
}

// NetworkInstance_TablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/state/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/state/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/state/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/state/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/tables/table/state/address-family"
func (n *NetworkInstance_TablePath) AddressFamily() *NetworkInstance_Table_AddressFamilyPath {
	return &NetworkInstance_Table_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/tables/table/state/address-family"
func (n *NetworkInstance_TablePathAny) AddressFamily() *NetworkInstance_Table_AddressFamilyPathAny {
	return &NetworkInstance_Table_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/tables/table/state/protocol"
func (n *NetworkInstance_TablePath) Protocol() *NetworkInstance_Table_ProtocolPath {
	return &NetworkInstance_Table_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/tables/table/state/protocol"
func (n *NetworkInstance_TablePathAny) Protocol() *NetworkInstance_Table_ProtocolPathAny {
	return &NetworkInstance_Table_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TableConnectionPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/address-family"
func (n *NetworkInstance_TableConnectionPath) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPath {
	return &NetworkInstance_TableConnection_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/address-family"
func (n *NetworkInstance_TableConnectionPathAny) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPathAny {
	return &NetworkInstance_TableConnection_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/default-import-policy"
func (n *NetworkInstance_TableConnectionPath) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPath {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/default-import-policy"
func (n *NetworkInstance_TableConnectionPathAny) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPathAny {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPath) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPath {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPathAny) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPathAny {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/dst-protocol"
func (n *NetworkInstance_TableConnectionPath) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPath {
	return &NetworkInstance_TableConnection_DstProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/dst-protocol"
func (n *NetworkInstance_TableConnectionPathAny) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPathAny {
	return &NetworkInstance_TableConnection_DstProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/import-policy"
func (n *NetworkInstance_TableConnectionPath) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPath {
	return &NetworkInstance_TableConnection_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/import-policy"
func (n *NetworkInstance_TableConnectionPathAny) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPathAny {
	return &NetworkInstance_TableConnection_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/src-protocol"
func (n *NetworkInstance_TableConnectionPath) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPath {
	return &NetworkInstance_TableConnection_SrcProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/src-protocol"
func (n *NetworkInstance_TableConnectionPathAny) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPathAny {
	return &NetworkInstance_TableConnection_SrcProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_VlanPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPath struct {
	*ygot.NodePath
}

// NetworkInstance_VlanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/name YANG schema element.
type NetworkInstance_Vlan_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/name YANG schema element.
type NetworkInstance_Vlan_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/status YANG schema element.
type NetworkInstance_Vlan_StatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/status YANG schema element.
type NetworkInstance_Vlan_StatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPathAny struct {
	*ygot.NodePath
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/name"
func (n *NetworkInstance_VlanPath) Name() *NetworkInstance_Vlan_NamePath {
	return &NetworkInstance_Vlan_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/name"
func (n *NetworkInstance_VlanPathAny) Name() *NetworkInstance_Vlan_NamePathAny {
	return &NetworkInstance_Vlan_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/status"
func (n *NetworkInstance_VlanPath) Status() *NetworkInstance_Vlan_StatusPath {
	return &NetworkInstance_Vlan_StatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/status"
func (n *NetworkInstance_VlanPathAny) Status() *NetworkInstance_Vlan_StatusPathAny {
	return &NetworkInstance_Vlan_StatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/vlan-id"
func (n *NetworkInstance_VlanPath) VlanId() *NetworkInstance_Vlan_VlanIdPath {
	return &NetworkInstance_Vlan_VlanIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/vlan-id"
func (n *NetworkInstance_VlanPathAny) VlanId() *NetworkInstance_Vlan_VlanIdPathAny {
	return &NetworkInstance_Vlan_VlanIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Vlan_MemberPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member YANG schema element.
type NetworkInstance_Vlan_MemberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_MemberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member YANG schema element.
type NetworkInstance_Vlan_MemberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_Member_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member/state/interface YANG schema element.
type NetworkInstance_Vlan_Member_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_Member_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member/state/interface YANG schema element.
type NetworkInstance_Vlan_Member_InterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/vlans/vlan/members/member/state/interface"
func (n *NetworkInstance_Vlan_MemberPath) Interface() *NetworkInstance_Vlan_Member_InterfacePath {
	return &NetworkInstance_Vlan_Member_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/vlans/vlan/members/member/state/interface"
func (n *NetworkInstance_Vlan_MemberPathAny) Interface() *NetworkInstance_Vlan_Member_InterfacePathAny {
	return &NetworkInstance_Vlan_Member_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}
