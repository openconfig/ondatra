/*
Package telemetry is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /home/athena/go/pkg/mod/github.com/openconfig/ygot@v0.16.3/genutil/names.go
using the following YANG input files:
	- gnmi-collector-metadata.yang
	- public/release/models/acl/openconfig-acl.yang
	- public/release/models/acl/openconfig-packet-match.yang
	- public/release/models/aft/openconfig-aft.yang
	- public/release/models/ate/openconfig-ate-flow.yang
	- public/release/models/ate/openconfig-ate-intf.yang
	- public/release/models/bfd/openconfig-bfd.yang
	- public/release/models/bgp/openconfig-bgp-policy.yang
	- public/release/models/bgp/openconfig-bgp-types.yang
	- public/release/models/interfaces/openconfig-if-aggregate.yang
	- public/release/models/interfaces/openconfig-if-ethernet.yang
	- public/release/models/interfaces/openconfig-if-ip-ext.yang
	- public/release/models/interfaces/openconfig-if-ip.yang
	- public/release/models/interfaces/openconfig-interfaces.yang
	- public/release/models/isis/openconfig-isis.yang
	- public/release/models/lacp/openconfig-lacp.yang
	- public/release/models/lldp/openconfig-lldp-types.yang
	- public/release/models/lldp/openconfig-lldp.yang
	- public/release/models/local-routing/openconfig-local-routing.yang
	- public/release/models/mpls/openconfig-mpls-types.yang
	- public/release/models/multicast/openconfig-pim.yang
	- public/release/models/network-instance/openconfig-network-instance.yang
	- public/release/models/openconfig-extensions.yang
	- public/release/models/optical-transport/openconfig-transport-types.yang
	- public/release/models/ospf/openconfig-ospfv2.yang
	- public/release/models/platform/openconfig-platform-cpu.yang
	- public/release/models/platform/openconfig-platform-integrated-circuit.yang
	- public/release/models/platform/openconfig-platform-software.yang
	- public/release/models/platform/openconfig-platform-transceiver.yang
	- public/release/models/platform/openconfig-platform.yang
	- public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
	- public/release/models/policy/openconfig-policy-types.yang
	- public/release/models/qos/openconfig-qos-elements.yang
	- public/release/models/qos/openconfig-qos-interfaces.yang
	- public/release/models/qos/openconfig-qos-types.yang
	- public/release/models/qos/openconfig-qos.yang
	- public/release/models/rib/openconfig-rib-bgp.yang
	- public/release/models/segment-routing/openconfig-segment-routing-types.yang
	- public/release/models/system/openconfig-system.yang
	- public/release/models/types/openconfig-inet-types.yang
	- public/release/models/types/openconfig-types.yang
	- public/release/models/types/openconfig-yang-types.yang
	- public/release/models/vlan/openconfig-vlan.yang
	- public/third_party/ietf/iana-if-type.yang
	- public/third_party/ietf/ietf-inet-types.yang
	- public/third_party/ietf/ietf-interfaces.yang
	- public/third_party/ietf/ietf-yang-types.yang
Imported modules were sourced from:
	- public/release/models/...
	- public/third_party/ietf/...
*/
package telemetry

import (
	"github.com/openconfig/ygot/ygot"
)

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny struct {
	*ygot.NodePath
}

// Ipv4Segment (container): Details of the IPv4 segment interface of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) Ipv4Segment() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-segment"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Segment (container): Details of the IPv4 segment interface of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) Ipv4Segment() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-segment"},
			map[string]interface{}{},
			n,
		),
	}
}

// Loose (leaf): If this leaf is set the segment is identifier as a loose path
// segment, otherwise the path strictly follows the path specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/loose"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) Loose() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "loose"},
			map[string]interface{}{},
			n,
		),
	}
}

// Loose (leaf): If this leaf is set the segment is identifier as a loose path
// segment, otherwise the path strictly follows the path specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/loose"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) Loose() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "loose"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the segment being specified as part of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the segment being specified as part of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnnumberedHop (container): Details of the unnumbered interface segment of the
// ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unnumbered-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) UnnumberedHop() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"unnumbered-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnnumberedHop (container): Details of the unnumbered interface segment of the
// ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unnumbered-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) UnnumberedHop() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unnumbered-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf): The IPv4 address of the hop within the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): The IPv4 address of the hop within the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny struct {
	*ygot.NodePath
}

// InterfaceId (leaf): The identifier assigned to the link by the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath) InterfaceId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): The identifier assigned to the link by the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny) InterfaceId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The IPv4 router identtifier of the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The IPv4 router identtifier of the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny struct {
	*ygot.NodePath
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// IpInterfaceAddress (leaf): The restarting system's IP address on the interface via which the
// Grace LSA is being advertised.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) IpInterfaceAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpInterfaceAddress (leaf): The restarting system's IP address on the interface via which the
// Grace LSA is being advertised.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) IpInterfaceAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Period (leaf): The number of seconds that the router's neighbors should advertise
// the local system as fully adjacent regardless of database
// synchronization state
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/period"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) Period() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "period"},
			map[string]interface{}{},
			n,
		),
	}
}

// Period (leaf): The number of seconds that the router's neighbors should advertise
// the local system as fully adjacent regardless of database
// synchronization state
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/period"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) Period() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "period"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reason (leaf): The reason for the graceful restart event occurring, as advertised
// by the restarting system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) Reason() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reason (leaf): The reason for the graceful restart event occurring, as advertised
// by the restarting system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) Reason() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received within the Grace LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received within the Grace LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// InformationalCapabilities (container): Information related to the capabilities of the advertising
// router within the scope that the opaque RI LSA is being
// advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "informational-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) InformationalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath{
		NodePath: ygot.NewNodePath(
			[]string{"informational-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// InformationalCapabilities (container): Information related to the capabilities of the advertising
// router within the scope that the opaque RI LSA is being
// advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "informational-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) InformationalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"informational-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAdministrativeTags (container): Per-node administrative tags associated with the local system
// specified by the operator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) NodeAdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"node-administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAdministrativeTags (container): Per-node administrative tags associated with the local system
// specified by the operator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) NodeAdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"node-administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingAlgorithm (container): The algorithms supported for Segment Routing by the local system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) SegmentRoutingAlgorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingAlgorithm (container): The algorithms supported for Segment Routing by the local system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) SegmentRoutingAlgorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingSidLabelRange (container): The Segment Identifier (SID) or label ranges that are supported by
// the local system for Segment Routing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-sid-label-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) SegmentRoutingSidLabelRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-sid-label-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingSidLabelRange (container): The Segment Identifier (SID) or label ranges that are supported by
// the local system for Segment Routing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-sid-label-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) SegmentRoutingSidLabelRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-sid-label-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV of the Router Information opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV of the Router Information opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// ExperimentalTe (leaf): When this leaf is set to ture, the advertising system supports the
// experimental extensions to OSPF for TE described in RFC4973
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/experimental-te"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) ExperimentalTe() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "experimental-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExperimentalTe (leaf): When this leaf is set to ture, the advertising system supports the
// experimental extensions to OSPF for TE described in RFC4973
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/experimental-te"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) ExperimentalTe() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "experimental-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartCapable (leaf): When this leaf is set to true, the advertising system is capable of
// OSPF graceful restart.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-capable"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) GracefulRestartCapable() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-capable"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartCapable (leaf): When this leaf is set to true, the advertising system is capable of
// OSPF graceful restart.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-capable"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) GracefulRestartCapable() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-capable"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartHelper (leaf): When this leaf is set to true, the advertising system is capable of
// being a helper for OSPF graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-helper"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) GracefulRestartHelper() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-helper"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartHelper (leaf): When this leaf is set to true, the advertising system is capable of
// being a helper for OSPF graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-helper"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) GracefulRestartHelper() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-helper"},
			map[string]interface{}{},
			n,
		),
	}
}

// PointToPointOverLan (leaf): When this leaf is set to true, the advertising system supports treating
// LAN adjacencies as though they were point to point
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/point-to-point-over-lan"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) PointToPointOverLan() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "point-to-point-over-lan"},
			map[string]interface{}{},
			n,
		),
	}
}

// PointToPointOverLan (leaf): When this leaf is set to true, the advertising system supports treating
// LAN adjacencies as though they were point to point
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/point-to-point-over-lan"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) PointToPointOverLan() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "point-to-point-over-lan"},
			map[string]interface{}{},
			n,
		),
	}
}

// StubRouter (leaf): When this leaf is set to true, the advertising system is able to
// advertise its status as a stub router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/stub-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) StubRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "stub-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// StubRouter (leaf): When this leaf is set to true, the advertising system is able to
// advertise its status as a stub router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/stub-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) StubRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "stub-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (leaf): When this leaf is set to true, the advertising system supports OSPFv2
// traffic engineering capabilities
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (leaf): When this leaf is set to true, the advertising system supports OSPFv2
// traffic engineering capabilities
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny struct {
	*ygot.NodePath
}

// AdministrativeTags (leaf): The set of administrative tags assigned to the local system by
// the network operator. The meaning of these tags is opaque to OSPF
// - and their interpretation is per-domain specific
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath) AdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdministrativeTags (leaf): The set of administrative tags assigned to the local system by
// the network operator. The meaning of these tags is opaque to OSPF
// - and their interpretation is per-domain specific
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny) AdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny struct {
	*ygot.NodePath
}

// SupportedAlgorithms (leaf): A list of the algorithms that are supported for segment routing
// by the advertising system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/supported-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath) SupportedAlgorithms() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supported-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupportedAlgorithms (leaf): A list of the algorithms that are supported for segment routing
// by the advertising system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/supported-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny) SupportedAlgorithms() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supported-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// RangeSize (leaf): The number of entries within the range being described within the
// SID/Label range TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// RangeSize (leaf): The number of entries within the range being described within the
// SID/Label range TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabel (container): Sub-TLV used to advertise the SID or label associated with the
// subset of the SRGB being advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) SidLabel() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabel (container): Sub-TLV used to advertise the SID or label associated with the
// subset of the SRGB being advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) SidLabel() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received by the local system within the
// SR SID/Label Range TLV of the RI LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received by the local system within the
// SR SID/Label Range TLV of the RI LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny struct {
	*ygot.NodePath
}

// EntryType (leaf): The type of entry that is contained within the sub-TLV. The range may
// be represented as either a range of MPLS labels, or numeric segment
// identifiers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/entry-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath) EntryType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "entry-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EntryType (leaf): The type of entry that is contained within the sub-TLV. The range may
// be represented as either a range of MPLS labels, or numeric segment
// identifiers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/entry-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny) EntryType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "entry-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// FirstValue (leaf): The first value within the SRGB range being specified. The type of the
// entry is determined based on the value of the entry type as this value
// may represent either a segment identifier or an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/first-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath) FirstValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "first-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// FirstValue (leaf): The first value within the SRGB range being specified. The type of the
// entry is determined based on the value of the entry type as this value
// may represent either a segment identifier or an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/first-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny) FirstValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "first-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// Link (container): Parameters included in the Link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) Link() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath{
		NodePath: ygot.NewNodePath(
			[]string{"link"},
			map[string]interface{}{},
			n,
		),
	}
}

// Link (container): Parameters included in the Link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) Link() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAttribute (container): Parameters included in the Node Attribute TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) NodeAttribute() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"node-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAttribute (container): Parameters included in the Node Attribute TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) NodeAttribute() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"node-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterAddress (container): Parameters included in the Router Address TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) RouterAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"router-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterAddress (container): Parameters included in the Router Address TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) RouterAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV within the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV within the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny struct {
	*ygot.NodePath
}

// AdminGroupAny (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) AdminGroupAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": "*"},
			n,
		),
	}
}

// AdminGroupAny (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) AdminGroupAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": "*"},
			n,
		),
	}
}

// AdminGroup (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) AdminGroup(BitIndex uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": BitIndex},
			n,
		),
	}
}

// AdminGroup (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) AdminGroup(BitIndex uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": BitIndex},
			n,
		),
	}
}

// LinkId (leaf): The ID of the remote system. For point-to-point links, this is the
// router ID of the neighbor. For multi-access links it is the address
// of the designated router.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The ID of the remote system. For point-to-point links, this is the
// router ID of the neighbor. For multi-access links it is the address
// of the designated router.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of the link that is being described by the TE LSA Link
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of the link that is being described by the TE LSA Link
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpAddress (leaf): The IP address(es) of the local system that correspond to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) LocalIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpAddress (leaf): The IP address(es) of the local system that correspond to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) LocalIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumBandwidth (leaf): The maximum bandwidth of the link. This value reflects the actual
// bandwidth of the link expressed asn IEEE 32-bit floating point
// number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) MaximumBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumBandwidth (leaf): The maximum bandwidth of the link. This value reflects the actual
// bandwidth of the link expressed asn IEEE 32-bit floating point
// number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) MaximumBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumReservableBandwidth (leaf): The maximum reservable bandwidth for the link. This value represents
// the total bandwidth which may be used for traffic engineering
// purposes. The value may exceed the maximum-bandwidth value
// in cases where the link is oversubscribed. The value is reflected as
// a 32-bit IEEE floating-point number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-reservable-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) MaximumReservableBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-reservable-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumReservableBandwidth (leaf): The maximum reservable bandwidth for the link. This value represents
// the total bandwidth which may be used for traffic engineering
// purposes. The value may exceed the maximum-bandwidth value
// in cases where the link is oversubscribed. The value is reflected as
// a 32-bit IEEE floating-point number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-reservable-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) MaximumReservableBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-reservable-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric of the link that should be used for traffic engineering
// purposes. This link may be different than the standard OSPF link
// metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric of the link that should be used for traffic engineering
// purposes. This link may be different than the standard OSPF link
// metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpAddress (leaf): The IP address(es) of the remote systems that are attached to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) RemoteIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpAddress (leaf): The IP address(es) of the remote systems that are attached to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) RemoteIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-TLV type specified in the Link TLV. When the value is
// known by the local system, a canonical name of the sub-TLV is utilised
// - the special UNKNOWN value indicates that the system did not
// support the sub-TLV type received in the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-TLV type specified in the Link TLV. When the value is
// known by the local system, a canonical name of the sub-TLV is utilised
// - the special UNKNOWN value indicates that the system did not
// support the sub-TLV type received in the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownType (leaf): The value of the type field of an unknown sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnknownType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownType (leaf): The value of the type field of an unknown sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnknownType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownValue (leaf): The binary contents of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnknownValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownValue (leaf): The binary contents of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnknownValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnreservedBandwidthAny (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnreservedBandwidthAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// UnreservedBandwidthAny (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnreservedBandwidthAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// UnreservedBandwidth (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnreservedBandwidth(Priority uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// UnreservedBandwidth (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnreservedBandwidth(Priority uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny struct {
	*ygot.NodePath
}

// BitIndex (leaf): The index of the bit within the 32-bit administrative group field
// of the Administrative Group sub-TLV of the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bit-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath) BitIndex() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bit-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// BitIndex (leaf): The index of the bit within the 32-bit administrative group field
// of the Administrative Group sub-TLV of the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bit-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny) BitIndex() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bit-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): Whether the bit is set within the administrative group field
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath) Set() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): Whether the bit is set within the administrative group field
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny) Set() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny struct {
	*ygot.NodePath
}

// Priority (leaf): The priority level being described
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The priority level being described
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnreservedBandwidth (leaf): The unreserved bandwidth for at priority level P, where P is
// equal to the priority of the current list entry. The reservable
// bandwidth at priority P is equal to the sum of the reservable
// bandwidth at all levels 0..P.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath) UnreservedBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unreserved-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnreservedBandwidth (leaf): The unreserved bandwidth for at priority level P, where P is
// equal to the priority of the current list entry. The reservable
// bandwidth at priority P is equal to the sum of the reservable
// bandwidth at all levels 0..P.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny) UnreservedBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unreserved-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny struct {
	*ygot.NodePath
}

// LocalIpv4Addresses (leaf): The local IPv4 addresses of the node expressed in CIDR notation
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) LocalIpv4Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv4Addresses (leaf): The local IPv4 addresses of the node expressed in CIDR notation
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) LocalIpv4Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Addresses (leaf): The local IPv6 addreses of the node
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) LocalIpv6Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Addresses (leaf): The local IPv6 addreses of the node
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) LocalIpv6Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV of the Node Attribute TLV contained within
// the TE LSA. If the local system can interpret the value received the
// canonical name of the type is utilised, otherwise the special UNKNOWN
// value is used
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV of the Node Attribute TLV contained within
// the TE LSA. If the local system can interpret the value received the
// canonical name of the type is utilised, otherwise the special UNKNOWN
// value is used
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf): A stable IP address of the advertising router, that is always
// reachable when the router is connected to the network. Typically this
// is a loopback address.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): A stable IP address of the advertising router, that is always
// reachable when the router is connected to the network. Typically this
// is a loopback address.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny struct {
	*ygot.NodePath
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1) Neighbouring router's router ID.
//  2) IP address of DR.
//  3) IP network address.
//  4) Neighbouring router router's ID.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1) Neighbouring router's router ID.
//  2) IP address of DR.
//  3) IP network address.
//  4) Neighbouring router router's ID.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost of utilising the link specified independent of TOS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost of utilising the link specified independent of TOS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberLinks (leaf): The number of links that are described within the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-links"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) NumberLinks() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-links"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberLinks (leaf): The number of links that are described within the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-links"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) NumberLinks() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-links"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberTosMetrics (leaf): The number of different TOS metrics given for this link, not
// including the link metric (which is referred to as TOS 0).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-tos-metrics"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) NumberTosMetrics() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-tos-metrics"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberTosMetrics (leaf): The number of different TOS metrics given for this link, not
// including the link metric (which is referred to as TOS 0).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-tos-metrics"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) NumberTosMetrics() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-tos-metrics"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-type of the Router LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-type of the Router LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny struct {
	*ygot.NodePath
}

// NetworkMask (leaf): The mask of the network described by the Summary LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkMask (leaf): The mask of the network described by the Summary LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny struct {
	*ygot.NodePath
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPath) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetranmissionQueueLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retranmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetranmissionQueueLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetranmissionQueueLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retranmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetranmissionQueueLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny struct {
	*ygot.NodePath
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetranmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retranmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retranmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) RetranmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetranmissionQueueLengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetranmissionQueueLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retranmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetranmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retranmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retranmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) RetranmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetranmissionQueueLengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetranmissionQueueLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retranmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny struct {
	*ygot.NodePath
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [UnionUint32, UnionString]
// DstArea (wildcarded): [UnionUint32, UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [UnionUint32, UnionString]
// DstArea (wildcarded): [UnionUint32, UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [UnionUint32, UnionString]
// DstArea (wildcarded): [UnionUint32, UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnyDstArea(SrcArea NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [UnionUint32, UnionString]
// DstArea (wildcarded): [UnionUint32, UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnyDstArea(SrcArea NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [UnionUint32, UnionString]
// DstArea: [UnionUint32, UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnySrcArea(DstArea NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [UnionUint32, UnionString]
// DstArea: [UnionUint32, UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnySrcArea(DstArea NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [UnionUint32, UnionString]
// DstArea: [UnionUint32, UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicy(SrcArea NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [UnionUint32, UnionString]
// DstArea: [UnionUint32, UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicy(SrcArea NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny struct {
	*ygot.NodePath
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny struct {
	*ygot.NodePath
}

// Include (leaf): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Include (leaf): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_PimPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_PimPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPathAny struct {
	*ygot.NodePath
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPath) Global() *NetworkInstance_Protocol_Pim_GlobalPath {
	return &NetworkInstance_Protocol_Pim_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPathAny) Global() *NetworkInstance_Protocol_Pim_GlobalPathAny {
	return &NetworkInstance_Protocol_Pim_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPath) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPathAny) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePath {
	return &NetworkInstance_Protocol_Pim_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_NeighborCountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count YANG schema element.
type NetworkInstance_Protocol_Pim_Global_NeighborCountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count YANG schema element.
type NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny struct {
	*ygot.NodePath
}

// Counters (container): Global PIM counters.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Counters() *NetworkInstance_Protocol_Pim_Global_CountersPath {
	return &NetworkInstance_Protocol_Pim_Global_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Global PIM counters.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Counters() *NetworkInstance_Protocol_Pim_Global_CountersPathAny {
	return &NetworkInstance_Protocol_Pim_Global_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCount (leaf): Number of adjacent PIM neighbors.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) NeighborCount() *NetworkInstance_Protocol_Pim_Global_NeighborCountPath {
	return &NetworkInstance_Protocol_Pim_Global_NeighborCountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCount (leaf): Number of adjacent PIM neighbors.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) NeighborCount() *NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny {
	return &NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPath{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// SourceAny (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) SourceAny() *NetworkInstance_Protocol_Pim_Global_SourcePathAny {
	return &NetworkInstance_Protocol_Pim_Global_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// SourceAny (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) SourceAny() *NetworkInstance_Protocol_Pim_Global_SourcePathAny {
	return &NetworkInstance_Protocol_Pim_Global_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// Source (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Source(Address string) *NetworkInstance_Protocol_Pim_Global_SourcePath {
	return &NetworkInstance_Protocol_Pim_Global_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Source (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Source(Address string) *NetworkInstance_Protocol_Pim_Global_SourcePathAny {
	return &NetworkInstance_Protocol_Pim_Global_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPath {
	return &NetworkInstance_Protocol_Pim_Global_SsmPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPathAny {
	return &NetworkInstance_Protocol_Pim_Global_SsmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Global_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Global_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny struct {
	*ygot.NodePath
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPath) BootstrapMessages() *NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath {
	return &NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPathAny) BootstrapMessages() *NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPath) HelloMessages() *NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath {
	return &NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPathAny) HelloMessages() *NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPath) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath {
	return &NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPathAny) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny struct {
	*ygot.NodePath
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny struct {
	*ygot.NodePath
}

// Address (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePath) Address() *NetworkInstance_Protocol_Pim_Global_Source_AddressPath {
	return &NetworkInstance_Protocol_Pim_Global_Source_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePathAny) Address() *NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePath) Group() *NetworkInstance_Protocol_Pim_Global_Source_GroupPath {
	return &NetworkInstance_Protocol_Pim_Global_Source_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePathAny) Group() *NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpstreamInterfaceId (leaf): The upstream interface for this multicast source.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/upstream-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePath) UpstreamInterfaceId() *NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath {
	return &NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "upstream-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpstreamInterfaceId (leaf): The upstream interface for this multicast source.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/upstream-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePathAny) UpstreamInterfaceId() *NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "upstream-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_SsmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_SsmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny struct {
	*ygot.NodePath
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPath) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPathAny) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePathAny struct {
	*ygot.NodePath
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPath {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPath {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): PIM counters for each interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Counters() *NetworkInstance_Protocol_Pim_Interface_CountersPath {
	return &NetworkInstance_Protocol_Pim_Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): PIM counters for each interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Counters() *NetworkInstance_Protocol_Pim_Interface_CountersPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPath {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPath {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePath {
	return &NetworkInstance_Protocol_Pim_Interface_ModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_ModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_InterfacePath) NeighborAny() *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// NeighborAny (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) NeighborAny() *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// Neighbor (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Pim_Interface_NeighborPath {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// Neighbor (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny struct {
	*ygot.NodePath
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPath) BootstrapMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPathAny) BootstrapMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPath) HelloMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPathAny) HelloMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPath) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPathAny) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny struct {
	*ygot.NodePath
}

// DrAddress (leaf): IPv4 address of designated router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) DrAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrAddress (leaf): IPv4 address of designated router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) DrAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode in use when delivering multicast traffic
// via this neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) Mode() *NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode in use when delivering multicast traffic
// via this neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) Mode() *NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): IPv4 address of neighbor router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) NeighborAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): IPv4 address of neighbor router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) NeighborAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborEstablished (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency established. It is expressed
// relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// The PIM session uptime can be computed by clients
// as the difference between this value and the
// current time in UTC.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-established"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) NeighborEstablished() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-established"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborEstablished (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency established. It is expressed
// relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// The PIM session uptime can be computed by clients
// as the difference between this value and the
// current time in UTC.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-established"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) NeighborEstablished() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-established"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExpires (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency will expire should hello
// messages fail to arrive from the neighbor. The value
// is expressed relative to the Unix Epoch (Jan 1, 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) NeighborExpires() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExpires (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency will expire should hello
// messages fail to arrive from the neighbor. The value
// is expressed relative to the Unix Epoch (Jan 1, 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) NeighborExpires() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_StaticPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_StaticPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPathAny struct {
	*ygot.NodePath
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/description"
func (n *NetworkInstance_Protocol_StaticPath) Description() *NetworkInstance_Protocol_Static_DescriptionPath {
	return &NetworkInstance_Protocol_Static_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/description"
func (n *NetworkInstance_Protocol_StaticPathAny) Description() *NetworkInstance_Protocol_Static_DescriptionPathAny {
	return &NetworkInstance_Protocol_Static_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPath) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPath) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix"
func (n *NetworkInstance_Protocol_StaticPath) Prefix() *NetworkInstance_Protocol_Static_PrefixPath {
	return &NetworkInstance_Protocol_Static_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix"
func (n *NetworkInstance_Protocol_StaticPathAny) Prefix() *NetworkInstance_Protocol_Static_PrefixPathAny {
	return &NetworkInstance_Protocol_Static_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag"
func (n *NetworkInstance_Protocol_StaticPath) SetTag() *NetworkInstance_Protocol_Static_SetTagPath {
	return &NetworkInstance_Protocol_Static_SetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag"
func (n *NetworkInstance_Protocol_StaticPathAny) SetTag() *NetworkInstance_Protocol_Static_SetTagPathAny {
	return &NetworkInstance_Protocol_Static_SetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePathAny struct {
	*ygot.NodePath
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPath) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPath {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPath) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric which is utilised to specify the preference of
// the next-hop entry when it is injected into the RIB. The
// lower the metric, the more preferable the prefix is. When
// this value is not specified the metric is inherited from
// the default metric utilised for static routes within the
// network instance that the static routes are being
// instantiated. When multiple next-hops are specified for a
// static route, the metric is utilised to determine which of
// the next-hops is to be installed in the RIB. When multiple
// next-hops have the same metric (be it specified, or simply
// the default) then these next-hops should all be installed
// in the RIB
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPath {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric which is utilised to specify the preference of
// the next-hop entry when it is injected into the RIB. The
// lower the metric, the more preferable the prefix is. When
// this value is not specified the metric is inherited from
// the default metric utilised for static routes within the
// network instance that the static routes are being
// instantiated. When multiple next-hops are specified for a
// static route, the metric is utilised to determine which of
// the next-hops is to be installed in the RIB. When multiple
// next-hops have the same metric (be it specified, or simply
// the default) then these next-hops should all be installed
// in the RIB
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPath) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePath {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_RouteLimitPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_InstalledRoutesPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/installed-routes YANG schema element.
type NetworkInstance_RouteLimit_InstalledRoutesPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_InstalledRoutesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/installed-routes YANG schema element.
type NetworkInstance_RouteLimit_InstalledRoutesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_ThresholdExceededPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded YANG schema element.
type NetworkInstance_RouteLimit_ThresholdExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_ThresholdExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded YANG schema element.
type NetworkInstance_RouteLimit_ThresholdExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPathAny struct {
	*ygot.NodePath
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/afi"
func (n *NetworkInstance_RouteLimitPath) Afi() *NetworkInstance_RouteLimit_AfiPath {
	return &NetworkInstance_RouteLimit_AfiPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/afi"
func (n *NetworkInstance_RouteLimitPathAny) Afi() *NetworkInstance_RouteLimit_AfiPathAny {
	return &NetworkInstance_RouteLimit_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold"
func (n *NetworkInstance_RouteLimitPath) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPath {
	return &NetworkInstance_RouteLimit_AlarmThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold"
func (n *NetworkInstance_RouteLimitPathAny) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPathAny {
	return &NetworkInstance_RouteLimit_AlarmThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstalledRoutes (leaf): The current number of routes installed for the address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/installed-routes"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/installed-routes"
func (n *NetworkInstance_RouteLimitPath) InstalledRoutes() *NetworkInstance_RouteLimit_InstalledRoutesPath {
	return &NetworkInstance_RouteLimit_InstalledRoutesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "installed-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstalledRoutes (leaf): The current number of routes installed for the address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/installed-routes"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/installed-routes"
func (n *NetworkInstance_RouteLimitPathAny) InstalledRoutes() *NetworkInstance_RouteLimit_InstalledRoutesPathAny {
	return &NetworkInstance_RouteLimit_InstalledRoutesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "installed-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/maximum"
func (n *NetworkInstance_RouteLimitPath) Maximum() *NetworkInstance_RouteLimit_MaximumPath {
	return &NetworkInstance_RouteLimit_MaximumPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/maximum"
func (n *NetworkInstance_RouteLimitPathAny) Maximum() *NetworkInstance_RouteLimit_MaximumPathAny {
	return &NetworkInstance_RouteLimit_MaximumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdExceeded (leaf): This leaf should be set to true in the case that the threshold
// number of routes has been exceeded.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/threshold-exceeded"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded"
func (n *NetworkInstance_RouteLimitPath) ThresholdExceeded() *NetworkInstance_RouteLimit_ThresholdExceededPath {
	return &NetworkInstance_RouteLimit_ThresholdExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "threshold-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdExceeded (leaf): This leaf should be set to true in the case that the threshold
// number of routes has been exceeded.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/threshold-exceeded"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded"
func (n *NetworkInstance_RouteLimitPathAny) ThresholdExceeded() *NetworkInstance_RouteLimit_ThresholdExceededPathAny {
	return &NetworkInstance_RouteLimit_ThresholdExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "threshold-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/warning-only"
func (n *NetworkInstance_RouteLimitPath) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPath {
	return &NetworkInstance_RouteLimit_WarningOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/warning-only"
func (n *NetworkInstance_RouteLimitPathAny) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPathAny {
	return &NetworkInstance_RouteLimit_WarningOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPath {
	return &NetworkInstance_SegmentRouting_SrgbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPath {
	return &NetworkInstance_SegmentRouting_SrlbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// TePolicyAny (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) TePolicyAny() *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAny (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicyAny() *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAnyEndpoint (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) TePolicyAnyEndpoint(Color uint32) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAnyEndpoint (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicyAnyEndpoint(Color uint32) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAnyColor (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPath) TePolicyAnyColor(Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": Endpoint},
			n,
		),
	}
}

// TePolicyAnyColor (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicyAnyColor(Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": Endpoint},
			n,
		),
	}
}

// TePolicy (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPath) TePolicy(Color uint32, Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPath {
	return &NetworkInstance_SegmentRouting_TePolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": Endpoint},
			n,
		),
	}
}

// TePolicy (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicy(Color uint32, Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": Endpoint},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrgbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrgbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_SizePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/size YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_SizePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_SizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/size YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_SizePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_UsedPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/used YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_UsedPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_UsedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/used YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_UsedPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPath) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPath) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The total number of SRGB entries that are available within the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/size"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Size() *NetworkInstance_SegmentRouting_Srgb_SizePath {
	return &NetworkInstance_SegmentRouting_Srgb_SizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The total number of SRGB entries that are available within the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/size"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Size() *NetworkInstance_SegmentRouting_Srgb_SizePathAny {
	return &NetworkInstance_SegmentRouting_Srgb_SizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Used (leaf): The total number of SRGB entries that have already been alocated by
// protocols referencing the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/used"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/used"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Used() *NetworkInstance_SegmentRouting_Srgb_UsedPath {
	return &NetworkInstance_SegmentRouting_Srgb_UsedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "used"},
			map[string]interface{}{},
			n,
		),
	}
}

// Used (leaf): The total number of SRGB entries that have already been alocated by
// protocols referencing the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/used"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/used"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Used() *NetworkInstance_SegmentRouting_Srgb_UsedPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_UsedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "used"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrlbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrlbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPath) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPath) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPath) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicyPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy YANG schema element.
type NetworkInstance_SegmentRouting_TePolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy YANG schema element.
type NetworkInstance_SegmentRouting_TePolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActivePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActivePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_BsidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_BsidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_BsidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_BsidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ColorPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ColorPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ColorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ColorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_EndpointPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_NamePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_NamePathAny struct {
	*ygot.NodePath
}

// Active (leaf): A SR-TE policy is marked as active when at least one of its
// candidate paths is valid/active and the policy has been
// instantiated in the forwarding plane.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Active() *NetworkInstance_SegmentRouting_TePolicy_ActivePath {
	return &NetworkInstance_SegmentRouting_TePolicy_ActivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// Active (leaf): A SR-TE policy is marked as active when at least one of its
// candidate paths is valid/active and the policy has been
// instantiated in the forwarding plane.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Active() *NetworkInstance_SegmentRouting_TePolicy_ActivePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ActivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the policy transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the Unix
// Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the policy transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the Unix
// Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bsid (leaf): The Binding SID (BSID) assigned to the SR-TE policy,
// expressed as an MPLS label or IPv6 address. Packets that are
// ingress to the system with active segment matching the SID
// value specified in this leaf should be forwarded according
// to the policy. The specified Binding SID must be removed
// from the segment list by the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Bsid() *NetworkInstance_SegmentRouting_TePolicy_BsidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_BsidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bsid (leaf): The Binding SID (BSID) assigned to the SR-TE policy,
// expressed as an MPLS label or IPv6 address. Packets that are
// ingress to the system with active segment matching the SID
// value specified in this leaf should be forwarded according
// to the policy. The specified Binding SID must be removed
// from the segment list by the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Bsid() *NetworkInstance_SegmentRouting_TePolicy_BsidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_BsidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsid"},
			map[string]interface{}{},
			n,
		),
	}
}

// CandidatePathAny (list): An individual candidate path within the list of candidate
// paths associated with this SR-TE policy. It is uniquely
// identified by the combination of protocol-origin,
// originator and discriminator
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-paths/candidate-path"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) CandidatePathAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-paths", "candidate-path"},
			map[string]interface{}{"protocol-origin": "*", "originator-asn": "*", "originator-addr": "*", "discriminator": "*"},
			n,
		),
	}
}

// CandidatePathAny (list): An individual candidate path within the list of candidate
// paths associated with this SR-TE policy. It is uniquely
// identified by the combination of protocol-origin,
// originator and discriminator
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-paths/candidate-path"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) CandidatePathAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-paths", "candidate-path"},
			map[string]interface{}{"protocol-origin": "*", "originator-asn": "*", "originator-addr": "*", "discriminator": "*"},
			n,
		),
	}
}

// WithProtocolOrigin sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "protocol-origin" to the specified value.
// ProtocolOrigin: E_SegmentRoutingTypes_SrteProtocolType
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithProtocolOrigin(ProtocolOrigin E_SegmentRoutingTypes_SrteProtocolType) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "protocol-origin", ProtocolOrigin)
	return n
}

// WithOriginatorAsn sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "originator-asn" to the specified value.
// OriginatorAsn: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithOriginatorAsn(OriginatorAsn uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "originator-asn", OriginatorAsn)
	return n
}

// WithOriginatorAddr sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "originator-addr" to the specified value.
// OriginatorAddr: string
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithOriginatorAddr(OriginatorAddr string) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "originator-addr", OriginatorAddr)
	return n
}

// WithDiscriminator sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "discriminator" to the specified value.
// Discriminator: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithDiscriminator(Discriminator uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "discriminator", Discriminator)
	return n
}

// Color (leaf): When the policy is used for RIB resolution to a specific
// Segment Routing Traffic Engineering path, the policy is used
// when the color required in the policy (which may be specified
// based on the value of a BGP extended colour community) matches
// the value of this leaf. The color being set to 0 indicates
// that the colour is a wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/color"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Color() *NetworkInstance_SegmentRouting_TePolicy_ColorPath {
	return &NetworkInstance_SegmentRouting_TePolicy_ColorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "color"},
			map[string]interface{}{},
			n,
		),
	}
}

// Color (leaf): When the policy is used for RIB resolution to a specific
// Segment Routing Traffic Engineering path, the policy is used
// when the color required in the policy (which may be specified
// based on the value of a BGP extended colour community) matches
// the value of this leaf. The color being set to 0 indicates
// that the colour is a wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/color"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Color() *NetworkInstance_SegmentRouting_TePolicy_ColorPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ColorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "color"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of counters on the policy level. They
// count the total traffic forwarded by the policy,
// regardless of its installation source. The counters
// should be persistent across policy state changes and
// switches between active protocols.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Counters() *NetworkInstance_SegmentRouting_TePolicy_CountersPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of counters on the policy level. They
// count the total traffic forwarded by the policy,
// regardless of its installation source. The counters
// should be persistent across policy state changes and
// switches between active protocols.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Counters() *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): When the policy is used for RIB resolution to a Segment
// Routing Traffic Engineering path, the policy is used when the
// required endpoint (which may be the protocol next-hop) matches
// the endpoint address specified in this leaf. When the leaf is
// set to all zeros (0.0.0.0 or ::), the endpoint acts as a
// wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Endpoint() *NetworkInstance_SegmentRouting_TePolicy_EndpointPath {
	return &NetworkInstance_SegmentRouting_TePolicy_EndpointPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): When the policy is used for RIB resolution to a Segment
// Routing Traffic Engineering path, the policy is used when the
// required endpoint (which may be the protocol next-hop) matches
// the endpoint address specified in this leaf. When the leaf is
// set to all zeros (0.0.0.0 or ::), the endpoint acts as a
// wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Endpoint() *NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE policy name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Name() *NetworkInstance_SegmentRouting_TePolicy_NamePath {
	return &NetworkInstance_SegmentRouting_TePolicy_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE policy name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Name() *NetworkInstance_SegmentRouting_TePolicy_NamePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny struct {
	*ygot.NodePath
}

// Active (leaf): A candidate path is active when it is valid and it is
// determined to be the best path of the SR-TE Policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Active() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// Active (leaf): A candidate path is active when it is valid and it is
// determined to be the best path of the SR-TE Policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Active() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the path transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the
// Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the path transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the
// Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the candidate
// path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the candidate
// path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discriminator (leaf): A 32 bit value uniquely identifying the path within the
// context of a policy learnt from a protocol.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discriminator"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Discriminator() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discriminator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discriminator (leaf): A 32 bit value uniquely identifying the path within the
// context of a policy learnt from a protocol.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discriminator"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Discriminator() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discriminator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enlp (leaf): ENLP (Explicit NULL Label Policy) indicates whether Explicit
// NULL labels are to be pushed on unlabeled IP packets that are
// being steered into a given SR policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enlp"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Enlp() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enlp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enlp (leaf): ENLP (Explicit NULL Label Policy) indicates whether Explicit
// NULL labels are to be pushed on unlabeled IP packets that are
// being steered into a given SR policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enlp"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Enlp() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enlp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE candidate path name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Name() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE candidate path name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Name() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAddr (leaf): The address of the node originating the candidate path.
// Address in IPv4 can be represented as IPv6-encoded-IPv4 e.g.
// ::FFFF:192.168.1.2 or a normal IPv6 address with the lowest
// 32 bits carrying the actual IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-addr"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) OriginatorAddr() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-addr"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAddr (leaf): The address of the node originating the candidate path.
// Address in IPv4 can be represented as IPv6-encoded-IPv4 e.g.
// ::FFFF:192.168.1.2 or a normal IPv6 address with the lowest
// 32 bits carrying the actual IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-addr"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) OriginatorAddr() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-addr"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAsn (leaf): The autonomous system that node originating the candidate
// path locates.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-asn"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) OriginatorAsn() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-asn"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAsn (leaf): The autonomous system that node originating the candidate
// path locates.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-asn"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) OriginatorAsn() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-asn"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When there are multiple candidate paths specified a
// particular SR-TE policy. The preference is used to resolve
// between them. And the one with higher preference is
// preferred.
// These paths may be learnt from a dynamic routing protocol,
// or interface to the device, or from other static entries
// configured on the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Preference() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When there are multiple candidate paths specified a
// particular SR-TE policy. The preference is used to resolve
// between them. And the one with higher preference is
// preferred.
// These paths may be learnt from a dynamic routing protocol,
// or interface to the device, or from other static entries
// configured on the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Preference() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtocolOrigin (leaf): The component or protocol that originates or signals the
// candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol-origin"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) ProtocolOrigin() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol-origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtocolOrigin (leaf): The component or protocol that originates or signals the
// candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol-origin"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) ProtocolOrigin() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol-origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentListAny (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id (wildcarded): uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) SegmentListAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// SegmentListAny (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id (wildcarded): uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) SegmentListAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// SegmentList (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) SegmentList(Id uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// SegmentList (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) SegmentList(Id uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Valid (leaf): A path should be marked as valid when it is usable e.g. the
// at least one segment-list is valid even though the path may
// not be the best.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Valid (leaf): A path should be marked as valid when it is usable e.g. the
// at least one segment-list is valid even though the path may
// not be the best.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny struct {
	*ygot.NodePath
}

// Counters (container): The counters of traffic steered to the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): The counters of traffic steered to the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique id identifying the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Id() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique id identifying the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Id() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If a segment-list is marked as invalid, this leaf should
// indicate the reason.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) InvalidReason() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If a segment-list is marked as invalid, this leaf should
// indicate the reason.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) InvalidReason() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopAny (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) NextHopAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHopAny (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) NextHopAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHop (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) NextHop(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// NextHop (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) NextHop(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// SidAny (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) SidAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// SidAny (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) SidAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Sid (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Sid(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Sid (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Sid(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Valid (leaf): The validity of a segment-list should marked as true
// when it is usable.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Valid (leaf): The validity of a segment-list should marked as true
// when it is usable.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the segment list within the set of
// segment lists specified for the candidate path. The
// traffic that is forwarded according to the policy is
// distributed across the set of segment-lists such that
// each list receives weight/(sum of all weights) traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Weight() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the segment list within the set of
// segment lists specified for the candidate path. The
// traffic that is forwarded according to the policy is
// distributed across the set of segment-lists such that
// each list receives weight/(sum of all weights) traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Weight() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny struct {
	*ygot.NodePath
}

// Counters (container): The counters of traffic steered to the segment-list on
// per next-hop basis.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): The counters of traffic steered to the segment-list on
// per next-hop basis.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateHeader (leaf): When forwarding a packet to the specified next-hop the local
// system performs an encapsulation of the packet - adding the
// specified header type.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/encapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) EncapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "encapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateHeader (leaf): When forwarding a packet to the specified next-hop the local
// system performs an encapsulation of the packet - adding the
// specified header type.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/encapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) EncapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "encapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): A unique entry for the next-hop.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): A unique entry for the next-hop.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) InterfaceRef() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) InterfaceRef() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpAddress (leaf): The IP address of the next-hop system.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) IpAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpAddress (leaf): The IP address of the next-hop system.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) IpAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): The MAC address of the next-hop if resolved by the local
// network instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) MacAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): The MAC address of the next-hop if resolved by the local
// network instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) MacAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginProtocol (leaf): The protocol from which the AFT entry was learned.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin-protocol"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) OriginProtocol() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginProtocol (leaf): The protocol from which the AFT entry was learned.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin-protocol"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) OriginProtocol() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// PopTopLabel (leaf): Flag that controls pop action, i.e., the top-most MPLS label
// should be popped from the packet when switched by the system.
//
// The top-most MPLS label associated with pop action is equal to
// the label key used in 'mpls' AFT 'label-entry' list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pop-top-label"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) PopTopLabel() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pop-top-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PopTopLabel (leaf): Flag that controls pop action, i.e., the top-most MPLS label
// should be popped from the packet when switched by the system.
//
// The top-most MPLS label associated with pop action is equal to
// the label key used in 'mpls' AFT 'label-entry' list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pop-top-label"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) PopTopLabel() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pop-top-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProgrammedIndex (leaf): In some routing protocols, or route injection mechanisms it
// is possible to set the index of the next-hop via configuration
// or the protocol itself. In some systems it may not be possible
// to maintain the index provided by an external client when
// advertising the same entry via telemetry.
//
// This leaf reflects the configured or client-supplied index of
// the next-hop. This allows a client to create an assocation or
// mapping back to the original index pushed by the client, and
// the ID used as a key in the next-hop AFT list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/programmed-index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) ProgrammedIndex() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "programmed-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProgrammedIndex (leaf): In some routing protocols, or route injection mechanisms it
// is possible to set the index of the next-hop via configuration
// or the protocol itself. In some systems it may not be possible
// to maintain the index provided by an external client when
// advertising the same entry via telemetry.
//
// This leaf reflects the configured or client-supplied index of
// the next-hop. This allows a client to create an assocation or
// mapping back to the original index pushed by the client, and
// the ID used as a key in the next-hop AFT list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/programmed-index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) ProgrammedIndex() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "programmed-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushedMplsLabelStack (leaf): The MPLS label stack imposed when forwarding packets to the
// next-hop
// - the stack is encoded as a leaf list whereby the order of the
//  entries is such that the first entry in the list is the
//  label at the bottom of the stack to be pushed.
//
// To this end, a packet which is to forwarded to a device using
// a service label of 42, and a transport label of 8072 will be
// represented with a label stack list of [42, 8072].
//
// The MPLS label stack list is ordered by the user, such that no
// system re-ordering of leaves is permitted by the system.
//
// A swap operation is reflected by entries in the
// popped-mpls-label-stack and pushed-mpls-label-stack nodes.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pushed-mpls-label-stack"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) PushedMplsLabelStack() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pushed-mpls-label-stack"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushedMplsLabelStack (leaf): The MPLS label stack imposed when forwarding packets to the
// next-hop
// - the stack is encoded as a leaf list whereby the order of the
//  entries is such that the first entry in the list is the
//  label at the bottom of the stack to be pushed.
//
// To this end, a packet which is to forwarded to a device using
// a service label of 42, and a transport label of 8072 will be
// represented with a label stack list of [42, 8072].
//
// The MPLS label stack list is ordered by the user, such that no
// system re-ordering of leaves is permitted by the system.
//
// A swap operation is reflected by entries in the
// popped-mpls-label-stack and pushed-mpls-label-stack nodes.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pushed-mpls-label-stack"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) PushedMplsLabelStack() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pushed-mpls-label-stack"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath) Interface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny) Interface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath) Subinterface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny) Subinterface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny struct {
	*ygot.NodePath
}

// Index (leaf): The index of the SID within the segment list. The segment list is
// applied by ordering the SID entries in ascending numerical order
// beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): The index of the SID within the segment list. The segment list is
// applied by ordering the SID entries in ascending numerical order
// beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The value of the MPLS Traffic Class (TC) bits to be used if the
// value of the SID is an MPLS label. In the case that the value is
// set to 0, then the local implementation should choose the value.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) MplsTc() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The value of the MPLS Traffic Class (TC) bits to be used if the
// value of the SID is an MPLS label. In the case that the value is
// set to 0, then the local implementation should choose the value.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) MplsTc() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The TTL to be set if the type of the SID is an MPLS label. If the
// value of the TTL is set to be 0, the value is picked by the local
// implementation.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) MplsTtl() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The TTL to be set if the type of the SID is an MPLS label. If the
// value of the TTL is set to be 0, the value is picked by the local
// implementation.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) MplsTtl() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value of the SID that is to be used. Specified as an MPLS
// label or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) Value() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value of the SID that is to be used. Specified as an MPLS
// label or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) Value() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// InLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the SR-TE policy. Labeled traffic carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the SR-TE policy. Labeled traffic carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the SR-TE policy. Labeled packets carries an active SID
// (top-most SID in the stack) that matches the BSID associated
// to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the SR-TE policy. Labeled packets carries an active SID
// (top-most SID in the stack) that matches the BSID associated
// to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total incoming bytes steered
// to the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total incoming bytes steered
// to the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the incoming packets steered to
// the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the incoming packets steered to
// the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of outgoing labeled
// traffic after being steered to the SR-TE policy. Labeled
// traffic carries an active SID (top-most SID in the stack) that
// matches the BSID associated to this policy. The counter should
// include the segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of outgoing labeled
// traffic after being steered to the SR-TE policy. Labeled
// traffic carries an active SID (top-most SID in the stack) that
// matches the BSID associated to this policy. The counter should
// include the segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the outgoing labeled packets after
// being steered to the SR-TE policy. Labeled packets carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the outgoing labeled packets after
// being steered to the SR-TE policy. Labeled packets carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes after
// being steered to the SR-TE policy. It includes both labeled
// and unlabeled steered traffic. The counter should include the
// segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes after
// being steered to the SR-TE policy. It includes both labeled
// and unlabeled steered traffic. The counter should include the
// segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets after being
// steered to the SR-TE policy. It includes both labeled and
// unlabeled steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets after being
// steered to the SR-TE policy. It includes both labeled and
// unlabeled steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TablePath represents the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePath struct {
	*ygot.NodePath
}

// NetworkInstance_TablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/state/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/state/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/state/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/state/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/tables/table/state/address-family"
func (n *NetworkInstance_TablePath) AddressFamily() *NetworkInstance_Table_AddressFamilyPath {
	return &NetworkInstance_Table_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/tables/table/state/address-family"
func (n *NetworkInstance_TablePathAny) AddressFamily() *NetworkInstance_Table_AddressFamilyPathAny {
	return &NetworkInstance_Table_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/tables/table/state/protocol"
func (n *NetworkInstance_TablePath) Protocol() *NetworkInstance_Table_ProtocolPath {
	return &NetworkInstance_Table_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/tables/table/state/protocol"
func (n *NetworkInstance_TablePathAny) Protocol() *NetworkInstance_Table_ProtocolPathAny {
	return &NetworkInstance_Table_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TableConnectionPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/address-family"
func (n *NetworkInstance_TableConnectionPath) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPath {
	return &NetworkInstance_TableConnection_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/address-family"
func (n *NetworkInstance_TableConnectionPathAny) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPathAny {
	return &NetworkInstance_TableConnection_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/default-import-policy"
func (n *NetworkInstance_TableConnectionPath) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPath {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/default-import-policy"
func (n *NetworkInstance_TableConnectionPathAny) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPathAny {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPath) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPath {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPathAny) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPathAny {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/dst-protocol"
func (n *NetworkInstance_TableConnectionPath) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPath {
	return &NetworkInstance_TableConnection_DstProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/dst-protocol"
func (n *NetworkInstance_TableConnectionPathAny) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPathAny {
	return &NetworkInstance_TableConnection_DstProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/import-policy"
func (n *NetworkInstance_TableConnectionPath) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPath {
	return &NetworkInstance_TableConnection_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/import-policy"
func (n *NetworkInstance_TableConnectionPathAny) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPathAny {
	return &NetworkInstance_TableConnection_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/src-protocol"
func (n *NetworkInstance_TableConnectionPath) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPath {
	return &NetworkInstance_TableConnection_SrcProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/src-protocol"
func (n *NetworkInstance_TableConnectionPathAny) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPathAny {
	return &NetworkInstance_TableConnection_SrcProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_VlanPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPath struct {
	*ygot.NodePath
}

// NetworkInstance_VlanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/name YANG schema element.
type NetworkInstance_Vlan_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/name YANG schema element.
type NetworkInstance_Vlan_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/status YANG schema element.
type NetworkInstance_Vlan_StatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/status YANG schema element.
type NetworkInstance_Vlan_StatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPathAny struct {
	*ygot.NodePath
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/name"
func (n *NetworkInstance_VlanPath) Name() *NetworkInstance_Vlan_NamePath {
	return &NetworkInstance_Vlan_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/name"
func (n *NetworkInstance_VlanPathAny) Name() *NetworkInstance_Vlan_NamePathAny {
	return &NetworkInstance_Vlan_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/status"
func (n *NetworkInstance_VlanPath) Status() *NetworkInstance_Vlan_StatusPath {
	return &NetworkInstance_Vlan_StatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/status"
func (n *NetworkInstance_VlanPathAny) Status() *NetworkInstance_Vlan_StatusPathAny {
	return &NetworkInstance_Vlan_StatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/vlan-id"
func (n *NetworkInstance_VlanPath) VlanId() *NetworkInstance_Vlan_VlanIdPath {
	return &NetworkInstance_Vlan_VlanIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/vlan-id"
func (n *NetworkInstance_VlanPathAny) VlanId() *NetworkInstance_Vlan_VlanIdPathAny {
	return &NetworkInstance_Vlan_VlanIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Vlan_MemberPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member YANG schema element.
type NetworkInstance_Vlan_MemberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_MemberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member YANG schema element.
type NetworkInstance_Vlan_MemberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_Member_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member/state/interface YANG schema element.
type NetworkInstance_Vlan_Member_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_Member_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member/state/interface YANG schema element.
type NetworkInstance_Vlan_Member_InterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/vlans/vlan/members/member/state/interface"
func (n *NetworkInstance_Vlan_MemberPath) Interface() *NetworkInstance_Vlan_Member_InterfacePath {
	return &NetworkInstance_Vlan_Member_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/vlans/vlan/members/member/state/interface"
func (n *NetworkInstance_Vlan_MemberPathAny) Interface() *NetworkInstance_Vlan_Member_InterfacePathAny {
	return &NetworkInstance_Vlan_Member_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// QosPath represents the /openconfig-qos/qos YANG schema element.
type QosPath struct {
	*ygot.NodePath
}

// QosPathAny represents the wildcard version of the /openconfig-qos/qos YANG schema element.
type QosPathAny struct {
	*ygot.NodePath
}

// BufferAllocationProfileAny (list): A buffer allocation profile describes a mapping between the queues
// that are instantiated on an interface and the memory that is allocated
// to them on the forwarding complex that they are instantiated. Profiles
// (like queues) are defined in the abstract and instantiated by being
// configured on a particular interface. Separate allocation profiles may
// be used for ingress and egress traffic, with the profile being specified
// within the /qos/interfaces/interface list.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "buffer-allocation-profiles/buffer-allocation-profile"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile"
// Name (wildcarded): string
func (n *QosPath) BufferAllocationProfileAny() *Qos_BufferAllocationProfilePathAny {
	return &Qos_BufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"buffer-allocation-profiles", "buffer-allocation-profile"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// BufferAllocationProfileAny (list): A buffer allocation profile describes a mapping between the queues
// that are instantiated on an interface and the memory that is allocated
// to them on the forwarding complex that they are instantiated. Profiles
// (like queues) are defined in the abstract and instantiated by being
// configured on a particular interface. Separate allocation profiles may
// be used for ingress and egress traffic, with the profile being specified
// within the /qos/interfaces/interface list.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "buffer-allocation-profiles/buffer-allocation-profile"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile"
// Name (wildcarded): string
func (n *QosPathAny) BufferAllocationProfileAny() *Qos_BufferAllocationProfilePathAny {
	return &Qos_BufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"buffer-allocation-profiles", "buffer-allocation-profile"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// BufferAllocationProfile (list): A buffer allocation profile describes a mapping between the queues
// that are instantiated on an interface and the memory that is allocated
// to them on the forwarding complex that they are instantiated. Profiles
// (like queues) are defined in the abstract and instantiated by being
// configured on a particular interface. Separate allocation profiles may
// be used for ingress and egress traffic, with the profile being specified
// within the /qos/interfaces/interface list.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "buffer-allocation-profiles/buffer-allocation-profile"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile"
// Name: string
func (n *QosPath) BufferAllocationProfile(Name string) *Qos_BufferAllocationProfilePath {
	return &Qos_BufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"buffer-allocation-profiles", "buffer-allocation-profile"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// BufferAllocationProfile (list): A buffer allocation profile describes a mapping between the queues
// that are instantiated on an interface and the memory that is allocated
// to them on the forwarding complex that they are instantiated. Profiles
// (like queues) are defined in the abstract and instantiated by being
// configured on a particular interface. Separate allocation profiles may
// be used for ingress and egress traffic, with the profile being specified
// within the /qos/interfaces/interface list.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "buffer-allocation-profiles/buffer-allocation-profile"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile"
// Name: string
func (n *QosPathAny) BufferAllocationProfile(Name string) *Qos_BufferAllocationProfilePathAny {
	return &Qos_BufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"buffer-allocation-profiles", "buffer-allocation-profile"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// ClassifierAny (list): List of classifier elements
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/classifiers/classifier"
// Name (wildcarded): string
func (n *QosPath) ClassifierAny() *Qos_ClassifierPathAny {
	return &Qos_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// ClassifierAny (list): List of classifier elements
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/classifiers/classifier"
// Name (wildcarded): string
func (n *QosPathAny) ClassifierAny() *Qos_ClassifierPathAny {
	return &Qos_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Classifier (list): List of classifier elements
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/classifiers/classifier"
// Name: string
func (n *QosPath) Classifier(Name string) *Qos_ClassifierPath {
	return &Qos_ClassifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Classifier (list): List of classifier elements
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/classifiers/classifier"
// Name: string
func (n *QosPathAny) Classifier(Name string) *Qos_ClassifierPathAny {
	return &Qos_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// ForwardingGroupAny (list): List of forwarding groups.  Forwarding groups are
// logical groups of traffic that will receive common
// forwarding treatment.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "forwarding-groups/forwarding-group"
// Path from root: "/qos/forwarding-groups/forwarding-group"
// Name (wildcarded): string
func (n *QosPath) ForwardingGroupAny() *Qos_ForwardingGroupPathAny {
	return &Qos_ForwardingGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"forwarding-groups", "forwarding-group"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// ForwardingGroupAny (list): List of forwarding groups.  Forwarding groups are
// logical groups of traffic that will receive common
// forwarding treatment.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "forwarding-groups/forwarding-group"
// Path from root: "/qos/forwarding-groups/forwarding-group"
// Name (wildcarded): string
func (n *QosPathAny) ForwardingGroupAny() *Qos_ForwardingGroupPathAny {
	return &Qos_ForwardingGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"forwarding-groups", "forwarding-group"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// ForwardingGroup (list): List of forwarding groups.  Forwarding groups are
// logical groups of traffic that will receive common
// forwarding treatment.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "forwarding-groups/forwarding-group"
// Path from root: "/qos/forwarding-groups/forwarding-group"
// Name: string
func (n *QosPath) ForwardingGroup(Name string) *Qos_ForwardingGroupPath {
	return &Qos_ForwardingGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"forwarding-groups", "forwarding-group"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// ForwardingGroup (list): List of forwarding groups.  Forwarding groups are
// logical groups of traffic that will receive common
// forwarding treatment.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "forwarding-groups/forwarding-group"
// Path from root: "/qos/forwarding-groups/forwarding-group"
// Name: string
func (n *QosPathAny) ForwardingGroup(Name string) *Qos_ForwardingGroupPathAny {
	return &Qos_ForwardingGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"forwarding-groups", "forwarding-group"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces referenced by QoS entities.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interfaces/interface"
// Path from root: "/qos/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *QosPath) InterfaceAny() *Qos_InterfacePathAny {
	return &Qos_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces referenced by QoS entities.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interfaces/interface"
// Path from root: "/qos/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *QosPathAny) InterfaceAny() *Qos_InterfacePathAny {
	return &Qos_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): List of interfaces referenced by QoS entities.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interfaces/interface"
// Path from root: "/qos/interfaces/interface"
// InterfaceId: string
func (n *QosPath) Interface(InterfaceId string) *Qos_InterfacePath {
	return &Qos_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): List of interfaces referenced by QoS entities.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interfaces/interface"
// Path from root: "/qos/interfaces/interface"
// InterfaceId: string
func (n *QosPathAny) Interface(InterfaceId string) *Qos_InterfacePathAny {
	return &Qos_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// QueueAny (list): List of defined queues
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/queues/queue"
// Name (wildcarded): string
func (n *QosPath) QueueAny() *Qos_QueuePathAny {
	return &Qos_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// QueueAny (list): List of defined queues
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/queues/queue"
// Name (wildcarded): string
func (n *QosPathAny) QueueAny() *Qos_QueuePathAny {
	return &Qos_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Queue (list): List of defined queues
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/queues/queue"
// Name: string
func (n *QosPath) Queue(Name string) *Qos_QueuePath {
	return &Qos_QueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Queue (list): List of defined queues
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/queues/queue"
// Name: string
func (n *QosPathAny) Queue(Name string) *Qos_QueuePathAny {
	return &Qos_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// QueueManagementProfileAny (list): A queue management profile within the OpenConfig QoS model
// specifies how packets are ECN marked/dropped for a particular
// instance of a queue on a particular interface. for example,
// whether RED, or WRED is applied to manage the queue's occupancy.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "queue-management-profiles/queue-management-profile"
// Path from root: "/qos/queue-management-profiles/queue-management-profile"
// Name (wildcarded): string
func (n *QosPath) QueueManagementProfileAny() *Qos_QueueManagementProfilePathAny {
	return &Qos_QueueManagementProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queue-management-profiles", "queue-management-profile"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// QueueManagementProfileAny (list): A queue management profile within the OpenConfig QoS model
// specifies how packets are ECN marked/dropped for a particular
// instance of a queue on a particular interface. for example,
// whether RED, or WRED is applied to manage the queue's occupancy.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "queue-management-profiles/queue-management-profile"
// Path from root: "/qos/queue-management-profiles/queue-management-profile"
// Name (wildcarded): string
func (n *QosPathAny) QueueManagementProfileAny() *Qos_QueueManagementProfilePathAny {
	return &Qos_QueueManagementProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queue-management-profiles", "queue-management-profile"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// QueueManagementProfile (list): A queue management profile within the OpenConfig QoS model
// specifies how packets are ECN marked/dropped for a particular
// instance of a queue on a particular interface. for example,
// whether RED, or WRED is applied to manage the queue's occupancy.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "queue-management-profiles/queue-management-profile"
// Path from root: "/qos/queue-management-profiles/queue-management-profile"
// Name: string
func (n *QosPath) QueueManagementProfile(Name string) *Qos_QueueManagementProfilePath {
	return &Qos_QueueManagementProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"queue-management-profiles", "queue-management-profile"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// QueueManagementProfile (list): A queue management profile within the OpenConfig QoS model
// specifies how packets are ECN marked/dropped for a particular
// instance of a queue on a particular interface. for example,
// whether RED, or WRED is applied to manage the queue's occupancy.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "queue-management-profiles/queue-management-profile"
// Path from root: "/qos/queue-management-profiles/queue-management-profile"
// Name: string
func (n *QosPathAny) QueueManagementProfile(Name string) *Qos_QueueManagementProfilePathAny {
	return &Qos_QueueManagementProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queue-management-profiles", "queue-management-profile"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// SchedulerPolicyAny (list): List of scheduler policies. A scheduler policy is a set of schedulers
// that are to be applied together. Each scheduler within a scheduler
// policy takes an input, and outputs it according to a scheduling
// discipline that is specified within it. The schedulers consume
// resources according to the specification that is provided - which
// may be absolute resource limits, or relative.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policies/scheduler-policy"
// Path from root: "/qos/scheduler-policies/scheduler-policy"
// Name (wildcarded): string
func (n *QosPath) SchedulerPolicyAny() *Qos_SchedulerPolicyPathAny {
	return &Qos_SchedulerPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policies", "scheduler-policy"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// SchedulerPolicyAny (list): List of scheduler policies. A scheduler policy is a set of schedulers
// that are to be applied together. Each scheduler within a scheduler
// policy takes an input, and outputs it according to a scheduling
// discipline that is specified within it. The schedulers consume
// resources according to the specification that is provided - which
// may be absolute resource limits, or relative.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policies/scheduler-policy"
// Path from root: "/qos/scheduler-policies/scheduler-policy"
// Name (wildcarded): string
func (n *QosPathAny) SchedulerPolicyAny() *Qos_SchedulerPolicyPathAny {
	return &Qos_SchedulerPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policies", "scheduler-policy"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// SchedulerPolicy (list): List of scheduler policies. A scheduler policy is a set of schedulers
// that are to be applied together. Each scheduler within a scheduler
// policy takes an input, and outputs it according to a scheduling
// discipline that is specified within it. The schedulers consume
// resources according to the specification that is provided - which
// may be absolute resource limits, or relative.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policies/scheduler-policy"
// Path from root: "/qos/scheduler-policies/scheduler-policy"
// Name: string
func (n *QosPath) SchedulerPolicy(Name string) *Qos_SchedulerPolicyPath {
	return &Qos_SchedulerPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policies", "scheduler-policy"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// SchedulerPolicy (list): List of scheduler policies. A scheduler policy is a set of schedulers
// that are to be applied together. Each scheduler within a scheduler
// policy takes an input, and outputs it according to a scheduling
// discipline that is specified within it. The schedulers consume
// resources according to the specification that is provided - which
// may be absolute resource limits, or relative.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policies/scheduler-policy"
// Path from root: "/qos/scheduler-policies/scheduler-policy"
// Name: string
func (n *QosPathAny) SchedulerPolicy(Name string) *Qos_SchedulerPolicyPathAny {
	return &Qos_SchedulerPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policies", "scheduler-policy"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Qos_BufferAllocationProfilePath represents the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile YANG schema element.
type Qos_BufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile YANG schema element.
type Qos_BufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_NamePath represents the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/state/name YANG schema element.
type Qos_BufferAllocationProfile_NamePath struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_NamePathAny represents the wildcard version of the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/state/name YANG schema element.
type Qos_BufferAllocationProfile_NamePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Unique string identifying the buffer allocation profile, used to
// reference to the profile on interfaces.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/state/name"
func (n *Qos_BufferAllocationProfilePath) Name() *Qos_BufferAllocationProfile_NamePath {
	return &Qos_BufferAllocationProfile_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Unique string identifying the buffer allocation profile, used to
// reference to the profile on interfaces.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/state/name"
func (n *Qos_BufferAllocationProfilePathAny) Name() *Qos_BufferAllocationProfile_NamePathAny {
	return &Qos_BufferAllocationProfile_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueueAny (list): Buffer allocation profile for a specific queue on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue"
// Name (wildcarded): string
func (n *Qos_BufferAllocationProfilePath) QueueAny() *Qos_BufferAllocationProfile_QueuePathAny {
	return &Qos_BufferAllocationProfile_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// QueueAny (list): Buffer allocation profile for a specific queue on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue"
// Name (wildcarded): string
func (n *Qos_BufferAllocationProfilePathAny) QueueAny() *Qos_BufferAllocationProfile_QueuePathAny {
	return &Qos_BufferAllocationProfile_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Queue (list): Buffer allocation profile for a specific queue on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue"
// Name: string
func (n *Qos_BufferAllocationProfilePath) Queue(Name string) *Qos_BufferAllocationProfile_QueuePath {
	return &Qos_BufferAllocationProfile_QueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Queue (list): Buffer allocation profile for a specific queue on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue"
// Name: string
func (n *Qos_BufferAllocationProfilePathAny) Queue(Name string) *Qos_BufferAllocationProfile_QueuePathAny {
	return &Qos_BufferAllocationProfile_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Qos_BufferAllocationProfile_QueuePath represents the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue YANG schema element.
type Qos_BufferAllocationProfile_QueuePath struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_QueuePathAny represents the wildcard version of the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue YANG schema element.
type Qos_BufferAllocationProfile_QueuePathAny struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_DedicatedBufferPath represents the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/dedicated-buffer YANG schema element.
type Qos_BufferAllocationProfile_Queue_DedicatedBufferPath struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_DedicatedBufferPathAny represents the wildcard version of the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/dedicated-buffer YANG schema element.
type Qos_BufferAllocationProfile_Queue_DedicatedBufferPathAny struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_DynamicLimitScalingFactorPath represents the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/dynamic-limit-scaling-factor YANG schema element.
type Qos_BufferAllocationProfile_Queue_DynamicLimitScalingFactorPath struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_DynamicLimitScalingFactorPathAny represents the wildcard version of the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/dynamic-limit-scaling-factor YANG schema element.
type Qos_BufferAllocationProfile_Queue_DynamicLimitScalingFactorPathAny struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_NamePath represents the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/name YANG schema element.
type Qos_BufferAllocationProfile_Queue_NamePath struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_NamePathAny represents the wildcard version of the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/name YANG schema element.
type Qos_BufferAllocationProfile_Queue_NamePathAny struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_SharedBufferLimitTypePath represents the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/shared-buffer-limit-type YANG schema element.
type Qos_BufferAllocationProfile_Queue_SharedBufferLimitTypePath struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_SharedBufferLimitTypePathAny represents the wildcard version of the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/shared-buffer-limit-type YANG schema element.
type Qos_BufferAllocationProfile_Queue_SharedBufferLimitTypePathAny struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_StaticSharedBufferLimitPath represents the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/static-shared-buffer-limit YANG schema element.
type Qos_BufferAllocationProfile_Queue_StaticSharedBufferLimitPath struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_StaticSharedBufferLimitPathAny represents the wildcard version of the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/static-shared-buffer-limit YANG schema element.
type Qos_BufferAllocationProfile_Queue_StaticSharedBufferLimitPathAny struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_UseSharedBufferPath represents the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/use-shared-buffer YANG schema element.
type Qos_BufferAllocationProfile_Queue_UseSharedBufferPath struct {
	*ygot.NodePath
}

// Qos_BufferAllocationProfile_Queue_UseSharedBufferPathAny represents the wildcard version of the /openconfig-qos/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/use-shared-buffer YANG schema element.
type Qos_BufferAllocationProfile_Queue_UseSharedBufferPathAny struct {
	*ygot.NodePath
}

// DedicatedBuffer (leaf): This is the dedicated buffer that is carved for the queue, this is the minimum
// number of bytes reserved for this queue.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dedicated-buffer"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/dedicated-buffer"
func (n *Qos_BufferAllocationProfile_QueuePath) DedicatedBuffer() *Qos_BufferAllocationProfile_Queue_DedicatedBufferPath {
	return &Qos_BufferAllocationProfile_Queue_DedicatedBufferPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dedicated-buffer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DedicatedBuffer (leaf): This is the dedicated buffer that is carved for the queue, this is the minimum
// number of bytes reserved for this queue.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dedicated-buffer"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/dedicated-buffer"
func (n *Qos_BufferAllocationProfile_QueuePathAny) DedicatedBuffer() *Qos_BufferAllocationProfile_Queue_DedicatedBufferPathAny {
	return &Qos_BufferAllocationProfile_Queue_DedicatedBufferPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dedicated-buffer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DynamicLimitScalingFactor (leaf): If shared-buffer-limit-type is DYNAMIC_BASED_ON_SCALING_FACTOR, the scaling
// factor and the current free space in the shared pool is used to determine the
// maximum buffer sapce from the shared pool that the queue is allowed to use.
//
// Example: If a queue is using 79MB and the other queues are using 11MB, the
// free buffer is 10MB. If the configured scaling factor is 3 for the queue, the
// maximum buffer space from the shared pool that the queue is allowed to use is
// calculated as (free buffer * 2^scaling factor) ie. 10MB*2^3 = 80MB. Since the
// current usage is 79MB which is < 80MB, the packet is queued.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dynamic-limit-scaling-factor"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/dynamic-limit-scaling-factor"
func (n *Qos_BufferAllocationProfile_QueuePath) DynamicLimitScalingFactor() *Qos_BufferAllocationProfile_Queue_DynamicLimitScalingFactorPath {
	return &Qos_BufferAllocationProfile_Queue_DynamicLimitScalingFactorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dynamic-limit-scaling-factor"},
			map[string]interface{}{},
			n,
		),
	}
}

// DynamicLimitScalingFactor (leaf): If shared-buffer-limit-type is DYNAMIC_BASED_ON_SCALING_FACTOR, the scaling
// factor and the current free space in the shared pool is used to determine the
// maximum buffer sapce from the shared pool that the queue is allowed to use.
//
// Example: If a queue is using 79MB and the other queues are using 11MB, the
// free buffer is 10MB. If the configured scaling factor is 3 for the queue, the
// maximum buffer space from the shared pool that the queue is allowed to use is
// calculated as (free buffer * 2^scaling factor) ie. 10MB*2^3 = 80MB. Since the
// current usage is 79MB which is < 80MB, the packet is queued.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dynamic-limit-scaling-factor"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/dynamic-limit-scaling-factor"
func (n *Qos_BufferAllocationProfile_QueuePathAny) DynamicLimitScalingFactor() *Qos_BufferAllocationProfile_Queue_DynamicLimitScalingFactorPathAny {
	return &Qos_BufferAllocationProfile_Queue_DynamicLimitScalingFactorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dynamic-limit-scaling-factor"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the queue being referenced within the buffer allocation profile.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/name"
func (n *Qos_BufferAllocationProfile_QueuePath) Name() *Qos_BufferAllocationProfile_Queue_NamePath {
	return &Qos_BufferAllocationProfile_Queue_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the queue being referenced within the buffer allocation profile.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/name"
func (n *Qos_BufferAllocationProfile_QueuePathAny) Name() *Qos_BufferAllocationProfile_Queue_NamePathAny {
	return &Qos_BufferAllocationProfile_Queue_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SharedBufferLimitType (leaf): The type of limit used to specify the amount of buffer space that the queue
// is allowed to use from the shared pool.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/shared-buffer-limit-type"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/shared-buffer-limit-type"
func (n *Qos_BufferAllocationProfile_QueuePath) SharedBufferLimitType() *Qos_BufferAllocationProfile_Queue_SharedBufferLimitTypePath {
	return &Qos_BufferAllocationProfile_Queue_SharedBufferLimitTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "shared-buffer-limit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SharedBufferLimitType (leaf): The type of limit used to specify the amount of buffer space that the queue
// is allowed to use from the shared pool.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/shared-buffer-limit-type"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/shared-buffer-limit-type"
func (n *Qos_BufferAllocationProfile_QueuePathAny) SharedBufferLimitType() *Qos_BufferAllocationProfile_Queue_SharedBufferLimitTypePathAny {
	return &Qos_BufferAllocationProfile_Queue_SharedBufferLimitTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "shared-buffer-limit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticSharedBufferLimit (leaf): If the shared-buffer-limit-type is STATIC, then static-shared-buffer-limit is
// the maximum number of bytes that the queue is allowed to use from the shared
// pool.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/static-shared-buffer-limit"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/static-shared-buffer-limit"
func (n *Qos_BufferAllocationProfile_QueuePath) StaticSharedBufferLimit() *Qos_BufferAllocationProfile_Queue_StaticSharedBufferLimitPath {
	return &Qos_BufferAllocationProfile_Queue_StaticSharedBufferLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "static-shared-buffer-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticSharedBufferLimit (leaf): If the shared-buffer-limit-type is STATIC, then static-shared-buffer-limit is
// the maximum number of bytes that the queue is allowed to use from the shared
// pool.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/static-shared-buffer-limit"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/static-shared-buffer-limit"
func (n *Qos_BufferAllocationProfile_QueuePathAny) StaticSharedBufferLimit() *Qos_BufferAllocationProfile_Queue_StaticSharedBufferLimitPathAny {
	return &Qos_BufferAllocationProfile_Queue_StaticSharedBufferLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "static-shared-buffer-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseSharedBuffer (leaf): If the flag is true, then the queue is allowed to use buffers from shared pool
// in additional to the dedicated buffers assigned for this queue.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/use-shared-buffer"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/use-shared-buffer"
func (n *Qos_BufferAllocationProfile_QueuePath) UseSharedBuffer() *Qos_BufferAllocationProfile_Queue_UseSharedBufferPath {
	return &Qos_BufferAllocationProfile_Queue_UseSharedBufferPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "use-shared-buffer"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseSharedBuffer (leaf): If the flag is true, then the queue is allowed to use buffers from shared pool
// in additional to the dedicated buffers assigned for this queue.
// ----------------------------------------
// Defining module: "openconfig-qos-mem-mgmt"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/use-shared-buffer"
// Path from root: "/qos/buffer-allocation-profiles/buffer-allocation-profile/queues/queue/state/use-shared-buffer"
func (n *Qos_BufferAllocationProfile_QueuePathAny) UseSharedBuffer() *Qos_BufferAllocationProfile_Queue_UseSharedBufferPathAny {
	return &Qos_BufferAllocationProfile_Queue_UseSharedBufferPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "use-shared-buffer"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_ClassifierPath represents the /openconfig-qos/qos/classifiers/classifier YANG schema element.
type Qos_ClassifierPath struct {
	*ygot.NodePath
}

// Qos_ClassifierPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier YANG schema element.
type Qos_ClassifierPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_NamePath represents the /openconfig-qos/qos/classifiers/classifier/state/name YANG schema element.
type Qos_Classifier_NamePath struct {
	*ygot.NodePath
}

// Qos_Classifier_NamePathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/state/name YANG schema element.
type Qos_Classifier_NamePathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_TypePath represents the /openconfig-qos/qos/classifiers/classifier/state/type YANG schema element.
type Qos_Classifier_TypePath struct {
	*ygot.NodePath
}

// Qos_Classifier_TypePathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/state/type YANG schema element.
type Qos_Classifier_TypePathAny struct {
	*ygot.NodePath
}

// Name (leaf): User-assigned name of the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/classifiers/classifier/state/name"
func (n *Qos_ClassifierPath) Name() *Qos_Classifier_NamePath {
	return &Qos_Classifier_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): User-assigned name of the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/classifiers/classifier/state/name"
func (n *Qos_ClassifierPathAny) Name() *Qos_Classifier_NamePathAny {
	return &Qos_Classifier_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// TermAny (list): List of match terms used in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/classifiers/classifier/terms/term"
// Id (wildcarded): string
func (n *Qos_ClassifierPath) TermAny() *Qos_Classifier_TermPathAny {
	return &Qos_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// TermAny (list): List of match terms used in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/classifiers/classifier/terms/term"
// Id (wildcarded): string
func (n *Qos_ClassifierPathAny) TermAny() *Qos_Classifier_TermPathAny {
	return &Qos_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Term (list): List of match terms used in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/classifiers/classifier/terms/term"
// Id: string
func (n *Qos_ClassifierPath) Term(Id string) *Qos_Classifier_TermPath {
	return &Qos_Classifier_TermPath{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Term (list): List of match terms used in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/classifiers/classifier/terms/term"
// Id: string
func (n *Qos_ClassifierPathAny) Term(Id string) *Qos_Classifier_TermPathAny {
	return &Qos_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Type (leaf): Type of classifier.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/classifiers/classifier/state/type"
func (n *Qos_ClassifierPath) Type() *Qos_Classifier_TypePath {
	return &Qos_Classifier_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of classifier.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/classifiers/classifier/state/type"
func (n *Qos_ClassifierPathAny) Type() *Qos_Classifier_TypePathAny {
	return &Qos_Classifier_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Classifier_TermPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term YANG schema element.
type Qos_Classifier_TermPath struct {
	*ygot.NodePath
}

// Qos_Classifier_TermPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term YANG schema element.
type Qos_Classifier_TermPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_IdPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/state/id YANG schema element.
type Qos_Classifier_Term_IdPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_IdPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/state/id YANG schema element.
type Qos_Classifier_Term_IdPathAny struct {
	*ygot.NodePath
}

// Actions (container): Actions to be applied for packets matching the specified
// classification rules.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "actions"
// Path from root: "/qos/classifiers/classifier/terms/term/actions"
func (n *Qos_Classifier_TermPath) Actions() *Qos_Classifier_Term_ActionsPath {
	return &Qos_Classifier_Term_ActionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"actions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Actions (container): Actions to be applied for packets matching the specified
// classification rules.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "actions"
// Path from root: "/qos/classifiers/classifier/terms/term/actions"
func (n *Qos_Classifier_TermPathAny) Actions() *Qos_Classifier_Term_ActionsPathAny {
	return &Qos_Classifier_Term_ActionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"actions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Conditions (container): Conditions for the classifier term. Packets must match all of
// the criteria specified within the match condition to be considered
// matching the term.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "conditions"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions"
func (n *Qos_Classifier_TermPath) Conditions() *Qos_Classifier_Term_ConditionsPath {
	return &Qos_Classifier_Term_ConditionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"conditions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Conditions (container): Conditions for the classifier term. Packets must match all of
// the criteria specified within the match condition to be considered
// matching the term.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "conditions"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions"
func (n *Qos_Classifier_TermPathAny) Conditions() *Qos_Classifier_Term_ConditionsPathAny {
	return &Qos_Classifier_Term_ConditionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"conditions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Identifier for the match term
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/classifiers/classifier/terms/term/state/id"
func (n *Qos_Classifier_TermPath) Id() *Qos_Classifier_Term_IdPath {
	return &Qos_Classifier_Term_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Identifier for the match term
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/classifiers/classifier/terms/term/state/id"
func (n *Qos_Classifier_TermPathAny) Id() *Qos_Classifier_Term_IdPathAny {
	return &Qos_Classifier_Term_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Classifier_Term_ActionsPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/actions YANG schema element.
type Qos_Classifier_Term_ActionsPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_ActionsPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/actions YANG schema element.
type Qos_Classifier_Term_ActionsPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Actions_TargetGroupPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/state/target-group YANG schema element.
type Qos_Classifier_Term_Actions_TargetGroupPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Actions_TargetGroupPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/state/target-group YANG schema element.
type Qos_Classifier_Term_Actions_TargetGroupPathAny struct {
	*ygot.NodePath
}

// Remark (container): Remark actions to be associated with packets that match the
// classifier term. Where a packet matches these criteria, the
// specified rewrite actions should be performed.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "remark"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/remark"
func (n *Qos_Classifier_Term_ActionsPath) Remark() *Qos_Classifier_Term_Actions_RemarkPath {
	return &Qos_Classifier_Term_Actions_RemarkPath{
		NodePath: ygot.NewNodePath(
			[]string{"remark"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remark (container): Remark actions to be associated with packets that match the
// classifier term. Where a packet matches these criteria, the
// specified rewrite actions should be performed.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "remark"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/remark"
func (n *Qos_Classifier_Term_ActionsPathAny) Remark() *Qos_Classifier_Term_Actions_RemarkPathAny {
	return &Qos_Classifier_Term_Actions_RemarkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"remark"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetGroup (leaf): References the forwarding group or class to which the
// matched packets should be assigned
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/target-group"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/state/target-group"
func (n *Qos_Classifier_Term_ActionsPath) TargetGroup() *Qos_Classifier_Term_Actions_TargetGroupPath {
	return &Qos_Classifier_Term_Actions_TargetGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "target-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetGroup (leaf): References the forwarding group or class to which the
// matched packets should be assigned
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/target-group"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/state/target-group"
func (n *Qos_Classifier_Term_ActionsPathAny) TargetGroup() *Qos_Classifier_Term_Actions_TargetGroupPathAny {
	return &Qos_Classifier_Term_Actions_TargetGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "target-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Classifier_Term_Actions_RemarkPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/remark YANG schema element.
type Qos_Classifier_Term_Actions_RemarkPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Actions_RemarkPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/remark YANG schema element.
type Qos_Classifier_Term_Actions_RemarkPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Actions_Remark_SetDot1PPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/remark/state/set-dot1p YANG schema element.
type Qos_Classifier_Term_Actions_Remark_SetDot1PPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Actions_Remark_SetDot1PPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/remark/state/set-dot1p YANG schema element.
type Qos_Classifier_Term_Actions_Remark_SetDot1PPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Actions_Remark_SetDscpPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/remark/state/set-dscp YANG schema element.
type Qos_Classifier_Term_Actions_Remark_SetDscpPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Actions_Remark_SetDscpPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/remark/state/set-dscp YANG schema element.
type Qos_Classifier_Term_Actions_Remark_SetDscpPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Actions_Remark_SetMplsTcPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/remark/state/set-mpls-tc YANG schema element.
type Qos_Classifier_Term_Actions_Remark_SetMplsTcPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Actions_Remark_SetMplsTcPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/actions/remark/state/set-mpls-tc YANG schema element.
type Qos_Classifier_Term_Actions_Remark_SetMplsTcPathAny struct {
	*ygot.NodePath
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/remark/state/set-dot1p"
func (n *Qos_Classifier_Term_Actions_RemarkPath) SetDot1P() *Qos_Classifier_Term_Actions_Remark_SetDot1PPath {
	return &Qos_Classifier_Term_Actions_Remark_SetDot1PPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDot1P (leaf): Sets the 3-bit class-of-service value in the
// Ethernet packet header for 802.1Q VLAN-tagged packets,
// also known as PCP (priority code point).
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dot1p"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/remark/state/set-dot1p"
func (n *Qos_Classifier_Term_Actions_RemarkPathAny) SetDot1P() *Qos_Classifier_Term_Actions_Remark_SetDot1PPathAny {
	return &Qos_Classifier_Term_Actions_Remark_SetDot1PPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dot1p"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/remark/state/set-dscp"
func (n *Qos_Classifier_Term_Actions_RemarkPath) SetDscp() *Qos_Classifier_Term_Actions_Remark_SetDscpPath {
	return &Qos_Classifier_Term_Actions_Remark_SetDscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetDscp (leaf): Sets the 6-bit DSCP (differentiated services code point)
// value in the IP packet header.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-dscp"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/remark/state/set-dscp"
func (n *Qos_Classifier_Term_Actions_RemarkPathAny) SetDscp() *Qos_Classifier_Term_Actions_Remark_SetDscpPathAny {
	return &Qos_Classifier_Term_Actions_Remark_SetDscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/remark/state/set-mpls-tc"
func (n *Qos_Classifier_Term_Actions_RemarkPath) SetMplsTc() *Qos_Classifier_Term_Actions_Remark_SetMplsTcPath {
	return &Qos_Classifier_Term_Actions_Remark_SetMplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetMplsTc (leaf): Sets the 3-bit traffic class value (also referred to as EXP
// or CoS) in MPLS packets.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/set-mpls-tc"
// Path from root: "/qos/classifiers/classifier/terms/term/actions/remark/state/set-mpls-tc"
func (n *Qos_Classifier_Term_Actions_RemarkPathAny) SetMplsTc() *Qos_Classifier_Term_Actions_Remark_SetMplsTcPathAny {
	return &Qos_Classifier_Term_Actions_Remark_SetMplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Classifier_Term_ConditionsPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions YANG schema element.
type Qos_Classifier_Term_ConditionsPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_ConditionsPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions YANG schema element.
type Qos_Classifier_Term_ConditionsPathAny struct {
	*ygot.NodePath
}

// Ipv4 (container): Top level container for IPv4 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "ipv4"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4"
func (n *Qos_Classifier_Term_ConditionsPath) Ipv4() *Qos_Classifier_Term_Conditions_Ipv4Path {
	return &Qos_Classifier_Term_Conditions_Ipv4Path{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4 (container): Top level container for IPv4 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "ipv4"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4"
func (n *Qos_Classifier_Term_ConditionsPathAny) Ipv4() *Qos_Classifier_Term_Conditions_Ipv4PathAny {
	return &Qos_Classifier_Term_Conditions_Ipv4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6 (container): Top-level container for IPv6 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "ipv6"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6"
func (n *Qos_Classifier_Term_ConditionsPath) Ipv6() *Qos_Classifier_Term_Conditions_Ipv6Path {
	return &Qos_Classifier_Term_Conditions_Ipv6Path{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6 (container): Top-level container for IPv6 match field data
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "ipv6"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6"
func (n *Qos_Classifier_Term_ConditionsPathAny) Ipv6() *Qos_Classifier_Term_Conditions_Ipv6PathAny {
	return &Qos_Classifier_Term_Conditions_Ipv6PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2 (container): Ethernet header fields
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "l2"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2"
func (n *Qos_Classifier_Term_ConditionsPath) L2() *Qos_Classifier_Term_Conditions_L2Path {
	return &Qos_Classifier_Term_Conditions_L2Path{
		NodePath: ygot.NewNodePath(
			[]string{"l2"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2 (container): Ethernet header fields
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "l2"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2"
func (n *Qos_Classifier_Term_ConditionsPathAny) L2() *Qos_Classifier_Term_Conditions_L2PathAny {
	return &Qos_Classifier_Term_Conditions_L2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): MPLS header fields
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "mpls"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls"
func (n *Qos_Classifier_Term_ConditionsPath) Mpls() *Qos_Classifier_Term_Conditions_MplsPath {
	return &Qos_Classifier_Term_Conditions_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): MPLS header fields
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "mpls"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls"
func (n *Qos_Classifier_Term_ConditionsPathAny) Mpls() *Qos_Classifier_Term_Conditions_MplsPathAny {
	return &Qos_Classifier_Term_Conditions_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport fields container
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "transport"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/transport"
func (n *Qos_Classifier_Term_ConditionsPath) Transport() *Qos_Classifier_Term_Conditions_TransportPath {
	return &Qos_Classifier_Term_Conditions_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport fields container
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "transport"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/transport"
func (n *Qos_Classifier_Term_ConditionsPathAny) Transport() *Qos_Classifier_Term_Conditions_TransportPathAny {
	return &Qos_Classifier_Term_Conditions_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Classifier_Term_Conditions_Ipv4Path represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4 YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4Path struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4PathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4 YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4PathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_DestinationAddressPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/destination-address YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_DestinationAddressPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_DestinationAddressPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/destination-address YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_DestinationAddressPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_DscpPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/dscp YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_DscpPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_DscpPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/dscp YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_DscpPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_DscpSetPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/dscp-set YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_DscpSetPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_DscpSetPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/dscp-set YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_DscpSetPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_HopLimitPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/hop-limit YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_HopLimitPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_HopLimitPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/hop-limit YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_HopLimitPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_ProtocolPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/protocol YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_ProtocolPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_ProtocolPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/protocol YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_ProtocolPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_SourceAddressPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/source-address YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_SourceAddressPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv4_SourceAddressPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv4/state/source-address YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv4_SourceAddressPathAny struct {
	*ygot.NodePath
}

// DestinationAddress (leaf): Destination IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-address"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/destination-address"
func (n *Qos_Classifier_Term_Conditions_Ipv4Path) DestinationAddress() *Qos_Classifier_Term_Conditions_Ipv4_DestinationAddressPath {
	return &Qos_Classifier_Term_Conditions_Ipv4_DestinationAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationAddress (leaf): Destination IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-address"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/destination-address"
func (n *Qos_Classifier_Term_Conditions_Ipv4PathAny) DestinationAddress() *Qos_Classifier_Term_Conditions_Ipv4_DestinationAddressPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv4_DestinationAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dscp"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/dscp"
func (n *Qos_Classifier_Term_Conditions_Ipv4Path) Dscp() *Qos_Classifier_Term_Conditions_Ipv4_DscpPath {
	return &Qos_Classifier_Term_Conditions_Ipv4_DscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dscp"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/dscp"
func (n *Qos_Classifier_Term_Conditions_Ipv4PathAny) Dscp() *Qos_Classifier_Term_Conditions_Ipv4_DscpPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv4_DscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dscp-set"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/dscp-set"
func (n *Qos_Classifier_Term_Conditions_Ipv4Path) DscpSet() *Qos_Classifier_Term_Conditions_Ipv4_DscpSetPath {
	return &Qos_Classifier_Term_Conditions_Ipv4_DscpSetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dscp-set"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/dscp-set"
func (n *Qos_Classifier_Term_Conditions_Ipv4PathAny) DscpSet() *Qos_Classifier_Term_Conditions_Ipv4_DscpSetPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv4_DscpSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/hop-limit"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/hop-limit"
func (n *Qos_Classifier_Term_Conditions_Ipv4Path) HopLimit() *Qos_Classifier_Term_Conditions_Ipv4_HopLimitPath {
	return &Qos_Classifier_Term_Conditions_Ipv4_HopLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/hop-limit"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/hop-limit"
func (n *Qos_Classifier_Term_Conditions_Ipv4PathAny) HopLimit() *Qos_Classifier_Term_Conditions_Ipv4_HopLimitPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv4_HopLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/protocol"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/protocol"
func (n *Qos_Classifier_Term_Conditions_Ipv4Path) Protocol() *Qos_Classifier_Term_Conditions_Ipv4_ProtocolPath {
	return &Qos_Classifier_Term_Conditions_Ipv4_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/protocol"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/protocol"
func (n *Qos_Classifier_Term_Conditions_Ipv4PathAny) Protocol() *Qos_Classifier_Term_Conditions_Ipv4_ProtocolPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv4_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-address"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/source-address"
func (n *Qos_Classifier_Term_Conditions_Ipv4Path) SourceAddress() *Qos_Classifier_Term_Conditions_Ipv4_SourceAddressPath {
	return &Qos_Classifier_Term_Conditions_Ipv4_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv4 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-address"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv4/state/source-address"
func (n *Qos_Classifier_Term_Conditions_Ipv4PathAny) SourceAddress() *Qos_Classifier_Term_Conditions_Ipv4_SourceAddressPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv4_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Classifier_Term_Conditions_Ipv6Path represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6 YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6Path struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6PathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6 YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6PathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_DestinationAddressPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/destination-address YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_DestinationAddressPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_DestinationAddressPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/destination-address YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_DestinationAddressPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_DestinationFlowLabelPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/destination-flow-label YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_DestinationFlowLabelPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_DestinationFlowLabelPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/destination-flow-label YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_DestinationFlowLabelPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_DscpPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/dscp YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_DscpPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_DscpPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/dscp YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_DscpPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_DscpSetPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/dscp-set YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_DscpSetPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_DscpSetPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/dscp-set YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_DscpSetPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_HopLimitPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/hop-limit YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_HopLimitPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_HopLimitPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/hop-limit YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_HopLimitPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_ProtocolPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/protocol YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_ProtocolPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_ProtocolPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/protocol YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_ProtocolPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_SourceAddressPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/source-address YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_SourceAddressPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_SourceAddressPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/source-address YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_SourceAddressPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_SourceFlowLabelPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/source-flow-label YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_SourceFlowLabelPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Ipv6_SourceFlowLabelPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/ipv6/state/source-flow-label YANG schema element.
type Qos_Classifier_Term_Conditions_Ipv6_SourceFlowLabelPathAny struct {
	*ygot.NodePath
}

// DestinationAddress (leaf): Destination IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-address"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/destination-address"
func (n *Qos_Classifier_Term_Conditions_Ipv6Path) DestinationAddress() *Qos_Classifier_Term_Conditions_Ipv6_DestinationAddressPath {
	return &Qos_Classifier_Term_Conditions_Ipv6_DestinationAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationAddress (leaf): Destination IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-address"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/destination-address"
func (n *Qos_Classifier_Term_Conditions_Ipv6PathAny) DestinationAddress() *Qos_Classifier_Term_Conditions_Ipv6_DestinationAddressPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv6_DestinationAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationFlowLabel (leaf): Destination IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-flow-label"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/destination-flow-label"
func (n *Qos_Classifier_Term_Conditions_Ipv6Path) DestinationFlowLabel() *Qos_Classifier_Term_Conditions_Ipv6_DestinationFlowLabelPath {
	return &Qos_Classifier_Term_Conditions_Ipv6_DestinationFlowLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationFlowLabel (leaf): Destination IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-flow-label"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/destination-flow-label"
func (n *Qos_Classifier_Term_Conditions_Ipv6PathAny) DestinationFlowLabel() *Qos_Classifier_Term_Conditions_Ipv6_DestinationFlowLabelPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv6_DestinationFlowLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dscp"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/dscp"
func (n *Qos_Classifier_Term_Conditions_Ipv6Path) Dscp() *Qos_Classifier_Term_Conditions_Ipv6_DscpPath {
	return &Qos_Classifier_Term_Conditions_Ipv6_DscpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Dscp (leaf): Value of diffserv codepoint.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dscp"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/dscp"
func (n *Qos_Classifier_Term_Conditions_Ipv6PathAny) Dscp() *Qos_Classifier_Term_Conditions_Ipv6_DscpPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv6_DscpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dscp-set"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/dscp-set"
func (n *Qos_Classifier_Term_Conditions_Ipv6Path) DscpSet() *Qos_Classifier_Term_Conditions_Ipv6_DscpSetPath {
	return &Qos_Classifier_Term_Conditions_Ipv6_DscpSetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// DscpSet (leaf): A list of DSCP values to be matched for incoming packets. AN OR match should
// be performed, such that a packet must match one of the values defined in this
// list. If the field is left empty then any DSCP value matches unless the 'dscp'
// leaf is specified. It is not valid to specify both 'dscp' and 'dscp-set together.'
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dscp-set"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/dscp-set"
func (n *Qos_Classifier_Term_Conditions_Ipv6PathAny) DscpSet() *Qos_Classifier_Term_Conditions_Ipv6_DscpSetPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv6_DscpSetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dscp-set"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/hop-limit"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/hop-limit"
func (n *Qos_Classifier_Term_Conditions_Ipv6Path) HopLimit() *Qos_Classifier_Term_Conditions_Ipv6_HopLimitPath {
	return &Qos_Classifier_Term_Conditions_Ipv6_HopLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// HopLimit (leaf): The IP packet's hop limit -- known as TTL (in hops) in
// IPv4 packets, and hop limit in IPv6
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/hop-limit"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/hop-limit"
func (n *Qos_Classifier_Term_Conditions_Ipv6PathAny) HopLimit() *Qos_Classifier_Term_Conditions_Ipv6_HopLimitPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv6_HopLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hop-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/protocol"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/protocol"
func (n *Qos_Classifier_Term_Conditions_Ipv6Path) Protocol() *Qos_Classifier_Term_Conditions_Ipv6_ProtocolPath {
	return &Qos_Classifier_Term_Conditions_Ipv6_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): The protocol carried in the IP packet, expressed either
// as its IP protocol number, or by a defined identity.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/protocol"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/protocol"
func (n *Qos_Classifier_Term_Conditions_Ipv6PathAny) Protocol() *Qos_Classifier_Term_Conditions_Ipv6_ProtocolPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv6_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-address"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/source-address"
func (n *Qos_Classifier_Term_Conditions_Ipv6Path) SourceAddress() *Qos_Classifier_Term_Conditions_Ipv6_SourceAddressPath {
	return &Qos_Classifier_Term_Conditions_Ipv6_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IPv6 address prefix.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-address"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/source-address"
func (n *Qos_Classifier_Term_Conditions_Ipv6PathAny) SourceAddress() *Qos_Classifier_Term_Conditions_Ipv6_SourceAddressPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv6_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceFlowLabel (leaf): Source IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-flow-label"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/source-flow-label"
func (n *Qos_Classifier_Term_Conditions_Ipv6Path) SourceFlowLabel() *Qos_Classifier_Term_Conditions_Ipv6_SourceFlowLabelPath {
	return &Qos_Classifier_Term_Conditions_Ipv6_SourceFlowLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceFlowLabel (leaf): Source IPv6 Flow label.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-flow-label"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/ipv6/state/source-flow-label"
func (n *Qos_Classifier_Term_Conditions_Ipv6PathAny) SourceFlowLabel() *Qos_Classifier_Term_Conditions_Ipv6_SourceFlowLabelPathAny {
	return &Qos_Classifier_Term_Conditions_Ipv6_SourceFlowLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-flow-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Classifier_Term_Conditions_L2Path represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2 YANG schema element.
type Qos_Classifier_Term_Conditions_L2Path struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2PathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2 YANG schema element.
type Qos_Classifier_Term_Conditions_L2PathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_DestinationMacPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/destination-mac YANG schema element.
type Qos_Classifier_Term_Conditions_L2_DestinationMacPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_DestinationMacPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/destination-mac YANG schema element.
type Qos_Classifier_Term_Conditions_L2_DestinationMacPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_DestinationMacMaskPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/destination-mac-mask YANG schema element.
type Qos_Classifier_Term_Conditions_L2_DestinationMacMaskPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_DestinationMacMaskPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/destination-mac-mask YANG schema element.
type Qos_Classifier_Term_Conditions_L2_DestinationMacMaskPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_EthertypePath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/ethertype YANG schema element.
type Qos_Classifier_Term_Conditions_L2_EthertypePath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_EthertypePathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/ethertype YANG schema element.
type Qos_Classifier_Term_Conditions_L2_EthertypePathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_SourceMacPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/source-mac YANG schema element.
type Qos_Classifier_Term_Conditions_L2_SourceMacPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_SourceMacPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/source-mac YANG schema element.
type Qos_Classifier_Term_Conditions_L2_SourceMacPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_SourceMacMaskPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/source-mac-mask YANG schema element.
type Qos_Classifier_Term_Conditions_L2_SourceMacMaskPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_L2_SourceMacMaskPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/l2/state/source-mac-mask YANG schema element.
type Qos_Classifier_Term_Conditions_L2_SourceMacMaskPathAny struct {
	*ygot.NodePath
}

// DestinationMac (leaf): Destination IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-mac"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/destination-mac"
func (n *Qos_Classifier_Term_Conditions_L2Path) DestinationMac() *Qos_Classifier_Term_Conditions_L2_DestinationMacPath {
	return &Qos_Classifier_Term_Conditions_L2_DestinationMacPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationMac (leaf): Destination IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-mac"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/destination-mac"
func (n *Qos_Classifier_Term_Conditions_L2PathAny) DestinationMac() *Qos_Classifier_Term_Conditions_L2_DestinationMacPathAny {
	return &Qos_Classifier_Term_Conditions_L2_DestinationMacPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationMacMask (leaf): Destination IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-mac-mask"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/destination-mac-mask"
func (n *Qos_Classifier_Term_Conditions_L2Path) DestinationMacMask() *Qos_Classifier_Term_Conditions_L2_DestinationMacMaskPath {
	return &Qos_Classifier_Term_Conditions_L2_DestinationMacMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationMacMask (leaf): Destination IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-mac-mask"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/destination-mac-mask"
func (n *Qos_Classifier_Term_Conditions_L2PathAny) DestinationMacMask() *Qos_Classifier_Term_Conditions_L2_DestinationMacMaskPathAny {
	return &Qos_Classifier_Term_Conditions_L2_DestinationMacMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ethertype (leaf): Ethertype field to match in Ethernet packets
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/ethertype"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/ethertype"
func (n *Qos_Classifier_Term_Conditions_L2Path) Ethertype() *Qos_Classifier_Term_Conditions_L2_EthertypePath {
	return &Qos_Classifier_Term_Conditions_L2_EthertypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethertype"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ethertype (leaf): Ethertype field to match in Ethernet packets
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/ethertype"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/ethertype"
func (n *Qos_Classifier_Term_Conditions_L2PathAny) Ethertype() *Qos_Classifier_Term_Conditions_L2_EthertypePathAny {
	return &Qos_Classifier_Term_Conditions_L2_EthertypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ethertype"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMac (leaf): Source IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-mac"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/source-mac"
func (n *Qos_Classifier_Term_Conditions_L2Path) SourceMac() *Qos_Classifier_Term_Conditions_L2_SourceMacPath {
	return &Qos_Classifier_Term_Conditions_L2_SourceMacPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMac (leaf): Source IEEE 802 MAC address.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-mac"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/source-mac"
func (n *Qos_Classifier_Term_Conditions_L2PathAny) SourceMac() *Qos_Classifier_Term_Conditions_L2_SourceMacPathAny {
	return &Qos_Classifier_Term_Conditions_L2_SourceMacPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-mac"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMacMask (leaf): Source IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-mac-mask"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/source-mac-mask"
func (n *Qos_Classifier_Term_Conditions_L2Path) SourceMacMask() *Qos_Classifier_Term_Conditions_L2_SourceMacMaskPath {
	return &Qos_Classifier_Term_Conditions_L2_SourceMacMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceMacMask (leaf): Source IEEE 802 MAC address mask.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-mac-mask"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/l2/state/source-mac-mask"
func (n *Qos_Classifier_Term_Conditions_L2PathAny) SourceMacMask() *Qos_Classifier_Term_Conditions_L2_SourceMacMaskPathAny {
	return &Qos_Classifier_Term_Conditions_L2_SourceMacMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-mac-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Classifier_Term_Conditions_MplsPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls YANG schema element.
type Qos_Classifier_Term_Conditions_MplsPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_MplsPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls YANG schema element.
type Qos_Classifier_Term_Conditions_MplsPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Mpls_EndLabelValuePath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls/state/end-label-value YANG schema element.
type Qos_Classifier_Term_Conditions_Mpls_EndLabelValuePath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Mpls_EndLabelValuePathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls/state/end-label-value YANG schema element.
type Qos_Classifier_Term_Conditions_Mpls_EndLabelValuePathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Mpls_StartLabelValuePath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls/state/start-label-value YANG schema element.
type Qos_Classifier_Term_Conditions_Mpls_StartLabelValuePath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Mpls_StartLabelValuePathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls/state/start-label-value YANG schema element.
type Qos_Classifier_Term_Conditions_Mpls_StartLabelValuePathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Mpls_TrafficClassPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls/state/traffic-class YANG schema element.
type Qos_Classifier_Term_Conditions_Mpls_TrafficClassPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Mpls_TrafficClassPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls/state/traffic-class YANG schema element.
type Qos_Classifier_Term_Conditions_Mpls_TrafficClassPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Mpls_TtlValuePath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls/state/ttl-value YANG schema element.
type Qos_Classifier_Term_Conditions_Mpls_TtlValuePath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Mpls_TtlValuePathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/mpls/state/ttl-value YANG schema element.
type Qos_Classifier_Term_Conditions_Mpls_TtlValuePathAny struct {
	*ygot.NodePath
}

// EndLabelValue (leaf): Match MPLS label value on the MPLS header.
// The usage of this field indicated the upper
// range value in the top of the stack.
// The range that is used is inclusive. The match that
// is done for a particular received pkt_label is:
// start-label-value <= pkt_label <= end-label-value.
// The 20-bit label value in an MPLS label
// stack as specified in RFC 3032.
// This label value does not include the
// encodings of Traffic Class and TTL.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/end-label-value"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls/state/end-label-value"
func (n *Qos_Classifier_Term_Conditions_MplsPath) EndLabelValue() *Qos_Classifier_Term_Conditions_Mpls_EndLabelValuePath {
	return &Qos_Classifier_Term_Conditions_Mpls_EndLabelValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "end-label-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// EndLabelValue (leaf): Match MPLS label value on the MPLS header.
// The usage of this field indicated the upper
// range value in the top of the stack.
// The range that is used is inclusive. The match that
// is done for a particular received pkt_label is:
// start-label-value <= pkt_label <= end-label-value.
// The 20-bit label value in an MPLS label
// stack as specified in RFC 3032.
// This label value does not include the
// encodings of Traffic Class and TTL.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/end-label-value"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls/state/end-label-value"
func (n *Qos_Classifier_Term_Conditions_MplsPathAny) EndLabelValue() *Qos_Classifier_Term_Conditions_Mpls_EndLabelValuePathAny {
	return &Qos_Classifier_Term_Conditions_Mpls_EndLabelValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "end-label-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// StartLabelValue (leaf): Match MPLS label value on the MPLS header.
// The usage of this field indicated the upper
// range value in the top of the stack.
// The range that is used is inclusive. The match that
// is done for a particular received pkt_label is:
// start-label-value <= pkt_label <= end-label-value.
// The 20-bit label value in an MPLS label
// stack as specified in RFC 3032.
// This label value does not include the
// encodings of Traffic Class and TTL.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/start-label-value"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls/state/start-label-value"
func (n *Qos_Classifier_Term_Conditions_MplsPath) StartLabelValue() *Qos_Classifier_Term_Conditions_Mpls_StartLabelValuePath {
	return &Qos_Classifier_Term_Conditions_Mpls_StartLabelValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "start-label-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// StartLabelValue (leaf): Match MPLS label value on the MPLS header.
// The usage of this field indicated the upper
// range value in the top of the stack.
// The range that is used is inclusive. The match that
// is done for a particular received pkt_label is:
// start-label-value <= pkt_label <= end-label-value.
// The 20-bit label value in an MPLS label
// stack as specified in RFC 3032.
// This label value does not include the
// encodings of Traffic Class and TTL.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/start-label-value"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls/state/start-label-value"
func (n *Qos_Classifier_Term_Conditions_MplsPathAny) StartLabelValue() *Qos_Classifier_Term_Conditions_Mpls_StartLabelValuePathAny {
	return &Qos_Classifier_Term_Conditions_Mpls_StartLabelValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "start-label-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficClass (leaf): The value of the MPLS traffic class (TC) bits,
// formerly known as the EXP bits.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/traffic-class"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls/state/traffic-class"
func (n *Qos_Classifier_Term_Conditions_MplsPath) TrafficClass() *Qos_Classifier_Term_Conditions_Mpls_TrafficClassPath {
	return &Qos_Classifier_Term_Conditions_Mpls_TrafficClassPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-class"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficClass (leaf): The value of the MPLS traffic class (TC) bits,
// formerly known as the EXP bits.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/traffic-class"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls/state/traffic-class"
func (n *Qos_Classifier_Term_Conditions_MplsPathAny) TrafficClass() *Qos_Classifier_Term_Conditions_Mpls_TrafficClassPathAny {
	return &Qos_Classifier_Term_Conditions_Mpls_TrafficClassPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-class"},
			map[string]interface{}{},
			n,
		),
	}
}

// TtlValue (leaf): Time-to-live MPLS packet value match.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/ttl-value"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls/state/ttl-value"
func (n *Qos_Classifier_Term_Conditions_MplsPath) TtlValue() *Qos_Classifier_Term_Conditions_Mpls_TtlValuePath {
	return &Qos_Classifier_Term_Conditions_Mpls_TtlValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ttl-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// TtlValue (leaf): Time-to-live MPLS packet value match.
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/ttl-value"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/mpls/state/ttl-value"
func (n *Qos_Classifier_Term_Conditions_MplsPathAny) TtlValue() *Qos_Classifier_Term_Conditions_Mpls_TtlValuePathAny {
	return &Qos_Classifier_Term_Conditions_Mpls_TtlValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ttl-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Classifier_Term_Conditions_TransportPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/transport YANG schema element.
type Qos_Classifier_Term_Conditions_TransportPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_TransportPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/transport YANG schema element.
type Qos_Classifier_Term_Conditions_TransportPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Transport_DestinationPortPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/transport/state/destination-port YANG schema element.
type Qos_Classifier_Term_Conditions_Transport_DestinationPortPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Transport_DestinationPortPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/transport/state/destination-port YANG schema element.
type Qos_Classifier_Term_Conditions_Transport_DestinationPortPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Transport_SourcePortPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/transport/state/source-port YANG schema element.
type Qos_Classifier_Term_Conditions_Transport_SourcePortPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Transport_SourcePortPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/transport/state/source-port YANG schema element.
type Qos_Classifier_Term_Conditions_Transport_SourcePortPathAny struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Transport_TcpFlagsPath represents the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/transport/state/tcp-flags YANG schema element.
type Qos_Classifier_Term_Conditions_Transport_TcpFlagsPath struct {
	*ygot.NodePath
}

// Qos_Classifier_Term_Conditions_Transport_TcpFlagsPathAny represents the wildcard version of the /openconfig-qos/qos/classifiers/classifier/terms/term/conditions/transport/state/tcp-flags YANG schema element.
type Qos_Classifier_Term_Conditions_Transport_TcpFlagsPathAny struct {
	*ygot.NodePath
}

// DestinationPort (leaf): Destination port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-port"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/transport/state/destination-port"
func (n *Qos_Classifier_Term_Conditions_TransportPath) DestinationPort() *Qos_Classifier_Term_Conditions_Transport_DestinationPortPath {
	return &Qos_Classifier_Term_Conditions_Transport_DestinationPortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// DestinationPort (leaf): Destination port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/destination-port"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/transport/state/destination-port"
func (n *Qos_Classifier_Term_Conditions_TransportPathAny) DestinationPort() *Qos_Classifier_Term_Conditions_Transport_DestinationPortPathAny {
	return &Qos_Classifier_Term_Conditions_Transport_DestinationPortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "destination-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourcePort (leaf): Source port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-port"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/transport/state/source-port"
func (n *Qos_Classifier_Term_Conditions_TransportPath) SourcePort() *Qos_Classifier_Term_Conditions_Transport_SourcePortPath {
	return &Qos_Classifier_Term_Conditions_Transport_SourcePortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourcePort (leaf): Source port or range
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/source-port"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/transport/state/source-port"
func (n *Qos_Classifier_Term_Conditions_TransportPathAny) SourcePort() *Qos_Classifier_Term_Conditions_Transport_SourcePortPathAny {
	return &Qos_Classifier_Term_Conditions_Transport_SourcePortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-port"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpFlags (leaf): List of TCP flags to match
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/tcp-flags"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/transport/state/tcp-flags"
func (n *Qos_Classifier_Term_Conditions_TransportPath) TcpFlags() *Qos_Classifier_Term_Conditions_Transport_TcpFlagsPath {
	return &Qos_Classifier_Term_Conditions_Transport_TcpFlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tcp-flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpFlags (leaf): List of TCP flags to match
// ----------------------------------------
// Defining module: "openconfig-packet-match"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/tcp-flags"
// Path from root: "/qos/classifiers/classifier/terms/term/conditions/transport/state/tcp-flags"
func (n *Qos_Classifier_Term_Conditions_TransportPathAny) TcpFlags() *Qos_Classifier_Term_Conditions_Transport_TcpFlagsPathAny {
	return &Qos_Classifier_Term_Conditions_Transport_TcpFlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tcp-flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_ForwardingGroupPath represents the /openconfig-qos/qos/forwarding-groups/forwarding-group YANG schema element.
type Qos_ForwardingGroupPath struct {
	*ygot.NodePath
}

// Qos_ForwardingGroupPathAny represents the wildcard version of the /openconfig-qos/qos/forwarding-groups/forwarding-group YANG schema element.
type Qos_ForwardingGroupPathAny struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_FabricPriorityPath represents the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/fabric-priority YANG schema element.
type Qos_ForwardingGroup_FabricPriorityPath struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_FabricPriorityPathAny represents the wildcard version of the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/fabric-priority YANG schema element.
type Qos_ForwardingGroup_FabricPriorityPathAny struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_MulticastOutputQueuePath represents the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/multicast-output-queue YANG schema element.
type Qos_ForwardingGroup_MulticastOutputQueuePath struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_MulticastOutputQueuePathAny represents the wildcard version of the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/multicast-output-queue YANG schema element.
type Qos_ForwardingGroup_MulticastOutputQueuePathAny struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_NamePath represents the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/name YANG schema element.
type Qos_ForwardingGroup_NamePath struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_NamePathAny represents the wildcard version of the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/name YANG schema element.
type Qos_ForwardingGroup_NamePathAny struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_OutputQueuePath represents the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/output-queue YANG schema element.
type Qos_ForwardingGroup_OutputQueuePath struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_OutputQueuePathAny represents the wildcard version of the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/output-queue YANG schema element.
type Qos_ForwardingGroup_OutputQueuePathAny struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_UnicastOutputQueuePath represents the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/unicast-output-queue YANG schema element.
type Qos_ForwardingGroup_UnicastOutputQueuePath struct {
	*ygot.NodePath
}

// Qos_ForwardingGroup_UnicastOutputQueuePathAny represents the wildcard version of the /openconfig-qos/qos/forwarding-groups/forwarding-group/state/unicast-output-queue YANG schema element.
type Qos_ForwardingGroup_UnicastOutputQueuePathAny struct {
	*ygot.NodePath
}

// FabricPriority (leaf): Set the priority for the forwarding group for
// local transmission through the device, e.g.,
// across a switching fabric. Higher priorities
// are considered to be better, such that traffic
// with fabric priority 128 is considered to be
// higher priority than that with fabric priority
// 0.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/fabric-priority"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/fabric-priority"
func (n *Qos_ForwardingGroupPath) FabricPriority() *Qos_ForwardingGroup_FabricPriorityPath {
	return &Qos_ForwardingGroup_FabricPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fabric-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// FabricPriority (leaf): Set the priority for the forwarding group for
// local transmission through the device, e.g.,
// across a switching fabric. Higher priorities
// are considered to be better, such that traffic
// with fabric priority 128 is considered to be
// higher priority than that with fabric priority
// 0.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/fabric-priority"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/fabric-priority"
func (n *Qos_ForwardingGroupPathAny) FabricPriority() *Qos_ForwardingGroup_FabricPriorityPathAny {
	return &Qos_ForwardingGroup_FabricPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "fabric-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastOutputQueue (leaf): Output queue for multicast packets within this
// forwarding group. Where an operator or system does
// not require separate queueing for multicast and
// unicast this leaf is not specified.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/multicast-output-queue"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/multicast-output-queue"
func (n *Qos_ForwardingGroupPath) MulticastOutputQueue() *Qos_ForwardingGroup_MulticastOutputQueuePath {
	return &Qos_ForwardingGroup_MulticastOutputQueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-output-queue"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastOutputQueue (leaf): Output queue for multicast packets within this
// forwarding group. Where an operator or system does
// not require separate queueing for multicast and
// unicast this leaf is not specified.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/multicast-output-queue"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/multicast-output-queue"
func (n *Qos_ForwardingGroupPathAny) MulticastOutputQueue() *Qos_ForwardingGroup_MulticastOutputQueuePathAny {
	return &Qos_ForwardingGroup_MulticastOutputQueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-output-queue"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Name of the forwarding group
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/name"
func (n *Qos_ForwardingGroupPath) Name() *Qos_ForwardingGroup_NamePath {
	return &Qos_ForwardingGroup_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Name of the forwarding group
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/name"
func (n *Qos_ForwardingGroupPathAny) Name() *Qos_ForwardingGroup_NamePathAny {
	return &Qos_ForwardingGroup_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputQueue (leaf): Output queue for packets in this forwarding group.
// This leaf applies to both multicast and unicast
// packets. Where a user or system requires separate
// queueing for multicast and unicast the unicast-output-queue
// and multicast-output-queue leaves should be specified.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/output-queue"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/output-queue"
func (n *Qos_ForwardingGroupPath) OutputQueue() *Qos_ForwardingGroup_OutputQueuePath {
	return &Qos_ForwardingGroup_OutputQueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-queue"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutputQueue (leaf): Output queue for packets in this forwarding group.
// This leaf applies to both multicast and unicast
// packets. Where a user or system requires separate
// queueing for multicast and unicast the unicast-output-queue
// and multicast-output-queue leaves should be specified.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/output-queue"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/output-queue"
func (n *Qos_ForwardingGroupPathAny) OutputQueue() *Qos_ForwardingGroup_OutputQueuePathAny {
	return &Qos_ForwardingGroup_OutputQueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "output-queue"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnicastOutputQueue (leaf): Output queue for unicast packets within this
// forwarding group. Where an operator or system does
// not require separate queueing for multicast and
// unicast this leaf is not specified.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/unicast-output-queue"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/unicast-output-queue"
func (n *Qos_ForwardingGroupPath) UnicastOutputQueue() *Qos_ForwardingGroup_UnicastOutputQueuePath {
	return &Qos_ForwardingGroup_UnicastOutputQueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unicast-output-queue"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnicastOutputQueue (leaf): Output queue for unicast packets within this
// forwarding group. Where an operator or system does
// not require separate queueing for multicast and
// unicast this leaf is not specified.
// ----------------------------------------
// Defining module: "openconfig-qos-elements"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/unicast-output-queue"
// Path from root: "/qos/forwarding-groups/forwarding-group/state/unicast-output-queue"
func (n *Qos_ForwardingGroupPathAny) UnicastOutputQueue() *Qos_ForwardingGroup_UnicastOutputQueuePathAny {
	return &Qos_ForwardingGroup_UnicastOutputQueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unicast-output-queue"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_InterfacePath represents the /openconfig-qos/qos/interfaces/interface YANG schema element.
type Qos_InterfacePath struct {
	*ygot.NodePath
}

// Qos_InterfacePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface YANG schema element.
type Qos_InterfacePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_InterfaceIdPath represents the /openconfig-qos/qos/interfaces/interface/state/interface-id YANG schema element.
type Qos_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// Qos_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/state/interface-id YANG schema element.
type Qos_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// Input (container): Top-level container for QoS data for the ingress
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "input"
// Path from root: "/qos/interfaces/interface/input"
func (n *Qos_InterfacePath) Input() *Qos_Interface_InputPath {
	return &Qos_Interface_InputPath{
		NodePath: ygot.NewNodePath(
			[]string{"input"},
			map[string]interface{}{},
			n,
		),
	}
}

// Input (container): Top-level container for QoS data for the ingress
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "input"
// Path from root: "/qos/interfaces/interface/input"
func (n *Qos_InterfacePathAny) Input() *Qos_Interface_InputPathAny {
	return &Qos_Interface_InputPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"input"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/interface-id"
// Path from root: "/qos/interfaces/interface/state/interface-id"
func (n *Qos_InterfacePath) InterfaceId() *Qos_Interface_InterfaceIdPath {
	return &Qos_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Identifier for the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/interface-id"
// Path from root: "/qos/interfaces/interface/state/interface-id"
func (n *Qos_InterfacePathAny) InterfaceId() *Qos_Interface_InterfaceIdPathAny {
	return &Qos_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interface-ref"
// Path from root: "/qos/interfaces/interface/interface-ref"
func (n *Qos_InterfacePath) InterfaceRef() *Qos_Interface_InterfaceRefPath {
	return &Qos_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interface-ref"
// Path from root: "/qos/interfaces/interface/interface-ref"
func (n *Qos_InterfacePathAny) InterfaceRef() *Qos_Interface_InterfaceRefPathAny {
	return &Qos_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Output (container): Top-level container for QoS data related to the egress
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "output"
// Path from root: "/qos/interfaces/interface/output"
func (n *Qos_InterfacePath) Output() *Qos_Interface_OutputPath {
	return &Qos_Interface_OutputPath{
		NodePath: ygot.NewNodePath(
			[]string{"output"},
			map[string]interface{}{},
			n,
		),
	}
}

// Output (container): Top-level container for QoS data related to the egress
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "output"
// Path from root: "/qos/interfaces/interface/output"
func (n *Qos_InterfacePathAny) Output() *Qos_Interface_OutputPathAny {
	return &Qos_Interface_OutputPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"output"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_InputPath represents the /openconfig-qos/qos/interfaces/interface/input YANG schema element.
type Qos_Interface_InputPath struct {
	*ygot.NodePath
}

// Qos_Interface_InputPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input YANG schema element.
type Qos_Interface_InputPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_BufferAllocationProfilePath represents the /openconfig-qos/qos/interfaces/interface/input/state/buffer-allocation-profile YANG schema element.
type Qos_Interface_Input_BufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_BufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/state/buffer-allocation-profile YANG schema element.
type Qos_Interface_Input_BufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_MulticastBufferAllocationProfilePath represents the /openconfig-qos/qos/interfaces/interface/input/state/multicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Input_MulticastBufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_MulticastBufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/state/multicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Input_MulticastBufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_UnicastBufferAllocationProfilePath represents the /openconfig-qos/qos/interfaces/interface/input/state/unicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Input_UnicastBufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_UnicastBufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/state/unicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Input_UnicastBufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// BufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the input (rx) queueing.
//
// This leaf is used in deployment cases where the operator or system
// requires common allocation profiles covering unicast and multicast
// packets.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/input/state/buffer-allocation-profile"
func (n *Qos_Interface_InputPath) BufferAllocationProfile() *Qos_Interface_Input_BufferAllocationProfilePath {
	return &Qos_Interface_Input_BufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// BufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the input (rx) queueing.
//
// This leaf is used in deployment cases where the operator or system
// requires common allocation profiles covering unicast and multicast
// packets.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/input/state/buffer-allocation-profile"
func (n *Qos_Interface_InputPathAny) BufferAllocationProfile() *Qos_Interface_Input_BufferAllocationProfilePathAny {
	return &Qos_Interface_Input_BufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// ClassifierAny (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier"
// Type (wildcarded): E_Input_Classifier_Type
func (n *Qos_Interface_InputPath) ClassifierAny() *Qos_Interface_Input_ClassifierPathAny {
	return &Qos_Interface_Input_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// ClassifierAny (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier"
// Type (wildcarded): E_Input_Classifier_Type
func (n *Qos_Interface_InputPathAny) ClassifierAny() *Qos_Interface_Input_ClassifierPathAny {
	return &Qos_Interface_Input_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Classifier (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier"
// Type: E_Input_Classifier_Type
func (n *Qos_Interface_InputPath) Classifier(Type E_Input_Classifier_Type) *Qos_Interface_Input_ClassifierPath {
	return &Qos_Interface_Input_ClassifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Classifier (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier"
// Type: E_Input_Classifier_Type
func (n *Qos_Interface_InputPathAny) Classifier(Type E_Input_Classifier_Type) *Qos_Interface_Input_ClassifierPathAny {
	return &Qos_Interface_Input_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// MulticastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only multicast packets on
// the interface - if specified, the unicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to unicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/multicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/input/state/multicast-buffer-allocation-profile"
func (n *Qos_Interface_InputPath) MulticastBufferAllocationProfile() *Qos_Interface_Input_MulticastBufferAllocationProfilePath {
	return &Qos_Interface_Input_MulticastBufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only multicast packets on
// the interface - if specified, the unicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to unicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/multicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/input/state/multicast-buffer-allocation-profile"
func (n *Qos_Interface_InputPathAny) MulticastBufferAllocationProfile() *Qos_Interface_Input_MulticastBufferAllocationProfilePathAny {
	return &Qos_Interface_Input_MulticastBufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/input/queues/queue"
// Name (wildcarded): string
func (n *Qos_Interface_InputPath) QueueAny() *Qos_Interface_Input_QueuePathAny {
	return &Qos_Interface_Input_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/input/queues/queue"
// Name (wildcarded): string
func (n *Qos_Interface_InputPathAny) QueueAny() *Qos_Interface_Input_QueuePathAny {
	return &Qos_Interface_Input_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Queue (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/input/queues/queue"
// Name: string
func (n *Qos_Interface_InputPath) Queue(Name string) *Qos_Interface_Input_QueuePath {
	return &Qos_Interface_Input_QueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Queue (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/input/queues/queue"
// Name: string
func (n *Qos_Interface_InputPathAny) Queue(Name string) *Qos_Interface_Input_QueuePathAny {
	return &Qos_Interface_Input_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// SchedulerPolicy (container): Scheduler policy associated with the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policy"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy"
func (n *Qos_Interface_InputPath) SchedulerPolicy() *Qos_Interface_Input_SchedulerPolicyPath {
	return &Qos_Interface_Input_SchedulerPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SchedulerPolicy (container): Scheduler policy associated with the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policy"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy"
func (n *Qos_Interface_InputPathAny) SchedulerPolicy() *Qos_Interface_Input_SchedulerPolicyPathAny {
	return &Qos_Interface_Input_SchedulerPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnicastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only unicast packets on
// the interface - if specified, the multicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to multicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/unicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/input/state/unicast-buffer-allocation-profile"
func (n *Qos_Interface_InputPath) UnicastBufferAllocationProfile() *Qos_Interface_Input_UnicastBufferAllocationProfilePath {
	return &Qos_Interface_Input_UnicastBufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnicastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only unicast packets on
// the interface - if specified, the multicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to multicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/unicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/input/state/unicast-buffer-allocation-profile"
func (n *Qos_Interface_InputPathAny) UnicastBufferAllocationProfile() *Qos_Interface_Input_UnicastBufferAllocationProfilePathAny {
	return &Qos_Interface_Input_UnicastBufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// VoqInterfaceAny (list): List of egress interfaces for which a virtual output
// queue is instantiated at this interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "virtual-output-queues/voq-interface"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface"
// Name (wildcarded): string
func (n *Qos_Interface_InputPath) VoqInterfaceAny() *Qos_Interface_Input_VoqInterfacePathAny {
	return &Qos_Interface_Input_VoqInterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-output-queues", "voq-interface"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// VoqInterfaceAny (list): List of egress interfaces for which a virtual output
// queue is instantiated at this interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "virtual-output-queues/voq-interface"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface"
// Name (wildcarded): string
func (n *Qos_Interface_InputPathAny) VoqInterfaceAny() *Qos_Interface_Input_VoqInterfacePathAny {
	return &Qos_Interface_Input_VoqInterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-output-queues", "voq-interface"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// VoqInterface (list): List of egress interfaces for which a virtual output
// queue is instantiated at this interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "virtual-output-queues/voq-interface"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface"
// Name: string
func (n *Qos_Interface_InputPath) VoqInterface(Name string) *Qos_Interface_Input_VoqInterfacePath {
	return &Qos_Interface_Input_VoqInterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-output-queues", "voq-interface"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// VoqInterface (list): List of egress interfaces for which a virtual output
// queue is instantiated at this interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "virtual-output-queues/voq-interface"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface"
// Name: string
func (n *Qos_Interface_InputPathAny) VoqInterface(Name string) *Qos_Interface_Input_VoqInterfacePathAny {
	return &Qos_Interface_Input_VoqInterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-output-queues", "voq-interface"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Qos_Interface_Input_ClassifierPath represents the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier YANG schema element.
type Qos_Interface_Input_ClassifierPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_ClassifierPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier YANG schema element.
type Qos_Interface_Input_ClassifierPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_NamePath represents the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/state/name YANG schema element.
type Qos_Interface_Input_Classifier_NamePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/state/name YANG schema element.
type Qos_Interface_Input_Classifier_NamePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_TypePath represents the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/state/type YANG schema element.
type Qos_Interface_Input_Classifier_TypePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_TypePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/state/type YANG schema element.
type Qos_Interface_Input_Classifier_TypePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Reference to the classifier to be applied to ingress traffic on
// the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/state/name"
func (n *Qos_Interface_Input_ClassifierPath) Name() *Qos_Interface_Input_Classifier_NamePath {
	return &Qos_Interface_Input_Classifier_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the classifier to be applied to ingress traffic on
// the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/state/name"
func (n *Qos_Interface_Input_ClassifierPathAny) Name() *Qos_Interface_Input_Classifier_NamePathAny {
	return &Qos_Interface_Input_Classifier_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// TermAny (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term"
// Id (wildcarded): string
func (n *Qos_Interface_Input_ClassifierPath) TermAny() *Qos_Interface_Input_Classifier_TermPathAny {
	return &Qos_Interface_Input_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// TermAny (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term"
// Id (wildcarded): string
func (n *Qos_Interface_Input_ClassifierPathAny) TermAny() *Qos_Interface_Input_Classifier_TermPathAny {
	return &Qos_Interface_Input_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Term (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term"
// Id: string
func (n *Qos_Interface_Input_ClassifierPath) Term(Id string) *Qos_Interface_Input_Classifier_TermPath {
	return &Qos_Interface_Input_Classifier_TermPath{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Term (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term"
// Id: string
func (n *Qos_Interface_Input_ClassifierPathAny) Term(Id string) *Qos_Interface_Input_Classifier_TermPathAny {
	return &Qos_Interface_Input_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Type (leaf): Type of packets matched by the classifier.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/state/type"
func (n *Qos_Interface_Input_ClassifierPath) Type() *Qos_Interface_Input_Classifier_TypePath {
	return &Qos_Interface_Input_Classifier_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of packets matched by the classifier.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/state/type"
func (n *Qos_Interface_Input_ClassifierPathAny) Type() *Qos_Interface_Input_Classifier_TypePathAny {
	return &Qos_Interface_Input_Classifier_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Input_Classifier_TermPath represents the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/terms/term YANG schema element.
type Qos_Interface_Input_Classifier_TermPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_TermPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/terms/term YANG schema element.
type Qos_Interface_Input_Classifier_TermPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_Term_IdPath represents the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/id YANG schema element.
type Qos_Interface_Input_Classifier_Term_IdPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_Term_IdPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/id YANG schema element.
type Qos_Interface_Input_Classifier_Term_IdPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_Term_MatchedOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/matched-octets YANG schema element.
type Qos_Interface_Input_Classifier_Term_MatchedOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_Term_MatchedOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/matched-octets YANG schema element.
type Qos_Interface_Input_Classifier_Term_MatchedOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_Term_MatchedPacketsPath represents the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/matched-packets YANG schema element.
type Qos_Interface_Input_Classifier_Term_MatchedPacketsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Classifier_Term_MatchedPacketsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/matched-packets YANG schema element.
type Qos_Interface_Input_Classifier_Term_MatchedPacketsPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Reference to match terms in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/id"
func (n *Qos_Interface_Input_Classifier_TermPath) Id() *Qos_Interface_Input_Classifier_Term_IdPath {
	return &Qos_Interface_Input_Classifier_Term_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Reference to match terms in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/id"
func (n *Qos_Interface_Input_Classifier_TermPathAny) Id() *Qos_Interface_Input_Classifier_Term_IdPathAny {
	return &Qos_Interface_Input_Classifier_Term_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedOctets (leaf): Count of the number of octets (bytes) matching this
// classifier match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-octets"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/matched-octets"
func (n *Qos_Interface_Input_Classifier_TermPath) MatchedOctets() *Qos_Interface_Input_Classifier_Term_MatchedOctetsPath {
	return &Qos_Interface_Input_Classifier_Term_MatchedOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedOctets (leaf): Count of the number of octets (bytes) matching this
// classifier match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-octets"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/matched-octets"
func (n *Qos_Interface_Input_Classifier_TermPathAny) MatchedOctets() *Qos_Interface_Input_Classifier_Term_MatchedOctetsPathAny {
	return &Qos_Interface_Input_Classifier_Term_MatchedOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedPackets (leaf): Count of the number of packets matching this classifier
// match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-packets"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/matched-packets"
func (n *Qos_Interface_Input_Classifier_TermPath) MatchedPackets() *Qos_Interface_Input_Classifier_Term_MatchedPacketsPath {
	return &Qos_Interface_Input_Classifier_Term_MatchedPacketsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-packets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedPackets (leaf): Count of the number of packets matching this classifier
// match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-packets"
// Path from root: "/qos/interfaces/interface/input/classifiers/classifier/terms/term/state/matched-packets"
func (n *Qos_Interface_Input_Classifier_TermPathAny) MatchedPackets() *Qos_Interface_Input_Classifier_Term_MatchedPacketsPathAny {
	return &Qos_Interface_Input_Classifier_Term_MatchedPacketsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-packets"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Input_QueuePath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue YANG schema element.
type Qos_Interface_Input_QueuePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_QueuePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue YANG schema element.
type Qos_Interface_Input_QueuePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_AvgQueueLenPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/avg-queue-len YANG schema element.
type Qos_Interface_Input_Queue_AvgQueueLenPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_AvgQueueLenPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/avg-queue-len YANG schema element.
type Qos_Interface_Input_Queue_AvgQueueLenPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_DroppedPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Input_Queue_DroppedPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_DroppedPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Input_Queue_DroppedPktsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_MaxQueueLenPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Input_Queue_MaxQueueLenPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_MaxQueueLenPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Input_Queue_MaxQueueLenPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_NamePath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/name YANG schema element.
type Qos_Interface_Input_Queue_NamePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/name YANG schema element.
type Qos_Interface_Input_Queue_NamePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_QueueManagementProfilePath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/queue-management-profile YANG schema element.
type Qos_Interface_Input_Queue_QueueManagementProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_QueueManagementProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/queue-management-profile YANG schema element.
type Qos_Interface_Input_Queue_QueueManagementProfilePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_TransmitOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/transmit-octets YANG schema element.
type Qos_Interface_Input_Queue_TransmitOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_TransmitOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/transmit-octets YANG schema element.
type Qos_Interface_Input_Queue_TransmitOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_TransmitPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/transmit-pkts YANG schema element.
type Qos_Interface_Input_Queue_TransmitPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_Queue_TransmitPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/queues/queue/state/transmit-pkts YANG schema element.
type Qos_Interface_Input_Queue_TransmitPktsPathAny struct {
	*ygot.NodePath
}

// AvgQueueLen (leaf): Average observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/avg-queue-len"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Input_QueuePath) AvgQueueLen() *Qos_Interface_Input_Queue_AvgQueueLenPath {
	return &Qos_Interface_Input_Queue_AvgQueueLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "avg-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvgQueueLen (leaf): Average observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/avg-queue-len"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Input_QueuePathAny) AvgQueueLen() *Qos_Interface_Input_Queue_AvgQueueLenPathAny {
	return &Qos_Interface_Input_Queue_AvgQueueLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "avg-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// DroppedPkts (leaf): Number of packets dropped by the queue due to overrun
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dropped-pkts"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_QueuePath) DroppedPkts() *Qos_Interface_Input_Queue_DroppedPktsPath {
	return &Qos_Interface_Input_Queue_DroppedPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// DroppedPkts (leaf): Number of packets dropped by the queue due to overrun
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dropped-pkts"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_QueuePathAny) DroppedPkts() *Qos_Interface_Input_Queue_DroppedPktsPathAny {
	return &Qos_Interface_Input_Queue_DroppedPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueLen (leaf): Maximum observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-len"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_QueuePath) MaxQueueLen() *Qos_Interface_Input_Queue_MaxQueueLenPath {
	return &Qos_Interface_Input_Queue_MaxQueueLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueLen (leaf): Maximum observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-len"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_QueuePathAny) MaxQueueLen() *Qos_Interface_Input_Queue_MaxQueueLenPathAny {
	return &Qos_Interface_Input_Queue_MaxQueueLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the queue associated with this interface.
// A queue may be explicitly configured, or implicitly created
// by the system based on default queues that are instantiated
// by a hardware component, or are assumed to be default on
// the system.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/name"
func (n *Qos_Interface_Input_QueuePath) Name() *Qos_Interface_Input_Queue_NamePath {
	return &Qos_Interface_Input_Queue_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the queue associated with this interface.
// A queue may be explicitly configured, or implicitly created
// by the system based on default queues that are instantiated
// by a hardware component, or are assumed to be default on
// the system.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/name"
func (n *Qos_Interface_Input_QueuePathAny) Name() *Qos_Interface_Input_Queue_NamePathAny {
	return &Qos_Interface_Input_Queue_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueueManagementProfile (leaf): The queue management profile that is to be used for the queue
// on the interface.
//
// For example, the system may use a profile which specifies that
// WRED curves are used for setting an ECN mark in the IP header
// instead of dropping a packet in order to signal impending
// congestion and for determining when there is sufficient
// congestion to tail drop packets.
//
// A single profile is available per queue - which applies to all packets
// that are enqueued to the specified queue, whether they are unicast or
// multicast.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/queue-management-profile"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/queue-management-profile"
func (n *Qos_Interface_Input_QueuePath) QueueManagementProfile() *Qos_Interface_Input_Queue_QueueManagementProfilePath {
	return &Qos_Interface_Input_Queue_QueueManagementProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "queue-management-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueueManagementProfile (leaf): The queue management profile that is to be used for the queue
// on the interface.
//
// For example, the system may use a profile which specifies that
// WRED curves are used for setting an ECN mark in the IP header
// instead of dropping a packet in order to signal impending
// congestion and for determining when there is sufficient
// congestion to tail drop packets.
//
// A single profile is available per queue - which applies to all packets
// that are enqueued to the specified queue, whether they are unicast or
// multicast.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/queue-management-profile"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/queue-management-profile"
func (n *Qos_Interface_Input_QueuePathAny) QueueManagementProfile() *Qos_Interface_Input_Queue_QueueManagementProfilePathAny {
	return &Qos_Interface_Input_Queue_QueueManagementProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "queue-management-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitOctets (leaf): Number of octets trasmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-octets"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Input_QueuePath) TransmitOctets() *Qos_Interface_Input_Queue_TransmitOctetsPath {
	return &Qos_Interface_Input_Queue_TransmitOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitOctets (leaf): Number of octets trasmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-octets"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Input_QueuePathAny) TransmitOctets() *Qos_Interface_Input_Queue_TransmitOctetsPathAny {
	return &Qos_Interface_Input_Queue_TransmitOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitPkts (leaf): Number of packets transmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-pkts"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Input_QueuePath) TransmitPkts() *Qos_Interface_Input_Queue_TransmitPktsPath {
	return &Qos_Interface_Input_Queue_TransmitPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitPkts (leaf): Number of packets transmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-pkts"
// Path from root: "/qos/interfaces/interface/input/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Input_QueuePathAny) TransmitPkts() *Qos_Interface_Input_Queue_TransmitPktsPathAny {
	return &Qos_Interface_Input_Queue_TransmitPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Input_SchedulerPolicyPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy YANG schema element.
type Qos_Interface_Input_SchedulerPolicyPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicyPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy YANG schema element.
type Qos_Interface_Input_SchedulerPolicyPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_NamePath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/state/name YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_NamePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/state/name YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_NamePathAny struct {
	*ygot.NodePath
}

// Name (leaf): The scheduler policy to be applied to traffic on this interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/state/name"
func (n *Qos_Interface_Input_SchedulerPolicyPath) Name() *Qos_Interface_Input_SchedulerPolicy_NamePath {
	return &Qos_Interface_Input_SchedulerPolicy_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The scheduler policy to be applied to traffic on this interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/state/name"
func (n *Qos_Interface_Input_SchedulerPolicyPathAny) Name() *Qos_Interface_Input_SchedulerPolicy_NamePathAny {
	return &Qos_Interface_Input_SchedulerPolicy_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SchedulerAny (list): List of the schedulers that are part of the scheduler-policy
// specified.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
// Sequence (wildcarded): uint32
func (n *Qos_Interface_Input_SchedulerPolicyPath) SchedulerAny() *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny {
	return &Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": "*"},
			n,
		),
	}
}

// SchedulerAny (list): List of the schedulers that are part of the scheduler-policy
// specified.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
// Sequence (wildcarded): uint32
func (n *Qos_Interface_Input_SchedulerPolicyPathAny) SchedulerAny() *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny {
	return &Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": "*"},
			n,
		),
	}
}

// Scheduler (list): List of the schedulers that are part of the scheduler-policy
// specified.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
// Sequence: uint32
func (n *Qos_Interface_Input_SchedulerPolicyPath) Scheduler(Sequence uint32) *Qos_Interface_Input_SchedulerPolicy_SchedulerPath {
	return &Qos_Interface_Input_SchedulerPolicy_SchedulerPath{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": Sequence},
			n,
		),
	}
}

// Scheduler (list): List of the schedulers that are part of the scheduler-policy
// specified.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "schedulers/scheduler"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler"
// Sequence: uint32
func (n *Qos_Interface_Input_SchedulerPolicyPathAny) Scheduler(Sequence uint32) *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny {
	return &Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"schedulers", "scheduler"},
			map[string]interface{}{"sequence": Sequence},
			n,
		),
	}
}

// Qos_Interface_Input_SchedulerPolicy_SchedulerPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_SchedulerPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/sequence YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/sequence YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts YANG schema element.
type Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPathAny struct {
	*ygot.NodePath
}

// ConformingOctets (leaf): The number of octets in packets that were considered
// conforming by the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/conforming-octets"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ConformingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPath {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "conforming-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformingOctets (leaf): The number of octets in packets that were considered
// conforming by the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/conforming-octets"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ConformingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPathAny {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "conforming-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformingPkts (leaf): The number of packets that were considered conforming by
// the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/conforming-pkts"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ConformingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPath {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "conforming-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConformingPkts (leaf): The number of packets that were considered conforming by
// the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/conforming-pkts"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/conforming-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ConformingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPathAny {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ConformingPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "conforming-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedingOctets (leaf): The number of octets in packets that were considered
// exceeding by the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/exceeding-octets"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ExceedingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPath {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceeding-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedingOctets (leaf): The number of octets in packets that were considered
// exceeding by the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/exceeding-octets"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ExceedingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceeding-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedingPkts (leaf): The number of packets that were considered exceeding by
// the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/exceeding-pkts"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ExceedingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPath {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceeding-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedingPkts (leaf): The number of packets that were considered exceeding by
// the scheduler.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/exceeding-pkts"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/exceeding-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ExceedingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPathAny {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ExceedingPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceeding-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sequence (leaf): Reference to the sequence ID of the scheduler within
// the current scheduler policy.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/sequence"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/sequence"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) Sequence() *Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sequence (leaf): Reference to the sequence ID of the scheduler within
// the current scheduler policy.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/sequence"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/sequence"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) Sequence() *Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_SequencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolatingOctets (leaf): The number of octets in packets that were considered
// violating by the policer.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/violating-octets"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ViolatingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPath {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "violating-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolatingOctets (leaf): The number of octets in packets that were considered
// violating by the policer.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/violating-octets"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-octets"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ViolatingOctets() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "violating-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolatingPkts (leaf): The number of packets that were considered violating by
// the policer.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/violating-pkts"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPath) ViolatingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPath {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "violating-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// ViolatingPkts (leaf): The number of packets that were considered violating by
// the policer.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/violating-pkts"
// Path from root: "/qos/interfaces/interface/input/scheduler-policy/schedulers/scheduler/state/violating-pkts"
func (n *Qos_Interface_Input_SchedulerPolicy_SchedulerPathAny) ViolatingPkts() *Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPathAny {
	return &Qos_Interface_Input_SchedulerPolicy_Scheduler_ViolatingPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "violating-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Input_VoqInterfacePath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface YANG schema element.
type Qos_Interface_Input_VoqInterfacePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterfacePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface YANG schema element.
type Qos_Interface_Input_VoqInterfacePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_NamePath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/state/name YANG schema element.
type Qos_Interface_Input_VoqInterface_NamePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/state/name YANG schema element.
type Qos_Interface_Input_VoqInterface_NamePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Name used to refer to the egress interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/state/name"
func (n *Qos_Interface_Input_VoqInterfacePath) Name() *Qos_Interface_Input_VoqInterface_NamePath {
	return &Qos_Interface_Input_VoqInterface_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Name used to refer to the egress interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/state/name"
func (n *Qos_Interface_Input_VoqInterfacePathAny) Name() *Qos_Interface_Input_VoqInterface_NamePathAny {
	return &Qos_Interface_Input_VoqInterface_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
// Name (wildcarded): string
func (n *Qos_Interface_Input_VoqInterfacePath) QueueAny() *Qos_Interface_Input_VoqInterface_QueuePathAny {
	return &Qos_Interface_Input_VoqInterface_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
// Name (wildcarded): string
func (n *Qos_Interface_Input_VoqInterfacePathAny) QueueAny() *Qos_Interface_Input_VoqInterface_QueuePathAny {
	return &Qos_Interface_Input_VoqInterface_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Queue (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
// Name: string
func (n *Qos_Interface_Input_VoqInterfacePath) Queue(Name string) *Qos_Interface_Input_VoqInterface_QueuePath {
	return &Qos_Interface_Input_VoqInterface_QueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Queue (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue"
// Name: string
func (n *Qos_Interface_Input_VoqInterfacePathAny) Queue(Name string) *Qos_Interface_Input_VoqInterface_QueuePathAny {
	return &Qos_Interface_Input_VoqInterface_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Qos_Interface_Input_VoqInterface_QueuePath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue YANG schema element.
type Qos_Interface_Input_VoqInterface_QueuePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_QueuePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue YANG schema element.
type Qos_Interface_Input_VoqInterface_QueuePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/avg-queue-len YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/avg-queue-len YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/max-queue-len YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_NamePath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/name YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_NamePath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/name YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_NamePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_TransmitOctetsPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/transmit-octets YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_TransmitOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_TransmitOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/transmit-octets YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_TransmitOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_TransmitPktsPath represents the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/transmit-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_TransmitPktsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Input_VoqInterface_Queue_TransmitPktsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/transmit-pkts YANG schema element.
type Qos_Interface_Input_VoqInterface_Queue_TransmitPktsPathAny struct {
	*ygot.NodePath
}

// AvgQueueLen (leaf): Average observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/avg-queue-len"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Input_VoqInterface_QueuePath) AvgQueueLen() *Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPath {
	return &Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "avg-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvgQueueLen (leaf): Average observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/avg-queue-len"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/avg-queue-len"
func (n *Qos_Interface_Input_VoqInterface_QueuePathAny) AvgQueueLen() *Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPathAny {
	return &Qos_Interface_Input_VoqInterface_Queue_AvgQueueLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "avg-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// DroppedPkts (leaf): Number of packets dropped by the queue due to overrun
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dropped-pkts"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_VoqInterface_QueuePath) DroppedPkts() *Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPath {
	return &Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// DroppedPkts (leaf): Number of packets dropped by the queue due to overrun
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/dropped-pkts"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-pkts"
func (n *Qos_Interface_Input_VoqInterface_QueuePathAny) DroppedPkts() *Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPathAny {
	return &Qos_Interface_Input_VoqInterface_Queue_DroppedPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dropped-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueLen (leaf): Maximum observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-len"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_VoqInterface_QueuePath) MaxQueueLen() *Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPath {
	return &Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxQueueLen (leaf): Maximum observed queue length
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/max-queue-len"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/max-queue-len"
func (n *Qos_Interface_Input_VoqInterface_QueuePathAny) MaxQueueLen() *Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPathAny {
	return &Qos_Interface_Input_VoqInterface_Queue_MaxQueueLenPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-queue-len"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the queue associated with this interface.
// A queue may be explicitly configured, or implicitly created
// by the system based on default queues that are instantiated
// by a hardware component, or are assumed to be default on
// the system.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/name"
func (n *Qos_Interface_Input_VoqInterface_QueuePath) Name() *Qos_Interface_Input_VoqInterface_Queue_NamePath {
	return &Qos_Interface_Input_VoqInterface_Queue_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the queue associated with this interface.
// A queue may be explicitly configured, or implicitly created
// by the system based on default queues that are instantiated
// by a hardware component, or are assumed to be default on
// the system.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/name"
func (n *Qos_Interface_Input_VoqInterface_QueuePathAny) Name() *Qos_Interface_Input_VoqInterface_Queue_NamePathAny {
	return &Qos_Interface_Input_VoqInterface_Queue_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitOctets (leaf): Number of octets trasmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-octets"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Input_VoqInterface_QueuePath) TransmitOctets() *Qos_Interface_Input_VoqInterface_Queue_TransmitOctetsPath {
	return &Qos_Interface_Input_VoqInterface_Queue_TransmitOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitOctets (leaf): Number of octets trasmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-octets"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/transmit-octets"
func (n *Qos_Interface_Input_VoqInterface_QueuePathAny) TransmitOctets() *Qos_Interface_Input_VoqInterface_Queue_TransmitOctetsPathAny {
	return &Qos_Interface_Input_VoqInterface_Queue_TransmitOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitPkts (leaf): Number of packets transmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-pkts"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Input_VoqInterface_QueuePath) TransmitPkts() *Qos_Interface_Input_VoqInterface_Queue_TransmitPktsPath {
	return &Qos_Interface_Input_VoqInterface_Queue_TransmitPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// TransmitPkts (leaf): Number of packets transmitted by this queue
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/transmit-pkts"
// Path from root: "/qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/transmit-pkts"
func (n *Qos_Interface_Input_VoqInterface_QueuePathAny) TransmitPkts() *Qos_Interface_Input_VoqInterface_Queue_TransmitPktsPathAny {
	return &Qos_Interface_Input_VoqInterface_Queue_TransmitPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "transmit-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_InterfaceRefPath represents the /openconfig-qos/qos/interfaces/interface/interface-ref YANG schema element.
type Qos_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// Qos_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/interface-ref YANG schema element.
type Qos_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_InterfaceRef_InterfacePath represents the /openconfig-qos/qos/interfaces/interface/interface-ref/state/interface YANG schema element.
type Qos_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// Qos_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/interface-ref/state/interface YANG schema element.
type Qos_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-qos/qos/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type Qos_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// Qos_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type Qos_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/interface"
// Path from root: "/qos/interfaces/interface/interface-ref/state/interface"
func (n *Qos_Interface_InterfaceRefPath) Interface() *Qos_Interface_InterfaceRef_InterfacePath {
	return &Qos_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/interface"
// Path from root: "/qos/interfaces/interface/interface-ref/state/interface"
func (n *Qos_Interface_InterfaceRefPathAny) Interface() *Qos_Interface_InterfaceRef_InterfacePathAny {
	return &Qos_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/subinterface"
// Path from root: "/qos/interfaces/interface/interface-ref/state/subinterface"
func (n *Qos_Interface_InterfaceRefPath) Subinterface() *Qos_Interface_InterfaceRef_SubinterfacePath {
	return &Qos_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/subinterface"
// Path from root: "/qos/interfaces/interface/interface-ref/state/subinterface"
func (n *Qos_Interface_InterfaceRefPathAny) Subinterface() *Qos_Interface_InterfaceRef_SubinterfacePathAny {
	return &Qos_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_OutputPath represents the /openconfig-qos/qos/interfaces/interface/output YANG schema element.
type Qos_Interface_OutputPath struct {
	*ygot.NodePath
}

// Qos_Interface_OutputPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output YANG schema element.
type Qos_Interface_OutputPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_BufferAllocationProfilePath represents the /openconfig-qos/qos/interfaces/interface/output/state/buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_BufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_BufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/state/buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_BufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_MulticastBufferAllocationProfilePath represents the /openconfig-qos/qos/interfaces/interface/output/state/multicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_MulticastBufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_MulticastBufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/state/multicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_MulticastBufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_UnicastBufferAllocationProfilePath represents the /openconfig-qos/qos/interfaces/interface/output/state/unicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_UnicastBufferAllocationProfilePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_UnicastBufferAllocationProfilePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/state/unicast-buffer-allocation-profile YANG schema element.
type Qos_Interface_Output_UnicastBufferAllocationProfilePathAny struct {
	*ygot.NodePath
}

// BufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This leaf is used in deployment cases where the operator or system
// requires common allocation profiles covering unicast and multicast
// packets.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/buffer-allocation-profile"
func (n *Qos_Interface_OutputPath) BufferAllocationProfile() *Qos_Interface_Output_BufferAllocationProfilePath {
	return &Qos_Interface_Output_BufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// BufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This leaf is used in deployment cases where the operator or system
// requires common allocation profiles covering unicast and multicast
// packets.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/buffer-allocation-profile"
func (n *Qos_Interface_OutputPathAny) BufferAllocationProfile() *Qos_Interface_Output_BufferAllocationProfilePathAny {
	return &Qos_Interface_Output_BufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// ClassifierAny (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier"
// Type (wildcarded): E_Input_Classifier_Type
func (n *Qos_Interface_OutputPath) ClassifierAny() *Qos_Interface_Output_ClassifierPathAny {
	return &Qos_Interface_Output_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// ClassifierAny (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier"
// Type (wildcarded): E_Input_Classifier_Type
func (n *Qos_Interface_OutputPathAny) ClassifierAny() *Qos_Interface_Output_ClassifierPathAny {
	return &Qos_Interface_Output_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Classifier (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier"
// Type: E_Input_Classifier_Type
func (n *Qos_Interface_OutputPath) Classifier(Type E_Input_Classifier_Type) *Qos_Interface_Output_ClassifierPath {
	return &Qos_Interface_Output_ClassifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Classifier (list): A list of classifiers that should be applied to the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "classifiers/classifier"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier"
// Type: E_Input_Classifier_Type
func (n *Qos_Interface_OutputPathAny) Classifier(Type E_Input_Classifier_Type) *Qos_Interface_Output_ClassifierPathAny {
	return &Qos_Interface_Output_ClassifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"classifiers", "classifier"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interface-ref"
// Path from root: "/qos/interfaces/interface/output/interface-ref"
func (n *Qos_Interface_OutputPath) InterfaceRef() *Qos_Interface_Output_InterfaceRefPath {
	return &Qos_Interface_Output_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "interface-ref"
// Path from root: "/qos/interfaces/interface/output/interface-ref"
func (n *Qos_Interface_OutputPathAny) InterfaceRef() *Qos_Interface_Output_InterfaceRefPathAny {
	return &Qos_Interface_Output_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only multicast packets on
// the interface - if specified, the unicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to unicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/multicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/multicast-buffer-allocation-profile"
func (n *Qos_Interface_OutputPath) MulticastBufferAllocationProfile() *Qos_Interface_Output_MulticastBufferAllocationProfilePath {
	return &Qos_Interface_Output_MulticastBufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only multicast packets on
// the interface - if specified, the unicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to unicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/multicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/multicast-buffer-allocation-profile"
func (n *Qos_Interface_OutputPathAny) MulticastBufferAllocationProfile() *Qos_Interface_Output_MulticastBufferAllocationProfilePathAny {
	return &Qos_Interface_Output_MulticastBufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/output/queues/queue"
// Name (wildcarded): string
func (n *Qos_Interface_OutputPath) QueueAny() *Qos_Interface_Output_QueuePathAny {
	return &Qos_Interface_Output_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// QueueAny (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/output/queues/queue"
// Name (wildcarded): string
func (n *Qos_Interface_OutputPathAny) QueueAny() *Qos_Interface_Output_QueuePathAny {
	return &Qos_Interface_Output_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Queue (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/output/queues/queue"
// Name: string
func (n *Qos_Interface_OutputPath) Queue(Name string) *Qos_Interface_Output_QueuePath {
	return &Qos_Interface_Output_QueuePath{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Queue (list): Top-level container for the queue associated with this
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "queues/queue"
// Path from root: "/qos/interfaces/interface/output/queues/queue"
// Name: string
func (n *Qos_Interface_OutputPathAny) Queue(Name string) *Qos_Interface_Output_QueuePathAny {
	return &Qos_Interface_Output_QueuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queues", "queue"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// SchedulerPolicy (container): Scheduler policy associated with the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policy"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy"
func (n *Qos_Interface_OutputPath) SchedulerPolicy() *Qos_Interface_Output_SchedulerPolicyPath {
	return &Qos_Interface_Output_SchedulerPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SchedulerPolicy (container): Scheduler policy associated with the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "scheduler-policy"
// Path from root: "/qos/interfaces/interface/output/scheduler-policy"
func (n *Qos_Interface_OutputPathAny) SchedulerPolicy() *Qos_Interface_Output_SchedulerPolicyPathAny {
	return &Qos_Interface_Output_SchedulerPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"scheduler-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnicastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only unicast packets on
// the interface - if specified, the multicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to multicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/unicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/unicast-buffer-allocation-profile"
func (n *Qos_Interface_OutputPath) UnicastBufferAllocationProfile() *Qos_Interface_Output_UnicastBufferAllocationProfilePath {
	return &Qos_Interface_Output_UnicastBufferAllocationProfilePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnicastBufferAllocationProfile (leaf): The buffer allocation profile that is to be used for the interface.
// This profile specifies how memory that is available to the interface
// should be allocated amongst the queues that are instantiated on the
// interface.
//
// This reference specifies the policy that should be used for memory
// allocated to the output (tx) queueing.
//
// This buffer allocation profile applies to only unicast packets on
// the interface - if specified, the multicast-buffer-allocation-profile
// governs the allocation profile used for memory dedicated to multicast.
// If a system does not support, or an operator does not require separate
// buffer-allocation-profiles, this is specified by use of the
// buffer-allocation-profile leaf.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/unicast-buffer-allocation-profile"
// Path from root: "/qos/interfaces/interface/output/state/unicast-buffer-allocation-profile"
func (n *Qos_Interface_OutputPathAny) UnicastBufferAllocationProfile() *Qos_Interface_Output_UnicastBufferAllocationProfilePathAny {
	return &Qos_Interface_Output_UnicastBufferAllocationProfilePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unicast-buffer-allocation-profile"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Output_ClassifierPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier YANG schema element.
type Qos_Interface_Output_ClassifierPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_ClassifierPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier YANG schema element.
type Qos_Interface_Output_ClassifierPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_NamePath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/state/name YANG schema element.
type Qos_Interface_Output_Classifier_NamePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_NamePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/state/name YANG schema element.
type Qos_Interface_Output_Classifier_NamePathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_TypePath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/state/type YANG schema element.
type Qos_Interface_Output_Classifier_TypePath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_TypePathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/state/type YANG schema element.
type Qos_Interface_Output_Classifier_TypePathAny struct {
	*ygot.NodePath
}

// Name (leaf): Reference to the classifier to be applied to ingress traffic on
// the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/state/name"
func (n *Qos_Interface_Output_ClassifierPath) Name() *Qos_Interface_Output_Classifier_NamePath {
	return &Qos_Interface_Output_Classifier_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Reference to the classifier to be applied to ingress traffic on
// the interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/name"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/state/name"
func (n *Qos_Interface_Output_ClassifierPathAny) Name() *Qos_Interface_Output_Classifier_NamePathAny {
	return &Qos_Interface_Output_Classifier_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// TermAny (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term"
// Id (wildcarded): string
func (n *Qos_Interface_Output_ClassifierPath) TermAny() *Qos_Interface_Output_Classifier_TermPathAny {
	return &Qos_Interface_Output_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// TermAny (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term"
// Id (wildcarded): string
func (n *Qos_Interface_Output_ClassifierPathAny) TermAny() *Qos_Interface_Output_Classifier_TermPathAny {
	return &Qos_Interface_Output_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Term (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term"
// Id: string
func (n *Qos_Interface_Output_ClassifierPath) Term(Id string) *Qos_Interface_Output_Classifier_TermPath {
	return &Qos_Interface_Output_Classifier_TermPath{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Term (list): List of match terms in the classifier associated with the
// interface
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "terms/term"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term"
// Id: string
func (n *Qos_Interface_Output_ClassifierPathAny) Term(Id string) *Qos_Interface_Output_Classifier_TermPathAny {
	return &Qos_Interface_Output_Classifier_TermPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"terms", "term"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Type (leaf): Type of packets matched by the classifier.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/state/type"
func (n *Qos_Interface_Output_ClassifierPath) Type() *Qos_Interface_Output_Classifier_TypePath {
	return &Qos_Interface_Output_Classifier_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): Type of packets matched by the classifier.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/type"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/state/type"
func (n *Qos_Interface_Output_ClassifierPathAny) Type() *Qos_Interface_Output_Classifier_TypePathAny {
	return &Qos_Interface_Output_Classifier_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Qos_Interface_Output_Classifier_TermPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term YANG schema element.
type Qos_Interface_Output_Classifier_TermPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_TermPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term YANG schema element.
type Qos_Interface_Output_Classifier_TermPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_IdPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/id YANG schema element.
type Qos_Interface_Output_Classifier_Term_IdPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_IdPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/id YANG schema element.
type Qos_Interface_Output_Classifier_Term_IdPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_MatchedOctetsPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-octets YANG schema element.
type Qos_Interface_Output_Classifier_Term_MatchedOctetsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_MatchedOctetsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-octets YANG schema element.
type Qos_Interface_Output_Classifier_Term_MatchedOctetsPathAny struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_MatchedPacketsPath represents the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-packets YANG schema element.
type Qos_Interface_Output_Classifier_Term_MatchedPacketsPath struct {
	*ygot.NodePath
}

// Qos_Interface_Output_Classifier_Term_MatchedPacketsPathAny represents the wildcard version of the /openconfig-qos/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-packets YANG schema element.
type Qos_Interface_Output_Classifier_Term_MatchedPacketsPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Reference to match terms in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/id"
func (n *Qos_Interface_Output_Classifier_TermPath) Id() *Qos_Interface_Output_Classifier_Term_IdPath {
	return &Qos_Interface_Output_Classifier_Term_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Reference to match terms in the classifier
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/id"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/id"
func (n *Qos_Interface_Output_Classifier_TermPathAny) Id() *Qos_Interface_Output_Classifier_Term_IdPathAny {
	return &Qos_Interface_Output_Classifier_Term_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedOctets (leaf): Count of the number of octets (bytes) matching this
// classifier match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-octets"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-octets"
func (n *Qos_Interface_Output_Classifier_TermPath) MatchedOctets() *Qos_Interface_Output_Classifier_Term_MatchedOctetsPath {
	return &Qos_Interface_Output_Classifier_Term_MatchedOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedOctets (leaf): Count of the number of octets (bytes) matching this
// classifier match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-octets"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-octets"
func (n *Qos_Interface_Output_Classifier_TermPathAny) MatchedOctets() *Qos_Interface_Output_Classifier_Term_MatchedOctetsPathAny {
	return &Qos_Interface_Output_Classifier_Term_MatchedOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedPackets (leaf): Count of the number of packets matching this classifier
// match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-packets"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-packets"
func (n *Qos_Interface_Output_Classifier_TermPath) MatchedPackets() *Qos_Interface_Output_Classifier_Term_MatchedPacketsPath {
	return &Qos_Interface_Output_Classifier_Term_MatchedPacketsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-packets"},
			map[string]interface{}{},
			n,
		),
	}
}

// MatchedPackets (leaf): Count of the number of packets matching this classifier
// match term on the interface.
// ----------------------------------------
// Defining module: "openconfig-qos-interfaces"
// Instantiating module: "openconfig-qos"
// Path from parent: "state/matched-packets"
// Path from root: "/qos/interfaces/interface/output/classifiers/classifier/terms/term/state/matched-packets"
func (n *Qos_Interface_Output_Classifier_TermPathAny) MatchedPackets() *Qos_Interface_Output_Classifier_Term_MatchedPacketsPathAny {
	return &Qos_Interface_Output_Classifier_Term_MatchedPacketsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "matched-packets"},
			map[string]interface{}{},
			n,
		),
	}
}
