/*
Package oc is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by ygnmi version: v0.11.1: (ygot: v0.29.20)
using the following YANG input files:
  - gnmi-collector-metadata.yang
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft-common.yang
  - public/release/models/aft/openconfig-aft-ethernet.yang
  - public/release/models/aft/openconfig-aft-ipv4.yang
  - public/release/models/aft/openconfig-aft-ipv6.yang
  - public/release/models/aft/openconfig-aft-mpls.yang
  - public/release/models/aft/openconfig-aft-network-instance.yang
  - public/release/models/aft/openconfig-aft-pf.yang
  - public/release/models/aft/openconfig-aft-state-synced.yang
  - public/release/models/aft/openconfig-aft-summary.yang
  - public/release/models/aft/openconfig-aft-types.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/ate/openconfig-ate-flow.yang
  - public/release/models/ate/openconfig-ate-intf.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/extensions/openconfig-metadata.yang
  - public/release/models/gnsi/openconfig-gnsi-acctz.yang
  - public/release/models/gnsi/openconfig-gnsi-authz.yang
  - public/release/models/gnsi/openconfig-gnsi-certz.yang
  - public/release/models/gnsi/openconfig-gnsi-credentialz.yang
  - public/release/models/gnsi/openconfig-gnsi-pathz.yang
  - public/release/models/gnsi/openconfig-gnsi.yang
  - public/release/models/gribi/openconfig-gribi.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet-ext.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-if-sdn-ext.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/interfaces/openconfig-if-rates.yang
  - public/release/models/isis/openconfig-isis-policy.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-terminal-device.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospf-policy.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/p4rt/openconfig-p4rt.yang
  - public/release/models/platform/openconfig-platform-common.yang
  - public/release/models/platform/openconfig-platform-controller-card.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-ext.yang
  - public/release/models/platform/openconfig-platform-fabric.yang
  - public/release/models/platform/openconfig-platform-fan.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-linecard.yang
  - public/release/models/platform/openconfig-platform-pipeline-counters.yang
  - public/release/models/platform/openconfig-platform-psu.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-pf-forwarding-policies.yang
  - public/release/models/policy-forwarding/openconfig-pf-interfaces.yang
  - public/release/models/policy-forwarding/openconfig-pf-path-groups.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-routing-policy.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/relay-agent/openconfig-relay-agent.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/sampling/openconfig-sampling-sflow.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system-bootz.yang
  - public/release/models/system/openconfig-system-controlplane.yang
  - public/release/models/system/openconfig-system-utilization.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package oc

import (
	"github.com/openconfig/ygot/ygot"
)

// E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE is a derived int64 type which is used to represent
// the enumerated node AaaTypes_AAA_ACCOUNTING_EVENT_TYPE. An additional value named
// AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE int64

// IsYANGGoEnum ensures that AaaTypes_AAA_ACCOUNTING_EVENT_TYPE implements the yang.GoEnum
// interface. This ensures that AaaTypes_AAA_ACCOUNTING_EVENT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_AAA_ACCOUNTING_EVENT_TYPE.
func (E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE.
func (e E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE")
}

const (
	// AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_UNSET corresponds to the value UNSET of AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_UNSET E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 0
	// AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_COMMAND corresponds to the value AAA_ACCOUNTING_EVENT_COMMAND of AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_COMMAND E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 1
	// AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_LOGIN corresponds to the value AAA_ACCOUNTING_EVENT_LOGIN of AaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	AaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_LOGIN E_AaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 2
)

// E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE is a derived int64 type which is used to represent
// the enumerated node AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE. An additional value named
// AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE int64

// IsYANGGoEnum ensures that AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE implements the yang.GoEnum
// interface. This ensures that AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE.
func (E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE.
func (e E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE")
}

const (
	// AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_UNSET corresponds to the value UNSET of AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
	AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_UNSET E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE = 0
	// AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_COMMAND corresponds to the value AAA_AUTHORIZATION_EVENT_COMMAND of AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
	AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_COMMAND E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE = 1
	// AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_CONFIG corresponds to the value AAA_AUTHORIZATION_EVENT_CONFIG of AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
	AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_CONFIG E_AaaTypes_AAA_AUTHORIZATION_EVENT_TYPE = 2
)

// E_AaaTypes_AAA_METHOD_TYPE is a derived int64 type which is used to represent
// the enumerated node AaaTypes_AAA_METHOD_TYPE. An additional value named
// AaaTypes_AAA_METHOD_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_AAA_METHOD_TYPE int64

// IsYANGGoEnum ensures that AaaTypes_AAA_METHOD_TYPE implements the yang.GoEnum
// interface. This ensures that AaaTypes_AAA_METHOD_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_AAA_METHOD_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_AAA_METHOD_TYPE.
func (E_AaaTypes_AAA_METHOD_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AaaTypes_AAA_METHOD_TYPE.
func (e E_AaaTypes_AAA_METHOD_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_AAA_METHOD_TYPE")
}

const (
	// AaaTypes_AAA_METHOD_TYPE_UNSET corresponds to the value UNSET of AaaTypes_AAA_METHOD_TYPE
	AaaTypes_AAA_METHOD_TYPE_UNSET E_AaaTypes_AAA_METHOD_TYPE = 0
	// AaaTypes_AAA_METHOD_TYPE_LOCAL corresponds to the value LOCAL of AaaTypes_AAA_METHOD_TYPE
	AaaTypes_AAA_METHOD_TYPE_LOCAL E_AaaTypes_AAA_METHOD_TYPE = 1
	// AaaTypes_AAA_METHOD_TYPE_RADIUS_ALL corresponds to the value RADIUS_ALL of AaaTypes_AAA_METHOD_TYPE
	AaaTypes_AAA_METHOD_TYPE_RADIUS_ALL E_AaaTypes_AAA_METHOD_TYPE = 2
	// AaaTypes_AAA_METHOD_TYPE_TACACS_ALL corresponds to the value TACACS_ALL of AaaTypes_AAA_METHOD_TYPE
	AaaTypes_AAA_METHOD_TYPE_TACACS_ALL E_AaaTypes_AAA_METHOD_TYPE = 3
)

// E_AaaTypes_AAA_SERVER_TYPE is a derived int64 type which is used to represent
// the enumerated node AaaTypes_AAA_SERVER_TYPE. An additional value named
// AaaTypes_AAA_SERVER_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_AAA_SERVER_TYPE int64

// IsYANGGoEnum ensures that AaaTypes_AAA_SERVER_TYPE implements the yang.GoEnum
// interface. This ensures that AaaTypes_AAA_SERVER_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_AAA_SERVER_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_AAA_SERVER_TYPE.
func (E_AaaTypes_AAA_SERVER_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AaaTypes_AAA_SERVER_TYPE.
func (e E_AaaTypes_AAA_SERVER_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_AAA_SERVER_TYPE")
}

const (
	// AaaTypes_AAA_SERVER_TYPE_UNSET corresponds to the value UNSET of AaaTypes_AAA_SERVER_TYPE
	AaaTypes_AAA_SERVER_TYPE_UNSET E_AaaTypes_AAA_SERVER_TYPE = 0
	// AaaTypes_AAA_SERVER_TYPE_RADIUS corresponds to the value RADIUS of AaaTypes_AAA_SERVER_TYPE
	AaaTypes_AAA_SERVER_TYPE_RADIUS E_AaaTypes_AAA_SERVER_TYPE = 1
	// AaaTypes_AAA_SERVER_TYPE_TACACS corresponds to the value TACACS of AaaTypes_AAA_SERVER_TYPE
	AaaTypes_AAA_SERVER_TYPE_TACACS E_AaaTypes_AAA_SERVER_TYPE = 2
)

// E_AaaTypes_SYSTEM_DEFINED_ROLES is a derived int64 type which is used to represent
// the enumerated node AaaTypes_SYSTEM_DEFINED_ROLES. An additional value named
// AaaTypes_SYSTEM_DEFINED_ROLES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AaaTypes_SYSTEM_DEFINED_ROLES int64

// IsYANGGoEnum ensures that AaaTypes_SYSTEM_DEFINED_ROLES implements the yang.GoEnum
// interface. This ensures that AaaTypes_SYSTEM_DEFINED_ROLES can be identified as a
// mapped type for a YANG enumeration.
func (E_AaaTypes_SYSTEM_DEFINED_ROLES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AaaTypes_SYSTEM_DEFINED_ROLES.
func (E_AaaTypes_SYSTEM_DEFINED_ROLES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AaaTypes_SYSTEM_DEFINED_ROLES.
func (e E_AaaTypes_SYSTEM_DEFINED_ROLES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AaaTypes_SYSTEM_DEFINED_ROLES")
}

const (
	// AaaTypes_SYSTEM_DEFINED_ROLES_UNSET corresponds to the value UNSET of AaaTypes_SYSTEM_DEFINED_ROLES
	AaaTypes_SYSTEM_DEFINED_ROLES_UNSET E_AaaTypes_SYSTEM_DEFINED_ROLES = 0
	// AaaTypes_SYSTEM_DEFINED_ROLES_SYSTEM_ROLE_ADMIN corresponds to the value SYSTEM_ROLE_ADMIN of AaaTypes_SYSTEM_DEFINED_ROLES
	AaaTypes_SYSTEM_DEFINED_ROLES_SYSTEM_ROLE_ADMIN E_AaaTypes_SYSTEM_DEFINED_ROLES = 1
)

// E_Acl_ACL_COUNTER_CAPABILITY is a derived int64 type which is used to represent
// the enumerated node Acl_ACL_COUNTER_CAPABILITY. An additional value named
// Acl_ACL_COUNTER_CAPABILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Acl_ACL_COUNTER_CAPABILITY int64

// IsYANGGoEnum ensures that Acl_ACL_COUNTER_CAPABILITY implements the yang.GoEnum
// interface. This ensures that Acl_ACL_COUNTER_CAPABILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_Acl_ACL_COUNTER_CAPABILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Acl_ACL_COUNTER_CAPABILITY.
func (E_Acl_ACL_COUNTER_CAPABILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Acl_ACL_COUNTER_CAPABILITY.
func (e E_Acl_ACL_COUNTER_CAPABILITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Acl_ACL_COUNTER_CAPABILITY")
}

const (
	// Acl_ACL_COUNTER_CAPABILITY_UNSET corresponds to the value UNSET of Acl_ACL_COUNTER_CAPABILITY
	Acl_ACL_COUNTER_CAPABILITY_UNSET E_Acl_ACL_COUNTER_CAPABILITY = 0
	// Acl_ACL_COUNTER_CAPABILITY_AGGREGATE_ONLY corresponds to the value AGGREGATE_ONLY of Acl_ACL_COUNTER_CAPABILITY
	Acl_ACL_COUNTER_CAPABILITY_AGGREGATE_ONLY E_Acl_ACL_COUNTER_CAPABILITY = 1
	// Acl_ACL_COUNTER_CAPABILITY_INTERFACE_AGGREGATE corresponds to the value INTERFACE_AGGREGATE of Acl_ACL_COUNTER_CAPABILITY
	Acl_ACL_COUNTER_CAPABILITY_INTERFACE_AGGREGATE E_Acl_ACL_COUNTER_CAPABILITY = 2
	// Acl_ACL_COUNTER_CAPABILITY_INTERFACE_ONLY corresponds to the value INTERFACE_ONLY of Acl_ACL_COUNTER_CAPABILITY
	Acl_ACL_COUNTER_CAPABILITY_INTERFACE_ONLY E_Acl_ACL_COUNTER_CAPABILITY = 3
)

// E_Acl_ACL_TYPE is a derived int64 type which is used to represent
// the enumerated node Acl_ACL_TYPE. An additional value named
// Acl_ACL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Acl_ACL_TYPE int64

// IsYANGGoEnum ensures that Acl_ACL_TYPE implements the yang.GoEnum
// interface. This ensures that Acl_ACL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_Acl_ACL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Acl_ACL_TYPE.
func (E_Acl_ACL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Acl_ACL_TYPE.
func (e E_Acl_ACL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Acl_ACL_TYPE")
}

const (
	// Acl_ACL_TYPE_UNSET corresponds to the value UNSET of Acl_ACL_TYPE
	Acl_ACL_TYPE_UNSET E_Acl_ACL_TYPE = 0
	// Acl_ACL_TYPE_ACL_IPV4 corresponds to the value ACL_IPV4 of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_IPV4 E_Acl_ACL_TYPE = 1
	// Acl_ACL_TYPE_ACL_IPV6 corresponds to the value ACL_IPV6 of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_IPV6 E_Acl_ACL_TYPE = 2
	// Acl_ACL_TYPE_ACL_L2 corresponds to the value ACL_L2 of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_L2 E_Acl_ACL_TYPE = 3
	// Acl_ACL_TYPE_ACL_MIXED corresponds to the value ACL_MIXED of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_MIXED E_Acl_ACL_TYPE = 4
	// Acl_ACL_TYPE_ACL_MPLS corresponds to the value ACL_MPLS of Acl_ACL_TYPE
	Acl_ACL_TYPE_ACL_MPLS E_Acl_ACL_TYPE = 5
)

// E_Acl_FORWARDING_ACTION is a derived int64 type which is used to represent
// the enumerated node Acl_FORWARDING_ACTION. An additional value named
// Acl_FORWARDING_ACTION_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Acl_FORWARDING_ACTION int64

// IsYANGGoEnum ensures that Acl_FORWARDING_ACTION implements the yang.GoEnum
// interface. This ensures that Acl_FORWARDING_ACTION can be identified as a
// mapped type for a YANG enumeration.
func (E_Acl_FORWARDING_ACTION) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Acl_FORWARDING_ACTION.
func (E_Acl_FORWARDING_ACTION) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Acl_FORWARDING_ACTION.
func (e E_Acl_FORWARDING_ACTION) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Acl_FORWARDING_ACTION")
}

const (
	// Acl_FORWARDING_ACTION_UNSET corresponds to the value UNSET of Acl_FORWARDING_ACTION
	Acl_FORWARDING_ACTION_UNSET E_Acl_FORWARDING_ACTION = 0
	// Acl_FORWARDING_ACTION_ACCEPT corresponds to the value ACCEPT of Acl_FORWARDING_ACTION
	Acl_FORWARDING_ACTION_ACCEPT E_Acl_FORWARDING_ACTION = 1
	// Acl_FORWARDING_ACTION_DROP corresponds to the value DROP of Acl_FORWARDING_ACTION
	Acl_FORWARDING_ACTION_DROP E_Acl_FORWARDING_ACTION = 2
	// Acl_FORWARDING_ACTION_REJECT corresponds to the value REJECT of Acl_FORWARDING_ACTION
	Acl_FORWARDING_ACTION_REJECT E_Acl_FORWARDING_ACTION = 3
)

// E_Acl_LOG_ACTION is a derived int64 type which is used to represent
// the enumerated node Acl_LOG_ACTION. An additional value named
// Acl_LOG_ACTION_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Acl_LOG_ACTION int64

// IsYANGGoEnum ensures that Acl_LOG_ACTION implements the yang.GoEnum
// interface. This ensures that Acl_LOG_ACTION can be identified as a
// mapped type for a YANG enumeration.
func (E_Acl_LOG_ACTION) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Acl_LOG_ACTION.
func (E_Acl_LOG_ACTION) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Acl_LOG_ACTION.
func (e E_Acl_LOG_ACTION) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Acl_LOG_ACTION")
}

const (
	// Acl_LOG_ACTION_UNSET corresponds to the value UNSET of Acl_LOG_ACTION
	Acl_LOG_ACTION_UNSET E_Acl_LOG_ACTION = 0
	// Acl_LOG_ACTION_LOG_NONE corresponds to the value LOG_NONE of Acl_LOG_ACTION
	Acl_LOG_ACTION_LOG_NONE E_Acl_LOG_ACTION = 1
	// Acl_LOG_ACTION_LOG_SYSLOG corresponds to the value LOG_SYSLOG of Acl_LOG_ACTION
	Acl_LOG_ACTION_LOG_SYSLOG E_Acl_LOG_ACTION = 2
)

// E_AddressRange_Status is a derived int64 type which is used to represent
// the enumerated node AddressRange_Status. An additional value named
// AddressRange_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AddressRange_Status int64

// IsYANGGoEnum ensures that AddressRange_Status implements the yang.GoEnum
// interface. This ensures that AddressRange_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_AddressRange_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AddressRange_Status.
func (E_AddressRange_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AddressRange_Status.
func (e E_AddressRange_Status) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AddressRange_Status")
}

const (
	// AddressRange_Status_UNSET corresponds to the value UNSET of AddressRange_Status
	AddressRange_Status_UNSET E_AddressRange_Status = 0
	// AddressRange_Status_ADVERTISE corresponds to the value ADVERTISE of AddressRange_Status
	AddressRange_Status_ADVERTISE E_AddressRange_Status = 1
	// AddressRange_Status_DONOTADVERTISE corresponds to the value DONOTADVERTISE of AddressRange_Status
	AddressRange_Status_DONOTADVERTISE E_AddressRange_Status = 2
)

// E_Address_Status is a derived int64 type which is used to represent
// the enumerated node Address_Status. An additional value named
// Address_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Address_Status int64

// IsYANGGoEnum ensures that Address_Status implements the yang.GoEnum
// interface. This ensures that Address_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_Address_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Address_Status.
func (E_Address_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Address_Status.
func (e E_Address_Status) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Address_Status")
}

const (
	// Address_Status_UNSET corresponds to the value UNSET of Address_Status
	Address_Status_UNSET E_Address_Status = 0
	// Address_Status_PREFERRED corresponds to the value PREFERRED of Address_Status
	Address_Status_PREFERRED E_Address_Status = 1
	// Address_Status_DEPRECATED corresponds to the value DEPRECATED of Address_Status
	Address_Status_DEPRECATED E_Address_Status = 2
	// Address_Status_INVALID corresponds to the value INVALID of Address_Status
	Address_Status_INVALID E_Address_Status = 3
	// Address_Status_INACCESSIBLE corresponds to the value INACCESSIBLE of Address_Status
	Address_Status_INACCESSIBLE E_Address_Status = 4
	// Address_Status_UNKNOWN corresponds to the value UNKNOWN of Address_Status
	Address_Status_UNKNOWN E_Address_Status = 5
	// Address_Status_TENTATIVE corresponds to the value TENTATIVE of Address_Status
	Address_Status_TENTATIVE E_Address_Status = 6
	// Address_Status_DUPLICATE corresponds to the value DUPLICATE of Address_Status
	Address_Status_DUPLICATE E_Address_Status = 7
	// Address_Status_OPTIMISTIC corresponds to the value OPTIMISTIC of Address_Status
	Address_Status_OPTIMISTIC E_Address_Status = 8
)

// E_AdjacencySid_AllocatedDynamicLocal is a derived int64 type which is used to represent
// the enumerated node AdjacencySid_AllocatedDynamicLocal. An additional value named
// AdjacencySid_AllocatedDynamicLocal_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AdjacencySid_AllocatedDynamicLocal int64

// IsYANGGoEnum ensures that AdjacencySid_AllocatedDynamicLocal implements the yang.GoEnum
// interface. This ensures that AdjacencySid_AllocatedDynamicLocal can be identified as a
// mapped type for a YANG enumeration.
func (E_AdjacencySid_AllocatedDynamicLocal) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AdjacencySid_AllocatedDynamicLocal.
func (E_AdjacencySid_AllocatedDynamicLocal) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AdjacencySid_AllocatedDynamicLocal.
func (e E_AdjacencySid_AllocatedDynamicLocal) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AdjacencySid_AllocatedDynamicLocal")
}

const (
	// AdjacencySid_AllocatedDynamicLocal_UNSET corresponds to the value UNSET of AdjacencySid_AllocatedDynamicLocal
	AdjacencySid_AllocatedDynamicLocal_UNSET E_AdjacencySid_AllocatedDynamicLocal = 0
	// AdjacencySid_AllocatedDynamicLocal_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of AdjacencySid_AllocatedDynamicLocal
	AdjacencySid_AllocatedDynamicLocal_IPV4_EXPLICIT_NULL E_AdjacencySid_AllocatedDynamicLocal = 1
	// AdjacencySid_AllocatedDynamicLocal_ROUTER_ALERT corresponds to the value ROUTER_ALERT of AdjacencySid_AllocatedDynamicLocal
	AdjacencySid_AllocatedDynamicLocal_ROUTER_ALERT E_AdjacencySid_AllocatedDynamicLocal = 2
	// AdjacencySid_AllocatedDynamicLocal_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of AdjacencySid_AllocatedDynamicLocal
	AdjacencySid_AllocatedDynamicLocal_IPV6_EXPLICIT_NULL E_AdjacencySid_AllocatedDynamicLocal = 3
	// AdjacencySid_AllocatedDynamicLocal_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of AdjacencySid_AllocatedDynamicLocal
	AdjacencySid_AllocatedDynamicLocal_IMPLICIT_NULL E_AdjacencySid_AllocatedDynamicLocal = 4
	// AdjacencySid_AllocatedDynamicLocal_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of AdjacencySid_AllocatedDynamicLocal
	AdjacencySid_AllocatedDynamicLocal_ENTROPY_LABEL_INDICATOR E_AdjacencySid_AllocatedDynamicLocal = 8
	// AdjacencySid_AllocatedDynamicLocal_NO_LABEL corresponds to the value NO_LABEL of AdjacencySid_AllocatedDynamicLocal
	AdjacencySid_AllocatedDynamicLocal_NO_LABEL E_AdjacencySid_AllocatedDynamicLocal = 9
)

// E_AdjacencySid_Flags is a derived int64 type which is used to represent
// the enumerated node AdjacencySid_Flags. An additional value named
// AdjacencySid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AdjacencySid_Flags int64

// IsYANGGoEnum ensures that AdjacencySid_Flags implements the yang.GoEnum
// interface. This ensures that AdjacencySid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_AdjacencySid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AdjacencySid_Flags.
func (E_AdjacencySid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AdjacencySid_Flags.
func (e E_AdjacencySid_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AdjacencySid_Flags")
}

const (
	// AdjacencySid_Flags_UNSET corresponds to the value UNSET of AdjacencySid_Flags
	AdjacencySid_Flags_UNSET E_AdjacencySid_Flags = 0
	// AdjacencySid_Flags_ADDRESS_FAMILY corresponds to the value ADDRESS_FAMILY of AdjacencySid_Flags
	AdjacencySid_Flags_ADDRESS_FAMILY E_AdjacencySid_Flags = 1
	// AdjacencySid_Flags_BACKUP corresponds to the value BACKUP of AdjacencySid_Flags
	AdjacencySid_Flags_BACKUP E_AdjacencySid_Flags = 2
	// AdjacencySid_Flags_VALUE corresponds to the value VALUE of AdjacencySid_Flags
	AdjacencySid_Flags_VALUE E_AdjacencySid_Flags = 3
	// AdjacencySid_Flags_LOCAL corresponds to the value LOCAL of AdjacencySid_Flags
	AdjacencySid_Flags_LOCAL E_AdjacencySid_Flags = 4
	// AdjacencySid_Flags_SET corresponds to the value SET of AdjacencySid_Flags
	AdjacencySid_Flags_SET E_AdjacencySid_Flags = 5
)

// E_AdjacencySid_SidId is a derived int64 type which is used to represent
// the enumerated node AdjacencySid_SidId. An additional value named
// AdjacencySid_SidId_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AdjacencySid_SidId int64

// IsYANGGoEnum ensures that AdjacencySid_SidId implements the yang.GoEnum
// interface. This ensures that AdjacencySid_SidId can be identified as a
// mapped type for a YANG enumeration.
func (E_AdjacencySid_SidId) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AdjacencySid_SidId.
func (E_AdjacencySid_SidId) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AdjacencySid_SidId.
func (e E_AdjacencySid_SidId) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AdjacencySid_SidId")
}

const (
	// AdjacencySid_SidId_UNSET corresponds to the value UNSET of AdjacencySid_SidId
	AdjacencySid_SidId_UNSET E_AdjacencySid_SidId = 0
	// AdjacencySid_SidId_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of AdjacencySid_SidId
	AdjacencySid_SidId_IPV4_EXPLICIT_NULL E_AdjacencySid_SidId = 1
	// AdjacencySid_SidId_ROUTER_ALERT corresponds to the value ROUTER_ALERT of AdjacencySid_SidId
	AdjacencySid_SidId_ROUTER_ALERT E_AdjacencySid_SidId = 2
	// AdjacencySid_SidId_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of AdjacencySid_SidId
	AdjacencySid_SidId_IPV6_EXPLICIT_NULL E_AdjacencySid_SidId = 3
	// AdjacencySid_SidId_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of AdjacencySid_SidId
	AdjacencySid_SidId_IMPLICIT_NULL E_AdjacencySid_SidId = 4
	// AdjacencySid_SidId_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of AdjacencySid_SidId
	AdjacencySid_SidId_ENTROPY_LABEL_INDICATOR E_AdjacencySid_SidId = 8
	// AdjacencySid_SidId_NO_LABEL corresponds to the value NO_LABEL of AdjacencySid_SidId
	AdjacencySid_SidId_NO_LABEL E_AdjacencySid_SidId = 9
)

// E_Adjacency_Nlpid is a derived int64 type which is used to represent
// the enumerated node Adjacency_Nlpid. An additional value named
// Adjacency_Nlpid_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Adjacency_Nlpid int64

// IsYANGGoEnum ensures that Adjacency_Nlpid implements the yang.GoEnum
// interface. This ensures that Adjacency_Nlpid can be identified as a
// mapped type for a YANG enumeration.
func (E_Adjacency_Nlpid) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Adjacency_Nlpid.
func (E_Adjacency_Nlpid) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Adjacency_Nlpid.
func (e E_Adjacency_Nlpid) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Adjacency_Nlpid")
}

const (
	// Adjacency_Nlpid_UNSET corresponds to the value UNSET of Adjacency_Nlpid
	Adjacency_Nlpid_UNSET E_Adjacency_Nlpid = 0
	// Adjacency_Nlpid_IPV4 corresponds to the value IPV4 of Adjacency_Nlpid
	Adjacency_Nlpid_IPV4 E_Adjacency_Nlpid = 1
	// Adjacency_Nlpid_IPV6 corresponds to the value IPV6 of Adjacency_Nlpid
	Adjacency_Nlpid_IPV6 E_Adjacency_Nlpid = 2
)

// E_Aft_EncapsulationHeaderType is a derived int64 type which is used to represent
// the enumerated node Aft_EncapsulationHeaderType. An additional value named
// Aft_EncapsulationHeaderType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Aft_EncapsulationHeaderType int64

// IsYANGGoEnum ensures that Aft_EncapsulationHeaderType implements the yang.GoEnum
// interface. This ensures that Aft_EncapsulationHeaderType can be identified as a
// mapped type for a YANG enumeration.
func (E_Aft_EncapsulationHeaderType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Aft_EncapsulationHeaderType.
func (E_Aft_EncapsulationHeaderType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Aft_EncapsulationHeaderType.
func (e E_Aft_EncapsulationHeaderType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Aft_EncapsulationHeaderType")
}

const (
	// Aft_EncapsulationHeaderType_UNSET corresponds to the value UNSET of Aft_EncapsulationHeaderType
	Aft_EncapsulationHeaderType_UNSET E_Aft_EncapsulationHeaderType = 0
	// Aft_EncapsulationHeaderType_GRE corresponds to the value GRE of Aft_EncapsulationHeaderType
	Aft_EncapsulationHeaderType_GRE E_Aft_EncapsulationHeaderType = 1
	// Aft_EncapsulationHeaderType_IPV4 corresponds to the value IPV4 of Aft_EncapsulationHeaderType
	Aft_EncapsulationHeaderType_IPV4 E_Aft_EncapsulationHeaderType = 2
	// Aft_EncapsulationHeaderType_IPV6 corresponds to the value IPV6 of Aft_EncapsulationHeaderType
	Aft_EncapsulationHeaderType_IPV6 E_Aft_EncapsulationHeaderType = 3
	// Aft_EncapsulationHeaderType_MPLS corresponds to the value MPLS of Aft_EncapsulationHeaderType
	Aft_EncapsulationHeaderType_MPLS E_Aft_EncapsulationHeaderType = 4
	// Aft_EncapsulationHeaderType_VXLAN corresponds to the value VXLAN of Aft_EncapsulationHeaderType
	Aft_EncapsulationHeaderType_VXLAN E_Aft_EncapsulationHeaderType = 5
	// Aft_EncapsulationHeaderType_UDP corresponds to the value UDP of Aft_EncapsulationHeaderType
	Aft_EncapsulationHeaderType_UDP E_Aft_EncapsulationHeaderType = 6
	// Aft_EncapsulationHeaderType_UDPV4 corresponds to the value UDPV4 of Aft_EncapsulationHeaderType
	Aft_EncapsulationHeaderType_UDPV4 E_Aft_EncapsulationHeaderType = 7
	// Aft_EncapsulationHeaderType_UDPV6 corresponds to the value UDPV6 of Aft_EncapsulationHeaderType
	Aft_EncapsulationHeaderType_UDPV6 E_Aft_EncapsulationHeaderType = 8
)

// E_AggregateSidCounter_MplsLabel is a derived int64 type which is used to represent
// the enumerated node AggregateSidCounter_MplsLabel. An additional value named
// AggregateSidCounter_MplsLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AggregateSidCounter_MplsLabel int64

// IsYANGGoEnum ensures that AggregateSidCounter_MplsLabel implements the yang.GoEnum
// interface. This ensures that AggregateSidCounter_MplsLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_AggregateSidCounter_MplsLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AggregateSidCounter_MplsLabel.
func (E_AggregateSidCounter_MplsLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AggregateSidCounter_MplsLabel.
func (e E_AggregateSidCounter_MplsLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AggregateSidCounter_MplsLabel")
}

const (
	// AggregateSidCounter_MplsLabel_UNSET corresponds to the value UNSET of AggregateSidCounter_MplsLabel
	AggregateSidCounter_MplsLabel_UNSET E_AggregateSidCounter_MplsLabel = 0
	// AggregateSidCounter_MplsLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of AggregateSidCounter_MplsLabel
	AggregateSidCounter_MplsLabel_IPV4_EXPLICIT_NULL E_AggregateSidCounter_MplsLabel = 1
	// AggregateSidCounter_MplsLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of AggregateSidCounter_MplsLabel
	AggregateSidCounter_MplsLabel_ROUTER_ALERT E_AggregateSidCounter_MplsLabel = 2
	// AggregateSidCounter_MplsLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of AggregateSidCounter_MplsLabel
	AggregateSidCounter_MplsLabel_IPV6_EXPLICIT_NULL E_AggregateSidCounter_MplsLabel = 3
	// AggregateSidCounter_MplsLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of AggregateSidCounter_MplsLabel
	AggregateSidCounter_MplsLabel_IMPLICIT_NULL E_AggregateSidCounter_MplsLabel = 4
	// AggregateSidCounter_MplsLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of AggregateSidCounter_MplsLabel
	AggregateSidCounter_MplsLabel_ENTROPY_LABEL_INDICATOR E_AggregateSidCounter_MplsLabel = 8
	// AggregateSidCounter_MplsLabel_NO_LABEL corresponds to the value NO_LABEL of AggregateSidCounter_MplsLabel
	AggregateSidCounter_MplsLabel_NO_LABEL E_AggregateSidCounter_MplsLabel = 9
)

// E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY is a derived int64 type which is used to represent
// the enumerated node AlarmTypes_OPENCONFIG_ALARM_SEVERITY. An additional value named
// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY int64

// IsYANGGoEnum ensures that AlarmTypes_OPENCONFIG_ALARM_SEVERITY implements the yang.GoEnum
// interface. This ensures that AlarmTypes_OPENCONFIG_ALARM_SEVERITY can be identified as a
// mapped type for a YANG enumeration.
func (E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AlarmTypes_OPENCONFIG_ALARM_SEVERITY.
func (E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY.
func (e E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY")
}

const (
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNSET corresponds to the value UNSET of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNSET E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 0
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_CRITICAL corresponds to the value CRITICAL of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_CRITICAL E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 1
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_MAJOR corresponds to the value MAJOR of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_MAJOR E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 2
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_MINOR corresponds to the value MINOR of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_MINOR E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 3
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNKNOWN corresponds to the value UNKNOWN of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNKNOWN E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 4
	// AlarmTypes_OPENCONFIG_ALARM_SEVERITY_WARNING corresponds to the value WARNING of AlarmTypes_OPENCONFIG_ALARM_SEVERITY
	AlarmTypes_OPENCONFIG_ALARM_SEVERITY_WARNING E_AlarmTypes_OPENCONFIG_ALARM_SEVERITY = 5
)

// E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID is a derived int64 type which is used to represent
// the enumerated node AlarmTypes_OPENCONFIG_ALARM_TYPE_ID. An additional value named
// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID int64

// IsYANGGoEnum ensures that AlarmTypes_OPENCONFIG_ALARM_TYPE_ID implements the yang.GoEnum
// interface. This ensures that AlarmTypes_OPENCONFIG_ALARM_TYPE_ID can be identified as a
// mapped type for a YANG enumeration.
func (E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AlarmTypes_OPENCONFIG_ALARM_TYPE_ID.
func (E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID.
func (e E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID")
}

const (
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_UNSET corresponds to the value UNSET of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_UNSET E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 0
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_AIS corresponds to the value AIS of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_AIS E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 1
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_EQPT corresponds to the value EQPT of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_EQPT E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 2
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_LOS corresponds to the value LOS of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_LOS E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 3
	// AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_OTS corresponds to the value OTS of AlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	AlarmTypes_OPENCONFIG_ALARM_TYPE_ID_OTS E_AlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 4
)

// E_AsExternalLsa_MetricType is a derived int64 type which is used to represent
// the enumerated node AsExternalLsa_MetricType. An additional value named
// AsExternalLsa_MetricType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_AsExternalLsa_MetricType int64

// IsYANGGoEnum ensures that AsExternalLsa_MetricType implements the yang.GoEnum
// interface. This ensures that AsExternalLsa_MetricType can be identified as a
// mapped type for a YANG enumeration.
func (E_AsExternalLsa_MetricType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  AsExternalLsa_MetricType.
func (E_AsExternalLsa_MetricType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_AsExternalLsa_MetricType.
func (e E_AsExternalLsa_MetricType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_AsExternalLsa_MetricType")
}

const (
	// AsExternalLsa_MetricType_UNSET corresponds to the value UNSET of AsExternalLsa_MetricType
	AsExternalLsa_MetricType_UNSET E_AsExternalLsa_MetricType = 0
	// AsExternalLsa_MetricType_TYPE_1 corresponds to the value TYPE_1 of AsExternalLsa_MetricType
	AsExternalLsa_MetricType_TYPE_1 E_AsExternalLsa_MetricType = 1
	// AsExternalLsa_MetricType_TYPE_2 corresponds to the value TYPE_2 of AsExternalLsa_MetricType
	AsExternalLsa_MetricType_TYPE_2 E_AsExternalLsa_MetricType = 2
)

// E_Assignment_AssignmentType is a derived int64 type which is used to represent
// the enumerated node Assignment_AssignmentType. An additional value named
// Assignment_AssignmentType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Assignment_AssignmentType int64

// IsYANGGoEnum ensures that Assignment_AssignmentType implements the yang.GoEnum
// interface. This ensures that Assignment_AssignmentType can be identified as a
// mapped type for a YANG enumeration.
func (E_Assignment_AssignmentType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Assignment_AssignmentType.
func (E_Assignment_AssignmentType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Assignment_AssignmentType.
func (e E_Assignment_AssignmentType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Assignment_AssignmentType")
}

const (
	// Assignment_AssignmentType_UNSET corresponds to the value UNSET of Assignment_AssignmentType
	Assignment_AssignmentType_UNSET E_Assignment_AssignmentType = 0
	// Assignment_AssignmentType_LOGICAL_CHANNEL corresponds to the value LOGICAL_CHANNEL of Assignment_AssignmentType
	Assignment_AssignmentType_LOGICAL_CHANNEL E_Assignment_AssignmentType = 1
	// Assignment_AssignmentType_OPTICAL_CHANNEL corresponds to the value OPTICAL_CHANNEL of Assignment_AssignmentType
	Assignment_AssignmentType_OPTICAL_CHANNEL E_Assignment_AssignmentType = 2
)

// E_Authentication_CryptoType is a derived int64 type which is used to represent
// the enumerated node Authentication_CryptoType. An additional value named
// Authentication_CryptoType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Authentication_CryptoType int64

// IsYANGGoEnum ensures that Authentication_CryptoType implements the yang.GoEnum
// interface. This ensures that Authentication_CryptoType can be identified as a
// mapped type for a YANG enumeration.
func (E_Authentication_CryptoType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Authentication_CryptoType.
func (E_Authentication_CryptoType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Authentication_CryptoType.
func (e E_Authentication_CryptoType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Authentication_CryptoType")
}

const (
	// Authentication_CryptoType_UNSET corresponds to the value UNSET of Authentication_CryptoType
	Authentication_CryptoType_UNSET E_Authentication_CryptoType = 0
	// Authentication_CryptoType_HMAC_MD5 corresponds to the value HMAC_MD5 of Authentication_CryptoType
	Authentication_CryptoType_HMAC_MD5 E_Authentication_CryptoType = 1
	// Authentication_CryptoType_CLEARTEXT corresponds to the value CLEARTEXT of Authentication_CryptoType
	Authentication_CryptoType_CLEARTEXT E_Authentication_CryptoType = 2
)

// E_BandwidthReservation_Priority is a derived int64 type which is used to represent
// the enumerated node BandwidthReservation_Priority. An additional value named
// BandwidthReservation_Priority_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BandwidthReservation_Priority int64

// IsYANGGoEnum ensures that BandwidthReservation_Priority implements the yang.GoEnum
// interface. This ensures that BandwidthReservation_Priority can be identified as a
// mapped type for a YANG enumeration.
func (E_BandwidthReservation_Priority) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BandwidthReservation_Priority.
func (E_BandwidthReservation_Priority) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_BandwidthReservation_Priority.
func (e E_BandwidthReservation_Priority) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BandwidthReservation_Priority")
}

const (
	// BandwidthReservation_Priority_UNSET corresponds to the value UNSET of BandwidthReservation_Priority
	BandwidthReservation_Priority_UNSET E_BandwidthReservation_Priority = 0
	// BandwidthReservation_Priority_ALL corresponds to the value ALL of BandwidthReservation_Priority
	BandwidthReservation_Priority_ALL E_BandwidthReservation_Priority = 1
)

// E_BgpActions_SetMed is a derived int64 type which is used to represent
// the enumerated node BgpActions_SetMed. An additional value named
// BgpActions_SetMed_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpActions_SetMed int64

// IsYANGGoEnum ensures that BgpActions_SetMed implements the yang.GoEnum
// interface. This ensures that BgpActions_SetMed can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpActions_SetMed) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpActions_SetMed.
func (E_BgpActions_SetMed) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpActions_SetMed.
func (e E_BgpActions_SetMed) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpActions_SetMed")
}

const (
	// BgpActions_SetMed_UNSET corresponds to the value UNSET of BgpActions_SetMed
	BgpActions_SetMed_UNSET E_BgpActions_SetMed = 0
	// BgpActions_SetMed_IGP corresponds to the value IGP of BgpActions_SetMed
	BgpActions_SetMed_IGP E_BgpActions_SetMed = 1
)

// E_BgpActions_SetNextHop is a derived int64 type which is used to represent
// the enumerated node BgpActions_SetNextHop. An additional value named
// BgpActions_SetNextHop_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpActions_SetNextHop int64

// IsYANGGoEnum ensures that BgpActions_SetNextHop implements the yang.GoEnum
// interface. This ensures that BgpActions_SetNextHop can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpActions_SetNextHop) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpActions_SetNextHop.
func (E_BgpActions_SetNextHop) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpActions_SetNextHop.
func (e E_BgpActions_SetNextHop) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpActions_SetNextHop")
}

const (
	// BgpActions_SetNextHop_UNSET corresponds to the value UNSET of BgpActions_SetNextHop
	BgpActions_SetNextHop_UNSET E_BgpActions_SetNextHop = 0
	// BgpActions_SetNextHop_SELF corresponds to the value SELF of BgpActions_SetNextHop
	BgpActions_SetNextHop_SELF E_BgpActions_SetNextHop = 1
	// BgpActions_SetNextHop_PEER_ADDRESS corresponds to the value PEER_ADDRESS of BgpActions_SetNextHop
	BgpActions_SetNextHop_PEER_ADDRESS E_BgpActions_SetNextHop = 2
)

// E_BgpConditions_RouteType is a derived int64 type which is used to represent
// the enumerated node BgpConditions_RouteType. An additional value named
// BgpConditions_RouteType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpConditions_RouteType int64

// IsYANGGoEnum ensures that BgpConditions_RouteType implements the yang.GoEnum
// interface. This ensures that BgpConditions_RouteType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpConditions_RouteType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpConditions_RouteType.
func (E_BgpConditions_RouteType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpConditions_RouteType.
func (e E_BgpConditions_RouteType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpConditions_RouteType")
}

const (
	// BgpConditions_RouteType_UNSET corresponds to the value UNSET of BgpConditions_RouteType
	BgpConditions_RouteType_UNSET E_BgpConditions_RouteType = 0
	// BgpConditions_RouteType_INTERNAL corresponds to the value INTERNAL of BgpConditions_RouteType
	BgpConditions_RouteType_INTERNAL E_BgpConditions_RouteType = 1
	// BgpConditions_RouteType_EXTERNAL corresponds to the value EXTERNAL of BgpConditions_RouteType
	BgpConditions_RouteType_EXTERNAL E_BgpConditions_RouteType = 2
)

// E_BgpPolicy_BgpOriginAttrType is a derived int64 type which is used to represent
// the enumerated node BgpPolicy_BgpOriginAttrType. An additional value named
// BgpPolicy_BgpOriginAttrType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpPolicy_BgpOriginAttrType int64

// IsYANGGoEnum ensures that BgpPolicy_BgpOriginAttrType implements the yang.GoEnum
// interface. This ensures that BgpPolicy_BgpOriginAttrType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpPolicy_BgpOriginAttrType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpPolicy_BgpOriginAttrType.
func (E_BgpPolicy_BgpOriginAttrType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpPolicy_BgpOriginAttrType.
func (e E_BgpPolicy_BgpOriginAttrType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpPolicy_BgpOriginAttrType")
}

const (
	// BgpPolicy_BgpOriginAttrType_UNSET corresponds to the value UNSET of BgpPolicy_BgpOriginAttrType
	BgpPolicy_BgpOriginAttrType_UNSET E_BgpPolicy_BgpOriginAttrType = 0
	// BgpPolicy_BgpOriginAttrType_IGP corresponds to the value IGP of BgpPolicy_BgpOriginAttrType
	BgpPolicy_BgpOriginAttrType_IGP E_BgpPolicy_BgpOriginAttrType = 1
	// BgpPolicy_BgpOriginAttrType_EGP corresponds to the value EGP of BgpPolicy_BgpOriginAttrType
	BgpPolicy_BgpOriginAttrType_EGP E_BgpPolicy_BgpOriginAttrType = 2
	// BgpPolicy_BgpOriginAttrType_INCOMPLETE corresponds to the value INCOMPLETE of BgpPolicy_BgpOriginAttrType
	BgpPolicy_BgpOriginAttrType_INCOMPLETE E_BgpPolicy_BgpOriginAttrType = 3
)

// E_BgpPolicy_BgpSetCommunityOptionType is a derived int64 type which is used to represent
// the enumerated node BgpPolicy_BgpSetCommunityOptionType. An additional value named
// BgpPolicy_BgpSetCommunityOptionType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpPolicy_BgpSetCommunityOptionType int64

// IsYANGGoEnum ensures that BgpPolicy_BgpSetCommunityOptionType implements the yang.GoEnum
// interface. This ensures that BgpPolicy_BgpSetCommunityOptionType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpPolicy_BgpSetCommunityOptionType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpPolicy_BgpSetCommunityOptionType.
func (E_BgpPolicy_BgpSetCommunityOptionType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_BgpPolicy_BgpSetCommunityOptionType.
func (e E_BgpPolicy_BgpSetCommunityOptionType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpPolicy_BgpSetCommunityOptionType")
}

const (
	// BgpPolicy_BgpSetCommunityOptionType_UNSET corresponds to the value UNSET of BgpPolicy_BgpSetCommunityOptionType
	BgpPolicy_BgpSetCommunityOptionType_UNSET E_BgpPolicy_BgpSetCommunityOptionType = 0
	// BgpPolicy_BgpSetCommunityOptionType_ADD corresponds to the value ADD of BgpPolicy_BgpSetCommunityOptionType
	BgpPolicy_BgpSetCommunityOptionType_ADD E_BgpPolicy_BgpSetCommunityOptionType = 1
	// BgpPolicy_BgpSetCommunityOptionType_REMOVE corresponds to the value REMOVE of BgpPolicy_BgpSetCommunityOptionType
	BgpPolicy_BgpSetCommunityOptionType_REMOVE E_BgpPolicy_BgpSetCommunityOptionType = 2
	// BgpPolicy_BgpSetCommunityOptionType_REPLACE corresponds to the value REPLACE of BgpPolicy_BgpSetCommunityOptionType
	BgpPolicy_BgpSetCommunityOptionType_REPLACE E_BgpPolicy_BgpSetCommunityOptionType = 3
)

// E_BgpPolicy_BgpSetMedAction is a derived int64 type which is used to represent
// the enumerated node BgpPolicy_BgpSetMedAction. An additional value named
// BgpPolicy_BgpSetMedAction_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpPolicy_BgpSetMedAction int64

// IsYANGGoEnum ensures that BgpPolicy_BgpSetMedAction implements the yang.GoEnum
// interface. This ensures that BgpPolicy_BgpSetMedAction can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpPolicy_BgpSetMedAction) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpPolicy_BgpSetMedAction.
func (E_BgpPolicy_BgpSetMedAction) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpPolicy_BgpSetMedAction.
func (e E_BgpPolicy_BgpSetMedAction) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpPolicy_BgpSetMedAction")
}

const (
	// BgpPolicy_BgpSetMedAction_UNSET corresponds to the value UNSET of BgpPolicy_BgpSetMedAction
	BgpPolicy_BgpSetMedAction_UNSET E_BgpPolicy_BgpSetMedAction = 0
	// BgpPolicy_BgpSetMedAction_SET corresponds to the value SET of BgpPolicy_BgpSetMedAction
	BgpPolicy_BgpSetMedAction_SET E_BgpPolicy_BgpSetMedAction = 1
	// BgpPolicy_BgpSetMedAction_ADD corresponds to the value ADD of BgpPolicy_BgpSetMedAction
	BgpPolicy_BgpSetMedAction_ADD E_BgpPolicy_BgpSetMedAction = 2
	// BgpPolicy_BgpSetMedAction_SUBTRACT corresponds to the value SUBTRACT of BgpPolicy_BgpSetMedAction
	BgpPolicy_BgpSetMedAction_SUBTRACT E_BgpPolicy_BgpSetMedAction = 3
)

// E_BgpPolicy_MatchSetOptionsType is a derived int64 type which is used to represent
// the enumerated node BgpPolicy_MatchSetOptionsType. An additional value named
// BgpPolicy_MatchSetOptionsType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpPolicy_MatchSetOptionsType int64

// IsYANGGoEnum ensures that BgpPolicy_MatchSetOptionsType implements the yang.GoEnum
// interface. This ensures that BgpPolicy_MatchSetOptionsType can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpPolicy_MatchSetOptionsType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpPolicy_MatchSetOptionsType.
func (E_BgpPolicy_MatchSetOptionsType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_BgpPolicy_MatchSetOptionsType.
func (e E_BgpPolicy_MatchSetOptionsType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpPolicy_MatchSetOptionsType")
}

const (
	// BgpPolicy_MatchSetOptionsType_UNSET corresponds to the value UNSET of BgpPolicy_MatchSetOptionsType
	BgpPolicy_MatchSetOptionsType_UNSET E_BgpPolicy_MatchSetOptionsType = 0
	// BgpPolicy_MatchSetOptionsType_ANY corresponds to the value ANY of BgpPolicy_MatchSetOptionsType
	BgpPolicy_MatchSetOptionsType_ANY E_BgpPolicy_MatchSetOptionsType = 1
	// BgpPolicy_MatchSetOptionsType_ALL corresponds to the value ALL of BgpPolicy_MatchSetOptionsType
	BgpPolicy_MatchSetOptionsType_ALL E_BgpPolicy_MatchSetOptionsType = 2
	// BgpPolicy_MatchSetOptionsType_INVERT corresponds to the value INVERT of BgpPolicy_MatchSetOptionsType
	BgpPolicy_MatchSetOptionsType_INVERT E_BgpPolicy_MatchSetOptionsType = 3
)

// E_BgpTypes_AFI_SAFI_TYPE is a derived int64 type which is used to represent
// the enumerated node BgpTypes_AFI_SAFI_TYPE. An additional value named
// BgpTypes_AFI_SAFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_AFI_SAFI_TYPE int64

// IsYANGGoEnum ensures that BgpTypes_AFI_SAFI_TYPE implements the yang.GoEnum
// interface. This ensures that BgpTypes_AFI_SAFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_AFI_SAFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_AFI_SAFI_TYPE.
func (E_BgpTypes_AFI_SAFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_AFI_SAFI_TYPE.
func (e E_BgpTypes_AFI_SAFI_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_AFI_SAFI_TYPE")
}

const (
	// BgpTypes_AFI_SAFI_TYPE_UNSET corresponds to the value UNSET of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_UNSET E_BgpTypes_AFI_SAFI_TYPE = 0
	// BgpTypes_AFI_SAFI_TYPE_IPV4_FLOWSPEC corresponds to the value IPV4_FLOWSPEC of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV4_FLOWSPEC E_BgpTypes_AFI_SAFI_TYPE = 1
	// BgpTypes_AFI_SAFI_TYPE_IPV4_LABELED_UNICAST corresponds to the value IPV4_LABELED_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV4_LABELED_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 2
	// BgpTypes_AFI_SAFI_TYPE_IPV4_UNICAST corresponds to the value IPV4_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV4_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 3
	// BgpTypes_AFI_SAFI_TYPE_IPV6_LABELED_UNICAST corresponds to the value IPV6_LABELED_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV6_LABELED_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 4
	// BgpTypes_AFI_SAFI_TYPE_IPV6_UNICAST corresponds to the value IPV6_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_IPV6_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 5
	// BgpTypes_AFI_SAFI_TYPE_L2VPN_EVPN corresponds to the value L2VPN_EVPN of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L2VPN_EVPN E_BgpTypes_AFI_SAFI_TYPE = 6
	// BgpTypes_AFI_SAFI_TYPE_L2VPN_VPLS corresponds to the value L2VPN_VPLS of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L2VPN_VPLS E_BgpTypes_AFI_SAFI_TYPE = 7
	// BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_MULTICAST corresponds to the value L3VPN_IPV4_MULTICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_MULTICAST E_BgpTypes_AFI_SAFI_TYPE = 8
	// BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_UNICAST corresponds to the value L3VPN_IPV4_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 9
	// BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_MULTICAST corresponds to the value L3VPN_IPV6_MULTICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_MULTICAST E_BgpTypes_AFI_SAFI_TYPE = 10
	// BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_UNICAST corresponds to the value L3VPN_IPV6_UNICAST of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_UNICAST E_BgpTypes_AFI_SAFI_TYPE = 11
	// BgpTypes_AFI_SAFI_TYPE_LINKSTATE corresponds to the value LINKSTATE of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_LINKSTATE E_BgpTypes_AFI_SAFI_TYPE = 12
	// BgpTypes_AFI_SAFI_TYPE_LINKSTATE_SPF corresponds to the value LINKSTATE_SPF of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_LINKSTATE_SPF E_BgpTypes_AFI_SAFI_TYPE = 13
	// BgpTypes_AFI_SAFI_TYPE_LINKSTATE_VPN corresponds to the value LINKSTATE_VPN of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_LINKSTATE_VPN E_BgpTypes_AFI_SAFI_TYPE = 14
	// BgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV4 corresponds to the value SRTE_POLICY_IPV4 of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV4 E_BgpTypes_AFI_SAFI_TYPE = 15
	// BgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV6 corresponds to the value SRTE_POLICY_IPV6 of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV6 E_BgpTypes_AFI_SAFI_TYPE = 16
	// BgpTypes_AFI_SAFI_TYPE_VPNV4_FLOWSPEC corresponds to the value VPNV4_FLOWSPEC of BgpTypes_AFI_SAFI_TYPE
	BgpTypes_AFI_SAFI_TYPE_VPNV4_FLOWSPEC E_BgpTypes_AFI_SAFI_TYPE = 17
)

// E_BgpTypes_BGP_CAPABILITY is a derived int64 type which is used to represent
// the enumerated node BgpTypes_BGP_CAPABILITY. An additional value named
// BgpTypes_BGP_CAPABILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_BGP_CAPABILITY int64

// IsYANGGoEnum ensures that BgpTypes_BGP_CAPABILITY implements the yang.GoEnum
// interface. This ensures that BgpTypes_BGP_CAPABILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_BGP_CAPABILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_BGP_CAPABILITY.
func (E_BgpTypes_BGP_CAPABILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_BGP_CAPABILITY.
func (e E_BgpTypes_BGP_CAPABILITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_BGP_CAPABILITY")
}

const (
	// BgpTypes_BGP_CAPABILITY_UNSET corresponds to the value UNSET of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_UNSET E_BgpTypes_BGP_CAPABILITY = 0
	// BgpTypes_BGP_CAPABILITY_ADD_PATHS corresponds to the value ADD_PATHS of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_ADD_PATHS E_BgpTypes_BGP_CAPABILITY = 1
	// BgpTypes_BGP_CAPABILITY_ASN32 corresponds to the value ASN32 of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_ASN32 E_BgpTypes_BGP_CAPABILITY = 2
	// BgpTypes_BGP_CAPABILITY_EXTENDED_NEXTHOP_ENCODING corresponds to the value EXTENDED_NEXTHOP_ENCODING of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_EXTENDED_NEXTHOP_ENCODING E_BgpTypes_BGP_CAPABILITY = 3
	// BgpTypes_BGP_CAPABILITY_GRACEFUL_RESTART corresponds to the value GRACEFUL_RESTART of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_GRACEFUL_RESTART E_BgpTypes_BGP_CAPABILITY = 4
	// BgpTypes_BGP_CAPABILITY_MPBGP corresponds to the value MPBGP of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_MPBGP E_BgpTypes_BGP_CAPABILITY = 5
	// BgpTypes_BGP_CAPABILITY_ROUTE_REFRESH corresponds to the value ROUTE_REFRESH of BgpTypes_BGP_CAPABILITY
	BgpTypes_BGP_CAPABILITY_ROUTE_REFRESH E_BgpTypes_BGP_CAPABILITY = 6
)

// E_BgpTypes_BGP_ERROR_CODE is a derived int64 type which is used to represent
// the enumerated node BgpTypes_BGP_ERROR_CODE. An additional value named
// BgpTypes_BGP_ERROR_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_BGP_ERROR_CODE int64

// IsYANGGoEnum ensures that BgpTypes_BGP_ERROR_CODE implements the yang.GoEnum
// interface. This ensures that BgpTypes_BGP_ERROR_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_BGP_ERROR_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_BGP_ERROR_CODE.
func (E_BgpTypes_BGP_ERROR_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_BGP_ERROR_CODE.
func (e E_BgpTypes_BGP_ERROR_CODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_BGP_ERROR_CODE")
}

const (
	// BgpTypes_BGP_ERROR_CODE_UNSET corresponds to the value UNSET of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_UNSET E_BgpTypes_BGP_ERROR_CODE = 0
	// BgpTypes_BGP_ERROR_CODE_CEASE corresponds to the value CEASE of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_CEASE E_BgpTypes_BGP_ERROR_CODE = 1
	// BgpTypes_BGP_ERROR_CODE_FINITE_STATE_MACHINE_ERROR corresponds to the value FINITE_STATE_MACHINE_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_FINITE_STATE_MACHINE_ERROR E_BgpTypes_BGP_ERROR_CODE = 2
	// BgpTypes_BGP_ERROR_CODE_HOLD_TIMER_EXPIRED corresponds to the value HOLD_TIMER_EXPIRED of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_HOLD_TIMER_EXPIRED E_BgpTypes_BGP_ERROR_CODE = 3
	// BgpTypes_BGP_ERROR_CODE_MESSAGE_HEADER_ERROR corresponds to the value MESSAGE_HEADER_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_MESSAGE_HEADER_ERROR E_BgpTypes_BGP_ERROR_CODE = 4
	// BgpTypes_BGP_ERROR_CODE_OPEN_MESSAGE_ERROR corresponds to the value OPEN_MESSAGE_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_OPEN_MESSAGE_ERROR E_BgpTypes_BGP_ERROR_CODE = 5
	// BgpTypes_BGP_ERROR_CODE_ROUTE_REFRESH_MESSAGE_ERROR corresponds to the value ROUTE_REFRESH_MESSAGE_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_ROUTE_REFRESH_MESSAGE_ERROR E_BgpTypes_BGP_ERROR_CODE = 6
	// BgpTypes_BGP_ERROR_CODE_UPDATE_MESSAGE_ERROR corresponds to the value UPDATE_MESSAGE_ERROR of BgpTypes_BGP_ERROR_CODE
	BgpTypes_BGP_ERROR_CODE_UPDATE_MESSAGE_ERROR E_BgpTypes_BGP_ERROR_CODE = 7
)

// E_BgpTypes_BGP_ERROR_SUBCODE is a derived int64 type which is used to represent
// the enumerated node BgpTypes_BGP_ERROR_SUBCODE. An additional value named
// BgpTypes_BGP_ERROR_SUBCODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_BGP_ERROR_SUBCODE int64

// IsYANGGoEnum ensures that BgpTypes_BGP_ERROR_SUBCODE implements the yang.GoEnum
// interface. This ensures that BgpTypes_BGP_ERROR_SUBCODE can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_BGP_ERROR_SUBCODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_BGP_ERROR_SUBCODE.
func (E_BgpTypes_BGP_ERROR_SUBCODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_BgpTypes_BGP_ERROR_SUBCODE.
func (e E_BgpTypes_BGP_ERROR_SUBCODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_BGP_ERROR_SUBCODE")
}

const (
	// BgpTypes_BGP_ERROR_SUBCODE_UNSET corresponds to the value UNSET of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSET E_BgpTypes_BGP_ERROR_SUBCODE = 0
	// BgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_RESET corresponds to the value ADMINISTRATIVE_RESET of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_RESET E_BgpTypes_BGP_ERROR_SUBCODE = 1
	// BgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_SHUTDOWN corresponds to the value ADMINISTRATIVE_SHUTDOWN of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_SHUTDOWN E_BgpTypes_BGP_ERROR_SUBCODE = 2
	// BgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_FLAGS_ERROR corresponds to the value ATTRIBUTE_FLAGS_ERROR of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_FLAGS_ERROR E_BgpTypes_BGP_ERROR_SUBCODE = 3
	// BgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_LENGTH_ERROR corresponds to the value ATTRIBUTE_LENGTH_ERROR of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_LENGTH_ERROR E_BgpTypes_BGP_ERROR_SUBCODE = 4
	// BgpTypes_BGP_ERROR_SUBCODE_BAD_BGP_IDENTIFIER corresponds to the value BAD_BGP_IDENTIFIER of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_BAD_BGP_IDENTIFIER E_BgpTypes_BGP_ERROR_SUBCODE = 5
	// BgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_LENGTH corresponds to the value BAD_MESSAGE_LENGTH of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_LENGTH E_BgpTypes_BGP_ERROR_SUBCODE = 6
	// BgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_TYPE corresponds to the value BAD_MESSAGE_TYPE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_TYPE E_BgpTypes_BGP_ERROR_SUBCODE = 7
	// BgpTypes_BGP_ERROR_SUBCODE_BAD_PEER_AS corresponds to the value BAD_PEER_AS of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_BAD_PEER_AS E_BgpTypes_BGP_ERROR_SUBCODE = 8
	// BgpTypes_BGP_ERROR_SUBCODE_CEASE_SUBCODE corresponds to the value CEASE_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_CEASE_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 9
	// BgpTypes_BGP_ERROR_SUBCODE_CONNECTION_NOT_SYNCHRONIZED corresponds to the value CONNECTION_NOT_SYNCHRONIZED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_CONNECTION_NOT_SYNCHRONIZED E_BgpTypes_BGP_ERROR_SUBCODE = 10
	// BgpTypes_BGP_ERROR_SUBCODE_CONNECTION_REJECTED corresponds to the value CONNECTION_REJECTED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_CONNECTION_REJECTED E_BgpTypes_BGP_ERROR_SUBCODE = 11
	// BgpTypes_BGP_ERROR_SUBCODE_CONN_COLLISION_RESOLUTION corresponds to the value CONN_COLLISION_RESOLUTION of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_CONN_COLLISION_RESOLUTION E_BgpTypes_BGP_ERROR_SUBCODE = 12
	// BgpTypes_BGP_ERROR_SUBCODE_FINITE_STATE_MACHINE_SUBCODE corresponds to the value FINITE_STATE_MACHINE_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_FINITE_STATE_MACHINE_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 13
	// BgpTypes_BGP_ERROR_SUBCODE_INVALID_MESSAGE_LENGTH corresponds to the value INVALID_MESSAGE_LENGTH of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_INVALID_MESSAGE_LENGTH E_BgpTypes_BGP_ERROR_SUBCODE = 14
	// BgpTypes_BGP_ERROR_SUBCODE_INVALID_NETWORK_FIELD corresponds to the value INVALID_NETWORK_FIELD of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_INVALID_NETWORK_FIELD E_BgpTypes_BGP_ERROR_SUBCODE = 15
	// BgpTypes_BGP_ERROR_SUBCODE_INVALID_NEXT_HOP_ATTRIBUTE corresponds to the value INVALID_NEXT_HOP_ATTRIBUTE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_INVALID_NEXT_HOP_ATTRIBUTE E_BgpTypes_BGP_ERROR_SUBCODE = 16
	// BgpTypes_BGP_ERROR_SUBCODE_INVALID_ORIGIN_ATTRIBUTE corresponds to the value INVALID_ORIGIN_ATTRIBUTE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_INVALID_ORIGIN_ATTRIBUTE E_BgpTypes_BGP_ERROR_SUBCODE = 17
	// BgpTypes_BGP_ERROR_SUBCODE_MALFORMED_AS_PATH corresponds to the value MALFORMED_AS_PATH of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MALFORMED_AS_PATH E_BgpTypes_BGP_ERROR_SUBCODE = 18
	// BgpTypes_BGP_ERROR_SUBCODE_MALFORMED_ATTRIBUTE_LIST corresponds to the value MALFORMED_ATTRIBUTE_LIST of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MALFORMED_ATTRIBUTE_LIST E_BgpTypes_BGP_ERROR_SUBCODE = 19
	// BgpTypes_BGP_ERROR_SUBCODE_MAX_NUM_PREFIXES_REACHED corresponds to the value MAX_NUM_PREFIXES_REACHED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MAX_NUM_PREFIXES_REACHED E_BgpTypes_BGP_ERROR_SUBCODE = 20
	// BgpTypes_BGP_ERROR_SUBCODE_MESSAGE_HEADER_SUBCODE corresponds to the value MESSAGE_HEADER_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MESSAGE_HEADER_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 21
	// BgpTypes_BGP_ERROR_SUBCODE_MISSING_WELL_KNOWN_ATTRIBUTE corresponds to the value MISSING_WELL_KNOWN_ATTRIBUTE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_MISSING_WELL_KNOWN_ATTRIBUTE E_BgpTypes_BGP_ERROR_SUBCODE = 22
	// BgpTypes_BGP_ERROR_SUBCODE_OPEN_MESSAGE_SUBCODE corresponds to the value OPEN_MESSAGE_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_OPEN_MESSAGE_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 23
	// BgpTypes_BGP_ERROR_SUBCODE_OPTIONAL_ATTRIBUTE_ERROR corresponds to the value OPTIONAL_ATTRIBUTE_ERROR of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_OPTIONAL_ATTRIBUTE_ERROR E_BgpTypes_BGP_ERROR_SUBCODE = 24
	// BgpTypes_BGP_ERROR_SUBCODE_OTHER_CONFIG_CHANGE corresponds to the value OTHER_CONFIG_CHANGE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_OTHER_CONFIG_CHANGE E_BgpTypes_BGP_ERROR_SUBCODE = 25
	// BgpTypes_BGP_ERROR_SUBCODE_OUT_OF_RESOURCES corresponds to the value OUT_OF_RESOURCES of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_OUT_OF_RESOURCES E_BgpTypes_BGP_ERROR_SUBCODE = 26
	// BgpTypes_BGP_ERROR_SUBCODE_PEER_DE_CONFIGURED corresponds to the value PEER_DE_CONFIGURED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_PEER_DE_CONFIGURED E_BgpTypes_BGP_ERROR_SUBCODE = 27
	// BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_ESTABLISHED corresponds to the value RECEIVE_UNEXPECTED_MESSAGE_ESTABLISHED of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_ESTABLISHED E_BgpTypes_BGP_ERROR_SUBCODE = 28
	// BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENCONFIRM corresponds to the value RECEIVE_UNEXPECTED_MESSAGE_OPENCONFIRM of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENCONFIRM E_BgpTypes_BGP_ERROR_SUBCODE = 29
	// BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENSENT corresponds to the value RECEIVE_UNEXPECTED_MESSAGE_OPENSENT of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENSENT E_BgpTypes_BGP_ERROR_SUBCODE = 30
	// BgpTypes_BGP_ERROR_SUBCODE_ROUTE_REFRESH_SUBCODE corresponds to the value ROUTE_REFRESH_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_ROUTE_REFRESH_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 31
	// BgpTypes_BGP_ERROR_SUBCODE_UNACCEPTABLE_HOLD_TIME corresponds to the value UNACCEPTABLE_HOLD_TIME of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNACCEPTABLE_HOLD_TIME E_BgpTypes_BGP_ERROR_SUBCODE = 32
	// BgpTypes_BGP_ERROR_SUBCODE_UNRECOGNIZED_WELL_KNOWN_ATTRIBUTE corresponds to the value UNRECOGNIZED_WELL_KNOWN_ATTRIBUTE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNRECOGNIZED_WELL_KNOWN_ATTRIBUTE E_BgpTypes_BGP_ERROR_SUBCODE = 33
	// BgpTypes_BGP_ERROR_SUBCODE_UNSPECIFIC corresponds to the value UNSPECIFIC of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSPECIFIC E_BgpTypes_BGP_ERROR_SUBCODE = 34
	// BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_CAPABILITY corresponds to the value UNSUPPORTED_CAPABILITY of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_CAPABILITY E_BgpTypes_BGP_ERROR_SUBCODE = 35
	// BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_OPTIONAL_PARAMETER corresponds to the value UNSUPPORTED_OPTIONAL_PARAMETER of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_OPTIONAL_PARAMETER E_BgpTypes_BGP_ERROR_SUBCODE = 36
	// BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_VERSION_NUMBER corresponds to the value UNSUPPORTED_VERSION_NUMBER of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_VERSION_NUMBER E_BgpTypes_BGP_ERROR_SUBCODE = 37
	// BgpTypes_BGP_ERROR_SUBCODE_UPDATE_MESSAGE_SUBCODE corresponds to the value UPDATE_MESSAGE_SUBCODE of BgpTypes_BGP_ERROR_SUBCODE
	BgpTypes_BGP_ERROR_SUBCODE_UPDATE_MESSAGE_SUBCODE E_BgpTypes_BGP_ERROR_SUBCODE = 38
)

// E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY is a derived int64 type which is used to represent
// the enumerated node BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY. An additional value named
// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY int64

// IsYANGGoEnum ensures that BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY implements the yang.GoEnum
// interface. This ensures that BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY can be identified as a
// mapped type for a YANG enumeration.
func (E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY.
func (E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY.
func (e E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY")
}

const (
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_UNSET corresponds to the value UNSET of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_UNSET E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 0
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_GRACEFUL_SHUTDOWN corresponds to the value GRACEFUL_SHUTDOWN of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_GRACEFUL_SHUTDOWN E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 1
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NOPEER corresponds to the value NOPEER of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NOPEER E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 2
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_ADVERTISE corresponds to the value NO_ADVERTISE of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_ADVERTISE E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 3
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_EXPORT corresponds to the value NO_EXPORT of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_EXPORT E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 4
	// BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_EXPORT_SUBCONFED corresponds to the value NO_EXPORT_SUBCONFED of BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY
	BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY_NO_EXPORT_SUBCONFED E_BgpTypes_BGP_WELL_KNOWN_STD_COMMUNITY = 5
)

// E_Bgp_CommunityType is a derived int64 type which is used to represent
// the enumerated node Bgp_CommunityType. An additional value named
// Bgp_CommunityType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Bgp_CommunityType int64

// IsYANGGoEnum ensures that Bgp_CommunityType implements the yang.GoEnum
// interface. This ensures that Bgp_CommunityType can be identified as a
// mapped type for a YANG enumeration.
func (E_Bgp_CommunityType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Bgp_CommunityType.
func (E_Bgp_CommunityType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Bgp_CommunityType.
func (e E_Bgp_CommunityType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Bgp_CommunityType")
}

const (
	// Bgp_CommunityType_UNSET corresponds to the value UNSET of Bgp_CommunityType
	Bgp_CommunityType_UNSET E_Bgp_CommunityType = 0
	// Bgp_CommunityType_STANDARD corresponds to the value STANDARD of Bgp_CommunityType
	Bgp_CommunityType_STANDARD E_Bgp_CommunityType = 1
	// Bgp_CommunityType_EXTENDED corresponds to the value EXTENDED of Bgp_CommunityType
	Bgp_CommunityType_EXTENDED E_Bgp_CommunityType = 2
	// Bgp_CommunityType_LARGE corresponds to the value LARGE of Bgp_CommunityType
	Bgp_CommunityType_LARGE E_Bgp_CommunityType = 3
	// Bgp_CommunityType_BOTH corresponds to the value BOTH of Bgp_CommunityType
	Bgp_CommunityType_BOTH E_Bgp_CommunityType = 4
	// Bgp_CommunityType_NONE corresponds to the value NONE of Bgp_CommunityType
	Bgp_CommunityType_NONE E_Bgp_CommunityType = 5
)

// E_Bgp_Neighbor_SessionState is a derived int64 type which is used to represent
// the enumerated node Bgp_Neighbor_SessionState. An additional value named
// Bgp_Neighbor_SessionState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Bgp_Neighbor_SessionState int64

// IsYANGGoEnum ensures that Bgp_Neighbor_SessionState implements the yang.GoEnum
// interface. This ensures that Bgp_Neighbor_SessionState can be identified as a
// mapped type for a YANG enumeration.
func (E_Bgp_Neighbor_SessionState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Bgp_Neighbor_SessionState.
func (E_Bgp_Neighbor_SessionState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Bgp_Neighbor_SessionState.
func (e E_Bgp_Neighbor_SessionState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Bgp_Neighbor_SessionState")
}

const (
	// Bgp_Neighbor_SessionState_UNSET corresponds to the value UNSET of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_UNSET E_Bgp_Neighbor_SessionState = 0
	// Bgp_Neighbor_SessionState_IDLE corresponds to the value IDLE of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_IDLE E_Bgp_Neighbor_SessionState = 1
	// Bgp_Neighbor_SessionState_CONNECT corresponds to the value CONNECT of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_CONNECT E_Bgp_Neighbor_SessionState = 2
	// Bgp_Neighbor_SessionState_ACTIVE corresponds to the value ACTIVE of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_ACTIVE E_Bgp_Neighbor_SessionState = 3
	// Bgp_Neighbor_SessionState_OPENSENT corresponds to the value OPENSENT of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_OPENSENT E_Bgp_Neighbor_SessionState = 4
	// Bgp_Neighbor_SessionState_OPENCONFIRM corresponds to the value OPENCONFIRM of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_OPENCONFIRM E_Bgp_Neighbor_SessionState = 5
	// Bgp_Neighbor_SessionState_ESTABLISHED corresponds to the value ESTABLISHED of Bgp_Neighbor_SessionState
	Bgp_Neighbor_SessionState_ESTABLISHED E_Bgp_Neighbor_SessionState = 6
)

// E_Bgp_PeerType is a derived int64 type which is used to represent
// the enumerated node Bgp_PeerType. An additional value named
// Bgp_PeerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Bgp_PeerType int64

// IsYANGGoEnum ensures that Bgp_PeerType implements the yang.GoEnum
// interface. This ensures that Bgp_PeerType can be identified as a
// mapped type for a YANG enumeration.
func (E_Bgp_PeerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Bgp_PeerType.
func (E_Bgp_PeerType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Bgp_PeerType.
func (e E_Bgp_PeerType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Bgp_PeerType")
}

const (
	// Bgp_PeerType_UNSET corresponds to the value UNSET of Bgp_PeerType
	Bgp_PeerType_UNSET E_Bgp_PeerType = 0
	// Bgp_PeerType_INTERNAL corresponds to the value INTERNAL of Bgp_PeerType
	Bgp_PeerType_INTERNAL E_Bgp_PeerType = 1
	// Bgp_PeerType_EXTERNAL corresponds to the value EXTERNAL of Bgp_PeerType
	Bgp_PeerType_EXTERNAL E_Bgp_PeerType = 2
)

// E_Bgp_RemovePrivateAsOption is a derived int64 type which is used to represent
// the enumerated node Bgp_RemovePrivateAsOption. An additional value named
// Bgp_RemovePrivateAsOption_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Bgp_RemovePrivateAsOption int64

// IsYANGGoEnum ensures that Bgp_RemovePrivateAsOption implements the yang.GoEnum
// interface. This ensures that Bgp_RemovePrivateAsOption can be identified as a
// mapped type for a YANG enumeration.
func (E_Bgp_RemovePrivateAsOption) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Bgp_RemovePrivateAsOption.
func (E_Bgp_RemovePrivateAsOption) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Bgp_RemovePrivateAsOption.
func (e E_Bgp_RemovePrivateAsOption) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Bgp_RemovePrivateAsOption")
}

const (
	// Bgp_RemovePrivateAsOption_UNSET corresponds to the value UNSET of Bgp_RemovePrivateAsOption
	Bgp_RemovePrivateAsOption_UNSET E_Bgp_RemovePrivateAsOption = 0
	// Bgp_RemovePrivateAsOption_PRIVATE_AS_REMOVE_ALL corresponds to the value PRIVATE_AS_REMOVE_ALL of Bgp_RemovePrivateAsOption
	Bgp_RemovePrivateAsOption_PRIVATE_AS_REMOVE_ALL E_Bgp_RemovePrivateAsOption = 1
	// Bgp_RemovePrivateAsOption_PRIVATE_AS_REPLACE_ALL corresponds to the value PRIVATE_AS_REPLACE_ALL of Bgp_RemovePrivateAsOption
	Bgp_RemovePrivateAsOption_PRIVATE_AS_REPLACE_ALL E_Bgp_RemovePrivateAsOption = 2
)

// E_Bootz_Status is a derived int64 type which is used to represent
// the enumerated node Bootz_Status. An additional value named
// Bootz_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Bootz_Status int64

// IsYANGGoEnum ensures that Bootz_Status implements the yang.GoEnum
// interface. This ensures that Bootz_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_Bootz_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Bootz_Status.
func (E_Bootz_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Bootz_Status.
func (e E_Bootz_Status) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Bootz_Status")
}

const (
	// Bootz_Status_UNSET corresponds to the value UNSET of Bootz_Status
	Bootz_Status_UNSET E_Bootz_Status = 0
	// Bootz_Status_BOOTZ_UNSPECIFIED corresponds to the value BOOTZ_UNSPECIFIED of Bootz_Status
	Bootz_Status_BOOTZ_UNSPECIFIED E_Bootz_Status = 1
	// Bootz_Status_BOOTZ_SENT corresponds to the value BOOTZ_SENT of Bootz_Status
	Bootz_Status_BOOTZ_SENT E_Bootz_Status = 2
	// Bootz_Status_BOOTZ_RECEIVED corresponds to the value BOOTZ_RECEIVED of Bootz_Status
	Bootz_Status_BOOTZ_RECEIVED E_Bootz_Status = 3
	// Bootz_Status_BOOTZ_CONFIGURATION_APPLIED corresponds to the value BOOTZ_CONFIGURATION_APPLIED of Bootz_Status
	Bootz_Status_BOOTZ_CONFIGURATION_APPLIED E_Bootz_Status = 4
	// Bootz_Status_BOOTZ_OK corresponds to the value BOOTZ_OK of Bootz_Status
	Bootz_Status_BOOTZ_OK E_Bootz_Status = 5
	// Bootz_Status_BOOTZ_OV_INVALID corresponds to the value BOOTZ_OV_INVALID of Bootz_Status
	Bootz_Status_BOOTZ_OV_INVALID E_Bootz_Status = 6
	// Bootz_Status_BOOTZ_OS_UPGRADE_IN_PROGRESS corresponds to the value BOOTZ_OS_UPGRADE_IN_PROGRESS of Bootz_Status
	Bootz_Status_BOOTZ_OS_UPGRADE_IN_PROGRESS E_Bootz_Status = 7
	// Bootz_Status_BOOTZ_OS_UPGRADE_COMPLETE corresponds to the value BOOTZ_OS_UPGRADE_COMPLETE of Bootz_Status
	Bootz_Status_BOOTZ_OS_UPGRADE_COMPLETE E_Bootz_Status = 8
	// Bootz_Status_BOOTZ_OS_INVALID_IMAGE corresponds to the value BOOTZ_OS_INVALID_IMAGE of Bootz_Status
	Bootz_Status_BOOTZ_OS_INVALID_IMAGE E_Bootz_Status = 9
	// Bootz_Status_BOOTZ_CONFIGURATION_INVALID corresponds to the value BOOTZ_CONFIGURATION_INVALID of Bootz_Status
	Bootz_Status_BOOTZ_CONFIGURATION_INVALID E_Bootz_Status = 10
)

// E_Capability_Flags is a derived int64 type which is used to represent
// the enumerated node Capability_Flags. An additional value named
// Capability_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Capability_Flags int64

// IsYANGGoEnum ensures that Capability_Flags implements the yang.GoEnum
// interface. This ensures that Capability_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Capability_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Capability_Flags.
func (E_Capability_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Capability_Flags.
func (e E_Capability_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Capability_Flags")
}

const (
	// Capability_Flags_UNSET corresponds to the value UNSET of Capability_Flags
	Capability_Flags_UNSET E_Capability_Flags = 0
	// Capability_Flags_FLOOD corresponds to the value FLOOD of Capability_Flags
	Capability_Flags_FLOOD E_Capability_Flags = 1
	// Capability_Flags_DOWN corresponds to the value DOWN of Capability_Flags
	Capability_Flags_DOWN E_Capability_Flags = 2
)

// E_Channel_LinkState is a derived int64 type which is used to represent
// the enumerated node Channel_LinkState. An additional value named
// Channel_LinkState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Channel_LinkState int64

// IsYANGGoEnum ensures that Channel_LinkState implements the yang.GoEnum
// interface. This ensures that Channel_LinkState can be identified as a
// mapped type for a YANG enumeration.
func (E_Channel_LinkState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Channel_LinkState.
func (E_Channel_LinkState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Channel_LinkState.
func (e E_Channel_LinkState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Channel_LinkState")
}

const (
	// Channel_LinkState_UNSET corresponds to the value UNSET of Channel_LinkState
	Channel_LinkState_UNSET E_Channel_LinkState = 0
	// Channel_LinkState_UP corresponds to the value UP of Channel_LinkState
	Channel_LinkState_UP E_Channel_LinkState = 1
	// Channel_LinkState_DOWN corresponds to the value DOWN of Channel_LinkState
	Channel_LinkState_DOWN E_Channel_LinkState = 2
	// Channel_LinkState_TESTING corresponds to the value TESTING of Channel_LinkState
	Channel_LinkState_TESTING E_Channel_LinkState = 3
)

// E_Cpu_Index is a derived int64 type which is used to represent
// the enumerated node Cpu_Index. An additional value named
// Cpu_Index_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cpu_Index int64

// IsYANGGoEnum ensures that Cpu_Index implements the yang.GoEnum
// interface. This ensures that Cpu_Index can be identified as a
// mapped type for a YANG enumeration.
func (E_Cpu_Index) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cpu_Index.
func (E_Cpu_Index) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Cpu_Index.
func (e E_Cpu_Index) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cpu_Index")
}

const (
	// Cpu_Index_UNSET corresponds to the value UNSET of Cpu_Index
	Cpu_Index_UNSET E_Cpu_Index = 0
	// Cpu_Index_ALL corresponds to the value ALL of Cpu_Index
	Cpu_Index_ALL E_Cpu_Index = 1
)

// E_DefaultMetric_Flags is a derived int64 type which is used to represent
// the enumerated node DefaultMetric_Flags. An additional value named
// DefaultMetric_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_DefaultMetric_Flags int64

// IsYANGGoEnum ensures that DefaultMetric_Flags implements the yang.GoEnum
// interface. This ensures that DefaultMetric_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_DefaultMetric_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  DefaultMetric_Flags.
func (E_DefaultMetric_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_DefaultMetric_Flags.
func (e E_DefaultMetric_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_DefaultMetric_Flags")
}

const (
	// DefaultMetric_Flags_UNSET corresponds to the value UNSET of DefaultMetric_Flags
	DefaultMetric_Flags_UNSET E_DefaultMetric_Flags = 0
	// DefaultMetric_Flags_INTERNAL corresponds to the value INTERNAL of DefaultMetric_Flags
	DefaultMetric_Flags_INTERNAL E_DefaultMetric_Flags = 1
)

// E_Egress_IncomingLabel is a derived int64 type which is used to represent
// the enumerated node Egress_IncomingLabel. An additional value named
// Egress_IncomingLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Egress_IncomingLabel int64

// IsYANGGoEnum ensures that Egress_IncomingLabel implements the yang.GoEnum
// interface. This ensures that Egress_IncomingLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_Egress_IncomingLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Egress_IncomingLabel.
func (E_Egress_IncomingLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Egress_IncomingLabel.
func (e E_Egress_IncomingLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Egress_IncomingLabel")
}

const (
	// Egress_IncomingLabel_UNSET corresponds to the value UNSET of Egress_IncomingLabel
	Egress_IncomingLabel_UNSET E_Egress_IncomingLabel = 0
	// Egress_IncomingLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Egress_IncomingLabel
	Egress_IncomingLabel_IPV4_EXPLICIT_NULL E_Egress_IncomingLabel = 1
	// Egress_IncomingLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Egress_IncomingLabel
	Egress_IncomingLabel_ROUTER_ALERT E_Egress_IncomingLabel = 2
	// Egress_IncomingLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Egress_IncomingLabel
	Egress_IncomingLabel_IPV6_EXPLICIT_NULL E_Egress_IncomingLabel = 3
	// Egress_IncomingLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Egress_IncomingLabel
	Egress_IncomingLabel_IMPLICIT_NULL E_Egress_IncomingLabel = 4
	// Egress_IncomingLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Egress_IncomingLabel
	Egress_IncomingLabel_ENTROPY_LABEL_INDICATOR E_Egress_IncomingLabel = 8
	// Egress_IncomingLabel_NO_LABEL corresponds to the value NO_LABEL of Egress_IncomingLabel
	Egress_IncomingLabel_NO_LABEL E_Egress_IncomingLabel = 9
)

// E_Egress_PushLabel is a derived int64 type which is used to represent
// the enumerated node Egress_PushLabel. An additional value named
// Egress_PushLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Egress_PushLabel int64

// IsYANGGoEnum ensures that Egress_PushLabel implements the yang.GoEnum
// interface. This ensures that Egress_PushLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_Egress_PushLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Egress_PushLabel.
func (E_Egress_PushLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Egress_PushLabel.
func (e E_Egress_PushLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Egress_PushLabel")
}

const (
	// Egress_PushLabel_UNSET corresponds to the value UNSET of Egress_PushLabel
	Egress_PushLabel_UNSET E_Egress_PushLabel = 0
	// Egress_PushLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Egress_PushLabel
	Egress_PushLabel_IPV4_EXPLICIT_NULL E_Egress_PushLabel = 1
	// Egress_PushLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Egress_PushLabel
	Egress_PushLabel_ROUTER_ALERT E_Egress_PushLabel = 2
	// Egress_PushLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Egress_PushLabel
	Egress_PushLabel_IPV6_EXPLICIT_NULL E_Egress_PushLabel = 3
	// Egress_PushLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Egress_PushLabel
	Egress_PushLabel_IMPLICIT_NULL E_Egress_PushLabel = 4
	// Egress_PushLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Egress_PushLabel
	Egress_PushLabel_ENTROPY_LABEL_INDICATOR E_Egress_PushLabel = 8
	// Egress_PushLabel_NO_LABEL corresponds to the value NO_LABEL of Egress_PushLabel
	Egress_PushLabel_NO_LABEL E_Egress_PushLabel = 9
)

// E_EndpointPeer_PeerState is a derived int64 type which is used to represent
// the enumerated node EndpointPeer_PeerState. An additional value named
// EndpointPeer_PeerState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointPeer_PeerState int64

// IsYANGGoEnum ensures that EndpointPeer_PeerState implements the yang.GoEnum
// interface. This ensures that EndpointPeer_PeerState can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointPeer_PeerState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointPeer_PeerState.
func (E_EndpointPeer_PeerState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EndpointPeer_PeerState.
func (e E_EndpointPeer_PeerState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointPeer_PeerState")
}

const (
	// EndpointPeer_PeerState_UNSET corresponds to the value UNSET of EndpointPeer_PeerState
	EndpointPeer_PeerState_UNSET E_EndpointPeer_PeerState = 0
	// EndpointPeer_PeerState_UP corresponds to the value UP of EndpointPeer_PeerState
	EndpointPeer_PeerState_UP E_EndpointPeer_PeerState = 1
	// EndpointPeer_PeerState_DOWN corresponds to the value DOWN of EndpointPeer_PeerState
	EndpointPeer_PeerState_DOWN E_EndpointPeer_PeerState = 2
)

// E_EndpointVni_MultidestinationTraffic is a derived int64 type which is used to represent
// the enumerated node EndpointVni_MultidestinationTraffic. An additional value named
// EndpointVni_MultidestinationTraffic_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointVni_MultidestinationTraffic int64

// IsYANGGoEnum ensures that EndpointVni_MultidestinationTraffic implements the yang.GoEnum
// interface. This ensures that EndpointVni_MultidestinationTraffic can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointVni_MultidestinationTraffic) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointVni_MultidestinationTraffic.
func (E_EndpointVni_MultidestinationTraffic) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_EndpointVni_MultidestinationTraffic.
func (e E_EndpointVni_MultidestinationTraffic) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointVni_MultidestinationTraffic")
}

const (
	// EndpointVni_MultidestinationTraffic_UNSET corresponds to the value UNSET of EndpointVni_MultidestinationTraffic
	EndpointVni_MultidestinationTraffic_UNSET E_EndpointVni_MultidestinationTraffic = 0
	// EndpointVni_MultidestinationTraffic_STATIC_INGRESS_REPLICATION corresponds to the value STATIC_INGRESS_REPLICATION of EndpointVni_MultidestinationTraffic
	EndpointVni_MultidestinationTraffic_STATIC_INGRESS_REPLICATION E_EndpointVni_MultidestinationTraffic = 1
	// EndpointVni_MultidestinationTraffic_BGP_INGRESS_REPLICATION corresponds to the value BGP_INGRESS_REPLICATION of EndpointVni_MultidestinationTraffic
	EndpointVni_MultidestinationTraffic_BGP_INGRESS_REPLICATION E_EndpointVni_MultidestinationTraffic = 2
)

// E_EndpointVni_SviState is a derived int64 type which is used to represent
// the enumerated node EndpointVni_SviState. An additional value named
// EndpointVni_SviState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointVni_SviState int64

// IsYANGGoEnum ensures that EndpointVni_SviState implements the yang.GoEnum
// interface. This ensures that EndpointVni_SviState can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointVni_SviState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointVni_SviState.
func (E_EndpointVni_SviState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EndpointVni_SviState.
func (e E_EndpointVni_SviState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointVni_SviState")
}

const (
	// EndpointVni_SviState_UNSET corresponds to the value UNSET of EndpointVni_SviState
	EndpointVni_SviState_UNSET E_EndpointVni_SviState = 0
	// EndpointVni_SviState_UP corresponds to the value UP of EndpointVni_SviState
	EndpointVni_SviState_UP E_EndpointVni_SviState = 1
	// EndpointVni_SviState_DOWN corresponds to the value DOWN of EndpointVni_SviState
	EndpointVni_SviState_DOWN E_EndpointVni_SviState = 2
)

// E_EndpointVni_VniState is a derived int64 type which is used to represent
// the enumerated node EndpointVni_VniState. An additional value named
// EndpointVni_VniState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointVni_VniState int64

// IsYANGGoEnum ensures that EndpointVni_VniState implements the yang.GoEnum
// interface. This ensures that EndpointVni_VniState can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointVni_VniState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointVni_VniState.
func (E_EndpointVni_VniState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EndpointVni_VniState.
func (e E_EndpointVni_VniState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointVni_VniState")
}

const (
	// EndpointVni_VniState_UNSET corresponds to the value UNSET of EndpointVni_VniState
	EndpointVni_VniState_UNSET E_EndpointVni_VniState = 0
	// EndpointVni_VniState_UP corresponds to the value UP of EndpointVni_VniState
	EndpointVni_VniState_UP E_EndpointVni_VniState = 1
	// EndpointVni_VniState_DOWN corresponds to the value DOWN of EndpointVni_VniState
	EndpointVni_VniState_DOWN E_EndpointVni_VniState = 2
)

// E_EndpointVni_VniType is a derived int64 type which is used to represent
// the enumerated node EndpointVni_VniType. An additional value named
// EndpointVni_VniType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EndpointVni_VniType int64

// IsYANGGoEnum ensures that EndpointVni_VniType implements the yang.GoEnum
// interface. This ensures that EndpointVni_VniType can be identified as a
// mapped type for a YANG enumeration.
func (E_EndpointVni_VniType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EndpointVni_VniType.
func (E_EndpointVni_VniType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EndpointVni_VniType.
func (e E_EndpointVni_VniType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EndpointVni_VniType")
}

const (
	// EndpointVni_VniType_UNSET corresponds to the value UNSET of EndpointVni_VniType
	EndpointVni_VniType_UNSET E_EndpointVni_VniType = 0
	// EndpointVni_VniType_L2 corresponds to the value L2 of EndpointVni_VniType
	EndpointVni_VniType_L2 E_EndpointVni_VniType = 1
	// EndpointVni_VniType_L3 corresponds to the value L3 of EndpointVni_VniType
	EndpointVni_VniType_L3 E_EndpointVni_VniType = 2
)

// E_Entry_EntryType is a derived int64 type which is used to represent
// the enumerated node Entry_EntryType. An additional value named
// Entry_EntryType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Entry_EntryType int64

// IsYANGGoEnum ensures that Entry_EntryType implements the yang.GoEnum
// interface. This ensures that Entry_EntryType can be identified as a
// mapped type for a YANG enumeration.
func (E_Entry_EntryType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Entry_EntryType.
func (E_Entry_EntryType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Entry_EntryType.
func (e E_Entry_EntryType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Entry_EntryType")
}

const (
	// Entry_EntryType_UNSET corresponds to the value UNSET of Entry_EntryType
	Entry_EntryType_UNSET E_Entry_EntryType = 0
	// Entry_EntryType_STATIC corresponds to the value STATIC of Entry_EntryType
	Entry_EntryType_STATIC E_Entry_EntryType = 1
	// Entry_EntryType_DYNAMIC corresponds to the value DYNAMIC of Entry_EntryType
	Entry_EntryType_DYNAMIC E_Entry_EntryType = 2
)

// E_Ethernet_ClientAls is a derived int64 type which is used to represent
// the enumerated node Ethernet_ClientAls. An additional value named
// Ethernet_ClientAls_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ethernet_ClientAls int64

// IsYANGGoEnum ensures that Ethernet_ClientAls implements the yang.GoEnum
// interface. This ensures that Ethernet_ClientAls can be identified as a
// mapped type for a YANG enumeration.
func (E_Ethernet_ClientAls) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ethernet_ClientAls.
func (E_Ethernet_ClientAls) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ethernet_ClientAls.
func (e E_Ethernet_ClientAls) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ethernet_ClientAls")
}

const (
	// Ethernet_ClientAls_UNSET corresponds to the value UNSET of Ethernet_ClientAls
	Ethernet_ClientAls_UNSET E_Ethernet_ClientAls = 0
	// Ethernet_ClientAls_NONE corresponds to the value NONE of Ethernet_ClientAls
	Ethernet_ClientAls_NONE E_Ethernet_ClientAls = 1
	// Ethernet_ClientAls_LASER_SHUTDOWN corresponds to the value LASER_SHUTDOWN of Ethernet_ClientAls
	Ethernet_ClientAls_LASER_SHUTDOWN E_Ethernet_ClientAls = 2
	// Ethernet_ClientAls_ETHERNET corresponds to the value ETHERNET of Ethernet_ClientAls
	Ethernet_ClientAls_ETHERNET E_Ethernet_ClientAls = 3
)

// E_Ethernet_DuplexMode is a derived int64 type which is used to represent
// the enumerated node Ethernet_DuplexMode. An additional value named
// Ethernet_DuplexMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ethernet_DuplexMode int64

// IsYANGGoEnum ensures that Ethernet_DuplexMode implements the yang.GoEnum
// interface. This ensures that Ethernet_DuplexMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Ethernet_DuplexMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ethernet_DuplexMode.
func (E_Ethernet_DuplexMode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ethernet_DuplexMode.
func (e E_Ethernet_DuplexMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ethernet_DuplexMode")
}

const (
	// Ethernet_DuplexMode_UNSET corresponds to the value UNSET of Ethernet_DuplexMode
	Ethernet_DuplexMode_UNSET E_Ethernet_DuplexMode = 0
	// Ethernet_DuplexMode_FULL corresponds to the value FULL of Ethernet_DuplexMode
	Ethernet_DuplexMode_FULL E_Ethernet_DuplexMode = 1
	// Ethernet_DuplexMode_HALF corresponds to the value HALF of Ethernet_DuplexMode
	Ethernet_DuplexMode_HALF E_Ethernet_DuplexMode = 2
)

// E_Ethernet_NegotiatedDuplexMode is a derived int64 type which is used to represent
// the enumerated node Ethernet_NegotiatedDuplexMode. An additional value named
// Ethernet_NegotiatedDuplexMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ethernet_NegotiatedDuplexMode int64

// IsYANGGoEnum ensures that Ethernet_NegotiatedDuplexMode implements the yang.GoEnum
// interface. This ensures that Ethernet_NegotiatedDuplexMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Ethernet_NegotiatedDuplexMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ethernet_NegotiatedDuplexMode.
func (E_Ethernet_NegotiatedDuplexMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Ethernet_NegotiatedDuplexMode.
func (e E_Ethernet_NegotiatedDuplexMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ethernet_NegotiatedDuplexMode")
}

const (
	// Ethernet_NegotiatedDuplexMode_UNSET corresponds to the value UNSET of Ethernet_NegotiatedDuplexMode
	Ethernet_NegotiatedDuplexMode_UNSET E_Ethernet_NegotiatedDuplexMode = 0
	// Ethernet_NegotiatedDuplexMode_FULL corresponds to the value FULL of Ethernet_NegotiatedDuplexMode
	Ethernet_NegotiatedDuplexMode_FULL E_Ethernet_NegotiatedDuplexMode = 1
	// Ethernet_NegotiatedDuplexMode_HALF corresponds to the value HALF of Ethernet_NegotiatedDuplexMode
	Ethernet_NegotiatedDuplexMode_HALF E_Ethernet_NegotiatedDuplexMode = 2
)

// E_Event_Record is a derived int64 type which is used to represent
// the enumerated node Event_Record. An additional value named
// Event_Record_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Event_Record int64

// IsYANGGoEnum ensures that Event_Record implements the yang.GoEnum
// interface. This ensures that Event_Record can be identified as a
// mapped type for a YANG enumeration.
func (E_Event_Record) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Event_Record.
func (E_Event_Record) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Event_Record.
func (e E_Event_Record) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Event_Record")
}

const (
	// Event_Record_UNSET corresponds to the value UNSET of Event_Record
	Event_Record_UNSET E_Event_Record = 0
	// Event_Record_START_STOP corresponds to the value START_STOP of Event_Record
	Event_Record_START_STOP E_Event_Record = 1
	// Event_Record_STOP corresponds to the value STOP of Event_Record
	Event_Record_STOP E_Event_Record = 2
)

// E_EvpnInstance_ReplicationMode is a derived int64 type which is used to represent
// the enumerated node EvpnInstance_ReplicationMode. An additional value named
// EvpnInstance_ReplicationMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EvpnInstance_ReplicationMode int64

// IsYANGGoEnum ensures that EvpnInstance_ReplicationMode implements the yang.GoEnum
// interface. This ensures that EvpnInstance_ReplicationMode can be identified as a
// mapped type for a YANG enumeration.
func (E_EvpnInstance_ReplicationMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EvpnInstance_ReplicationMode.
func (E_EvpnInstance_ReplicationMode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EvpnInstance_ReplicationMode.
func (e E_EvpnInstance_ReplicationMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EvpnInstance_ReplicationMode")
}

const (
	// EvpnInstance_ReplicationMode_UNSET corresponds to the value UNSET of EvpnInstance_ReplicationMode
	EvpnInstance_ReplicationMode_UNSET E_EvpnInstance_ReplicationMode = 0
	// EvpnInstance_ReplicationMode_STATIC_INGRESS_REPLICATION corresponds to the value STATIC_INGRESS_REPLICATION of EvpnInstance_ReplicationMode
	EvpnInstance_ReplicationMode_STATIC_INGRESS_REPLICATION E_EvpnInstance_ReplicationMode = 1
	// EvpnInstance_ReplicationMode_BGP corresponds to the value BGP of EvpnInstance_ReplicationMode
	EvpnInstance_ReplicationMode_BGP E_EvpnInstance_ReplicationMode = 2
	// EvpnInstance_ReplicationMode_MULTICAST corresponds to the value MULTICAST of EvpnInstance_ReplicationMode
	EvpnInstance_ReplicationMode_MULTICAST E_EvpnInstance_ReplicationMode = 3
)

// E_EvpnInstance_RouteDistinguisher is a derived int64 type which is used to represent
// the enumerated node EvpnInstance_RouteDistinguisher. An additional value named
// EvpnInstance_RouteDistinguisher_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EvpnInstance_RouteDistinguisher int64

// IsYANGGoEnum ensures that EvpnInstance_RouteDistinguisher implements the yang.GoEnum
// interface. This ensures that EvpnInstance_RouteDistinguisher can be identified as a
// mapped type for a YANG enumeration.
func (E_EvpnInstance_RouteDistinguisher) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EvpnInstance_RouteDistinguisher.
func (E_EvpnInstance_RouteDistinguisher) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_EvpnInstance_RouteDistinguisher.
func (e E_EvpnInstance_RouteDistinguisher) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EvpnInstance_RouteDistinguisher")
}

const (
	// EvpnInstance_RouteDistinguisher_UNSET corresponds to the value UNSET of EvpnInstance_RouteDistinguisher
	EvpnInstance_RouteDistinguisher_UNSET E_EvpnInstance_RouteDistinguisher = 0
	// EvpnInstance_RouteDistinguisher_AUTO corresponds to the value AUTO of EvpnInstance_RouteDistinguisher
	EvpnInstance_RouteDistinguisher_AUTO E_EvpnInstance_RouteDistinguisher = 1
)

// E_EvpnTypes_EVPN_TYPE is a derived int64 type which is used to represent
// the enumerated node EvpnTypes_EVPN_TYPE. An additional value named
// EvpnTypes_EVPN_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_EvpnTypes_EVPN_TYPE int64

// IsYANGGoEnum ensures that EvpnTypes_EVPN_TYPE implements the yang.GoEnum
// interface. This ensures that EvpnTypes_EVPN_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_EvpnTypes_EVPN_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  EvpnTypes_EVPN_TYPE.
func (E_EvpnTypes_EVPN_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_EvpnTypes_EVPN_TYPE.
func (e E_EvpnTypes_EVPN_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_EvpnTypes_EVPN_TYPE")
}

const (
	// EvpnTypes_EVPN_TYPE_UNSET corresponds to the value UNSET of EvpnTypes_EVPN_TYPE
	EvpnTypes_EVPN_TYPE_UNSET E_EvpnTypes_EVPN_TYPE = 0
	// EvpnTypes_EVPN_TYPE_VLAN_AWARE corresponds to the value VLAN_AWARE of EvpnTypes_EVPN_TYPE
	EvpnTypes_EVPN_TYPE_VLAN_AWARE E_EvpnTypes_EVPN_TYPE = 1
	// EvpnTypes_EVPN_TYPE_VLAN_BASED corresponds to the value VLAN_BASED of EvpnTypes_EVPN_TYPE
	EvpnTypes_EVPN_TYPE_VLAN_BASED E_EvpnTypes_EVPN_TYPE = 2
	// EvpnTypes_EVPN_TYPE_VLAN_BUNDLE corresponds to the value VLAN_BUNDLE of EvpnTypes_EVPN_TYPE
	EvpnTypes_EVPN_TYPE_VLAN_BUNDLE E_EvpnTypes_EVPN_TYPE = 3
)

// E_Evpn_LearningMode is a derived int64 type which is used to represent
// the enumerated node Evpn_LearningMode. An additional value named
// Evpn_LearningMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Evpn_LearningMode int64

// IsYANGGoEnum ensures that Evpn_LearningMode implements the yang.GoEnum
// interface. This ensures that Evpn_LearningMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Evpn_LearningMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Evpn_LearningMode.
func (E_Evpn_LearningMode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Evpn_LearningMode.
func (e E_Evpn_LearningMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Evpn_LearningMode")
}

const (
	// Evpn_LearningMode_UNSET corresponds to the value UNSET of Evpn_LearningMode
	Evpn_LearningMode_UNSET E_Evpn_LearningMode = 0
	// Evpn_LearningMode_CONTROL_PLANE corresponds to the value CONTROL_PLANE of Evpn_LearningMode
	Evpn_LearningMode_CONTROL_PLANE E_Evpn_LearningMode = 1
	// Evpn_LearningMode_DATA_PLANE corresponds to the value DATA_PLANE of Evpn_LearningMode
	Evpn_LearningMode_DATA_PLANE E_Evpn_LearningMode = 2
)

// E_ExplicitRouteObject_Label is a derived int64 type which is used to represent
// the enumerated node ExplicitRouteObject_Label. An additional value named
// ExplicitRouteObject_Label_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ExplicitRouteObject_Label int64

// IsYANGGoEnum ensures that ExplicitRouteObject_Label implements the yang.GoEnum
// interface. This ensures that ExplicitRouteObject_Label can be identified as a
// mapped type for a YANG enumeration.
func (E_ExplicitRouteObject_Label) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ExplicitRouteObject_Label.
func (E_ExplicitRouteObject_Label) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_ExplicitRouteObject_Label.
func (e E_ExplicitRouteObject_Label) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ExplicitRouteObject_Label")
}

const (
	// ExplicitRouteObject_Label_UNSET corresponds to the value UNSET of ExplicitRouteObject_Label
	ExplicitRouteObject_Label_UNSET E_ExplicitRouteObject_Label = 0
	// ExplicitRouteObject_Label_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of ExplicitRouteObject_Label
	ExplicitRouteObject_Label_IPV4_EXPLICIT_NULL E_ExplicitRouteObject_Label = 1
	// ExplicitRouteObject_Label_ROUTER_ALERT corresponds to the value ROUTER_ALERT of ExplicitRouteObject_Label
	ExplicitRouteObject_Label_ROUTER_ALERT E_ExplicitRouteObject_Label = 2
	// ExplicitRouteObject_Label_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of ExplicitRouteObject_Label
	ExplicitRouteObject_Label_IPV6_EXPLICIT_NULL E_ExplicitRouteObject_Label = 3
	// ExplicitRouteObject_Label_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of ExplicitRouteObject_Label
	ExplicitRouteObject_Label_IMPLICIT_NULL E_ExplicitRouteObject_Label = 4
	// ExplicitRouteObject_Label_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of ExplicitRouteObject_Label
	ExplicitRouteObject_Label_ENTROPY_LABEL_INDICATOR E_ExplicitRouteObject_Label = 8
	// ExplicitRouteObject_Label_NO_LABEL corresponds to the value NO_LABEL of ExplicitRouteObject_Label
	ExplicitRouteObject_Label_NO_LABEL E_ExplicitRouteObject_Label = 9
)

// E_ExplicitRouteObject_Type is a derived int64 type which is used to represent
// the enumerated node ExplicitRouteObject_Type. An additional value named
// ExplicitRouteObject_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ExplicitRouteObject_Type int64

// IsYANGGoEnum ensures that ExplicitRouteObject_Type implements the yang.GoEnum
// interface. This ensures that ExplicitRouteObject_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_ExplicitRouteObject_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ExplicitRouteObject_Type.
func (E_ExplicitRouteObject_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_ExplicitRouteObject_Type.
func (e E_ExplicitRouteObject_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ExplicitRouteObject_Type")
}

const (
	// ExplicitRouteObject_Type_UNSET corresponds to the value UNSET of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_UNSET E_ExplicitRouteObject_Type = 0
	// ExplicitRouteObject_Type_IPV4 corresponds to the value IPV4 of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_IPV4 E_ExplicitRouteObject_Type = 1
	// ExplicitRouteObject_Type_IPV6 corresponds to the value IPV6 of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_IPV6 E_ExplicitRouteObject_Type = 2
	// ExplicitRouteObject_Type_ASN corresponds to the value ASN of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_ASN E_ExplicitRouteObject_Type = 3
	// ExplicitRouteObject_Type_ASN4 corresponds to the value ASN4 of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_ASN4 E_ExplicitRouteObject_Type = 4
	// ExplicitRouteObject_Type_LABEL corresponds to the value LABEL of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_LABEL E_ExplicitRouteObject_Type = 5
	// ExplicitRouteObject_Type_UNNUMBERED_INTERFACE corresponds to the value UNNUMBERED_INTERFACE of ExplicitRouteObject_Type
	ExplicitRouteObject_Type_UNNUMBERED_INTERFACE E_ExplicitRouteObject_Type = 6
)

// E_ExtendedPrefix_AddressFamily is a derived int64 type which is used to represent
// the enumerated node ExtendedPrefix_AddressFamily. An additional value named
// ExtendedPrefix_AddressFamily_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ExtendedPrefix_AddressFamily int64

// IsYANGGoEnum ensures that ExtendedPrefix_AddressFamily implements the yang.GoEnum
// interface. This ensures that ExtendedPrefix_AddressFamily can be identified as a
// mapped type for a YANG enumeration.
func (E_ExtendedPrefix_AddressFamily) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ExtendedPrefix_AddressFamily.
func (E_ExtendedPrefix_AddressFamily) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_ExtendedPrefix_AddressFamily.
func (e E_ExtendedPrefix_AddressFamily) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ExtendedPrefix_AddressFamily")
}

const (
	// ExtendedPrefix_AddressFamily_UNSET corresponds to the value UNSET of ExtendedPrefix_AddressFamily
	ExtendedPrefix_AddressFamily_UNSET E_ExtendedPrefix_AddressFamily = 0
	// ExtendedPrefix_AddressFamily_IPV4_UNICAST corresponds to the value IPV4_UNICAST of ExtendedPrefix_AddressFamily
	ExtendedPrefix_AddressFamily_IPV4_UNICAST E_ExtendedPrefix_AddressFamily = 1
)

// E_ExtendedPrefix_RouteType is a derived int64 type which is used to represent
// the enumerated node ExtendedPrefix_RouteType. An additional value named
// ExtendedPrefix_RouteType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ExtendedPrefix_RouteType int64

// IsYANGGoEnum ensures that ExtendedPrefix_RouteType implements the yang.GoEnum
// interface. This ensures that ExtendedPrefix_RouteType can be identified as a
// mapped type for a YANG enumeration.
func (E_ExtendedPrefix_RouteType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ExtendedPrefix_RouteType.
func (E_ExtendedPrefix_RouteType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_ExtendedPrefix_RouteType.
func (e E_ExtendedPrefix_RouteType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ExtendedPrefix_RouteType")
}

const (
	// ExtendedPrefix_RouteType_UNSET corresponds to the value UNSET of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_UNSET E_ExtendedPrefix_RouteType = 0
	// ExtendedPrefix_RouteType_UNSPECIFIED corresponds to the value UNSPECIFIED of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_UNSPECIFIED E_ExtendedPrefix_RouteType = 1
	// ExtendedPrefix_RouteType_INTRA_AREA corresponds to the value INTRA_AREA of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_INTRA_AREA E_ExtendedPrefix_RouteType = 2
	// ExtendedPrefix_RouteType_INTER_AREA corresponds to the value INTER_AREA of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_INTER_AREA E_ExtendedPrefix_RouteType = 4
	// ExtendedPrefix_RouteType_AS_EXTERNAL corresponds to the value AS_EXTERNAL of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_AS_EXTERNAL E_ExtendedPrefix_RouteType = 6
	// ExtendedPrefix_RouteType_NSSA_EXTERNAL corresponds to the value NSSA_EXTERNAL of ExtendedPrefix_RouteType
	ExtendedPrefix_RouteType_NSSA_EXTERNAL E_ExtendedPrefix_RouteType = 8
)

// E_FabricBlockError_Action is a derived int64 type which is used to represent
// the enumerated node FabricBlockError_Action. An additional value named
// FabricBlockError_Action_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_FabricBlockError_Action int64

// IsYANGGoEnum ensures that FabricBlockError_Action implements the yang.GoEnum
// interface. This ensures that FabricBlockError_Action can be identified as a
// mapped type for a YANG enumeration.
func (E_FabricBlockError_Action) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  FabricBlockError_Action.
func (E_FabricBlockError_Action) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_FabricBlockError_Action.
func (e E_FabricBlockError_Action) String() string {
	return ygot.EnumLogString(e, int64(e), "E_FabricBlockError_Action")
}

const (
	// FabricBlockError_Action_UNSET corresponds to the value UNSET of FabricBlockError_Action
	FabricBlockError_Action_UNSET E_FabricBlockError_Action = 0
	// FabricBlockError_Action_LOG corresponds to the value LOG of FabricBlockError_Action
	FabricBlockError_Action_LOG E_FabricBlockError_Action = 1
	// FabricBlockError_Action_LINECARD_REBOOT corresponds to the value LINECARD_REBOOT of FabricBlockError_Action
	FabricBlockError_Action_LINECARD_REBOOT E_FabricBlockError_Action = 2
	// FabricBlockError_Action_LINECARD_OFFLINE corresponds to the value LINECARD_OFFLINE of FabricBlockError_Action
	FabricBlockError_Action_LINECARD_OFFLINE E_FabricBlockError_Action = 3
	// FabricBlockError_Action_NPU_RESET corresponds to the value NPU_RESET of FabricBlockError_Action
	FabricBlockError_Action_NPU_RESET E_FabricBlockError_Action = 4
	// FabricBlockError_Action_NPU_OFFLINE corresponds to the value NPU_OFFLINE of FabricBlockError_Action
	FabricBlockError_Action_NPU_OFFLINE E_FabricBlockError_Action = 5
	// FabricBlockError_Action_GET_DIAGNOSTIC_INFO corresponds to the value GET_DIAGNOSTIC_INFO of FabricBlockError_Action
	FabricBlockError_Action_GET_DIAGNOSTIC_INFO E_FabricBlockError_Action = 6
	// FabricBlockError_Action_ALARM corresponds to the value ALARM of FabricBlockError_Action
	FabricBlockError_Action_ALARM E_FabricBlockError_Action = 7
)

// E_FabricBlockError_Level is a derived int64 type which is used to represent
// the enumerated node FabricBlockError_Level. An additional value named
// FabricBlockError_Level_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_FabricBlockError_Level int64

// IsYANGGoEnum ensures that FabricBlockError_Level implements the yang.GoEnum
// interface. This ensures that FabricBlockError_Level can be identified as a
// mapped type for a YANG enumeration.
func (E_FabricBlockError_Level) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  FabricBlockError_Level.
func (E_FabricBlockError_Level) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_FabricBlockError_Level.
func (e E_FabricBlockError_Level) String() string {
	return ygot.EnumLogString(e, int64(e), "E_FabricBlockError_Level")
}

const (
	// FabricBlockError_Level_UNSET corresponds to the value UNSET of FabricBlockError_Level
	FabricBlockError_Level_UNSET E_FabricBlockError_Level = 0
	// FabricBlockError_Level_FATAL corresponds to the value FATAL of FabricBlockError_Level
	FabricBlockError_Level_FATAL E_FabricBlockError_Level = 1
	// FabricBlockError_Level_MAJOR corresponds to the value MAJOR of FabricBlockError_Level
	FabricBlockError_Level_MAJOR E_FabricBlockError_Level = 2
	// FabricBlockError_Level_MINOR corresponds to the value MINOR of FabricBlockError_Level
	FabricBlockError_Level_MINOR E_FabricBlockError_Level = 3
	// FabricBlockError_Level_INFORMATIONAL corresponds to the value INFORMATIONAL of FabricBlockError_Level
	FabricBlockError_Level_INFORMATIONAL E_FabricBlockError_Level = 4
)

// E_Flags_Flags is a derived int64 type which is used to represent
// the enumerated node Flags_Flags. An additional value named
// Flags_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Flags_Flags int64

// IsYANGGoEnum ensures that Flags_Flags implements the yang.GoEnum
// interface. This ensures that Flags_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Flags_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Flags_Flags.
func (E_Flags_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Flags_Flags.
func (e E_Flags_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Flags_Flags")
}

const (
	// Flags_Flags_UNSET corresponds to the value UNSET of Flags_Flags
	Flags_Flags_UNSET E_Flags_Flags = 0
	// Flags_Flags_EXTERNAL_FLAG corresponds to the value EXTERNAL_FLAG of Flags_Flags
	Flags_Flags_EXTERNAL_FLAG E_Flags_Flags = 1
	// Flags_Flags_READVERTISEMENT_FLAG corresponds to the value READVERTISEMENT_FLAG of Flags_Flags
	Flags_Flags_READVERTISEMENT_FLAG E_Flags_Flags = 2
	// Flags_Flags_NODE_FLAG corresponds to the value NODE_FLAG of Flags_Flags
	Flags_Flags_NODE_FLAG E_Flags_Flags = 3
)

// E_FlexAlgoPrefixSid_SidId is a derived int64 type which is used to represent
// the enumerated node FlexAlgoPrefixSid_SidId. An additional value named
// FlexAlgoPrefixSid_SidId_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_FlexAlgoPrefixSid_SidId int64

// IsYANGGoEnum ensures that FlexAlgoPrefixSid_SidId implements the yang.GoEnum
// interface. This ensures that FlexAlgoPrefixSid_SidId can be identified as a
// mapped type for a YANG enumeration.
func (E_FlexAlgoPrefixSid_SidId) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  FlexAlgoPrefixSid_SidId.
func (E_FlexAlgoPrefixSid_SidId) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_FlexAlgoPrefixSid_SidId.
func (e E_FlexAlgoPrefixSid_SidId) String() string {
	return ygot.EnumLogString(e, int64(e), "E_FlexAlgoPrefixSid_SidId")
}

const (
	// FlexAlgoPrefixSid_SidId_UNSET corresponds to the value UNSET of FlexAlgoPrefixSid_SidId
	FlexAlgoPrefixSid_SidId_UNSET E_FlexAlgoPrefixSid_SidId = 0
	// FlexAlgoPrefixSid_SidId_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of FlexAlgoPrefixSid_SidId
	FlexAlgoPrefixSid_SidId_IPV4_EXPLICIT_NULL E_FlexAlgoPrefixSid_SidId = 1
	// FlexAlgoPrefixSid_SidId_ROUTER_ALERT corresponds to the value ROUTER_ALERT of FlexAlgoPrefixSid_SidId
	FlexAlgoPrefixSid_SidId_ROUTER_ALERT E_FlexAlgoPrefixSid_SidId = 2
	// FlexAlgoPrefixSid_SidId_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of FlexAlgoPrefixSid_SidId
	FlexAlgoPrefixSid_SidId_IPV6_EXPLICIT_NULL E_FlexAlgoPrefixSid_SidId = 3
	// FlexAlgoPrefixSid_SidId_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of FlexAlgoPrefixSid_SidId
	FlexAlgoPrefixSid_SidId_IMPLICIT_NULL E_FlexAlgoPrefixSid_SidId = 4
	// FlexAlgoPrefixSid_SidId_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of FlexAlgoPrefixSid_SidId
	FlexAlgoPrefixSid_SidId_ENTROPY_LABEL_INDICATOR E_FlexAlgoPrefixSid_SidId = 8
	// FlexAlgoPrefixSid_SidId_NO_LABEL corresponds to the value NO_LABEL of FlexAlgoPrefixSid_SidId
	FlexAlgoPrefixSid_SidId_NO_LABEL E_FlexAlgoPrefixSid_SidId = 9
)

// E_Flow_MplsLabel is a derived int64 type which is used to represent
// the enumerated node Flow_MplsLabel. An additional value named
// Flow_MplsLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Flow_MplsLabel int64

// IsYANGGoEnum ensures that Flow_MplsLabel implements the yang.GoEnum
// interface. This ensures that Flow_MplsLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_Flow_MplsLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Flow_MplsLabel.
func (E_Flow_MplsLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Flow_MplsLabel.
func (e E_Flow_MplsLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Flow_MplsLabel")
}

const (
	// Flow_MplsLabel_UNSET corresponds to the value UNSET of Flow_MplsLabel
	Flow_MplsLabel_UNSET E_Flow_MplsLabel = 0
	// Flow_MplsLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Flow_MplsLabel
	Flow_MplsLabel_IPV4_EXPLICIT_NULL E_Flow_MplsLabel = 1
	// Flow_MplsLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Flow_MplsLabel
	Flow_MplsLabel_ROUTER_ALERT E_Flow_MplsLabel = 2
	// Flow_MplsLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Flow_MplsLabel
	Flow_MplsLabel_IPV6_EXPLICIT_NULL E_Flow_MplsLabel = 3
	// Flow_MplsLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Flow_MplsLabel
	Flow_MplsLabel_IMPLICIT_NULL E_Flow_MplsLabel = 4
	// Flow_MplsLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Flow_MplsLabel
	Flow_MplsLabel_ENTROPY_LABEL_INDICATOR E_Flow_MplsLabel = 8
	// Flow_MplsLabel_NO_LABEL corresponds to the value NO_LABEL of Flow_MplsLabel
	Flow_MplsLabel_NO_LABEL E_Flow_MplsLabel = 9
)

// E_Global_SummaryRouteCostMode is a derived int64 type which is used to represent
// the enumerated node Global_SummaryRouteCostMode. An additional value named
// Global_SummaryRouteCostMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Global_SummaryRouteCostMode int64

// IsYANGGoEnum ensures that Global_SummaryRouteCostMode implements the yang.GoEnum
// interface. This ensures that Global_SummaryRouteCostMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Global_SummaryRouteCostMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Global_SummaryRouteCostMode.
func (E_Global_SummaryRouteCostMode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Global_SummaryRouteCostMode.
func (e E_Global_SummaryRouteCostMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Global_SummaryRouteCostMode")
}

const (
	// Global_SummaryRouteCostMode_UNSET corresponds to the value UNSET of Global_SummaryRouteCostMode
	Global_SummaryRouteCostMode_UNSET E_Global_SummaryRouteCostMode = 0
	// Global_SummaryRouteCostMode_RFC1583_COMPATIBLE corresponds to the value RFC1583_COMPATIBLE of Global_SummaryRouteCostMode
	Global_SummaryRouteCostMode_RFC1583_COMPATIBLE E_Global_SummaryRouteCostMode = 1
	// Global_SummaryRouteCostMode_RFC2328_COMPATIBLE corresponds to the value RFC2328_COMPATIBLE of Global_SummaryRouteCostMode
	Global_SummaryRouteCostMode_RFC2328_COMPATIBLE E_Global_SummaryRouteCostMode = 2
)

// E_GnsiAcctz_CmdService_Enum is a derived int64 type which is used to represent
// the enumerated node GnsiAcctz_CmdService_Enum. An additional value named
// GnsiAcctz_CmdService_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_GnsiAcctz_CmdService_Enum int64

// IsYANGGoEnum ensures that GnsiAcctz_CmdService_Enum implements the yang.GoEnum
// interface. This ensures that GnsiAcctz_CmdService_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_GnsiAcctz_CmdService_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  GnsiAcctz_CmdService_Enum.
func (E_GnsiAcctz_CmdService_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_GnsiAcctz_CmdService_Enum.
func (e E_GnsiAcctz_CmdService_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_GnsiAcctz_CmdService_Enum")
}

const (
	// GnsiAcctz_CmdService_Enum_UNSET corresponds to the value UNSET of GnsiAcctz_CmdService_Enum
	GnsiAcctz_CmdService_Enum_UNSET E_GnsiAcctz_CmdService_Enum = 0
	// GnsiAcctz_CmdService_Enum_UNSPECIFIED corresponds to the value UNSPECIFIED of GnsiAcctz_CmdService_Enum
	GnsiAcctz_CmdService_Enum_UNSPECIFIED E_GnsiAcctz_CmdService_Enum = 1
	// GnsiAcctz_CmdService_Enum_SHELL corresponds to the value SHELL of GnsiAcctz_CmdService_Enum
	GnsiAcctz_CmdService_Enum_SHELL E_GnsiAcctz_CmdService_Enum = 2
	// GnsiAcctz_CmdService_Enum_CLI corresponds to the value CLI of GnsiAcctz_CmdService_Enum
	GnsiAcctz_CmdService_Enum_CLI E_GnsiAcctz_CmdService_Enum = 3
	// GnsiAcctz_CmdService_Enum_WEBUI corresponds to the value WEBUI of GnsiAcctz_CmdService_Enum
	GnsiAcctz_CmdService_Enum_WEBUI E_GnsiAcctz_CmdService_Enum = 4
	// GnsiAcctz_CmdService_Enum_RESTCONF corresponds to the value RESTCONF of GnsiAcctz_CmdService_Enum
	GnsiAcctz_CmdService_Enum_RESTCONF E_GnsiAcctz_CmdService_Enum = 5
	// GnsiAcctz_CmdService_Enum_NETCONF corresponds to the value NETCONF of GnsiAcctz_CmdService_Enum
	GnsiAcctz_CmdService_Enum_NETCONF E_GnsiAcctz_CmdService_Enum = 6
)

// E_GnsiAcctz_GrpcService_Enum is a derived int64 type which is used to represent
// the enumerated node GnsiAcctz_GrpcService_Enum. An additional value named
// GnsiAcctz_GrpcService_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_GnsiAcctz_GrpcService_Enum int64

// IsYANGGoEnum ensures that GnsiAcctz_GrpcService_Enum implements the yang.GoEnum
// interface. This ensures that GnsiAcctz_GrpcService_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_GnsiAcctz_GrpcService_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  GnsiAcctz_GrpcService_Enum.
func (E_GnsiAcctz_GrpcService_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_GnsiAcctz_GrpcService_Enum.
func (e E_GnsiAcctz_GrpcService_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_GnsiAcctz_GrpcService_Enum")
}

const (
	// GnsiAcctz_GrpcService_Enum_UNSET corresponds to the value UNSET of GnsiAcctz_GrpcService_Enum
	GnsiAcctz_GrpcService_Enum_UNSET E_GnsiAcctz_GrpcService_Enum = 0
	// GnsiAcctz_GrpcService_Enum_UNSPECIFIED corresponds to the value UNSPECIFIED of GnsiAcctz_GrpcService_Enum
	GnsiAcctz_GrpcService_Enum_UNSPECIFIED E_GnsiAcctz_GrpcService_Enum = 1
	// GnsiAcctz_GrpcService_Enum_GNMI corresponds to the value GNMI of GnsiAcctz_GrpcService_Enum
	GnsiAcctz_GrpcService_Enum_GNMI E_GnsiAcctz_GrpcService_Enum = 2
	// GnsiAcctz_GrpcService_Enum_GNOI corresponds to the value GNOI of GnsiAcctz_GrpcService_Enum
	GnsiAcctz_GrpcService_Enum_GNOI E_GnsiAcctz_GrpcService_Enum = 3
	// GnsiAcctz_GrpcService_Enum_GNSI corresponds to the value GNSI of GnsiAcctz_GrpcService_Enum
	GnsiAcctz_GrpcService_Enum_GNSI E_GnsiAcctz_GrpcService_Enum = 4
	// GnsiAcctz_GrpcService_Enum_GRIBI corresponds to the value GRIBI of GnsiAcctz_GrpcService_Enum
	GnsiAcctz_GrpcService_Enum_GRIBI E_GnsiAcctz_GrpcService_Enum = 5
	// GnsiAcctz_GrpcService_Enum_P4RT corresponds to the value P4RT of GnsiAcctz_GrpcService_Enum
	GnsiAcctz_GrpcService_Enum_P4RT E_GnsiAcctz_GrpcService_Enum = 6
)

// E_GnsiAcctz_ServiceRequest is a derived int64 type which is used to represent
// the enumerated node GnsiAcctz_ServiceRequest. An additional value named
// GnsiAcctz_ServiceRequest_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_GnsiAcctz_ServiceRequest int64

// IsYANGGoEnum ensures that GnsiAcctz_ServiceRequest implements the yang.GoEnum
// interface. This ensures that GnsiAcctz_ServiceRequest can be identified as a
// mapped type for a YANG enumeration.
func (E_GnsiAcctz_ServiceRequest) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  GnsiAcctz_ServiceRequest.
func (E_GnsiAcctz_ServiceRequest) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_GnsiAcctz_ServiceRequest.
func (e E_GnsiAcctz_ServiceRequest) String() string {
	return ygot.EnumLogString(e, int64(e), "E_GnsiAcctz_ServiceRequest")
}

const (
	// GnsiAcctz_ServiceRequest_UNSET corresponds to the value UNSET of GnsiAcctz_ServiceRequest
	GnsiAcctz_ServiceRequest_UNSET E_GnsiAcctz_ServiceRequest = 0
	// GnsiAcctz_ServiceRequest_CMD_SERVICE corresponds to the value CMD_SERVICE of GnsiAcctz_ServiceRequest
	GnsiAcctz_ServiceRequest_CMD_SERVICE E_GnsiAcctz_ServiceRequest = 5
	// GnsiAcctz_ServiceRequest_GRPC_SERVICE corresponds to the value GRPC_SERVICE of GnsiAcctz_ServiceRequest
	GnsiAcctz_ServiceRequest_GRPC_SERVICE E_GnsiAcctz_ServiceRequest = 6
	// GnsiAcctz_ServiceRequest_SESSION_SERVICE corresponds to the value SESSION_SERVICE of GnsiAcctz_ServiceRequest
	GnsiAcctz_ServiceRequest_SESSION_SERVICE E_GnsiAcctz_ServiceRequest = 7
)

// E_GnsiAcctz_SessionService_Enum is a derived int64 type which is used to represent
// the enumerated node GnsiAcctz_SessionService_Enum. An additional value named
// GnsiAcctz_SessionService_Enum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_GnsiAcctz_SessionService_Enum int64

// IsYANGGoEnum ensures that GnsiAcctz_SessionService_Enum implements the yang.GoEnum
// interface. This ensures that GnsiAcctz_SessionService_Enum can be identified as a
// mapped type for a YANG enumeration.
func (E_GnsiAcctz_SessionService_Enum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  GnsiAcctz_SessionService_Enum.
func (E_GnsiAcctz_SessionService_Enum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_GnsiAcctz_SessionService_Enum.
func (e E_GnsiAcctz_SessionService_Enum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_GnsiAcctz_SessionService_Enum")
}

const (
	// GnsiAcctz_SessionService_Enum_UNSET corresponds to the value UNSET of GnsiAcctz_SessionService_Enum
	GnsiAcctz_SessionService_Enum_UNSET E_GnsiAcctz_SessionService_Enum = 0
	// GnsiAcctz_SessionService_Enum_UNSPECIFIED corresponds to the value UNSPECIFIED of GnsiAcctz_SessionService_Enum
	GnsiAcctz_SessionService_Enum_UNSPECIFIED E_GnsiAcctz_SessionService_Enum = 1
	// GnsiAcctz_SessionService_Enum_LOGIN corresponds to the value LOGIN of GnsiAcctz_SessionService_Enum
	GnsiAcctz_SessionService_Enum_LOGIN E_GnsiAcctz_SessionService_Enum = 2
	// GnsiAcctz_SessionService_Enum_LOGOUT corresponds to the value LOGOUT of GnsiAcctz_SessionService_Enum
	GnsiAcctz_SessionService_Enum_LOGOUT E_GnsiAcctz_SessionService_Enum = 3
)

// E_GracefulRestart_Mode is a derived int64 type which is used to represent
// the enumerated node GracefulRestart_Mode. An additional value named
// GracefulRestart_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_GracefulRestart_Mode int64

// IsYANGGoEnum ensures that GracefulRestart_Mode implements the yang.GoEnum
// interface. This ensures that GracefulRestart_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_GracefulRestart_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  GracefulRestart_Mode.
func (E_GracefulRestart_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_GracefulRestart_Mode.
func (e E_GracefulRestart_Mode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_GracefulRestart_Mode")
}

const (
	// GracefulRestart_Mode_UNSET corresponds to the value UNSET of GracefulRestart_Mode
	GracefulRestart_Mode_UNSET E_GracefulRestart_Mode = 0
	// GracefulRestart_Mode_HELPER_ONLY corresponds to the value HELPER_ONLY of GracefulRestart_Mode
	GracefulRestart_Mode_HELPER_ONLY E_GracefulRestart_Mode = 1
	// GracefulRestart_Mode_BILATERAL corresponds to the value BILATERAL of GracefulRestart_Mode
	GracefulRestart_Mode_BILATERAL E_GracefulRestart_Mode = 2
	// GracefulRestart_Mode_REMOTE_HELPER corresponds to the value REMOTE_HELPER of GracefulRestart_Mode
	GracefulRestart_Mode_REMOTE_HELPER E_GracefulRestart_Mode = 3
)

// E_GrpcServer_ListenAddresses is a derived int64 type which is used to represent
// the enumerated node GrpcServer_ListenAddresses. An additional value named
// GrpcServer_ListenAddresses_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_GrpcServer_ListenAddresses int64

// IsYANGGoEnum ensures that GrpcServer_ListenAddresses implements the yang.GoEnum
// interface. This ensures that GrpcServer_ListenAddresses can be identified as a
// mapped type for a YANG enumeration.
func (E_GrpcServer_ListenAddresses) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  GrpcServer_ListenAddresses.
func (E_GrpcServer_ListenAddresses) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_GrpcServer_ListenAddresses.
func (e E_GrpcServer_ListenAddresses) String() string {
	return ygot.EnumLogString(e, int64(e), "E_GrpcServer_ListenAddresses")
}

const (
	// GrpcServer_ListenAddresses_UNSET corresponds to the value UNSET of GrpcServer_ListenAddresses
	GrpcServer_ListenAddresses_UNSET E_GrpcServer_ListenAddresses = 0
	// GrpcServer_ListenAddresses_ANY corresponds to the value ANY of GrpcServer_ListenAddresses
	GrpcServer_ListenAddresses_ANY E_GrpcServer_ListenAddresses = 1
)

// E_IETFInterfaces_InterfaceType is a derived int64 type which is used to represent
// the enumerated node IETFInterfaces_InterfaceType. An additional value named
// IETFInterfaces_InterfaceType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IETFInterfaces_InterfaceType int64

// IsYANGGoEnum ensures that IETFInterfaces_InterfaceType implements the yang.GoEnum
// interface. This ensures that IETFInterfaces_InterfaceType can be identified as a
// mapped type for a YANG enumeration.
func (E_IETFInterfaces_InterfaceType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IETFInterfaces_InterfaceType.
func (E_IETFInterfaces_InterfaceType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IETFInterfaces_InterfaceType.
func (e E_IETFInterfaces_InterfaceType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IETFInterfaces_InterfaceType")
}

const (
	// IETFInterfaces_InterfaceType_UNSET corresponds to the value UNSET of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_UNSET E_IETFInterfaces_InterfaceType = 0
	// IETFInterfaces_InterfaceType_a12MppSwitch corresponds to the value a12MppSwitch of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_a12MppSwitch E_IETFInterfaces_InterfaceType = 1
	// IETFInterfaces_InterfaceType_aal2 corresponds to the value aal2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aal2 E_IETFInterfaces_InterfaceType = 2
	// IETFInterfaces_InterfaceType_aal5 corresponds to the value aal5 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aal5 E_IETFInterfaces_InterfaceType = 3
	// IETFInterfaces_InterfaceType_actelisMetaLOOP corresponds to the value actelisMetaLOOP of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_actelisMetaLOOP E_IETFInterfaces_InterfaceType = 4
	// IETFInterfaces_InterfaceType_adsl corresponds to the value adsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_adsl E_IETFInterfaces_InterfaceType = 5
	// IETFInterfaces_InterfaceType_adsl2 corresponds to the value adsl2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_adsl2 E_IETFInterfaces_InterfaceType = 6
	// IETFInterfaces_InterfaceType_adsl2plus corresponds to the value adsl2plus of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_adsl2plus E_IETFInterfaces_InterfaceType = 7
	// IETFInterfaces_InterfaceType_aflane8023 corresponds to the value aflane8023 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aflane8023 E_IETFInterfaces_InterfaceType = 8
	// IETFInterfaces_InterfaceType_aflane8025 corresponds to the value aflane8025 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aflane8025 E_IETFInterfaces_InterfaceType = 9
	// IETFInterfaces_InterfaceType_aluELP corresponds to the value aluELP of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluELP E_IETFInterfaces_InterfaceType = 10
	// IETFInterfaces_InterfaceType_aluEpon corresponds to the value aluEpon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEpon E_IETFInterfaces_InterfaceType = 11
	// IETFInterfaces_InterfaceType_aluEponLogicalLink corresponds to the value aluEponLogicalLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEponLogicalLink E_IETFInterfaces_InterfaceType = 12
	// IETFInterfaces_InterfaceType_aluEponOnu corresponds to the value aluEponOnu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEponOnu E_IETFInterfaces_InterfaceType = 13
	// IETFInterfaces_InterfaceType_aluEponPhysicalUni corresponds to the value aluEponPhysicalUni of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEponPhysicalUni E_IETFInterfaces_InterfaceType = 14
	// IETFInterfaces_InterfaceType_aluGponOnu corresponds to the value aluGponOnu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluGponOnu E_IETFInterfaces_InterfaceType = 15
	// IETFInterfaces_InterfaceType_aluGponPhysicalUni corresponds to the value aluGponPhysicalUni of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluGponPhysicalUni E_IETFInterfaces_InterfaceType = 16
	// IETFInterfaces_InterfaceType_arap corresponds to the value arap of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_arap E_IETFInterfaces_InterfaceType = 17
	// IETFInterfaces_InterfaceType_arcnet corresponds to the value arcnet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_arcnet E_IETFInterfaces_InterfaceType = 18
	// IETFInterfaces_InterfaceType_arcnetPlus corresponds to the value arcnetPlus of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_arcnetPlus E_IETFInterfaces_InterfaceType = 19
	// IETFInterfaces_InterfaceType_async corresponds to the value async of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_async E_IETFInterfaces_InterfaceType = 20
	// IETFInterfaces_InterfaceType_atm corresponds to the value atm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atm E_IETFInterfaces_InterfaceType = 21
	// IETFInterfaces_InterfaceType_atmDxi corresponds to the value atmDxi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmDxi E_IETFInterfaces_InterfaceType = 22
	// IETFInterfaces_InterfaceType_atmFuni corresponds to the value atmFuni of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmFuni E_IETFInterfaces_InterfaceType = 23
	// IETFInterfaces_InterfaceType_atmIma corresponds to the value atmIma of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmIma E_IETFInterfaces_InterfaceType = 24
	// IETFInterfaces_InterfaceType_atmLogical corresponds to the value atmLogical of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmLogical E_IETFInterfaces_InterfaceType = 25
	// IETFInterfaces_InterfaceType_atmRadio corresponds to the value atmRadio of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmRadio E_IETFInterfaces_InterfaceType = 26
	// IETFInterfaces_InterfaceType_atmSubInterface corresponds to the value atmSubInterface of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmSubInterface E_IETFInterfaces_InterfaceType = 27
	// IETFInterfaces_InterfaceType_atmVciEndPt corresponds to the value atmVciEndPt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmVciEndPt E_IETFInterfaces_InterfaceType = 28
	// IETFInterfaces_InterfaceType_atmVirtual corresponds to the value atmVirtual of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmVirtual E_IETFInterfaces_InterfaceType = 29
	// IETFInterfaces_InterfaceType_atmbond corresponds to the value atmbond of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmbond E_IETFInterfaces_InterfaceType = 30
	// IETFInterfaces_InterfaceType_aviciOpticalEther corresponds to the value aviciOpticalEther of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aviciOpticalEther E_IETFInterfaces_InterfaceType = 31
	// IETFInterfaces_InterfaceType_basicISDN corresponds to the value basicISDN of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_basicISDN E_IETFInterfaces_InterfaceType = 32
	// IETFInterfaces_InterfaceType_bgppolicyaccounting corresponds to the value bgppolicyaccounting of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bgppolicyaccounting E_IETFInterfaces_InterfaceType = 33
	// IETFInterfaces_InterfaceType_bits corresponds to the value bits of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bits E_IETFInterfaces_InterfaceType = 34
	// IETFInterfaces_InterfaceType_bridge corresponds to the value bridge of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bridge E_IETFInterfaces_InterfaceType = 35
	// IETFInterfaces_InterfaceType_bsc corresponds to the value bsc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bsc E_IETFInterfaces_InterfaceType = 36
	// IETFInterfaces_InterfaceType_cableDownstreamRfPort corresponds to the value cableDownstreamRfPort of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cableDownstreamRfPort E_IETFInterfaces_InterfaceType = 37
	// IETFInterfaces_InterfaceType_capwapDot11Bss corresponds to the value capwapDot11Bss of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_capwapDot11Bss E_IETFInterfaces_InterfaceType = 38
	// IETFInterfaces_InterfaceType_capwapDot11Profile corresponds to the value capwapDot11Profile of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_capwapDot11Profile E_IETFInterfaces_InterfaceType = 39
	// IETFInterfaces_InterfaceType_capwapWtpVirtualRadio corresponds to the value capwapWtpVirtualRadio of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_capwapWtpVirtualRadio E_IETFInterfaces_InterfaceType = 40
	// IETFInterfaces_InterfaceType_cblVectaStar corresponds to the value cblVectaStar of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cblVectaStar E_IETFInterfaces_InterfaceType = 41
	// IETFInterfaces_InterfaceType_cctEmul corresponds to the value cctEmul of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cctEmul E_IETFInterfaces_InterfaceType = 42
	// IETFInterfaces_InterfaceType_ces corresponds to the value ces of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ces E_IETFInterfaces_InterfaceType = 43
	// IETFInterfaces_InterfaceType_channel corresponds to the value channel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_channel E_IETFInterfaces_InterfaceType = 44
	// IETFInterfaces_InterfaceType_ciscoISLvlan corresponds to the value ciscoISLvlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ciscoISLvlan E_IETFInterfaces_InterfaceType = 45
	// IETFInterfaces_InterfaceType_cnr corresponds to the value cnr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cnr E_IETFInterfaces_InterfaceType = 46
	// IETFInterfaces_InterfaceType_coffee corresponds to the value coffee of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_coffee E_IETFInterfaces_InterfaceType = 47
	// IETFInterfaces_InterfaceType_compositeLink corresponds to the value compositeLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_compositeLink E_IETFInterfaces_InterfaceType = 48
	// IETFInterfaces_InterfaceType_dcn corresponds to the value dcn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dcn E_IETFInterfaces_InterfaceType = 49
	// IETFInterfaces_InterfaceType_ddnX25 corresponds to the value ddnX25 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ddnX25 E_IETFInterfaces_InterfaceType = 50
	// IETFInterfaces_InterfaceType_digitalPowerline corresponds to the value digitalPowerline of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_digitalPowerline E_IETFInterfaces_InterfaceType = 51
	// IETFInterfaces_InterfaceType_digitalWrapperOverheadChannel corresponds to the value digitalWrapperOverheadChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_digitalWrapperOverheadChannel E_IETFInterfaces_InterfaceType = 52
	// IETFInterfaces_InterfaceType_dlsw corresponds to the value dlsw of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dlsw E_IETFInterfaces_InterfaceType = 53
	// IETFInterfaces_InterfaceType_docsCableDownstream corresponds to the value docsCableDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableDownstream E_IETFInterfaces_InterfaceType = 54
	// IETFInterfaces_InterfaceType_docsCableMCmtsDownstream corresponds to the value docsCableMCmtsDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableMCmtsDownstream E_IETFInterfaces_InterfaceType = 55
	// IETFInterfaces_InterfaceType_docsCableMaclayer corresponds to the value docsCableMaclayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableMaclayer E_IETFInterfaces_InterfaceType = 56
	// IETFInterfaces_InterfaceType_docsCableNdf corresponds to the value docsCableNdf of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableNdf E_IETFInterfaces_InterfaceType = 57
	// IETFInterfaces_InterfaceType_docsCableNdr corresponds to the value docsCableNdr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableNdr E_IETFInterfaces_InterfaceType = 58
	// IETFInterfaces_InterfaceType_docsCableScte55d1FwdOob corresponds to the value docsCableScte55d1FwdOob of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableScte55d1FwdOob E_IETFInterfaces_InterfaceType = 59
	// IETFInterfaces_InterfaceType_docsCableScte55d1RetOob corresponds to the value docsCableScte55d1RetOob of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableScte55d1RetOob E_IETFInterfaces_InterfaceType = 60
	// IETFInterfaces_InterfaceType_docsCableScte55d2DsOob corresponds to the value docsCableScte55d2DsOob of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableScte55d2DsOob E_IETFInterfaces_InterfaceType = 61
	// IETFInterfaces_InterfaceType_docsCableScte55d2UsOob corresponds to the value docsCableScte55d2UsOob of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableScte55d2UsOob E_IETFInterfaces_InterfaceType = 62
	// IETFInterfaces_InterfaceType_docsCableUpstream corresponds to the value docsCableUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableUpstream E_IETFInterfaces_InterfaceType = 63
	// IETFInterfaces_InterfaceType_docsCableUpstreamChannel corresponds to the value docsCableUpstreamChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableUpstreamChannel E_IETFInterfaces_InterfaceType = 64
	// IETFInterfaces_InterfaceType_docsCableUpstreamRfPort corresponds to the value docsCableUpstreamRfPort of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableUpstreamRfPort E_IETFInterfaces_InterfaceType = 65
	// IETFInterfaces_InterfaceType_docsOfdmDownstream corresponds to the value docsOfdmDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsOfdmDownstream E_IETFInterfaces_InterfaceType = 66
	// IETFInterfaces_InterfaceType_docsOfdmaUpstream corresponds to the value docsOfdmaUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsOfdmaUpstream E_IETFInterfaces_InterfaceType = 67
	// IETFInterfaces_InterfaceType_ds0 corresponds to the value ds0 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds0 E_IETFInterfaces_InterfaceType = 68
	// IETFInterfaces_InterfaceType_ds0Bundle corresponds to the value ds0Bundle of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds0Bundle E_IETFInterfaces_InterfaceType = 69
	// IETFInterfaces_InterfaceType_ds1 corresponds to the value ds1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds1 E_IETFInterfaces_InterfaceType = 70
	// IETFInterfaces_InterfaceType_ds1FDL corresponds to the value ds1FDL of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds1FDL E_IETFInterfaces_InterfaceType = 71
	// IETFInterfaces_InterfaceType_ds3 corresponds to the value ds3 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds3 E_IETFInterfaces_InterfaceType = 72
	// IETFInterfaces_InterfaceType_dtm corresponds to the value dtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dtm E_IETFInterfaces_InterfaceType = 73
	// IETFInterfaces_InterfaceType_dvbAsiIn corresponds to the value dvbAsiIn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbAsiIn E_IETFInterfaces_InterfaceType = 74
	// IETFInterfaces_InterfaceType_dvbAsiOut corresponds to the value dvbAsiOut of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbAsiOut E_IETFInterfaces_InterfaceType = 75
	// IETFInterfaces_InterfaceType_dvbRccDownstream corresponds to the value dvbRccDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRccDownstream E_IETFInterfaces_InterfaceType = 76
	// IETFInterfaces_InterfaceType_dvbRccMacLayer corresponds to the value dvbRccMacLayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRccMacLayer E_IETFInterfaces_InterfaceType = 77
	// IETFInterfaces_InterfaceType_dvbRccUpstream corresponds to the value dvbRccUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRccUpstream E_IETFInterfaces_InterfaceType = 78
	// IETFInterfaces_InterfaceType_dvbRcsMacLayer corresponds to the value dvbRcsMacLayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRcsMacLayer E_IETFInterfaces_InterfaceType = 79
	// IETFInterfaces_InterfaceType_dvbRcsTdma corresponds to the value dvbRcsTdma of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRcsTdma E_IETFInterfaces_InterfaceType = 80
	// IETFInterfaces_InterfaceType_dvbTdm corresponds to the value dvbTdm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbTdm E_IETFInterfaces_InterfaceType = 81
	// IETFInterfaces_InterfaceType_e1 corresponds to the value e1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_e1 E_IETFInterfaces_InterfaceType = 82
	// IETFInterfaces_InterfaceType_econet corresponds to the value econet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_econet E_IETFInterfaces_InterfaceType = 83
	// IETFInterfaces_InterfaceType_eon corresponds to the value eon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_eon E_IETFInterfaces_InterfaceType = 84
	// IETFInterfaces_InterfaceType_eplrs corresponds to the value eplrs of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_eplrs E_IETFInterfaces_InterfaceType = 85
	// IETFInterfaces_InterfaceType_escon corresponds to the value escon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_escon E_IETFInterfaces_InterfaceType = 86
	// IETFInterfaces_InterfaceType_ethernet3Mbit corresponds to the value ethernet3Mbit of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ethernet3Mbit E_IETFInterfaces_InterfaceType = 87
	// IETFInterfaces_InterfaceType_ethernetCsmacd corresponds to the value ethernetCsmacd of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ethernetCsmacd E_IETFInterfaces_InterfaceType = 88
	// IETFInterfaces_InterfaceType_fast corresponds to the value fast of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fast E_IETFInterfaces_InterfaceType = 89
	// IETFInterfaces_InterfaceType_fastEther corresponds to the value fastEther of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fastEther E_IETFInterfaces_InterfaceType = 90
	// IETFInterfaces_InterfaceType_fastEtherFX corresponds to the value fastEtherFX of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fastEtherFX E_IETFInterfaces_InterfaceType = 91
	// IETFInterfaces_InterfaceType_fastdsl corresponds to the value fastdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fastdsl E_IETFInterfaces_InterfaceType = 92
	// IETFInterfaces_InterfaceType_fcipLink corresponds to the value fcipLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fcipLink E_IETFInterfaces_InterfaceType = 93
	// IETFInterfaces_InterfaceType_fddi corresponds to the value fddi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fddi E_IETFInterfaces_InterfaceType = 94
	// IETFInterfaces_InterfaceType_fibreChannel corresponds to the value fibreChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fibreChannel E_IETFInterfaces_InterfaceType = 95
	// IETFInterfaces_InterfaceType_frDlciEndPt corresponds to the value frDlciEndPt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frDlciEndPt E_IETFInterfaces_InterfaceType = 96
	// IETFInterfaces_InterfaceType_frForward corresponds to the value frForward of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frForward E_IETFInterfaces_InterfaceType = 97
	// IETFInterfaces_InterfaceType_frameRelay corresponds to the value frameRelay of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelay E_IETFInterfaces_InterfaceType = 98
	// IETFInterfaces_InterfaceType_frameRelayInterconnect corresponds to the value frameRelayInterconnect of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelayInterconnect E_IETFInterfaces_InterfaceType = 99
	// IETFInterfaces_InterfaceType_frameRelayMPI corresponds to the value frameRelayMPI of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelayMPI E_IETFInterfaces_InterfaceType = 100
	// IETFInterfaces_InterfaceType_frameRelayService corresponds to the value frameRelayService of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelayService E_IETFInterfaces_InterfaceType = 101
	// IETFInterfaces_InterfaceType_frf16MfrBundle corresponds to the value frf16MfrBundle of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frf16MfrBundle E_IETFInterfaces_InterfaceType = 102
	// IETFInterfaces_InterfaceType_g703at2mb corresponds to the value g703at2mb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g703at2mb E_IETFInterfaces_InterfaceType = 103
	// IETFInterfaces_InterfaceType_g703at64k corresponds to the value g703at64k of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g703at64k E_IETFInterfaces_InterfaceType = 104
	// IETFInterfaces_InterfaceType_g9981 corresponds to the value g9981 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g9981 E_IETFInterfaces_InterfaceType = 105
	// IETFInterfaces_InterfaceType_g9982 corresponds to the value g9982 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g9982 E_IETFInterfaces_InterfaceType = 106
	// IETFInterfaces_InterfaceType_g9983 corresponds to the value g9983 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g9983 E_IETFInterfaces_InterfaceType = 107
	// IETFInterfaces_InterfaceType_gfast corresponds to the value gfast of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gfast E_IETFInterfaces_InterfaceType = 108
	// IETFInterfaces_InterfaceType_gfp corresponds to the value gfp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gfp E_IETFInterfaces_InterfaceType = 109
	// IETFInterfaces_InterfaceType_gigabitEthernet corresponds to the value gigabitEthernet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gigabitEthernet E_IETFInterfaces_InterfaceType = 110
	// IETFInterfaces_InterfaceType_gpon corresponds to the value gpon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gpon E_IETFInterfaces_InterfaceType = 111
	// IETFInterfaces_InterfaceType_gr303IDT corresponds to the value gr303IDT of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gr303IDT E_IETFInterfaces_InterfaceType = 112
	// IETFInterfaces_InterfaceType_gr303RDT corresponds to the value gr303RDT of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gr303RDT E_IETFInterfaces_InterfaceType = 113
	// IETFInterfaces_InterfaceType_gtp corresponds to the value gtp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gtp E_IETFInterfaces_InterfaceType = 114
	// IETFInterfaces_InterfaceType_h323Gatekeeper corresponds to the value h323Gatekeeper of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_h323Gatekeeper E_IETFInterfaces_InterfaceType = 115
	// IETFInterfaces_InterfaceType_h323Proxy corresponds to the value h323Proxy of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_h323Proxy E_IETFInterfaces_InterfaceType = 116
	// IETFInterfaces_InterfaceType_hdh1822 corresponds to the value hdh1822 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hdh1822 E_IETFInterfaces_InterfaceType = 117
	// IETFInterfaces_InterfaceType_hdlc corresponds to the value hdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hdlc E_IETFInterfaces_InterfaceType = 118
	// IETFInterfaces_InterfaceType_hdsl2 corresponds to the value hdsl2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hdsl2 E_IETFInterfaces_InterfaceType = 119
	// IETFInterfaces_InterfaceType_hiperlan2 corresponds to the value hiperlan2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hiperlan2 E_IETFInterfaces_InterfaceType = 120
	// IETFInterfaces_InterfaceType_hippi corresponds to the value hippi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hippi E_IETFInterfaces_InterfaceType = 121
	// IETFInterfaces_InterfaceType_hippiInterface corresponds to the value hippiInterface of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hippiInterface E_IETFInterfaces_InterfaceType = 122
	// IETFInterfaces_InterfaceType_homepna corresponds to the value homepna of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_homepna E_IETFInterfaces_InterfaceType = 123
	// IETFInterfaces_InterfaceType_hostPad corresponds to the value hostPad of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hostPad E_IETFInterfaces_InterfaceType = 124
	// IETFInterfaces_InterfaceType_hssi corresponds to the value hssi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hssi E_IETFInterfaces_InterfaceType = 125
	// IETFInterfaces_InterfaceType_hyperchannel corresponds to the value hyperchannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hyperchannel E_IETFInterfaces_InterfaceType = 126
	// IETFInterfaces_InterfaceType_iana_interface_type corresponds to the value iana_interface_type of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iana_interface_type E_IETFInterfaces_InterfaceType = 127
	// IETFInterfaces_InterfaceType_ibm370parChan corresponds to the value ibm370parChan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ibm370parChan E_IETFInterfaces_InterfaceType = 128
	// IETFInterfaces_InterfaceType_idsl corresponds to the value idsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_idsl E_IETFInterfaces_InterfaceType = 129
	// IETFInterfaces_InterfaceType_ieee1394 corresponds to the value ieee1394 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee1394 E_IETFInterfaces_InterfaceType = 130
	// IETFInterfaces_InterfaceType_ieee80211 corresponds to the value ieee80211 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee80211 E_IETFInterfaces_InterfaceType = 131
	// IETFInterfaces_InterfaceType_ieee80212 corresponds to the value ieee80212 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee80212 E_IETFInterfaces_InterfaceType = 132
	// IETFInterfaces_InterfaceType_ieee802154 corresponds to the value ieee802154 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee802154 E_IETFInterfaces_InterfaceType = 133
	// IETFInterfaces_InterfaceType_ieee80216WMAN corresponds to the value ieee80216WMAN of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee80216WMAN E_IETFInterfaces_InterfaceType = 134
	// IETFInterfaces_InterfaceType_ieee8023adLag corresponds to the value ieee8023adLag of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee8023adLag E_IETFInterfaces_InterfaceType = 135
	// IETFInterfaces_InterfaceType_if_gsn corresponds to the value if_gsn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_if_gsn E_IETFInterfaces_InterfaceType = 136
	// IETFInterfaces_InterfaceType_ifPwType corresponds to the value ifPwType of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ifPwType E_IETFInterfaces_InterfaceType = 137
	// IETFInterfaces_InterfaceType_ifVfiType corresponds to the value ifVfiType of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ifVfiType E_IETFInterfaces_InterfaceType = 138
	// IETFInterfaces_InterfaceType_ilan corresponds to the value ilan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ilan E_IETFInterfaces_InterfaceType = 139
	// IETFInterfaces_InterfaceType_imt corresponds to the value imt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_imt E_IETFInterfaces_InterfaceType = 140
	// IETFInterfaces_InterfaceType_infiniband corresponds to the value infiniband of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_infiniband E_IETFInterfaces_InterfaceType = 141
	// IETFInterfaces_InterfaceType_interleave corresponds to the value interleave of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_interleave E_IETFInterfaces_InterfaceType = 142
	// IETFInterfaces_InterfaceType_ip corresponds to the value ip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ip E_IETFInterfaces_InterfaceType = 143
	// IETFInterfaces_InterfaceType_ipForward corresponds to the value ipForward of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipForward E_IETFInterfaces_InterfaceType = 144
	// IETFInterfaces_InterfaceType_ipOverAtm corresponds to the value ipOverAtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipOverAtm E_IETFInterfaces_InterfaceType = 145
	// IETFInterfaces_InterfaceType_ipOverCdlc corresponds to the value ipOverCdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipOverCdlc E_IETFInterfaces_InterfaceType = 146
	// IETFInterfaces_InterfaceType_ipOverClaw corresponds to the value ipOverClaw of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipOverClaw E_IETFInterfaces_InterfaceType = 147
	// IETFInterfaces_InterfaceType_ipSwitch corresponds to the value ipSwitch of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipSwitch E_IETFInterfaces_InterfaceType = 148
	// IETFInterfaces_InterfaceType_isdn corresponds to the value isdn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isdn E_IETFInterfaces_InterfaceType = 149
	// IETFInterfaces_InterfaceType_isdns corresponds to the value isdns of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isdns E_IETFInterfaces_InterfaceType = 150
	// IETFInterfaces_InterfaceType_isdnu corresponds to the value isdnu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isdnu E_IETFInterfaces_InterfaceType = 151
	// IETFInterfaces_InterfaceType_iso88022llc corresponds to the value iso88022llc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88022llc E_IETFInterfaces_InterfaceType = 152
	// IETFInterfaces_InterfaceType_iso88023Csmacd corresponds to the value iso88023Csmacd of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88023Csmacd E_IETFInterfaces_InterfaceType = 153
	// IETFInterfaces_InterfaceType_iso88024TokenBus corresponds to the value iso88024TokenBus of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88024TokenBus E_IETFInterfaces_InterfaceType = 154
	// IETFInterfaces_InterfaceType_iso88025CRFPInt corresponds to the value iso88025CRFPInt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025CRFPInt E_IETFInterfaces_InterfaceType = 155
	// IETFInterfaces_InterfaceType_iso88025Dtr corresponds to the value iso88025Dtr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025Dtr E_IETFInterfaces_InterfaceType = 156
	// IETFInterfaces_InterfaceType_iso88025Fiber corresponds to the value iso88025Fiber of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025Fiber E_IETFInterfaces_InterfaceType = 157
	// IETFInterfaces_InterfaceType_iso88025TokenRing corresponds to the value iso88025TokenRing of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025TokenRing E_IETFInterfaces_InterfaceType = 158
	// IETFInterfaces_InterfaceType_iso88026Man corresponds to the value iso88026Man of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88026Man E_IETFInterfaces_InterfaceType = 159
	// IETFInterfaces_InterfaceType_isup corresponds to the value isup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isup E_IETFInterfaces_InterfaceType = 160
	// IETFInterfaces_InterfaceType_l2vlan corresponds to the value l2vlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_l2vlan E_IETFInterfaces_InterfaceType = 161
	// IETFInterfaces_InterfaceType_l3ipvlan corresponds to the value l3ipvlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_l3ipvlan E_IETFInterfaces_InterfaceType = 162
	// IETFInterfaces_InterfaceType_l3ipxvlan corresponds to the value l3ipxvlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_l3ipxvlan E_IETFInterfaces_InterfaceType = 163
	// IETFInterfaces_InterfaceType_lapb corresponds to the value lapb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lapb E_IETFInterfaces_InterfaceType = 164
	// IETFInterfaces_InterfaceType_lapd corresponds to the value lapd of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lapd E_IETFInterfaces_InterfaceType = 165
	// IETFInterfaces_InterfaceType_lapf corresponds to the value lapf of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lapf E_IETFInterfaces_InterfaceType = 166
	// IETFInterfaces_InterfaceType_linegroup corresponds to the value linegroup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_linegroup E_IETFInterfaces_InterfaceType = 167
	// IETFInterfaces_InterfaceType_lmp corresponds to the value lmp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lmp E_IETFInterfaces_InterfaceType = 168
	// IETFInterfaces_InterfaceType_localTalk corresponds to the value localTalk of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_localTalk E_IETFInterfaces_InterfaceType = 169
	// IETFInterfaces_InterfaceType_macSecControlledIF corresponds to the value macSecControlledIF of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_macSecControlledIF E_IETFInterfaces_InterfaceType = 170
	// IETFInterfaces_InterfaceType_macSecUncontrolledIF corresponds to the value macSecUncontrolledIF of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_macSecUncontrolledIF E_IETFInterfaces_InterfaceType = 171
	// IETFInterfaces_InterfaceType_mediaMailOverIp corresponds to the value mediaMailOverIp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mediaMailOverIp E_IETFInterfaces_InterfaceType = 172
	// IETFInterfaces_InterfaceType_mfSigLink corresponds to the value mfSigLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mfSigLink E_IETFInterfaces_InterfaceType = 173
	// IETFInterfaces_InterfaceType_miox25 corresponds to the value miox25 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_miox25 E_IETFInterfaces_InterfaceType = 174
	// IETFInterfaces_InterfaceType_mocaVersion1 corresponds to the value mocaVersion1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mocaVersion1 E_IETFInterfaces_InterfaceType = 175
	// IETFInterfaces_InterfaceType_modem corresponds to the value modem of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_modem E_IETFInterfaces_InterfaceType = 176
	// IETFInterfaces_InterfaceType_mpc corresponds to the value mpc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mpc E_IETFInterfaces_InterfaceType = 177
	// IETFInterfaces_InterfaceType_mpegTransport corresponds to the value mpegTransport of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mpegTransport E_IETFInterfaces_InterfaceType = 178
	// IETFInterfaces_InterfaceType_mpls corresponds to the value mpls of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mpls E_IETFInterfaces_InterfaceType = 179
	// IETFInterfaces_InterfaceType_mplsTunnel corresponds to the value mplsTunnel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mplsTunnel E_IETFInterfaces_InterfaceType = 180
	// IETFInterfaces_InterfaceType_msdsl corresponds to the value msdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_msdsl E_IETFInterfaces_InterfaceType = 181
	// IETFInterfaces_InterfaceType_mvl corresponds to the value mvl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mvl E_IETFInterfaces_InterfaceType = 182
	// IETFInterfaces_InterfaceType_myrinet corresponds to the value myrinet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_myrinet E_IETFInterfaces_InterfaceType = 183
	// IETFInterfaces_InterfaceType_nfas corresponds to the value nfas of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_nfas E_IETFInterfaces_InterfaceType = 184
	// IETFInterfaces_InterfaceType_nsip corresponds to the value nsip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_nsip E_IETFInterfaces_InterfaceType = 185
	// IETFInterfaces_InterfaceType_opticalChannel corresponds to the value opticalChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_opticalChannel E_IETFInterfaces_InterfaceType = 186
	// IETFInterfaces_InterfaceType_opticalChannelGroup corresponds to the value opticalChannelGroup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_opticalChannelGroup E_IETFInterfaces_InterfaceType = 187
	// IETFInterfaces_InterfaceType_opticalTransport corresponds to the value opticalTransport of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_opticalTransport E_IETFInterfaces_InterfaceType = 188
	// IETFInterfaces_InterfaceType_other corresponds to the value other of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_other E_IETFInterfaces_InterfaceType = 189
	// IETFInterfaces_InterfaceType_otnOdu corresponds to the value otnOdu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_otnOdu E_IETFInterfaces_InterfaceType = 190
	// IETFInterfaces_InterfaceType_otnOtu corresponds to the value otnOtu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_otnOtu E_IETFInterfaces_InterfaceType = 191
	// IETFInterfaces_InterfaceType_para corresponds to the value para of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_para E_IETFInterfaces_InterfaceType = 192
	// IETFInterfaces_InterfaceType_pdnEtherLoop1 corresponds to the value pdnEtherLoop1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pdnEtherLoop1 E_IETFInterfaces_InterfaceType = 193
	// IETFInterfaces_InterfaceType_pdnEtherLoop2 corresponds to the value pdnEtherLoop2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pdnEtherLoop2 E_IETFInterfaces_InterfaceType = 194
	// IETFInterfaces_InterfaceType_pip corresponds to the value pip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pip E_IETFInterfaces_InterfaceType = 195
	// IETFInterfaces_InterfaceType_plc corresponds to the value plc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_plc E_IETFInterfaces_InterfaceType = 196
	// IETFInterfaces_InterfaceType_pon155 corresponds to the value pon155 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pon155 E_IETFInterfaces_InterfaceType = 197
	// IETFInterfaces_InterfaceType_pon622 corresponds to the value pon622 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pon622 E_IETFInterfaces_InterfaceType = 198
	// IETFInterfaces_InterfaceType_pos corresponds to the value pos of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pos E_IETFInterfaces_InterfaceType = 199
	// IETFInterfaces_InterfaceType_ppp corresponds to the value ppp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ppp E_IETFInterfaces_InterfaceType = 200
	// IETFInterfaces_InterfaceType_pppMultilinkBundle corresponds to the value pppMultilinkBundle of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pppMultilinkBundle E_IETFInterfaces_InterfaceType = 201
	// IETFInterfaces_InterfaceType_primaryISDN corresponds to the value primaryISDN of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_primaryISDN E_IETFInterfaces_InterfaceType = 202
	// IETFInterfaces_InterfaceType_propAtm corresponds to the value propAtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propAtm E_IETFInterfaces_InterfaceType = 203
	// IETFInterfaces_InterfaceType_propBWAp2Mp corresponds to the value propBWAp2Mp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propBWAp2Mp E_IETFInterfaces_InterfaceType = 204
	// IETFInterfaces_InterfaceType_propCnls corresponds to the value propCnls of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propCnls E_IETFInterfaces_InterfaceType = 205
	// IETFInterfaces_InterfaceType_propDocsWirelessDownstream corresponds to the value propDocsWirelessDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propDocsWirelessDownstream E_IETFInterfaces_InterfaceType = 206
	// IETFInterfaces_InterfaceType_propDocsWirelessMaclayer corresponds to the value propDocsWirelessMaclayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propDocsWirelessMaclayer E_IETFInterfaces_InterfaceType = 207
	// IETFInterfaces_InterfaceType_propDocsWirelessUpstream corresponds to the value propDocsWirelessUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propDocsWirelessUpstream E_IETFInterfaces_InterfaceType = 208
	// IETFInterfaces_InterfaceType_propMultiplexor corresponds to the value propMultiplexor of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propMultiplexor E_IETFInterfaces_InterfaceType = 209
	// IETFInterfaces_InterfaceType_propPointToPointSerial corresponds to the value propPointToPointSerial of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propPointToPointSerial E_IETFInterfaces_InterfaceType = 210
	// IETFInterfaces_InterfaceType_propVirtual corresponds to the value propVirtual of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propVirtual E_IETFInterfaces_InterfaceType = 211
	// IETFInterfaces_InterfaceType_propWirelessP2P corresponds to the value propWirelessP2P of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propWirelessP2P E_IETFInterfaces_InterfaceType = 212
	// IETFInterfaces_InterfaceType_proteon10Mbit corresponds to the value proteon10Mbit of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_proteon10Mbit E_IETFInterfaces_InterfaceType = 213
	// IETFInterfaces_InterfaceType_proteon80Mbit corresponds to the value proteon80Mbit of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_proteon80Mbit E_IETFInterfaces_InterfaceType = 214
	// IETFInterfaces_InterfaceType_ptm corresponds to the value ptm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ptm E_IETFInterfaces_InterfaceType = 215
	// IETFInterfaces_InterfaceType_q2931 corresponds to the value q2931 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_q2931 E_IETFInterfaces_InterfaceType = 216
	// IETFInterfaces_InterfaceType_qam corresponds to the value qam of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_qam E_IETFInterfaces_InterfaceType = 217
	// IETFInterfaces_InterfaceType_qllc corresponds to the value qllc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_qllc E_IETFInterfaces_InterfaceType = 218
	// IETFInterfaces_InterfaceType_radioMAC corresponds to the value radioMAC of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_radioMAC E_IETFInterfaces_InterfaceType = 219
	// IETFInterfaces_InterfaceType_radsl corresponds to the value radsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_radsl E_IETFInterfaces_InterfaceType = 220
	// IETFInterfaces_InterfaceType_reachDSL corresponds to the value reachDSL of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_reachDSL E_IETFInterfaces_InterfaceType = 221
	// IETFInterfaces_InterfaceType_regular1822 corresponds to the value regular1822 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_regular1822 E_IETFInterfaces_InterfaceType = 222
	// IETFInterfaces_InterfaceType_rfc1483 corresponds to the value rfc1483 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rfc1483 E_IETFInterfaces_InterfaceType = 223
	// IETFInterfaces_InterfaceType_rfc877x25 corresponds to the value rfc877x25 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rfc877x25 E_IETFInterfaces_InterfaceType = 224
	// IETFInterfaces_InterfaceType_rpr corresponds to the value rpr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rpr E_IETFInterfaces_InterfaceType = 225
	// IETFInterfaces_InterfaceType_rs232 corresponds to the value rs232 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rs232 E_IETFInterfaces_InterfaceType = 226
	// IETFInterfaces_InterfaceType_rsrb corresponds to the value rsrb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rsrb E_IETFInterfaces_InterfaceType = 227
	// IETFInterfaces_InterfaceType_sdci corresponds to the value sdci of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sdci E_IETFInterfaces_InterfaceType = 228
	// IETFInterfaces_InterfaceType_sdlc corresponds to the value sdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sdlc E_IETFInterfaces_InterfaceType = 229
	// IETFInterfaces_InterfaceType_sdsl corresponds to the value sdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sdsl E_IETFInterfaces_InterfaceType = 230
	// IETFInterfaces_InterfaceType_shdsl corresponds to the value shdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_shdsl E_IETFInterfaces_InterfaceType = 231
	// IETFInterfaces_InterfaceType_sip corresponds to the value sip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sip E_IETFInterfaces_InterfaceType = 232
	// IETFInterfaces_InterfaceType_sipSig corresponds to the value sipSig of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sipSig E_IETFInterfaces_InterfaceType = 233
	// IETFInterfaces_InterfaceType_sipTg corresponds to the value sipTg of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sipTg E_IETFInterfaces_InterfaceType = 234
	// IETFInterfaces_InterfaceType_sixToFour corresponds to the value sixToFour of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sixToFour E_IETFInterfaces_InterfaceType = 235
	// IETFInterfaces_InterfaceType_slip corresponds to the value slip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_slip E_IETFInterfaces_InterfaceType = 236
	// IETFInterfaces_InterfaceType_smdsDxi corresponds to the value smdsDxi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_smdsDxi E_IETFInterfaces_InterfaceType = 237
	// IETFInterfaces_InterfaceType_smdsIcip corresponds to the value smdsIcip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_smdsIcip E_IETFInterfaces_InterfaceType = 238
	// IETFInterfaces_InterfaceType_softwareLoopback corresponds to the value softwareLoopback of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_softwareLoopback E_IETFInterfaces_InterfaceType = 239
	// IETFInterfaces_InterfaceType_sonet corresponds to the value sonet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonet E_IETFInterfaces_InterfaceType = 240
	// IETFInterfaces_InterfaceType_sonetOverheadChannel corresponds to the value sonetOverheadChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonetOverheadChannel E_IETFInterfaces_InterfaceType = 241
	// IETFInterfaces_InterfaceType_sonetPath corresponds to the value sonetPath of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonetPath E_IETFInterfaces_InterfaceType = 242
	// IETFInterfaces_InterfaceType_sonetVT corresponds to the value sonetVT of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonetVT E_IETFInterfaces_InterfaceType = 243
	// IETFInterfaces_InterfaceType_srp corresponds to the value srp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_srp E_IETFInterfaces_InterfaceType = 244
	// IETFInterfaces_InterfaceType_ss7SigLink corresponds to the value ss7SigLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ss7SigLink E_IETFInterfaces_InterfaceType = 245
	// IETFInterfaces_InterfaceType_stackToStack corresponds to the value stackToStack of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_stackToStack E_IETFInterfaces_InterfaceType = 246
	// IETFInterfaces_InterfaceType_starLan corresponds to the value starLan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_starLan E_IETFInterfaces_InterfaceType = 247
	// IETFInterfaces_InterfaceType_tdlc corresponds to the value tdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_tdlc E_IETFInterfaces_InterfaceType = 248
	// IETFInterfaces_InterfaceType_teLink corresponds to the value teLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_teLink E_IETFInterfaces_InterfaceType = 249
	// IETFInterfaces_InterfaceType_termPad corresponds to the value termPad of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_termPad E_IETFInterfaces_InterfaceType = 250
	// IETFInterfaces_InterfaceType_tr008 corresponds to the value tr008 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_tr008 E_IETFInterfaces_InterfaceType = 251
	// IETFInterfaces_InterfaceType_transpHdlc corresponds to the value transpHdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_transpHdlc E_IETFInterfaces_InterfaceType = 252
	// IETFInterfaces_InterfaceType_tunnel corresponds to the value tunnel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_tunnel E_IETFInterfaces_InterfaceType = 253
	// IETFInterfaces_InterfaceType_ultra corresponds to the value ultra of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ultra E_IETFInterfaces_InterfaceType = 254
	// IETFInterfaces_InterfaceType_usb corresponds to the value usb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_usb E_IETFInterfaces_InterfaceType = 255
	// IETFInterfaces_InterfaceType_v11 corresponds to the value v11 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v11 E_IETFInterfaces_InterfaceType = 256
	// IETFInterfaces_InterfaceType_v35 corresponds to the value v35 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v35 E_IETFInterfaces_InterfaceType = 257
	// IETFInterfaces_InterfaceType_v36 corresponds to the value v36 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v36 E_IETFInterfaces_InterfaceType = 258
	// IETFInterfaces_InterfaceType_v37 corresponds to the value v37 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v37 E_IETFInterfaces_InterfaceType = 259
	// IETFInterfaces_InterfaceType_vdsl corresponds to the value vdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vdsl E_IETFInterfaces_InterfaceType = 260
	// IETFInterfaces_InterfaceType_vdsl2 corresponds to the value vdsl2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vdsl2 E_IETFInterfaces_InterfaceType = 261
	// IETFInterfaces_InterfaceType_virtualIpAddress corresponds to the value virtualIpAddress of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_virtualIpAddress E_IETFInterfaces_InterfaceType = 262
	// IETFInterfaces_InterfaceType_virtualTg corresponds to the value virtualTg of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_virtualTg E_IETFInterfaces_InterfaceType = 263
	// IETFInterfaces_InterfaceType_vmwareNicTeam corresponds to the value vmwareNicTeam of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vmwareNicTeam E_IETFInterfaces_InterfaceType = 264
	// IETFInterfaces_InterfaceType_vmwareVirtualNic corresponds to the value vmwareVirtualNic of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vmwareVirtualNic E_IETFInterfaces_InterfaceType = 265
	// IETFInterfaces_InterfaceType_voiceDID corresponds to the value voiceDID of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceDID E_IETFInterfaces_InterfaceType = 266
	// IETFInterfaces_InterfaceType_voiceEBS corresponds to the value voiceEBS of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEBS E_IETFInterfaces_InterfaceType = 267
	// IETFInterfaces_InterfaceType_voiceEM corresponds to the value voiceEM of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEM E_IETFInterfaces_InterfaceType = 268
	// IETFInterfaces_InterfaceType_voiceEMFGD corresponds to the value voiceEMFGD of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEMFGD E_IETFInterfaces_InterfaceType = 269
	// IETFInterfaces_InterfaceType_voiceEncap corresponds to the value voiceEncap of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEncap E_IETFInterfaces_InterfaceType = 270
	// IETFInterfaces_InterfaceType_voiceFGDEANA corresponds to the value voiceFGDEANA of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFGDEANA E_IETFInterfaces_InterfaceType = 271
	// IETFInterfaces_InterfaceType_voiceFGDOS corresponds to the value voiceFGDOS of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFGDOS E_IETFInterfaces_InterfaceType = 272
	// IETFInterfaces_InterfaceType_voiceFXO corresponds to the value voiceFXO of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFXO E_IETFInterfaces_InterfaceType = 273
	// IETFInterfaces_InterfaceType_voiceFXS corresponds to the value voiceFXS of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFXS E_IETFInterfaces_InterfaceType = 274
	// IETFInterfaces_InterfaceType_voiceOverAtm corresponds to the value voiceOverAtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverAtm E_IETFInterfaces_InterfaceType = 275
	// IETFInterfaces_InterfaceType_voiceOverCable corresponds to the value voiceOverCable of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverCable E_IETFInterfaces_InterfaceType = 276
	// IETFInterfaces_InterfaceType_voiceOverFrameRelay corresponds to the value voiceOverFrameRelay of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverFrameRelay E_IETFInterfaces_InterfaceType = 277
	// IETFInterfaces_InterfaceType_voiceOverIp corresponds to the value voiceOverIp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverIp E_IETFInterfaces_InterfaceType = 278
	// IETFInterfaces_InterfaceType_wwanPP corresponds to the value wwanPP of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_wwanPP E_IETFInterfaces_InterfaceType = 279
	// IETFInterfaces_InterfaceType_wwanPP2 corresponds to the value wwanPP2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_wwanPP2 E_IETFInterfaces_InterfaceType = 280
	// IETFInterfaces_InterfaceType_x213 corresponds to the value x213 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x213 E_IETFInterfaces_InterfaceType = 281
	// IETFInterfaces_InterfaceType_x25huntGroup corresponds to the value x25huntGroup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x25huntGroup E_IETFInterfaces_InterfaceType = 282
	// IETFInterfaces_InterfaceType_x25mlp corresponds to the value x25mlp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x25mlp E_IETFInterfaces_InterfaceType = 283
	// IETFInterfaces_InterfaceType_x25ple corresponds to the value x25ple of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x25ple E_IETFInterfaces_InterfaceType = 284
	// IETFInterfaces_InterfaceType_x86Laps corresponds to the value x86Laps of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x86Laps E_IETFInterfaces_InterfaceType = 285
	// IETFInterfaces_InterfaceType_xboxWireless corresponds to the value xboxWireless of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_xboxWireless E_IETFInterfaces_InterfaceType = 286
)

// E_Icmpv4Types_CODE is a derived int64 type which is used to represent
// the enumerated node Icmpv4Types_CODE. An additional value named
// Icmpv4Types_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Icmpv4Types_CODE int64

// IsYANGGoEnum ensures that Icmpv4Types_CODE implements the yang.GoEnum
// interface. This ensures that Icmpv4Types_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_Icmpv4Types_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Icmpv4Types_CODE.
func (E_Icmpv4Types_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Icmpv4Types_CODE.
func (e E_Icmpv4Types_CODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Icmpv4Types_CODE")
}

const (
	// Icmpv4Types_CODE_UNSET corresponds to the value UNSET of Icmpv4Types_CODE
	Icmpv4Types_CODE_UNSET E_Icmpv4Types_CODE = 0
	// Icmpv4Types_CODE_DST_UNREACHABLE_ADMIN_PROHIBITED corresponds to the value DST_UNREACHABLE_ADMIN_PROHIBITED of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_ADMIN_PROHIBITED E_Icmpv4Types_CODE = 1
	// Icmpv4Types_CODE_DST_UNREACHABLE_CANNOT_FRAGMENT corresponds to the value DST_UNREACHABLE_CANNOT_FRAGMENT of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_CANNOT_FRAGMENT E_Icmpv4Types_CODE = 2
	// Icmpv4Types_CODE_DST_UNREACHABLE_CODE corresponds to the value DST_UNREACHABLE_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_CODE E_Icmpv4Types_CODE = 3
	// Icmpv4Types_CODE_DST_UNREACHABLE_DST_HOST_ADMIN_PROHIBITED corresponds to the value DST_UNREACHABLE_DST_HOST_ADMIN_PROHIBITED of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_DST_HOST_ADMIN_PROHIBITED E_Icmpv4Types_CODE = 4
	// Icmpv4Types_CODE_DST_UNREACHABLE_DST_HOST_UNKNOWN corresponds to the value DST_UNREACHABLE_DST_HOST_UNKNOWN of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_DST_HOST_UNKNOWN E_Icmpv4Types_CODE = 5
	// Icmpv4Types_CODE_DST_UNREACHABLE_DST_NET_ADMIN_PROHIBITED corresponds to the value DST_UNREACHABLE_DST_NET_ADMIN_PROHIBITED of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_DST_NET_ADMIN_PROHIBITED E_Icmpv4Types_CODE = 6
	// Icmpv4Types_CODE_DST_UNREACHABLE_DST_NET_UNKNOWN corresponds to the value DST_UNREACHABLE_DST_NET_UNKNOWN of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_DST_NET_UNKNOWN E_Icmpv4Types_CODE = 7
	// Icmpv4Types_CODE_DST_UNREACHABLE_HOST corresponds to the value DST_UNREACHABLE_HOST of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_HOST E_Icmpv4Types_CODE = 8
	// Icmpv4Types_CODE_DST_UNREACHABLE_HOST_PRECEDENCE_VIOLATION corresponds to the value DST_UNREACHABLE_HOST_PRECEDENCE_VIOLATION of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_HOST_PRECEDENCE_VIOLATION E_Icmpv4Types_CODE = 9
	// Icmpv4Types_CODE_DST_UNREACHABLE_HOST_UNREACHABLE_FOR_TOS corresponds to the value DST_UNREACHABLE_HOST_UNREACHABLE_FOR_TOS of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_HOST_UNREACHABLE_FOR_TOS E_Icmpv4Types_CODE = 10
	// Icmpv4Types_CODE_DST_UNREACHABLE_NET corresponds to the value DST_UNREACHABLE_NET of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_NET E_Icmpv4Types_CODE = 11
	// Icmpv4Types_CODE_DST_UNREACHABLE_NET_UNREACHABLE_FOR_TOS corresponds to the value DST_UNREACHABLE_NET_UNREACHABLE_FOR_TOS of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_NET_UNREACHABLE_FOR_TOS E_Icmpv4Types_CODE = 12
	// Icmpv4Types_CODE_DST_UNREACHABLE_PORT corresponds to the value DST_UNREACHABLE_PORT of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_PORT E_Icmpv4Types_CODE = 13
	// Icmpv4Types_CODE_DST_UNREACHABLE_PRECEDENCE_CUTOFF corresponds to the value DST_UNREACHABLE_PRECEDENCE_CUTOFF of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_PRECEDENCE_CUTOFF E_Icmpv4Types_CODE = 14
	// Icmpv4Types_CODE_DST_UNREACHABLE_PROTOCOL corresponds to the value DST_UNREACHABLE_PROTOCOL of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_PROTOCOL E_Icmpv4Types_CODE = 15
	// Icmpv4Types_CODE_DST_UNREACHABLE_SRC_HOST_ISOLATED corresponds to the value DST_UNREACHABLE_SRC_HOST_ISOLATED of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_SRC_HOST_ISOLATED E_Icmpv4Types_CODE = 16
	// Icmpv4Types_CODE_DST_UNREACHABLE_SRC_ROUTE_FAILED corresponds to the value DST_UNREACHABLE_SRC_ROUTE_FAILED of Icmpv4Types_CODE
	Icmpv4Types_CODE_DST_UNREACHABLE_SRC_ROUTE_FAILED E_Icmpv4Types_CODE = 17
	// Icmpv4Types_CODE_ECHO_CODE corresponds to the value ECHO_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_ECHO_CODE E_Icmpv4Types_CODE = 18
	// Icmpv4Types_CODE_ECHO_NO_CODE corresponds to the value ECHO_NO_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_ECHO_NO_CODE E_Icmpv4Types_CODE = 19
	// Icmpv4Types_CODE_ECHO_REPLY_CODE corresponds to the value ECHO_REPLY_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_ECHO_REPLY_CODE E_Icmpv4Types_CODE = 20
	// Icmpv4Types_CODE_ECHO_REPLY_NONE corresponds to the value ECHO_REPLY_NONE of Icmpv4Types_CODE
	Icmpv4Types_CODE_ECHO_REPLY_NONE E_Icmpv4Types_CODE = 21
	// Icmpv4Types_CODE_EXT_ECHO_REPLY_CODE corresponds to the value EXT_ECHO_REPLY_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_EXT_ECHO_REPLY_CODE E_Icmpv4Types_CODE = 22
	// Icmpv4Types_CODE_EXT_ECHO_REPLY_MALFORMED_QUERY corresponds to the value EXT_ECHO_REPLY_MALFORMED_QUERY of Icmpv4Types_CODE
	Icmpv4Types_CODE_EXT_ECHO_REPLY_MALFORMED_QUERY E_Icmpv4Types_CODE = 23
	// Icmpv4Types_CODE_EXT_ECHO_REPLY_MULTIPLE_INTF_SATISFY_QUERY corresponds to the value EXT_ECHO_REPLY_MULTIPLE_INTF_SATISFY_QUERY of Icmpv4Types_CODE
	Icmpv4Types_CODE_EXT_ECHO_REPLY_MULTIPLE_INTF_SATISFY_QUERY E_Icmpv4Types_CODE = 24
	// Icmpv4Types_CODE_EXT_ECHO_REPLY_NO_ERROR corresponds to the value EXT_ECHO_REPLY_NO_ERROR of Icmpv4Types_CODE
	Icmpv4Types_CODE_EXT_ECHO_REPLY_NO_ERROR E_Icmpv4Types_CODE = 25
	// Icmpv4Types_CODE_EXT_ECHO_REPLY_NO_SUB_TABLE_ENTRY corresponds to the value EXT_ECHO_REPLY_NO_SUB_TABLE_ENTRY of Icmpv4Types_CODE
	Icmpv4Types_CODE_EXT_ECHO_REPLY_NO_SUB_TABLE_ENTRY E_Icmpv4Types_CODE = 26
	// Icmpv4Types_CODE_EXT_ECHO_REPLY_NO_SUCH_INTF corresponds to the value EXT_ECHO_REPLY_NO_SUCH_INTF of Icmpv4Types_CODE
	Icmpv4Types_CODE_EXT_ECHO_REPLY_NO_SUCH_INTF E_Icmpv4Types_CODE = 27
	// Icmpv4Types_CODE_EXT_ECHO_REQUEST_CODE corresponds to the value EXT_ECHO_REQUEST_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_EXT_ECHO_REQUEST_CODE E_Icmpv4Types_CODE = 28
	// Icmpv4Types_CODE_EXT_ECHO_REQUEST_NO_ERROR corresponds to the value EXT_ECHO_REQUEST_NO_ERROR of Icmpv4Types_CODE
	Icmpv4Types_CODE_EXT_ECHO_REQUEST_NO_ERROR E_Icmpv4Types_CODE = 29
	// Icmpv4Types_CODE_PARAM_PROBLEM_BAD_LENGTH corresponds to the value PARAM_PROBLEM_BAD_LENGTH of Icmpv4Types_CODE
	Icmpv4Types_CODE_PARAM_PROBLEM_BAD_LENGTH E_Icmpv4Types_CODE = 30
	// Icmpv4Types_CODE_PARAM_PROBLEM_CODE corresponds to the value PARAM_PROBLEM_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_PARAM_PROBLEM_CODE E_Icmpv4Types_CODE = 31
	// Icmpv4Types_CODE_PARAM_PROBLEM_MISSING_REQ_OPTION corresponds to the value PARAM_PROBLEM_MISSING_REQ_OPTION of Icmpv4Types_CODE
	Icmpv4Types_CODE_PARAM_PROBLEM_MISSING_REQ_OPTION E_Icmpv4Types_CODE = 32
	// Icmpv4Types_CODE_PARAM_PROBLEM_POINTER_INDICATES_ERR corresponds to the value PARAM_PROBLEM_POINTER_INDICATES_ERR of Icmpv4Types_CODE
	Icmpv4Types_CODE_PARAM_PROBLEM_POINTER_INDICATES_ERR E_Icmpv4Types_CODE = 33
	// Icmpv4Types_CODE_PHOTURIS_AUTH_FAILED corresponds to the value PHOTURIS_AUTH_FAILED of Icmpv4Types_CODE
	Icmpv4Types_CODE_PHOTURIS_AUTH_FAILED E_Icmpv4Types_CODE = 34
	// Icmpv4Types_CODE_PHOTURIS_BAD_SPI corresponds to the value PHOTURIS_BAD_SPI of Icmpv4Types_CODE
	Icmpv4Types_CODE_PHOTURIS_BAD_SPI E_Icmpv4Types_CODE = 35
	// Icmpv4Types_CODE_PHOTURIS_CODE corresponds to the value PHOTURIS_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_PHOTURIS_CODE E_Icmpv4Types_CODE = 36
	// Icmpv4Types_CODE_PHOTURIS_DECOMPRESS_FAILED corresponds to the value PHOTURIS_DECOMPRESS_FAILED of Icmpv4Types_CODE
	Icmpv4Types_CODE_PHOTURIS_DECOMPRESS_FAILED E_Icmpv4Types_CODE = 37
	// Icmpv4Types_CODE_PHOTURIS_DECRYPTION_FAILED corresponds to the value PHOTURIS_DECRYPTION_FAILED of Icmpv4Types_CODE
	Icmpv4Types_CODE_PHOTURIS_DECRYPTION_FAILED E_Icmpv4Types_CODE = 38
	// Icmpv4Types_CODE_PHOTURIS_NEED_AUTHENTICATION corresponds to the value PHOTURIS_NEED_AUTHENTICATION of Icmpv4Types_CODE
	Icmpv4Types_CODE_PHOTURIS_NEED_AUTHENTICATION E_Icmpv4Types_CODE = 39
	// Icmpv4Types_CODE_PHOTURIS_NEED_AUTHORIZATION corresponds to the value PHOTURIS_NEED_AUTHORIZATION of Icmpv4Types_CODE
	Icmpv4Types_CODE_PHOTURIS_NEED_AUTHORIZATION E_Icmpv4Types_CODE = 40
	// Icmpv4Types_CODE_REDIRECT_CODE corresponds to the value REDIRECT_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_REDIRECT_CODE E_Icmpv4Types_CODE = 41
	// Icmpv4Types_CODE_REDIRECT_HOST corresponds to the value REDIRECT_HOST of Icmpv4Types_CODE
	Icmpv4Types_CODE_REDIRECT_HOST E_Icmpv4Types_CODE = 42
	// Icmpv4Types_CODE_REDIRECT_NETWORK corresponds to the value REDIRECT_NETWORK of Icmpv4Types_CODE
	Icmpv4Types_CODE_REDIRECT_NETWORK E_Icmpv4Types_CODE = 43
	// Icmpv4Types_CODE_REDIRECT_TOS_HOST corresponds to the value REDIRECT_TOS_HOST of Icmpv4Types_CODE
	Icmpv4Types_CODE_REDIRECT_TOS_HOST E_Icmpv4Types_CODE = 44
	// Icmpv4Types_CODE_REDIRECT_TOS_NETWORK corresponds to the value REDIRECT_TOS_NETWORK of Icmpv4Types_CODE
	Icmpv4Types_CODE_REDIRECT_TOS_NETWORK E_Icmpv4Types_CODE = 45
	// Icmpv4Types_CODE_ROUTER_ADVERTISEMENT_CODE corresponds to the value ROUTER_ADVERTISEMENT_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_ROUTER_ADVERTISEMENT_CODE E_Icmpv4Types_CODE = 46
	// Icmpv4Types_CODE_ROUTER_ADVERTISEMENT_DOES_NOT_ROUTE_COMMON corresponds to the value ROUTER_ADVERTISEMENT_DOES_NOT_ROUTE_COMMON of Icmpv4Types_CODE
	Icmpv4Types_CODE_ROUTER_ADVERTISEMENT_DOES_NOT_ROUTE_COMMON E_Icmpv4Types_CODE = 47
	// Icmpv4Types_CODE_ROUTER_ADVERTISEMENT_NORMAL corresponds to the value ROUTER_ADVERTISEMENT_NORMAL of Icmpv4Types_CODE
	Icmpv4Types_CODE_ROUTER_ADVERTISEMENT_NORMAL E_Icmpv4Types_CODE = 48
	// Icmpv4Types_CODE_ROUTER_SELECTION_CODE corresponds to the value ROUTER_SELECTION_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_ROUTER_SELECTION_CODE E_Icmpv4Types_CODE = 49
	// Icmpv4Types_CODE_ROUTER_SELECTION_NO_CODE corresponds to the value ROUTER_SELECTION_NO_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_ROUTER_SELECTION_NO_CODE E_Icmpv4Types_CODE = 50
	// Icmpv4Types_CODE_TIMESTAMP_CODE corresponds to the value TIMESTAMP_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_TIMESTAMP_CODE E_Icmpv4Types_CODE = 51
	// Icmpv4Types_CODE_TIMESTAMP_NO_CODE corresponds to the value TIMESTAMP_NO_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_TIMESTAMP_NO_CODE E_Icmpv4Types_CODE = 52
	// Icmpv4Types_CODE_TIMESTAMP_REPLY_CODE corresponds to the value TIMESTAMP_REPLY_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_TIMESTAMP_REPLY_CODE E_Icmpv4Types_CODE = 53
	// Icmpv4Types_CODE_TIMESTAMP_REPLY_NO_CODE corresponds to the value TIMESTAMP_REPLY_NO_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_TIMESTAMP_REPLY_NO_CODE E_Icmpv4Types_CODE = 54
	// Icmpv4Types_CODE_TIME_EXCEEDED_CODE corresponds to the value TIME_EXCEEDED_CODE of Icmpv4Types_CODE
	Icmpv4Types_CODE_TIME_EXCEEDED_CODE E_Icmpv4Types_CODE = 55
	// Icmpv4Types_CODE_TIME_EXCEEDED_FRAGMENT_REASSEMBLY_IN_TRANSIT corresponds to the value TIME_EXCEEDED_FRAGMENT_REASSEMBLY_IN_TRANSIT of Icmpv4Types_CODE
	Icmpv4Types_CODE_TIME_EXCEEDED_FRAGMENT_REASSEMBLY_IN_TRANSIT E_Icmpv4Types_CODE = 56
	// Icmpv4Types_CODE_TIME_EXCEEDED_IN_TRANSIT corresponds to the value TIME_EXCEEDED_IN_TRANSIT of Icmpv4Types_CODE
	Icmpv4Types_CODE_TIME_EXCEEDED_IN_TRANSIT E_Icmpv4Types_CODE = 57
)

// E_Icmpv4Types_TYPE is a derived int64 type which is used to represent
// the enumerated node Icmpv4Types_TYPE. An additional value named
// Icmpv4Types_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Icmpv4Types_TYPE int64

// IsYANGGoEnum ensures that Icmpv4Types_TYPE implements the yang.GoEnum
// interface. This ensures that Icmpv4Types_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_Icmpv4Types_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Icmpv4Types_TYPE.
func (E_Icmpv4Types_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Icmpv4Types_TYPE.
func (e E_Icmpv4Types_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Icmpv4Types_TYPE")
}

const (
	// Icmpv4Types_TYPE_UNSET corresponds to the value UNSET of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_UNSET E_Icmpv4Types_TYPE = 0
	// Icmpv4Types_TYPE_DST_UNREACHABLE corresponds to the value DST_UNREACHABLE of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_DST_UNREACHABLE E_Icmpv4Types_TYPE = 1
	// Icmpv4Types_TYPE_ECHO corresponds to the value ECHO of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_ECHO E_Icmpv4Types_TYPE = 2
	// Icmpv4Types_TYPE_ECHO_REPLY corresponds to the value ECHO_REPLY of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_ECHO_REPLY E_Icmpv4Types_TYPE = 3
	// Icmpv4Types_TYPE_EXT_ECHO_REPLY corresponds to the value EXT_ECHO_REPLY of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_EXT_ECHO_REPLY E_Icmpv4Types_TYPE = 4
	// Icmpv4Types_TYPE_EXT_ECHO_REQUEST corresponds to the value EXT_ECHO_REQUEST of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_EXT_ECHO_REQUEST E_Icmpv4Types_TYPE = 5
	// Icmpv4Types_TYPE_PARAM_PROBLEM corresponds to the value PARAM_PROBLEM of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_PARAM_PROBLEM E_Icmpv4Types_TYPE = 6
	// Icmpv4Types_TYPE_PHOTURIS corresponds to the value PHOTURIS of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_PHOTURIS E_Icmpv4Types_TYPE = 7
	// Icmpv4Types_TYPE_REDIRECT corresponds to the value REDIRECT of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_REDIRECT E_Icmpv4Types_TYPE = 8
	// Icmpv4Types_TYPE_ROUTER_ADVERTISEMENT corresponds to the value ROUTER_ADVERTISEMENT of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_ROUTER_ADVERTISEMENT E_Icmpv4Types_TYPE = 9
	// Icmpv4Types_TYPE_ROUTER_SOLICITATION corresponds to the value ROUTER_SOLICITATION of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_ROUTER_SOLICITATION E_Icmpv4Types_TYPE = 10
	// Icmpv4Types_TYPE_TIMESTAMP corresponds to the value TIMESTAMP of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_TIMESTAMP E_Icmpv4Types_TYPE = 11
	// Icmpv4Types_TYPE_TIMESTAMP_REPLY corresponds to the value TIMESTAMP_REPLY of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_TIMESTAMP_REPLY E_Icmpv4Types_TYPE = 12
	// Icmpv4Types_TYPE_TIME_EXCEEDED corresponds to the value TIME_EXCEEDED of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_TIME_EXCEEDED E_Icmpv4Types_TYPE = 13
	// Icmpv4Types_TYPE_TRACEROUTE corresponds to the value TRACEROUTE of Icmpv4Types_TYPE
	Icmpv4Types_TYPE_TRACEROUTE E_Icmpv4Types_TYPE = 14
)

// E_Icmpv6Types_CODE is a derived int64 type which is used to represent
// the enumerated node Icmpv6Types_CODE. An additional value named
// Icmpv6Types_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Icmpv6Types_CODE int64

// IsYANGGoEnum ensures that Icmpv6Types_CODE implements the yang.GoEnum
// interface. This ensures that Icmpv6Types_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_Icmpv6Types_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Icmpv6Types_CODE.
func (E_Icmpv6Types_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Icmpv6Types_CODE.
func (e E_Icmpv6Types_CODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Icmpv6Types_CODE")
}

const (
	// Icmpv6Types_CODE_UNSET corresponds to the value UNSET of Icmpv6Types_CODE
	Icmpv6Types_CODE_UNSET E_Icmpv6Types_CODE = 0
	// Icmpv6Types_CODE_DST_UNREACHABLE_ADDR corresponds to the value DST_UNREACHABLE_ADDR of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_ADDR E_Icmpv6Types_CODE = 1
	// Icmpv6Types_CODE_DST_UNREACHABLE_BEYOND_SCOPE_OF_SRC corresponds to the value DST_UNREACHABLE_BEYOND_SCOPE_OF_SRC of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_BEYOND_SCOPE_OF_SRC E_Icmpv6Types_CODE = 2
	// Icmpv6Types_CODE_DST_UNREACHABLE_CODE corresponds to the value DST_UNREACHABLE_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_CODE E_Icmpv6Types_CODE = 3
	// Icmpv6Types_CODE_DST_UNREACHABLE_DST_ADMIN_PROHIBITED corresponds to the value DST_UNREACHABLE_DST_ADMIN_PROHIBITED of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_DST_ADMIN_PROHIBITED E_Icmpv6Types_CODE = 4
	// Icmpv6Types_CODE_DST_UNREACHABLE_ERR_IN_SRC_ROUTING_HDR corresponds to the value DST_UNREACHABLE_ERR_IN_SRC_ROUTING_HDR of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_ERR_IN_SRC_ROUTING_HDR E_Icmpv6Types_CODE = 5
	// Icmpv6Types_CODE_DST_UNREACHABLE_HDRS_TOO_LONG corresponds to the value DST_UNREACHABLE_HDRS_TOO_LONG of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_HDRS_TOO_LONG E_Icmpv6Types_CODE = 6
	// Icmpv6Types_CODE_DST_UNREACHABLE_NO_ROUTE_TO_DST corresponds to the value DST_UNREACHABLE_NO_ROUTE_TO_DST of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_NO_ROUTE_TO_DST E_Icmpv6Types_CODE = 7
	// Icmpv6Types_CODE_DST_UNREACHABLE_PORT corresponds to the value DST_UNREACHABLE_PORT of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_PORT E_Icmpv6Types_CODE = 8
	// Icmpv6Types_CODE_DST_UNREACHABLE_REJECT_ROUTE_TO_DST corresponds to the value DST_UNREACHABLE_REJECT_ROUTE_TO_DST of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_REJECT_ROUTE_TO_DST E_Icmpv6Types_CODE = 9
	// Icmpv6Types_CODE_DST_UNREACHABLE_SRC_ADDR_FAILED_POLICY corresponds to the value DST_UNREACHABLE_SRC_ADDR_FAILED_POLICY of Icmpv6Types_CODE
	Icmpv6Types_CODE_DST_UNREACHABLE_SRC_ADDR_FAILED_POLICY E_Icmpv6Types_CODE = 10
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_CODE corresponds to the value DUPLICATE_ADDRESS_REPLY_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_CODE E_Icmpv6Types_CODE = 11
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_DAC corresponds to the value DUPLICATE_ADDRESS_REPLY_DAC of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_DAC E_Icmpv6Types_CODE = 12
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_EDAC_ROVR128 corresponds to the value DUPLICATE_ADDRESS_REPLY_EDAC_ROVR128 of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_EDAC_ROVR128 E_Icmpv6Types_CODE = 13
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_EDAC_ROVR192 corresponds to the value DUPLICATE_ADDRESS_REPLY_EDAC_ROVR192 of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_EDAC_ROVR192 E_Icmpv6Types_CODE = 14
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_EDAC_ROVR256 corresponds to the value DUPLICATE_ADDRESS_REPLY_EDAC_ROVR256 of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_EDAC_ROVR256 E_Icmpv6Types_CODE = 15
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_EDAC_ROVR64 corresponds to the value DUPLICATE_ADDRESS_REPLY_EDAC_ROVR64 of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REPLY_EDAC_ROVR64 E_Icmpv6Types_CODE = 16
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_CODE corresponds to the value DUPLICATE_ADDRESS_REQUEST_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_CODE E_Icmpv6Types_CODE = 17
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_DAR corresponds to the value DUPLICATE_ADDRESS_REQUEST_DAR of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_DAR E_Icmpv6Types_CODE = 18
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR128 corresponds to the value DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR128 of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR128 E_Icmpv6Types_CODE = 19
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR192 corresponds to the value DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR192 of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR192 E_Icmpv6Types_CODE = 20
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR256 corresponds to the value DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR256 of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR256 E_Icmpv6Types_CODE = 21
	// Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR64 corresponds to the value DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR64 of Icmpv6Types_CODE
	Icmpv6Types_CODE_DUPLICATE_ADDRESS_REQUEST_EDAR_ROVR64 E_Icmpv6Types_CODE = 22
	// Icmpv6Types_CODE_ECHO_REPLY_CODE corresponds to the value ECHO_REPLY_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_ECHO_REPLY_CODE E_Icmpv6Types_CODE = 23
	// Icmpv6Types_CODE_ECHO_REPLY_NO_CODE corresponds to the value ECHO_REPLY_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_ECHO_REPLY_NO_CODE E_Icmpv6Types_CODE = 24
	// Icmpv6Types_CODE_ECHO_REQUEST_CODE corresponds to the value ECHO_REQUEST_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_ECHO_REQUEST_CODE E_Icmpv6Types_CODE = 25
	// Icmpv6Types_CODE_ECHO_REQUEST_NO_CODE corresponds to the value ECHO_REQUEST_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_ECHO_REQUEST_NO_CODE E_Icmpv6Types_CODE = 26
	// Icmpv6Types_CODE_EXT_ECHO_REPLY_CODE corresponds to the value EXT_ECHO_REPLY_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_EXT_ECHO_REPLY_CODE E_Icmpv6Types_CODE = 27
	// Icmpv6Types_CODE_EXT_ECHO_REPLY_MALFORMED_QUERY corresponds to the value EXT_ECHO_REPLY_MALFORMED_QUERY of Icmpv6Types_CODE
	Icmpv6Types_CODE_EXT_ECHO_REPLY_MALFORMED_QUERY E_Icmpv6Types_CODE = 28
	// Icmpv6Types_CODE_EXT_ECHO_REPLY_MULTIPLE_INTF_SATISFY_QUERY corresponds to the value EXT_ECHO_REPLY_MULTIPLE_INTF_SATISFY_QUERY of Icmpv6Types_CODE
	Icmpv6Types_CODE_EXT_ECHO_REPLY_MULTIPLE_INTF_SATISFY_QUERY E_Icmpv6Types_CODE = 29
	// Icmpv6Types_CODE_EXT_ECHO_REPLY_NO_ERROR corresponds to the value EXT_ECHO_REPLY_NO_ERROR of Icmpv6Types_CODE
	Icmpv6Types_CODE_EXT_ECHO_REPLY_NO_ERROR E_Icmpv6Types_CODE = 30
	// Icmpv6Types_CODE_EXT_ECHO_REPLY_NO_SUCH_INTERFACE corresponds to the value EXT_ECHO_REPLY_NO_SUCH_INTERFACE of Icmpv6Types_CODE
	Icmpv6Types_CODE_EXT_ECHO_REPLY_NO_SUCH_INTERFACE E_Icmpv6Types_CODE = 31
	// Icmpv6Types_CODE_EXT_ECHO_REPLY_NO_SUCH_TABLE_ENTRY corresponds to the value EXT_ECHO_REPLY_NO_SUCH_TABLE_ENTRY of Icmpv6Types_CODE
	Icmpv6Types_CODE_EXT_ECHO_REPLY_NO_SUCH_TABLE_ENTRY E_Icmpv6Types_CODE = 32
	// Icmpv6Types_CODE_EXT_ECHO_REQUEST_CODE corresponds to the value EXT_ECHO_REQUEST_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_EXT_ECHO_REQUEST_CODE E_Icmpv6Types_CODE = 33
	// Icmpv6Types_CODE_EXT_ECHO_REQUEST_NO_ERROR corresponds to the value EXT_ECHO_REQUEST_NO_ERROR of Icmpv6Types_CODE
	Icmpv6Types_CODE_EXT_ECHO_REQUEST_NO_ERROR E_Icmpv6Types_CODE = 34
	// Icmpv6Types_CODE_HOME_AGENT_ADDRESS_DISCOVERY_REPLY_CODE corresponds to the value HOME_AGENT_ADDRESS_DISCOVERY_REPLY_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_HOME_AGENT_ADDRESS_DISCOVERY_REPLY_CODE E_Icmpv6Types_CODE = 35
	// Icmpv6Types_CODE_HOME_AGENT_ADDRESS_DISCOVERY_REPLY_NO_CODE corresponds to the value HOME_AGENT_ADDRESS_DISCOVERY_REPLY_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_HOME_AGENT_ADDRESS_DISCOVERY_REPLY_NO_CODE E_Icmpv6Types_CODE = 36
	// Icmpv6Types_CODE_HOME_AGENT_ADDRESS_DISCOVERY_REQUEST_CODE corresponds to the value HOME_AGENT_ADDRESS_DISCOVERY_REQUEST_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_HOME_AGENT_ADDRESS_DISCOVERY_REQUEST_CODE E_Icmpv6Types_CODE = 37
	// Icmpv6Types_CODE_HOME_AGENT_ADDRESS_DISCOVERY_REQUEST_NO_CODE corresponds to the value HOME_AGENT_ADDRESS_DISCOVERY_REQUEST_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_HOME_AGENT_ADDRESS_DISCOVERY_REQUEST_NO_CODE E_Icmpv6Types_CODE = 38
	// Icmpv6Types_CODE_INVERSE_NEIGHBOR_ADVERTISEMENT_CODE corresponds to the value INVERSE_NEIGHBOR_ADVERTISEMENT_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_INVERSE_NEIGHBOR_ADVERTISEMENT_CODE E_Icmpv6Types_CODE = 39
	// Icmpv6Types_CODE_INVERSE_NEIGHBOR_ADVERTISEMENT_NO_CODE corresponds to the value INVERSE_NEIGHBOR_ADVERTISEMENT_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_INVERSE_NEIGHBOR_ADVERTISEMENT_NO_CODE E_Icmpv6Types_CODE = 40
	// Icmpv6Types_CODE_INVERSE_NEIGHBOR_SOLICITATION_CODE corresponds to the value INVERSE_NEIGHBOR_SOLICITATION_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_INVERSE_NEIGHBOR_SOLICITATION_CODE E_Icmpv6Types_CODE = 41
	// Icmpv6Types_CODE_INVERSE_NEIGHBOR_SOLICITATION_NO_CODE corresponds to the value INVERSE_NEIGHBOR_SOLICITATION_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_INVERSE_NEIGHBOR_SOLICITATION_NO_CODE E_Icmpv6Types_CODE = 42
	// Icmpv6Types_CODE_MOBILE_PREFIX_ADVERTISEMENT_CODE corresponds to the value MOBILE_PREFIX_ADVERTISEMENT_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MOBILE_PREFIX_ADVERTISEMENT_CODE E_Icmpv6Types_CODE = 43
	// Icmpv6Types_CODE_MOBILE_PREFIX_ADVERTISEMENT_NO_CODE corresponds to the value MOBILE_PREFIX_ADVERTISEMENT_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MOBILE_PREFIX_ADVERTISEMENT_NO_CODE E_Icmpv6Types_CODE = 44
	// Icmpv6Types_CODE_MOBILE_PREFIX_SOLICITATION_CODE corresponds to the value MOBILE_PREFIX_SOLICITATION_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MOBILE_PREFIX_SOLICITATION_CODE E_Icmpv6Types_CODE = 45
	// Icmpv6Types_CODE_MOBILE_PREFIX_SOLICITATION_NO_CODE corresponds to the value MOBILE_PREFIX_SOLICITATION_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MOBILE_PREFIX_SOLICITATION_NO_CODE E_Icmpv6Types_CODE = 46
	// Icmpv6Types_CODE_MULTICAST_LISTENER_DONE_CODE corresponds to the value MULTICAST_LISTENER_DONE_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MULTICAST_LISTENER_DONE_CODE E_Icmpv6Types_CODE = 47
	// Icmpv6Types_CODE_MULTICAST_LISTENER_DONE_NO_CODE corresponds to the value MULTICAST_LISTENER_DONE_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MULTICAST_LISTENER_DONE_NO_CODE E_Icmpv6Types_CODE = 48
	// Icmpv6Types_CODE_MULTICAST_LISTENER_QUERY_CODE corresponds to the value MULTICAST_LISTENER_QUERY_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MULTICAST_LISTENER_QUERY_CODE E_Icmpv6Types_CODE = 49
	// Icmpv6Types_CODE_MULTICAST_LISTENER_QUERY_NO_CODE corresponds to the value MULTICAST_LISTENER_QUERY_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MULTICAST_LISTENER_QUERY_NO_CODE E_Icmpv6Types_CODE = 50
	// Icmpv6Types_CODE_MULTICAST_LISTENER_REPORT_CODE corresponds to the value MULTICAST_LISTENER_REPORT_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MULTICAST_LISTENER_REPORT_CODE E_Icmpv6Types_CODE = 51
	// Icmpv6Types_CODE_MULTICAST_LISTENER_REPORT_NO_CODE corresponds to the value MULTICAST_LISTENER_REPORT_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_MULTICAST_LISTENER_REPORT_NO_CODE E_Icmpv6Types_CODE = 52
	// Icmpv6Types_CODE_NDDE_INFORMATION_RESPONSE_CODE corresponds to the value NDDE_INFORMATION_RESPONSE_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_NDDE_INFORMATION_RESPONSE_CODE E_Icmpv6Types_CODE = 53
	// Icmpv6Types_CODE_NEIGHBOR_ADVERTISEMENT_CODE corresponds to the value NEIGHBOR_ADVERTISEMENT_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_NEIGHBOR_ADVERTISEMENT_CODE E_Icmpv6Types_CODE = 54
	// Icmpv6Types_CODE_NEIGHBOR_ADVERTISEMENT_NO_CODE corresponds to the value NEIGHBOR_ADVERTISEMENT_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_NEIGHBOR_ADVERTISEMENT_NO_CODE E_Icmpv6Types_CODE = 55
	// Icmpv6Types_CODE_NEIGHBOR_SOLICITATION_CODE corresponds to the value NEIGHBOR_SOLICITATION_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_NEIGHBOR_SOLICITATION_CODE E_Icmpv6Types_CODE = 56
	// Icmpv6Types_CODE_NEIGHBOR_SOLICITATION_NO_CODE corresponds to the value NEIGHBOR_SOLICITATION_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_NEIGHBOR_SOLICITATION_NO_CODE E_Icmpv6Types_CODE = 57
	// Icmpv6Types_CODE_NODE_INFORMATION_QUERY_CODE corresponds to the value NODE_INFORMATION_QUERY_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_NODE_INFORMATION_QUERY_CODE E_Icmpv6Types_CODE = 58
	// Icmpv6Types_CODE_NODE_INFORMATION_QUERY_IPV4_ADDR corresponds to the value NODE_INFORMATION_QUERY_IPV4_ADDR of Icmpv6Types_CODE
	Icmpv6Types_CODE_NODE_INFORMATION_QUERY_IPV4_ADDR E_Icmpv6Types_CODE = 59
	// Icmpv6Types_CODE_NODE_INFORMATION_QUERY_IPV6_ADDR corresponds to the value NODE_INFORMATION_QUERY_IPV6_ADDR of Icmpv6Types_CODE
	Icmpv6Types_CODE_NODE_INFORMATION_QUERY_IPV6_ADDR E_Icmpv6Types_CODE = 60
	// Icmpv6Types_CODE_NODE_INFORMATION_QUERY_NAME corresponds to the value NODE_INFORMATION_QUERY_NAME of Icmpv6Types_CODE
	Icmpv6Types_CODE_NODE_INFORMATION_QUERY_NAME E_Icmpv6Types_CODE = 61
	// Icmpv6Types_CODE_NODE_INFORMATION_RESPONSE_REFUSED corresponds to the value NODE_INFORMATION_RESPONSE_REFUSED of Icmpv6Types_CODE
	Icmpv6Types_CODE_NODE_INFORMATION_RESPONSE_REFUSED E_Icmpv6Types_CODE = 62
	// Icmpv6Types_CODE_NODE_INFORMATION_RESPONSE_SUCCESS corresponds to the value NODE_INFORMATION_RESPONSE_SUCCESS of Icmpv6Types_CODE
	Icmpv6Types_CODE_NODE_INFORMATION_RESPONSE_SUCCESS E_Icmpv6Types_CODE = 63
	// Icmpv6Types_CODE_NODE_INFORMATION_RESPONSE_UNKNOWN corresponds to the value NODE_INFORMATION_RESPONSE_UNKNOWN of Icmpv6Types_CODE
	Icmpv6Types_CODE_NODE_INFORMATION_RESPONSE_UNKNOWN E_Icmpv6Types_CODE = 64
	// Icmpv6Types_CODE_PACKET_TOO_BIG_CODE corresponds to the value PACKET_TOO_BIG_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_PACKET_TOO_BIG_CODE E_Icmpv6Types_CODE = 65
	// Icmpv6Types_CODE_PACKET_TOO_BIG_NO_CODE corresponds to the value PACKET_TOO_BIG_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_PACKET_TOO_BIG_NO_CODE E_Icmpv6Types_CODE = 66
	// Icmpv6Types_CODE_PARAM_PROBLEM_CODE corresponds to the value PARAM_PROBLEM_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_CODE E_Icmpv6Types_CODE = 67
	// Icmpv6Types_CODE_PARAM_PROBLEM_ERR_HDR_FIELD corresponds to the value PARAM_PROBLEM_ERR_HDR_FIELD of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_ERR_HDR_FIELD E_Icmpv6Types_CODE = 68
	// Icmpv6Types_CODE_PARAM_PROBLEM_EXT_HDR_CHAIN_TOO_LONG corresponds to the value PARAM_PROBLEM_EXT_HDR_CHAIN_TOO_LONG of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_EXT_HDR_CHAIN_TOO_LONG E_Icmpv6Types_CODE = 69
	// Icmpv6Types_CODE_PARAM_PROBLEM_EXT_HDR_TOO_BIG corresponds to the value PARAM_PROBLEM_EXT_HDR_TOO_BIG of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_EXT_HDR_TOO_BIG E_Icmpv6Types_CODE = 70
	// Icmpv6Types_CODE_PARAM_PROBLEM_INCOMPLETE_HDR_CHAIN corresponds to the value PARAM_PROBLEM_INCOMPLETE_HDR_CHAIN of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_INCOMPLETE_HDR_CHAIN E_Icmpv6Types_CODE = 71
	// Icmpv6Types_CODE_PARAM_PROBLEM_OPT_TOO_BIG corresponds to the value PARAM_PROBLEM_OPT_TOO_BIG of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_OPT_TOO_BIG E_Icmpv6Types_CODE = 72
	// Icmpv6Types_CODE_PARAM_PROBLEM_SR_UPPER_HDR_ERR corresponds to the value PARAM_PROBLEM_SR_UPPER_HDR_ERR of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_SR_UPPER_HDR_ERR E_Icmpv6Types_CODE = 73
	// Icmpv6Types_CODE_PARAM_PROBLEM_TOO_MANY_EXT_HDRS corresponds to the value PARAM_PROBLEM_TOO_MANY_EXT_HDRS of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_TOO_MANY_EXT_HDRS E_Icmpv6Types_CODE = 74
	// Icmpv6Types_CODE_PARAM_PROBLEM_TOO_MANY_OPTS corresponds to the value PARAM_PROBLEM_TOO_MANY_OPTS of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_TOO_MANY_OPTS E_Icmpv6Types_CODE = 75
	// Icmpv6Types_CODE_PARAM_PROBLEM_UNRECOGNIZED_IPV6_OPT corresponds to the value PARAM_PROBLEM_UNRECOGNIZED_IPV6_OPT of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_UNRECOGNIZED_IPV6_OPT E_Icmpv6Types_CODE = 76
	// Icmpv6Types_CODE_PARAM_PROBLEM_UNRECOGNIZED_NET_HDR_TYPE corresponds to the value PARAM_PROBLEM_UNRECOGNIZED_NET_HDR_TYPE of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_UNRECOGNIZED_NET_HDR_TYPE E_Icmpv6Types_CODE = 77
	// Icmpv6Types_CODE_PARAM_PROBLEM_UNRECOGNIZED_NEXT_HDR_TYPE corresponds to the value PARAM_PROBLEM_UNRECOGNIZED_NEXT_HDR_TYPE of Icmpv6Types_CODE
	Icmpv6Types_CODE_PARAM_PROBLEM_UNRECOGNIZED_NEXT_HDR_TYPE E_Icmpv6Types_CODE = 78
	// Icmpv6Types_CODE_REDIRECT_CODE corresponds to the value REDIRECT_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_REDIRECT_CODE E_Icmpv6Types_CODE = 79
	// Icmpv6Types_CODE_REDIRECT_NO_CODE corresponds to the value REDIRECT_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_REDIRECT_NO_CODE E_Icmpv6Types_CODE = 80
	// Icmpv6Types_CODE_RENUMBERING_CODE corresponds to the value RENUMBERING_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_RENUMBERING_CODE E_Icmpv6Types_CODE = 81
	// Icmpv6Types_CODE_RENUMBERING_COMMAND corresponds to the value RENUMBERING_COMMAND of Icmpv6Types_CODE
	Icmpv6Types_CODE_RENUMBERING_COMMAND E_Icmpv6Types_CODE = 82
	// Icmpv6Types_CODE_RENUNBERING_RESULT corresponds to the value RENUNBERING_RESULT of Icmpv6Types_CODE
	Icmpv6Types_CODE_RENUNBERING_RESULT E_Icmpv6Types_CODE = 83
	// Icmpv6Types_CODE_RENUNBERING_SEQ_NUM_RESET corresponds to the value RENUNBERING_SEQ_NUM_RESET of Icmpv6Types_CODE
	Icmpv6Types_CODE_RENUNBERING_SEQ_NUM_RESET E_Icmpv6Types_CODE = 84
	// Icmpv6Types_CODE_ROUTER_ADVERTISEMENT_CODE corresponds to the value ROUTER_ADVERTISEMENT_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_ROUTER_ADVERTISEMENT_CODE E_Icmpv6Types_CODE = 85
	// Icmpv6Types_CODE_ROUTER_ADVERTISEMENT_NO_CODE corresponds to the value ROUTER_ADVERTISEMENT_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_ROUTER_ADVERTISEMENT_NO_CODE E_Icmpv6Types_CODE = 86
	// Icmpv6Types_CODE_ROUTER_SOLICITATION_CODE corresponds to the value ROUTER_SOLICITATION_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_ROUTER_SOLICITATION_CODE E_Icmpv6Types_CODE = 87
	// Icmpv6Types_CODE_ROUTER_SOLICITATION_NO_CODE corresponds to the value ROUTER_SOLICITATION_NO_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_ROUTER_SOLICITATION_NO_CODE E_Icmpv6Types_CODE = 88
	// Icmpv6Types_CODE_TIME_EXCEEDED_CODE corresponds to the value TIME_EXCEEDED_CODE of Icmpv6Types_CODE
	Icmpv6Types_CODE_TIME_EXCEEDED_CODE E_Icmpv6Types_CODE = 89
	// Icmpv6Types_CODE_TIME_EXCEEDED_FRAGMENT_REASSEMBLY corresponds to the value TIME_EXCEEDED_FRAGMENT_REASSEMBLY of Icmpv6Types_CODE
	Icmpv6Types_CODE_TIME_EXCEEDED_FRAGMENT_REASSEMBLY E_Icmpv6Types_CODE = 90
	// Icmpv6Types_CODE_TIME_EXCEEDED_HOP_LIMIT corresponds to the value TIME_EXCEEDED_HOP_LIMIT of Icmpv6Types_CODE
	Icmpv6Types_CODE_TIME_EXCEEDED_HOP_LIMIT E_Icmpv6Types_CODE = 91
)

// E_Icmpv6Types_TYPE is a derived int64 type which is used to represent
// the enumerated node Icmpv6Types_TYPE. An additional value named
// Icmpv6Types_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Icmpv6Types_TYPE int64

// IsYANGGoEnum ensures that Icmpv6Types_TYPE implements the yang.GoEnum
// interface. This ensures that Icmpv6Types_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_Icmpv6Types_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Icmpv6Types_TYPE.
func (E_Icmpv6Types_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Icmpv6Types_TYPE.
func (e E_Icmpv6Types_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Icmpv6Types_TYPE")
}

const (
	// Icmpv6Types_TYPE_UNSET corresponds to the value UNSET of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_UNSET E_Icmpv6Types_TYPE = 0
	// Icmpv6Types_TYPE_CERTIFICATION_PATH_ADVERTISEMENT corresponds to the value CERTIFICATION_PATH_ADVERTISEMENT of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_CERTIFICATION_PATH_ADVERTISEMENT E_Icmpv6Types_TYPE = 1
	// Icmpv6Types_TYPE_CERTIFICATION_PATH_SOLICITATION corresponds to the value CERTIFICATION_PATH_SOLICITATION of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_CERTIFICATION_PATH_SOLICITATION E_Icmpv6Types_TYPE = 2
	// Icmpv6Types_TYPE_DESTINATION_UNREACHABLE corresponds to the value DESTINATION_UNREACHABLE of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_DESTINATION_UNREACHABLE E_Icmpv6Types_TYPE = 3
	// Icmpv6Types_TYPE_DUPLICATE_ADDRESS_CONFIRMATION corresponds to the value DUPLICATE_ADDRESS_CONFIRMATION of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_DUPLICATE_ADDRESS_CONFIRMATION E_Icmpv6Types_TYPE = 4
	// Icmpv6Types_TYPE_DUPLICATE_ADDRESS_REQUEST corresponds to the value DUPLICATE_ADDRESS_REQUEST of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_DUPLICATE_ADDRESS_REQUEST E_Icmpv6Types_TYPE = 5
	// Icmpv6Types_TYPE_ECHO_REPLY corresponds to the value ECHO_REPLY of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_ECHO_REPLY E_Icmpv6Types_TYPE = 6
	// Icmpv6Types_TYPE_ECHO_REQUEST corresponds to the value ECHO_REQUEST of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_ECHO_REQUEST E_Icmpv6Types_TYPE = 7
	// Icmpv6Types_TYPE_EXT_ECHO_REPLY corresponds to the value EXT_ECHO_REPLY of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_EXT_ECHO_REPLY E_Icmpv6Types_TYPE = 8
	// Icmpv6Types_TYPE_EXT_ECHO_REQUEST corresponds to the value EXT_ECHO_REQUEST of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_EXT_ECHO_REQUEST E_Icmpv6Types_TYPE = 9
	// Icmpv6Types_TYPE_FMIPV6 corresponds to the value FMIPV6 of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_FMIPV6 E_Icmpv6Types_TYPE = 10
	// Icmpv6Types_TYPE_HOME_AGENT_ADDRESS_DISCOVERY_REPLY corresponds to the value HOME_AGENT_ADDRESS_DISCOVERY_REPLY of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_HOME_AGENT_ADDRESS_DISCOVERY_REPLY E_Icmpv6Types_TYPE = 11
	// Icmpv6Types_TYPE_HOME_AGENT_ADDRESS_DISCOVERY_REQUEST corresponds to the value HOME_AGENT_ADDRESS_DISCOVERY_REQUEST of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_HOME_AGENT_ADDRESS_DISCOVERY_REQUEST E_Icmpv6Types_TYPE = 12
	// Icmpv6Types_TYPE_ILNPV6_LOCATOR_UPDATE corresponds to the value ILNPV6_LOCATOR_UPDATE of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_ILNPV6_LOCATOR_UPDATE E_Icmpv6Types_TYPE = 13
	// Icmpv6Types_TYPE_INVERSE_NEIGHBOR_ADVERTISEMENT corresponds to the value INVERSE_NEIGHBOR_ADVERTISEMENT of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_INVERSE_NEIGHBOR_ADVERTISEMENT E_Icmpv6Types_TYPE = 14
	// Icmpv6Types_TYPE_INVERSE_NEIGHBOR_SOLICITATION corresponds to the value INVERSE_NEIGHBOR_SOLICITATION of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_INVERSE_NEIGHBOR_SOLICITATION E_Icmpv6Types_TYPE = 15
	// Icmpv6Types_TYPE_MOBILE_PREFIX_ADVERTISEMENT corresponds to the value MOBILE_PREFIX_ADVERTISEMENT of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_MOBILE_PREFIX_ADVERTISEMENT E_Icmpv6Types_TYPE = 16
	// Icmpv6Types_TYPE_MOBILE_PREFIX_SOLICITATION corresponds to the value MOBILE_PREFIX_SOLICITATION of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_MOBILE_PREFIX_SOLICITATION E_Icmpv6Types_TYPE = 17
	// Icmpv6Types_TYPE_MPL_CONTROL corresponds to the value MPL_CONTROL of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_MPL_CONTROL E_Icmpv6Types_TYPE = 18
	// Icmpv6Types_TYPE_MULTICAST_LISTENER_DONE corresponds to the value MULTICAST_LISTENER_DONE of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_MULTICAST_LISTENER_DONE E_Icmpv6Types_TYPE = 19
	// Icmpv6Types_TYPE_MULTICAST_LISTENER_QUERY corresponds to the value MULTICAST_LISTENER_QUERY of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_MULTICAST_LISTENER_QUERY E_Icmpv6Types_TYPE = 20
	// Icmpv6Types_TYPE_MULTICAST_LISTENER_REPORT corresponds to the value MULTICAST_LISTENER_REPORT of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_MULTICAST_LISTENER_REPORT E_Icmpv6Types_TYPE = 21
	// Icmpv6Types_TYPE_MULTICAST_ROUTER_ADVERTISEMENT corresponds to the value MULTICAST_ROUTER_ADVERTISEMENT of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_MULTICAST_ROUTER_ADVERTISEMENT E_Icmpv6Types_TYPE = 22
	// Icmpv6Types_TYPE_MULTICAST_ROUTER_SOLICITATION corresponds to the value MULTICAST_ROUTER_SOLICITATION of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_MULTICAST_ROUTER_SOLICITATION E_Icmpv6Types_TYPE = 23
	// Icmpv6Types_TYPE_MULTICAST_ROUTER_TERMINATION corresponds to the value MULTICAST_ROUTER_TERMINATION of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_MULTICAST_ROUTER_TERMINATION E_Icmpv6Types_TYPE = 24
	// Icmpv6Types_TYPE_NEIGHBOR_ADVERTISEMENT corresponds to the value NEIGHBOR_ADVERTISEMENT of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_NEIGHBOR_ADVERTISEMENT E_Icmpv6Types_TYPE = 25
	// Icmpv6Types_TYPE_NEIGHBOR_SOLICITATION corresponds to the value NEIGHBOR_SOLICITATION of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_NEIGHBOR_SOLICITATION E_Icmpv6Types_TYPE = 26
	// Icmpv6Types_TYPE_NODE_INFORMATION_QUERY corresponds to the value NODE_INFORMATION_QUERY of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_NODE_INFORMATION_QUERY E_Icmpv6Types_TYPE = 27
	// Icmpv6Types_TYPE_NODE_INFORMATION_RESPONSE corresponds to the value NODE_INFORMATION_RESPONSE of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_NODE_INFORMATION_RESPONSE E_Icmpv6Types_TYPE = 28
	// Icmpv6Types_TYPE_PACKET_TOO_BIG corresponds to the value PACKET_TOO_BIG of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_PACKET_TOO_BIG E_Icmpv6Types_TYPE = 29
	// Icmpv6Types_TYPE_PARAMETER_PROBLEM corresponds to the value PARAMETER_PROBLEM of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_PARAMETER_PROBLEM E_Icmpv6Types_TYPE = 30
	// Icmpv6Types_TYPE_REDIRECT corresponds to the value REDIRECT of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_REDIRECT E_Icmpv6Types_TYPE = 31
	// Icmpv6Types_TYPE_RENUNBERING corresponds to the value RENUNBERING of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_RENUNBERING E_Icmpv6Types_TYPE = 32
	// Icmpv6Types_TYPE_ROUTER_ADVERTISEMENT corresponds to the value ROUTER_ADVERTISEMENT of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_ROUTER_ADVERTISEMENT E_Icmpv6Types_TYPE = 33
	// Icmpv6Types_TYPE_ROUTER_SOLICITATION corresponds to the value ROUTER_SOLICITATION of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_ROUTER_SOLICITATION E_Icmpv6Types_TYPE = 34
	// Icmpv6Types_TYPE_RPL_CONTROL corresponds to the value RPL_CONTROL of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_RPL_CONTROL E_Icmpv6Types_TYPE = 35
	// Icmpv6Types_TYPE_TIME_EXCEEDED corresponds to the value TIME_EXCEEDED of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_TIME_EXCEEDED E_Icmpv6Types_TYPE = 36
	// Icmpv6Types_TYPE_VERSION2_MULTICAST_LISTENER corresponds to the value VERSION2_MULTICAST_LISTENER of Icmpv6Types_TYPE
	Icmpv6Types_TYPE_VERSION2_MULTICAST_LISTENER E_Icmpv6Types_TYPE = 37
)

// E_IfAggregate_AggregationType is a derived int64 type which is used to represent
// the enumerated node IfAggregate_AggregationType. An additional value named
// IfAggregate_AggregationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfAggregate_AggregationType int64

// IsYANGGoEnum ensures that IfAggregate_AggregationType implements the yang.GoEnum
// interface. This ensures that IfAggregate_AggregationType can be identified as a
// mapped type for a YANG enumeration.
func (E_IfAggregate_AggregationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfAggregate_AggregationType.
func (E_IfAggregate_AggregationType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfAggregate_AggregationType.
func (e E_IfAggregate_AggregationType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfAggregate_AggregationType")
}

const (
	// IfAggregate_AggregationType_UNSET corresponds to the value UNSET of IfAggregate_AggregationType
	IfAggregate_AggregationType_UNSET E_IfAggregate_AggregationType = 0
	// IfAggregate_AggregationType_LACP corresponds to the value LACP of IfAggregate_AggregationType
	IfAggregate_AggregationType_LACP E_IfAggregate_AggregationType = 1
	// IfAggregate_AggregationType_STATIC corresponds to the value STATIC of IfAggregate_AggregationType
	IfAggregate_AggregationType_STATIC E_IfAggregate_AggregationType = 2
)

// E_IfEthernet_ETHERNET_SPEED is a derived int64 type which is used to represent
// the enumerated node IfEthernet_ETHERNET_SPEED. An additional value named
// IfEthernet_ETHERNET_SPEED_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfEthernet_ETHERNET_SPEED int64

// IsYANGGoEnum ensures that IfEthernet_ETHERNET_SPEED implements the yang.GoEnum
// interface. This ensures that IfEthernet_ETHERNET_SPEED can be identified as a
// mapped type for a YANG enumeration.
func (E_IfEthernet_ETHERNET_SPEED) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfEthernet_ETHERNET_SPEED.
func (E_IfEthernet_ETHERNET_SPEED) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfEthernet_ETHERNET_SPEED.
func (e E_IfEthernet_ETHERNET_SPEED) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfEthernet_ETHERNET_SPEED")
}

const (
	// IfEthernet_ETHERNET_SPEED_UNSET corresponds to the value UNSET of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_UNSET E_IfEthernet_ETHERNET_SPEED = 0
	// IfEthernet_ETHERNET_SPEED_SPEED_100GB corresponds to the value SPEED_100GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_100GB E_IfEthernet_ETHERNET_SPEED = 1
	// IfEthernet_ETHERNET_SPEED_SPEED_100MB corresponds to the value SPEED_100MB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_100MB E_IfEthernet_ETHERNET_SPEED = 2
	// IfEthernet_ETHERNET_SPEED_SPEED_10GB corresponds to the value SPEED_10GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_10GB E_IfEthernet_ETHERNET_SPEED = 3
	// IfEthernet_ETHERNET_SPEED_SPEED_10MB corresponds to the value SPEED_10MB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_10MB E_IfEthernet_ETHERNET_SPEED = 4
	// IfEthernet_ETHERNET_SPEED_SPEED_1GB corresponds to the value SPEED_1GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_1GB E_IfEthernet_ETHERNET_SPEED = 5
	// IfEthernet_ETHERNET_SPEED_SPEED_200GB corresponds to the value SPEED_200GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_200GB E_IfEthernet_ETHERNET_SPEED = 6
	// IfEthernet_ETHERNET_SPEED_SPEED_2500MB corresponds to the value SPEED_2500MB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_2500MB E_IfEthernet_ETHERNET_SPEED = 7
	// IfEthernet_ETHERNET_SPEED_SPEED_25GB corresponds to the value SPEED_25GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_25GB E_IfEthernet_ETHERNET_SPEED = 8
	// IfEthernet_ETHERNET_SPEED_SPEED_400GB corresponds to the value SPEED_400GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_400GB E_IfEthernet_ETHERNET_SPEED = 9
	// IfEthernet_ETHERNET_SPEED_SPEED_40GB corresponds to the value SPEED_40GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_40GB E_IfEthernet_ETHERNET_SPEED = 10
	// IfEthernet_ETHERNET_SPEED_SPEED_50GB corresponds to the value SPEED_50GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_50GB E_IfEthernet_ETHERNET_SPEED = 11
	// IfEthernet_ETHERNET_SPEED_SPEED_5GB corresponds to the value SPEED_5GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_5GB E_IfEthernet_ETHERNET_SPEED = 12
	// IfEthernet_ETHERNET_SPEED_SPEED_600GB corresponds to the value SPEED_600GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_600GB E_IfEthernet_ETHERNET_SPEED = 13
	// IfEthernet_ETHERNET_SPEED_SPEED_800GB corresponds to the value SPEED_800GB of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_800GB E_IfEthernet_ETHERNET_SPEED = 14
	// IfEthernet_ETHERNET_SPEED_SPEED_UNKNOWN corresponds to the value SPEED_UNKNOWN of IfEthernet_ETHERNET_SPEED
	IfEthernet_ETHERNET_SPEED_SPEED_UNKNOWN E_IfEthernet_ETHERNET_SPEED = 15
)

// E_IfEthernet_INTERFACE_FEC is a derived int64 type which is used to represent
// the enumerated node IfEthernet_INTERFACE_FEC. An additional value named
// IfEthernet_INTERFACE_FEC_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfEthernet_INTERFACE_FEC int64

// IsYANGGoEnum ensures that IfEthernet_INTERFACE_FEC implements the yang.GoEnum
// interface. This ensures that IfEthernet_INTERFACE_FEC can be identified as a
// mapped type for a YANG enumeration.
func (E_IfEthernet_INTERFACE_FEC) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfEthernet_INTERFACE_FEC.
func (E_IfEthernet_INTERFACE_FEC) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfEthernet_INTERFACE_FEC.
func (e E_IfEthernet_INTERFACE_FEC) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfEthernet_INTERFACE_FEC")
}

const (
	// IfEthernet_INTERFACE_FEC_UNSET corresponds to the value UNSET of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_UNSET E_IfEthernet_INTERFACE_FEC = 0
	// IfEthernet_INTERFACE_FEC_FEC_DISABLED corresponds to the value FEC_DISABLED of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_DISABLED E_IfEthernet_INTERFACE_FEC = 1
	// IfEthernet_INTERFACE_FEC_FEC_FC corresponds to the value FEC_FC of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_FC E_IfEthernet_INTERFACE_FEC = 2
	// IfEthernet_INTERFACE_FEC_FEC_RS528 corresponds to the value FEC_RS528 of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_RS528 E_IfEthernet_INTERFACE_FEC = 3
	// IfEthernet_INTERFACE_FEC_FEC_RS544 corresponds to the value FEC_RS544 of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_RS544 E_IfEthernet_INTERFACE_FEC = 4
	// IfEthernet_INTERFACE_FEC_FEC_RS544_2X_INTERLEAVE corresponds to the value FEC_RS544_2X_INTERLEAVE of IfEthernet_INTERFACE_FEC
	IfEthernet_INTERFACE_FEC_FEC_RS544_2X_INTERLEAVE E_IfEthernet_INTERFACE_FEC = 5
)

// E_IfIp_IpAddressOrigin is a derived int64 type which is used to represent
// the enumerated node IfIp_IpAddressOrigin. An additional value named
// IfIp_IpAddressOrigin_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfIp_IpAddressOrigin int64

// IsYANGGoEnum ensures that IfIp_IpAddressOrigin implements the yang.GoEnum
// interface. This ensures that IfIp_IpAddressOrigin can be identified as a
// mapped type for a YANG enumeration.
func (E_IfIp_IpAddressOrigin) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfIp_IpAddressOrigin.
func (E_IfIp_IpAddressOrigin) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfIp_IpAddressOrigin.
func (e E_IfIp_IpAddressOrigin) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfIp_IpAddressOrigin")
}

const (
	// IfIp_IpAddressOrigin_UNSET corresponds to the value UNSET of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_UNSET E_IfIp_IpAddressOrigin = 0
	// IfIp_IpAddressOrigin_OTHER corresponds to the value OTHER of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_OTHER E_IfIp_IpAddressOrigin = 1
	// IfIp_IpAddressOrigin_STATIC corresponds to the value STATIC of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_STATIC E_IfIp_IpAddressOrigin = 2
	// IfIp_IpAddressOrigin_DHCP corresponds to the value DHCP of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_DHCP E_IfIp_IpAddressOrigin = 3
	// IfIp_IpAddressOrigin_LINK_LAYER corresponds to the value LINK_LAYER of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_LINK_LAYER E_IfIp_IpAddressOrigin = 4
	// IfIp_IpAddressOrigin_RANDOM corresponds to the value RANDOM of IfIp_IpAddressOrigin
	IfIp_IpAddressOrigin_RANDOM E_IfIp_IpAddressOrigin = 5
)

// E_IfIp_Ipv4AddressType is a derived int64 type which is used to represent
// the enumerated node IfIp_Ipv4AddressType. An additional value named
// IfIp_Ipv4AddressType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfIp_Ipv4AddressType int64

// IsYANGGoEnum ensures that IfIp_Ipv4AddressType implements the yang.GoEnum
// interface. This ensures that IfIp_Ipv4AddressType can be identified as a
// mapped type for a YANG enumeration.
func (E_IfIp_Ipv4AddressType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfIp_Ipv4AddressType.
func (E_IfIp_Ipv4AddressType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfIp_Ipv4AddressType.
func (e E_IfIp_Ipv4AddressType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfIp_Ipv4AddressType")
}

const (
	// IfIp_Ipv4AddressType_UNSET corresponds to the value UNSET of IfIp_Ipv4AddressType
	IfIp_Ipv4AddressType_UNSET E_IfIp_Ipv4AddressType = 0
	// IfIp_Ipv4AddressType_PRIMARY corresponds to the value PRIMARY of IfIp_Ipv4AddressType
	IfIp_Ipv4AddressType_PRIMARY E_IfIp_Ipv4AddressType = 1
	// IfIp_Ipv4AddressType_SECONDARY corresponds to the value SECONDARY of IfIp_Ipv4AddressType
	IfIp_Ipv4AddressType_SECONDARY E_IfIp_Ipv4AddressType = 2
)

// E_IfIp_Ipv6AddressType is a derived int64 type which is used to represent
// the enumerated node IfIp_Ipv6AddressType. An additional value named
// IfIp_Ipv6AddressType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfIp_Ipv6AddressType int64

// IsYANGGoEnum ensures that IfIp_Ipv6AddressType implements the yang.GoEnum
// interface. This ensures that IfIp_Ipv6AddressType can be identified as a
// mapped type for a YANG enumeration.
func (E_IfIp_Ipv6AddressType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfIp_Ipv6AddressType.
func (E_IfIp_Ipv6AddressType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfIp_Ipv6AddressType.
func (e E_IfIp_Ipv6AddressType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfIp_Ipv6AddressType")
}

const (
	// IfIp_Ipv6AddressType_UNSET corresponds to the value UNSET of IfIp_Ipv6AddressType
	IfIp_Ipv6AddressType_UNSET E_IfIp_Ipv6AddressType = 0
	// IfIp_Ipv6AddressType_GLOBAL_UNICAST corresponds to the value GLOBAL_UNICAST of IfIp_Ipv6AddressType
	IfIp_Ipv6AddressType_GLOBAL_UNICAST E_IfIp_Ipv6AddressType = 1
	// IfIp_Ipv6AddressType_LINK_LOCAL_UNICAST corresponds to the value LINK_LOCAL_UNICAST of IfIp_Ipv6AddressType
	IfIp_Ipv6AddressType_LINK_LOCAL_UNICAST E_IfIp_Ipv6AddressType = 2
)

// E_IfIp_NeighborOrigin is a derived int64 type which is used to represent
// the enumerated node IfIp_NeighborOrigin. An additional value named
// IfIp_NeighborOrigin_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IfIp_NeighborOrigin int64

// IsYANGGoEnum ensures that IfIp_NeighborOrigin implements the yang.GoEnum
// interface. This ensures that IfIp_NeighborOrigin can be identified as a
// mapped type for a YANG enumeration.
func (E_IfIp_NeighborOrigin) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IfIp_NeighborOrigin.
func (E_IfIp_NeighborOrigin) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IfIp_NeighborOrigin.
func (e E_IfIp_NeighborOrigin) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IfIp_NeighborOrigin")
}

const (
	// IfIp_NeighborOrigin_UNSET corresponds to the value UNSET of IfIp_NeighborOrigin
	IfIp_NeighborOrigin_UNSET E_IfIp_NeighborOrigin = 0
	// IfIp_NeighborOrigin_OTHER corresponds to the value OTHER of IfIp_NeighborOrigin
	IfIp_NeighborOrigin_OTHER E_IfIp_NeighborOrigin = 1
	// IfIp_NeighborOrigin_STATIC corresponds to the value STATIC of IfIp_NeighborOrigin
	IfIp_NeighborOrigin_STATIC E_IfIp_NeighborOrigin = 2
	// IfIp_NeighborOrigin_DYNAMIC corresponds to the value DYNAMIC of IfIp_NeighborOrigin
	IfIp_NeighborOrigin_DYNAMIC E_IfIp_NeighborOrigin = 3
)

// E_IgpFloodingBandwidth_ThresholdSpecification is a derived int64 type which is used to represent
// the enumerated node IgpFloodingBandwidth_ThresholdSpecification. An additional value named
// IgpFloodingBandwidth_ThresholdSpecification_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IgpFloodingBandwidth_ThresholdSpecification int64

// IsYANGGoEnum ensures that IgpFloodingBandwidth_ThresholdSpecification implements the yang.GoEnum
// interface. This ensures that IgpFloodingBandwidth_ThresholdSpecification can be identified as a
// mapped type for a YANG enumeration.
func (E_IgpFloodingBandwidth_ThresholdSpecification) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IgpFloodingBandwidth_ThresholdSpecification.
func (E_IgpFloodingBandwidth_ThresholdSpecification) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_IgpFloodingBandwidth_ThresholdSpecification.
func (e E_IgpFloodingBandwidth_ThresholdSpecification) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IgpFloodingBandwidth_ThresholdSpecification")
}

const (
	// IgpFloodingBandwidth_ThresholdSpecification_UNSET corresponds to the value UNSET of IgpFloodingBandwidth_ThresholdSpecification
	IgpFloodingBandwidth_ThresholdSpecification_UNSET E_IgpFloodingBandwidth_ThresholdSpecification = 0
	// IgpFloodingBandwidth_ThresholdSpecification_MIRRORED_UP_DOWN corresponds to the value MIRRORED_UP_DOWN of IgpFloodingBandwidth_ThresholdSpecification
	IgpFloodingBandwidth_ThresholdSpecification_MIRRORED_UP_DOWN E_IgpFloodingBandwidth_ThresholdSpecification = 1
	// IgpFloodingBandwidth_ThresholdSpecification_SEPARATE_UP_DOWN corresponds to the value SEPARATE_UP_DOWN of IgpFloodingBandwidth_ThresholdSpecification
	IgpFloodingBandwidth_ThresholdSpecification_SEPARATE_UP_DOWN E_IgpFloodingBandwidth_ThresholdSpecification = 2
)

// E_IgpFloodingBandwidth_ThresholdType is a derived int64 type which is used to represent
// the enumerated node IgpFloodingBandwidth_ThresholdType. An additional value named
// IgpFloodingBandwidth_ThresholdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IgpFloodingBandwidth_ThresholdType int64

// IsYANGGoEnum ensures that IgpFloodingBandwidth_ThresholdType implements the yang.GoEnum
// interface. This ensures that IgpFloodingBandwidth_ThresholdType can be identified as a
// mapped type for a YANG enumeration.
func (E_IgpFloodingBandwidth_ThresholdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IgpFloodingBandwidth_ThresholdType.
func (E_IgpFloodingBandwidth_ThresholdType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_IgpFloodingBandwidth_ThresholdType.
func (e E_IgpFloodingBandwidth_ThresholdType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IgpFloodingBandwidth_ThresholdType")
}

const (
	// IgpFloodingBandwidth_ThresholdType_UNSET corresponds to the value UNSET of IgpFloodingBandwidth_ThresholdType
	IgpFloodingBandwidth_ThresholdType_UNSET E_IgpFloodingBandwidth_ThresholdType = 0
	// IgpFloodingBandwidth_ThresholdType_DELTA corresponds to the value DELTA of IgpFloodingBandwidth_ThresholdType
	IgpFloodingBandwidth_ThresholdType_DELTA E_IgpFloodingBandwidth_ThresholdType = 1
	// IgpFloodingBandwidth_ThresholdType_THRESHOLD_CROSSED corresponds to the value THRESHOLD_CROSSED of IgpFloodingBandwidth_ThresholdType
	IgpFloodingBandwidth_ThresholdType_THRESHOLD_CROSSED E_IgpFloodingBandwidth_ThresholdType = 2
)

// E_ImportExportPolicy_ExportRouteTarget is a derived int64 type which is used to represent
// the enumerated node ImportExportPolicy_ExportRouteTarget. An additional value named
// ImportExportPolicy_ExportRouteTarget_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ImportExportPolicy_ExportRouteTarget int64

// IsYANGGoEnum ensures that ImportExportPolicy_ExportRouteTarget implements the yang.GoEnum
// interface. This ensures that ImportExportPolicy_ExportRouteTarget can be identified as a
// mapped type for a YANG enumeration.
func (E_ImportExportPolicy_ExportRouteTarget) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ImportExportPolicy_ExportRouteTarget.
func (E_ImportExportPolicy_ExportRouteTarget) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_ImportExportPolicy_ExportRouteTarget.
func (e E_ImportExportPolicy_ExportRouteTarget) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ImportExportPolicy_ExportRouteTarget")
}

const (
	// ImportExportPolicy_ExportRouteTarget_UNSET corresponds to the value UNSET of ImportExportPolicy_ExportRouteTarget
	ImportExportPolicy_ExportRouteTarget_UNSET E_ImportExportPolicy_ExportRouteTarget = 0
	// ImportExportPolicy_ExportRouteTarget_AUTO corresponds to the value AUTO of ImportExportPolicy_ExportRouteTarget
	ImportExportPolicy_ExportRouteTarget_AUTO E_ImportExportPolicy_ExportRouteTarget = 1
)

// E_ImportExportPolicy_ImportRouteTarget is a derived int64 type which is used to represent
// the enumerated node ImportExportPolicy_ImportRouteTarget. An additional value named
// ImportExportPolicy_ImportRouteTarget_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ImportExportPolicy_ImportRouteTarget int64

// IsYANGGoEnum ensures that ImportExportPolicy_ImportRouteTarget implements the yang.GoEnum
// interface. This ensures that ImportExportPolicy_ImportRouteTarget can be identified as a
// mapped type for a YANG enumeration.
func (E_ImportExportPolicy_ImportRouteTarget) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ImportExportPolicy_ImportRouteTarget.
func (E_ImportExportPolicy_ImportRouteTarget) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_ImportExportPolicy_ImportRouteTarget.
func (e E_ImportExportPolicy_ImportRouteTarget) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ImportExportPolicy_ImportRouteTarget")
}

const (
	// ImportExportPolicy_ImportRouteTarget_UNSET corresponds to the value UNSET of ImportExportPolicy_ImportRouteTarget
	ImportExportPolicy_ImportRouteTarget_UNSET E_ImportExportPolicy_ImportRouteTarget = 0
	// ImportExportPolicy_ImportRouteTarget_AUTO corresponds to the value AUTO of ImportExportPolicy_ImportRouteTarget
	ImportExportPolicy_ImportRouteTarget_AUTO E_ImportExportPolicy_ImportRouteTarget = 1
)

// E_IngressTracking_MplsLabel is a derived int64 type which is used to represent
// the enumerated node IngressTracking_MplsLabel. An additional value named
// IngressTracking_MplsLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IngressTracking_MplsLabel int64

// IsYANGGoEnum ensures that IngressTracking_MplsLabel implements the yang.GoEnum
// interface. This ensures that IngressTracking_MplsLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_IngressTracking_MplsLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IngressTracking_MplsLabel.
func (E_IngressTracking_MplsLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IngressTracking_MplsLabel.
func (e E_IngressTracking_MplsLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IngressTracking_MplsLabel")
}

const (
	// IngressTracking_MplsLabel_UNSET corresponds to the value UNSET of IngressTracking_MplsLabel
	IngressTracking_MplsLabel_UNSET E_IngressTracking_MplsLabel = 0
	// IngressTracking_MplsLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of IngressTracking_MplsLabel
	IngressTracking_MplsLabel_IPV4_EXPLICIT_NULL E_IngressTracking_MplsLabel = 1
	// IngressTracking_MplsLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of IngressTracking_MplsLabel
	IngressTracking_MplsLabel_ROUTER_ALERT E_IngressTracking_MplsLabel = 2
	// IngressTracking_MplsLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of IngressTracking_MplsLabel
	IngressTracking_MplsLabel_IPV6_EXPLICIT_NULL E_IngressTracking_MplsLabel = 3
	// IngressTracking_MplsLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of IngressTracking_MplsLabel
	IngressTracking_MplsLabel_IMPLICIT_NULL E_IngressTracking_MplsLabel = 4
	// IngressTracking_MplsLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of IngressTracking_MplsLabel
	IngressTracking_MplsLabel_ENTROPY_LABEL_INDICATOR E_IngressTracking_MplsLabel = 8
	// IngressTracking_MplsLabel_NO_LABEL corresponds to the value NO_LABEL of IngressTracking_MplsLabel
	IngressTracking_MplsLabel_NO_LABEL E_IngressTracking_MplsLabel = 9
)

// E_Ingress_IncomingLabel is a derived int64 type which is used to represent
// the enumerated node Ingress_IncomingLabel. An additional value named
// Ingress_IncomingLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ingress_IncomingLabel int64

// IsYANGGoEnum ensures that Ingress_IncomingLabel implements the yang.GoEnum
// interface. This ensures that Ingress_IncomingLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_Ingress_IncomingLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ingress_IncomingLabel.
func (E_Ingress_IncomingLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ingress_IncomingLabel.
func (e E_Ingress_IncomingLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ingress_IncomingLabel")
}

const (
	// Ingress_IncomingLabel_UNSET corresponds to the value UNSET of Ingress_IncomingLabel
	Ingress_IncomingLabel_UNSET E_Ingress_IncomingLabel = 0
	// Ingress_IncomingLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Ingress_IncomingLabel
	Ingress_IncomingLabel_IPV4_EXPLICIT_NULL E_Ingress_IncomingLabel = 1
	// Ingress_IncomingLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Ingress_IncomingLabel
	Ingress_IncomingLabel_ROUTER_ALERT E_Ingress_IncomingLabel = 2
	// Ingress_IncomingLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Ingress_IncomingLabel
	Ingress_IncomingLabel_IPV6_EXPLICIT_NULL E_Ingress_IncomingLabel = 3
	// Ingress_IncomingLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Ingress_IncomingLabel
	Ingress_IncomingLabel_IMPLICIT_NULL E_Ingress_IncomingLabel = 4
	// Ingress_IncomingLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Ingress_IncomingLabel
	Ingress_IncomingLabel_ENTROPY_LABEL_INDICATOR E_Ingress_IncomingLabel = 8
	// Ingress_IncomingLabel_NO_LABEL corresponds to the value NO_LABEL of Ingress_IncomingLabel
	Ingress_IncomingLabel_NO_LABEL E_Ingress_IncomingLabel = 9
)

// E_Ingress_PushLabel is a derived int64 type which is used to represent
// the enumerated node Ingress_PushLabel. An additional value named
// Ingress_PushLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ingress_PushLabel int64

// IsYANGGoEnum ensures that Ingress_PushLabel implements the yang.GoEnum
// interface. This ensures that Ingress_PushLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_Ingress_PushLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ingress_PushLabel.
func (E_Ingress_PushLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ingress_PushLabel.
func (e E_Ingress_PushLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ingress_PushLabel")
}

const (
	// Ingress_PushLabel_UNSET corresponds to the value UNSET of Ingress_PushLabel
	Ingress_PushLabel_UNSET E_Ingress_PushLabel = 0
	// Ingress_PushLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Ingress_PushLabel
	Ingress_PushLabel_IPV4_EXPLICIT_NULL E_Ingress_PushLabel = 1
	// Ingress_PushLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Ingress_PushLabel
	Ingress_PushLabel_ROUTER_ALERT E_Ingress_PushLabel = 2
	// Ingress_PushLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Ingress_PushLabel
	Ingress_PushLabel_IPV6_EXPLICIT_NULL E_Ingress_PushLabel = 3
	// Ingress_PushLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Ingress_PushLabel
	Ingress_PushLabel_IMPLICIT_NULL E_Ingress_PushLabel = 4
	// Ingress_PushLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Ingress_PushLabel
	Ingress_PushLabel_ENTROPY_LABEL_INDICATOR E_Ingress_PushLabel = 8
	// Ingress_PushLabel_NO_LABEL corresponds to the value NO_LABEL of Ingress_PushLabel
	Ingress_PushLabel_NO_LABEL E_Ingress_PushLabel = 9
)

// E_Input_Classifier_Type is a derived int64 type which is used to represent
// the enumerated node Input_Classifier_Type. An additional value named
// Input_Classifier_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Input_Classifier_Type int64

// IsYANGGoEnum ensures that Input_Classifier_Type implements the yang.GoEnum
// interface. This ensures that Input_Classifier_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Input_Classifier_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Input_Classifier_Type.
func (E_Input_Classifier_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Input_Classifier_Type.
func (e E_Input_Classifier_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Input_Classifier_Type")
}

const (
	// Input_Classifier_Type_UNSET corresponds to the value UNSET of Input_Classifier_Type
	Input_Classifier_Type_UNSET E_Input_Classifier_Type = 0
	// Input_Classifier_Type_IPV4 corresponds to the value IPV4 of Input_Classifier_Type
	Input_Classifier_Type_IPV4 E_Input_Classifier_Type = 5
	// Input_Classifier_Type_IPV6 corresponds to the value IPV6 of Input_Classifier_Type
	Input_Classifier_Type_IPV6 E_Input_Classifier_Type = 7
	// Input_Classifier_Type_MPLS corresponds to the value MPLS of Input_Classifier_Type
	Input_Classifier_Type_MPLS E_Input_Classifier_Type = 8
	// Input_Classifier_Type_IPV4_MULTICAST corresponds to the value IPV4_MULTICAST of Input_Classifier_Type
	Input_Classifier_Type_IPV4_MULTICAST E_Input_Classifier_Type = 9
	// Input_Classifier_Type_IPV6_MULTICAST corresponds to the value IPV6_MULTICAST of Input_Classifier_Type
	Input_Classifier_Type_IPV6_MULTICAST E_Input_Classifier_Type = 10
)

// E_Input_InputType is a derived int64 type which is used to represent
// the enumerated node Input_InputType. An additional value named
// Input_InputType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Input_InputType int64

// IsYANGGoEnum ensures that Input_InputType implements the yang.GoEnum
// interface. This ensures that Input_InputType can be identified as a
// mapped type for a YANG enumeration.
func (E_Input_InputType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Input_InputType.
func (E_Input_InputType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Input_InputType.
func (e E_Input_InputType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Input_InputType")
}

const (
	// Input_InputType_UNSET corresponds to the value UNSET of Input_InputType
	Input_InputType_UNSET E_Input_InputType = 0
	// Input_InputType_QUEUE corresponds to the value QUEUE of Input_InputType
	Input_InputType_QUEUE E_Input_InputType = 1
	// Input_InputType_IN_PROFILE corresponds to the value IN_PROFILE of Input_InputType
	Input_InputType_IN_PROFILE E_Input_InputType = 2
	// Input_InputType_OUT_PROFILE corresponds to the value OUT_PROFILE of Input_InputType
	Input_InputType_OUT_PROFILE E_Input_InputType = 3
)

// E_Interface_AdminStatus is a derived int64 type which is used to represent
// the enumerated node Interface_AdminStatus. An additional value named
// Interface_AdminStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Interface_AdminStatus int64

// IsYANGGoEnum ensures that Interface_AdminStatus implements the yang.GoEnum
// interface. This ensures that Interface_AdminStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_Interface_AdminStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Interface_AdminStatus.
func (E_Interface_AdminStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Interface_AdminStatus.
func (e E_Interface_AdminStatus) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Interface_AdminStatus")
}

const (
	// Interface_AdminStatus_UNSET corresponds to the value UNSET of Interface_AdminStatus
	Interface_AdminStatus_UNSET E_Interface_AdminStatus = 0
	// Interface_AdminStatus_UP corresponds to the value UP of Interface_AdminStatus
	Interface_AdminStatus_UP E_Interface_AdminStatus = 1
	// Interface_AdminStatus_DOWN corresponds to the value DOWN of Interface_AdminStatus
	Interface_AdminStatus_DOWN E_Interface_AdminStatus = 2
	// Interface_AdminStatus_TESTING corresponds to the value TESTING of Interface_AdminStatus
	Interface_AdminStatus_TESTING E_Interface_AdminStatus = 3
)

// E_Interface_IrbAnycastGateway is a derived int64 type which is used to represent
// the enumerated node Interface_IrbAnycastGateway. An additional value named
// Interface_IrbAnycastGateway_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Interface_IrbAnycastGateway int64

// IsYANGGoEnum ensures that Interface_IrbAnycastGateway implements the yang.GoEnum
// interface. This ensures that Interface_IrbAnycastGateway can be identified as a
// mapped type for a YANG enumeration.
func (E_Interface_IrbAnycastGateway) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Interface_IrbAnycastGateway.
func (E_Interface_IrbAnycastGateway) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Interface_IrbAnycastGateway.
func (e E_Interface_IrbAnycastGateway) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Interface_IrbAnycastGateway")
}

const (
	// Interface_IrbAnycastGateway_UNSET corresponds to the value UNSET of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_UNSET E_Interface_IrbAnycastGateway = 0
	// Interface_IrbAnycastGateway_DISTRIBUTED_SYMETRIC corresponds to the value DISTRIBUTED_SYMETRIC of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_DISTRIBUTED_SYMETRIC E_Interface_IrbAnycastGateway = 1
	// Interface_IrbAnycastGateway_DISTRIBUTED_ASYMETRIC corresponds to the value DISTRIBUTED_ASYMETRIC of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_DISTRIBUTED_ASYMETRIC E_Interface_IrbAnycastGateway = 2
	// Interface_IrbAnycastGateway_HYBRID corresponds to the value HYBRID of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_HYBRID E_Interface_IrbAnycastGateway = 3
	// Interface_IrbAnycastGateway_CENTRALIZED corresponds to the value CENTRALIZED of Interface_IrbAnycastGateway
	Interface_IrbAnycastGateway_CENTRALIZED E_Interface_IrbAnycastGateway = 4
)

// E_Interface_OperStatus is a derived int64 type which is used to represent
// the enumerated node Interface_OperStatus. An additional value named
// Interface_OperStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Interface_OperStatus int64

// IsYANGGoEnum ensures that Interface_OperStatus implements the yang.GoEnum
// interface. This ensures that Interface_OperStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_Interface_OperStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Interface_OperStatus.
func (E_Interface_OperStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Interface_OperStatus.
func (e E_Interface_OperStatus) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Interface_OperStatus")
}

const (
	// Interface_OperStatus_UNSET corresponds to the value UNSET of Interface_OperStatus
	Interface_OperStatus_UNSET E_Interface_OperStatus = 0
	// Interface_OperStatus_UP corresponds to the value UP of Interface_OperStatus
	Interface_OperStatus_UP E_Interface_OperStatus = 2
	// Interface_OperStatus_DOWN corresponds to the value DOWN of Interface_OperStatus
	Interface_OperStatus_DOWN E_Interface_OperStatus = 3
	// Interface_OperStatus_TESTING corresponds to the value TESTING of Interface_OperStatus
	Interface_OperStatus_TESTING E_Interface_OperStatus = 4
	// Interface_OperStatus_UNKNOWN corresponds to the value UNKNOWN of Interface_OperStatus
	Interface_OperStatus_UNKNOWN E_Interface_OperStatus = 5
	// Interface_OperStatus_DORMANT corresponds to the value DORMANT of Interface_OperStatus
	Interface_OperStatus_DORMANT E_Interface_OperStatus = 6
	// Interface_OperStatus_NOT_PRESENT corresponds to the value NOT_PRESENT of Interface_OperStatus
	Interface_OperStatus_NOT_PRESENT E_Interface_OperStatus = 7
	// Interface_OperStatus_LOWER_LAYER_DOWN corresponds to the value LOWER_LAYER_DOWN of Interface_OperStatus
	Interface_OperStatus_LOWER_LAYER_DOWN E_Interface_OperStatus = 8
)

// E_Interfaces_LoopbackModeType is a derived int64 type which is used to represent
// the enumerated node Interfaces_LoopbackModeType. An additional value named
// Interfaces_LoopbackModeType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Interfaces_LoopbackModeType int64

// IsYANGGoEnum ensures that Interfaces_LoopbackModeType implements the yang.GoEnum
// interface. This ensures that Interfaces_LoopbackModeType can be identified as a
// mapped type for a YANG enumeration.
func (E_Interfaces_LoopbackModeType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Interfaces_LoopbackModeType.
func (E_Interfaces_LoopbackModeType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Interfaces_LoopbackModeType.
func (e E_Interfaces_LoopbackModeType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Interfaces_LoopbackModeType")
}

const (
	// Interfaces_LoopbackModeType_UNSET corresponds to the value UNSET of Interfaces_LoopbackModeType
	Interfaces_LoopbackModeType_UNSET E_Interfaces_LoopbackModeType = 0
	// Interfaces_LoopbackModeType_NONE corresponds to the value NONE of Interfaces_LoopbackModeType
	Interfaces_LoopbackModeType_NONE E_Interfaces_LoopbackModeType = 1
	// Interfaces_LoopbackModeType_FACILITY corresponds to the value FACILITY of Interfaces_LoopbackModeType
	Interfaces_LoopbackModeType_FACILITY E_Interfaces_LoopbackModeType = 2
	// Interfaces_LoopbackModeType_TERMINAL corresponds to the value TERMINAL of Interfaces_LoopbackModeType
	Interfaces_LoopbackModeType_TERMINAL E_Interfaces_LoopbackModeType = 3
	// Interfaces_LoopbackModeType_ASIC_PHY_LOCAL corresponds to the value ASIC_PHY_LOCAL of Interfaces_LoopbackModeType
	Interfaces_LoopbackModeType_ASIC_PHY_LOCAL E_Interfaces_LoopbackModeType = 4
	// Interfaces_LoopbackModeType_ASIC_PHY_REMOTE corresponds to the value ASIC_PHY_REMOTE of Interfaces_LoopbackModeType
	Interfaces_LoopbackModeType_ASIC_PHY_REMOTE E_Interfaces_LoopbackModeType = 5
	// Interfaces_LoopbackModeType_ASIC_MAC_LOCAL corresponds to the value ASIC_MAC_LOCAL of Interfaces_LoopbackModeType
	Interfaces_LoopbackModeType_ASIC_MAC_LOCAL E_Interfaces_LoopbackModeType = 6
	// Interfaces_LoopbackModeType_ASIC_MAC_REMOTE corresponds to the value ASIC_MAC_REMOTE of Interfaces_LoopbackModeType
	Interfaces_LoopbackModeType_ASIC_MAC_REMOTE E_Interfaces_LoopbackModeType = 7
)

// E_Ipv4Srlg_Flags is a derived int64 type which is used to represent
// the enumerated node Ipv4Srlg_Flags. An additional value named
// Ipv4Srlg_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv4Srlg_Flags int64

// IsYANGGoEnum ensures that Ipv4Srlg_Flags implements the yang.GoEnum
// interface. This ensures that Ipv4Srlg_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv4Srlg_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv4Srlg_Flags.
func (E_Ipv4Srlg_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ipv4Srlg_Flags.
func (e E_Ipv4Srlg_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv4Srlg_Flags")
}

const (
	// Ipv4Srlg_Flags_UNSET corresponds to the value UNSET of Ipv4Srlg_Flags
	Ipv4Srlg_Flags_UNSET E_Ipv4Srlg_Flags = 0
	// Ipv4Srlg_Flags_NUMBERED corresponds to the value NUMBERED of Ipv4Srlg_Flags
	Ipv4Srlg_Flags_NUMBERED E_Ipv4Srlg_Flags = 1
)

// E_Ipv6Srlg_Flags is a derived int64 type which is used to represent
// the enumerated node Ipv6Srlg_Flags. An additional value named
// Ipv6Srlg_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv6Srlg_Flags int64

// IsYANGGoEnum ensures that Ipv6Srlg_Flags implements the yang.GoEnum
// interface. This ensures that Ipv6Srlg_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv6Srlg_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv6Srlg_Flags.
func (E_Ipv6Srlg_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ipv6Srlg_Flags.
func (e E_Ipv6Srlg_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv6Srlg_Flags")
}

const (
	// Ipv6Srlg_Flags_UNSET corresponds to the value UNSET of Ipv6Srlg_Flags
	Ipv6Srlg_Flags_UNSET E_Ipv6Srlg_Flags = 0
	// Ipv6Srlg_Flags_NA corresponds to the value NA of Ipv6Srlg_Flags
	Ipv6Srlg_Flags_NA E_Ipv6Srlg_Flags = 1
)

// E_Ipv6_LearnUnsolicited is a derived int64 type which is used to represent
// the enumerated node Ipv6_LearnUnsolicited. An additional value named
// Ipv6_LearnUnsolicited_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ipv6_LearnUnsolicited int64

// IsYANGGoEnum ensures that Ipv6_LearnUnsolicited implements the yang.GoEnum
// interface. This ensures that Ipv6_LearnUnsolicited can be identified as a
// mapped type for a YANG enumeration.
func (E_Ipv6_LearnUnsolicited) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ipv6_LearnUnsolicited.
func (E_Ipv6_LearnUnsolicited) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ipv6_LearnUnsolicited.
func (e E_Ipv6_LearnUnsolicited) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ipv6_LearnUnsolicited")
}

const (
	// Ipv6_LearnUnsolicited_UNSET corresponds to the value UNSET of Ipv6_LearnUnsolicited
	Ipv6_LearnUnsolicited_UNSET E_Ipv6_LearnUnsolicited = 0
	// Ipv6_LearnUnsolicited_NONE corresponds to the value NONE of Ipv6_LearnUnsolicited
	Ipv6_LearnUnsolicited_NONE E_Ipv6_LearnUnsolicited = 1
	// Ipv6_LearnUnsolicited_GLOBAL corresponds to the value GLOBAL of Ipv6_LearnUnsolicited
	Ipv6_LearnUnsolicited_GLOBAL E_Ipv6_LearnUnsolicited = 2
	// Ipv6_LearnUnsolicited_LINK_LOCAL corresponds to the value LINK_LOCAL of Ipv6_LearnUnsolicited
	Ipv6_LearnUnsolicited_LINK_LOCAL E_Ipv6_LearnUnsolicited = 3
	// Ipv6_LearnUnsolicited_BOTH corresponds to the value BOTH of Ipv6_LearnUnsolicited
	Ipv6_LearnUnsolicited_BOTH E_Ipv6_LearnUnsolicited = 4
)

// E_IsisLsdbTypes_ISIS_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisLsdbTypes_ISIS_SUBTLV_TYPE. An additional value named
// IsisLsdbTypes_ISIS_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisLsdbTypes_ISIS_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that IsisLsdbTypes_ISIS_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that IsisLsdbTypes_ISIS_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisLsdbTypes_ISIS_SUBTLV_TYPE.
func (E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_IsisLsdbTypes_ISIS_SUBTLV_TYPE.
func (e E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisLsdbTypes_ISIS_SUBTLV_TYPE")
}

const (
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_UNSET corresponds to the value UNSET of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_UNSET E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 0
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV4_ROUTER_ID corresponds to the value IP_REACHABILITY_IPV4_ROUTER_ID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV4_ROUTER_ID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 1
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV6_ROUTER_ID corresponds to the value IP_REACHABILITY_IPV6_ROUTER_ID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV6_ROUTER_ID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 2
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_FLAGS corresponds to the value IP_REACHABILITY_PREFIX_FLAGS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_FLAGS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 3
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_SID corresponds to the value IP_REACHABILITY_PREFIX_SID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_SID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 4
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_SUBTLVS_TYPE corresponds to the value IP_REACHABILITY_SUBTLVS_TYPE of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_SUBTLVS_TYPE E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 5
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG corresponds to the value IP_REACHABILITY_TAG of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 6
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG64 corresponds to the value IP_REACHABILITY_TAG64 of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG64 E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 7
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_LAN_SID corresponds to the value IS_REACHABILITY_ADJ_LAN_SID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_LAN_SID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 8
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_SID corresponds to the value IS_REACHABILITY_ADJ_SID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_SID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 9
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADMIN_GROUP corresponds to the value IS_REACHABILITY_ADMIN_GROUP of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADMIN_GROUP E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 10
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_AVAILABLE_BANDWIDTH corresponds to the value IS_REACHABILITY_AVAILABLE_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_AVAILABLE_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 11
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_BANDWIDTH_CONSTRAINTS corresponds to the value IS_REACHABILITY_BANDWIDTH_CONSTRAINTS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_BANDWIDTH_CONSTRAINTS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 12
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_EXTENDED_ADMIN_GROUP corresponds to the value IS_REACHABILITY_EXTENDED_ADMIN_GROUP of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_EXTENDED_ADMIN_GROUP E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 13
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_INTERFACE_ADDRESS corresponds to the value IS_REACHABILITY_IPV4_INTERFACE_ADDRESS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_INTERFACE_ADDRESS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 14
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_NEIGHBOR_ADDRESS corresponds to the value IS_REACHABILITY_IPV4_NEIGHBOR_ADDRESS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_NEIGHBOR_ADDRESS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 15
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_INTERFACE_ADDRESS corresponds to the value IS_REACHABILITY_IPV6_INTERFACE_ADDRESS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_INTERFACE_ADDRESS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 16
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_NEIGHBOR_ADDRESS corresponds to the value IS_REACHABILITY_IPV6_NEIGHBOR_ADDRESS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_NEIGHBOR_ADDRESS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 17
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ATTRIBUTES corresponds to the value IS_REACHABILITY_LINK_ATTRIBUTES of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ATTRIBUTES E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 18
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY corresponds to the value IS_REACHABILITY_LINK_DELAY of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 19
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY_VARIATION corresponds to the value IS_REACHABILITY_LINK_DELAY_VARIATION of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY_VARIATION E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 20
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ID corresponds to the value IS_REACHABILITY_LINK_ID of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ID E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 21
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_LOSS corresponds to the value IS_REACHABILITY_LINK_LOSS of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_LOSS E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 22
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_PROTECTION_TYPE corresponds to the value IS_REACHABILITY_LINK_PROTECTION_TYPE of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_PROTECTION_TYPE E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 23
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_LINK_BANDWIDTH corresponds to the value IS_REACHABILITY_MAX_LINK_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_LINK_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 24
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_RESERVABLE_BANDWIDTH corresponds to the value IS_REACHABILITY_MAX_RESERVABLE_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_RESERVABLE_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 25
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MIN_MAX_LINK_DELAY corresponds to the value IS_REACHABILITY_MIN_MAX_LINK_DELAY of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MIN_MAX_LINK_DELAY E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 26
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_RESIDUAL_BANDWIDTH corresponds to the value IS_REACHABILITY_RESIDUAL_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_RESIDUAL_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 27
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_SUBTLVS_TYPE corresponds to the value IS_REACHABILITY_SUBTLVS_TYPE of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_SUBTLVS_TYPE E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 28
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_TE_DEFAULT_METRIC corresponds to the value IS_REACHABILITY_TE_DEFAULT_METRIC of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_TE_DEFAULT_METRIC E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 29
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNCONSTRAINED_LSP corresponds to the value IS_REACHABILITY_UNCONSTRAINED_LSP of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNCONSTRAINED_LSP E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 30
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNRESERVED_BANDWIDTH corresponds to the value IS_REACHABILITY_UNRESERVED_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNRESERVED_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 31
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UTILIZED_BANDWIDTH corresponds to the value IS_REACHABILITY_UTILIZED_BANDWIDTH of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UTILIZED_BANDWIDTH E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 32
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_ALGORITHM corresponds to the value ROUTER_CAPABILITY_SR_ALGORITHM of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_ALGORITHM E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 33
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_CAPABILITY corresponds to the value ROUTER_CAPABILITY_SR_CAPABILITY of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_CAPABILITY E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 34
	// IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SUBTLVS_TYPE corresponds to the value ROUTER_CAPABILITY_SUBTLVS_TYPE of IsisLsdbTypes_ISIS_SUBTLV_TYPE
	IsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SUBTLVS_TYPE E_IsisLsdbTypes_ISIS_SUBTLV_TYPE = 35
)

// E_IsisLsdbTypes_ISIS_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisLsdbTypes_ISIS_TLV_TYPE. An additional value named
// IsisLsdbTypes_ISIS_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisLsdbTypes_ISIS_TLV_TYPE int64

// IsYANGGoEnum ensures that IsisLsdbTypes_ISIS_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that IsisLsdbTypes_ISIS_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisLsdbTypes_ISIS_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisLsdbTypes_ISIS_TLV_TYPE.
func (E_IsisLsdbTypes_ISIS_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisLsdbTypes_ISIS_TLV_TYPE.
func (e E_IsisLsdbTypes_ISIS_TLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisLsdbTypes_ISIS_TLV_TYPE")
}

const (
	// IsisLsdbTypes_ISIS_TLV_TYPE_UNSET corresponds to the value UNSET of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_UNSET E_IsisLsdbTypes_ISIS_TLV_TYPE = 0
	// IsisLsdbTypes_ISIS_TLV_TYPE_AREA_ADDRESSES corresponds to the value AREA_ADDRESSES of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_AREA_ADDRESSES E_IsisLsdbTypes_ISIS_TLV_TYPE = 1
	// IsisLsdbTypes_ISIS_TLV_TYPE_AUTHENTICATION corresponds to the value AUTHENTICATION of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_AUTHENTICATION E_IsisLsdbTypes_ISIS_TLV_TYPE = 2
	// IsisLsdbTypes_ISIS_TLV_TYPE_DYNAMIC_NAME corresponds to the value DYNAMIC_NAME of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_DYNAMIC_NAME E_IsisLsdbTypes_ISIS_TLV_TYPE = 3
	// IsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IPV4_REACHABILITY corresponds to the value EXTENDED_IPV4_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IPV4_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 4
	// IsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IS_REACHABILITY corresponds to the value EXTENDED_IS_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IS_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 5
	// IsisLsdbTypes_ISIS_TLV_TYPE_IIS_NEIGHBORS corresponds to the value IIS_NEIGHBORS of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IIS_NEIGHBORS E_IsisLsdbTypes_ISIS_TLV_TYPE = 6
	// IsisLsdbTypes_ISIS_TLV_TYPE_INSTANCE_ID corresponds to the value INSTANCE_ID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_INSTANCE_ID E_IsisLsdbTypes_ISIS_TLV_TYPE = 7
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_EXTERNAL_REACHABILITY corresponds to the value IPV4_EXTERNAL_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_EXTERNAL_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 8
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERFACE_ADDRESSES corresponds to the value IPV4_INTERFACE_ADDRESSES of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERFACE_ADDRESSES E_IsisLsdbTypes_ISIS_TLV_TYPE = 9
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERNAL_REACHABILITY corresponds to the value IPV4_INTERNAL_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERNAL_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 10
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_SRLG corresponds to the value IPV4_SRLG of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_SRLG E_IsisLsdbTypes_ISIS_TLV_TYPE = 11
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_TE_ROUTER_ID corresponds to the value IPV4_TE_ROUTER_ID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV4_TE_ROUTER_ID E_IsisLsdbTypes_ISIS_TLV_TYPE = 12
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_INTERFACE_ADDRESSES corresponds to the value IPV6_INTERFACE_ADDRESSES of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_INTERFACE_ADDRESSES E_IsisLsdbTypes_ISIS_TLV_TYPE = 13
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_REACHABILITY corresponds to the value IPV6_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 14
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_SRLG corresponds to the value IPV6_SRLG of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_SRLG E_IsisLsdbTypes_ISIS_TLV_TYPE = 15
	// IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_TE_ROUTER_ID corresponds to the value IPV6_TE_ROUTER_ID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IPV6_TE_ROUTER_ID E_IsisLsdbTypes_ISIS_TLV_TYPE = 16
	// IsisLsdbTypes_ISIS_TLV_TYPE_ISIS_ALIAS_ID corresponds to the value ISIS_ALIAS_ID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_ISIS_ALIAS_ID E_IsisLsdbTypes_ISIS_TLV_TYPE = 17
	// IsisLsdbTypes_ISIS_TLV_TYPE_IS_NEIGHBOR_ATTRIBUTE corresponds to the value IS_NEIGHBOR_ATTRIBUTE of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_IS_NEIGHBOR_ATTRIBUTE E_IsisLsdbTypes_ISIS_TLV_TYPE = 18
	// IsisLsdbTypes_ISIS_TLV_TYPE_LSP_BUFFER_SIZE corresponds to the value LSP_BUFFER_SIZE of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_LSP_BUFFER_SIZE E_IsisLsdbTypes_ISIS_TLV_TYPE = 19
	// IsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV4_REACHABILITY corresponds to the value MT_IPV4_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV4_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 20
	// IsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV6_REACHABILITY corresponds to the value MT_IPV6_REACHABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV6_REACHABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 21
	// IsisLsdbTypes_ISIS_TLV_TYPE_MT_ISN corresponds to the value MT_ISN of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MT_ISN E_IsisLsdbTypes_ISIS_TLV_TYPE = 22
	// IsisLsdbTypes_ISIS_TLV_TYPE_MT_IS_NEIGHBOR_ATTRIBUTE corresponds to the value MT_IS_NEIGHBOR_ATTRIBUTE of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MT_IS_NEIGHBOR_ATTRIBUTE E_IsisLsdbTypes_ISIS_TLV_TYPE = 23
	// IsisLsdbTypes_ISIS_TLV_TYPE_MULTI_TOPOLOGY corresponds to the value MULTI_TOPOLOGY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_MULTI_TOPOLOGY E_IsisLsdbTypes_ISIS_TLV_TYPE = 24
	// IsisLsdbTypes_ISIS_TLV_TYPE_NLPID corresponds to the value NLPID of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_NLPID E_IsisLsdbTypes_ISIS_TLV_TYPE = 25
	// IsisLsdbTypes_ISIS_TLV_TYPE_PURGE_OI corresponds to the value PURGE_OI of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_PURGE_OI E_IsisLsdbTypes_ISIS_TLV_TYPE = 26
	// IsisLsdbTypes_ISIS_TLV_TYPE_ROUTER_CAPABILITY corresponds to the value ROUTER_CAPABILITY of IsisLsdbTypes_ISIS_TLV_TYPE
	IsisLsdbTypes_ISIS_TLV_TYPE_ROUTER_CAPABILITY E_IsisLsdbTypes_ISIS_TLV_TYPE = 27
)

// E_IsisPolicy_MetricStyle is a derived int64 type which is used to represent
// the enumerated node IsisPolicy_MetricStyle. An additional value named
// IsisPolicy_MetricStyle_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisPolicy_MetricStyle int64

// IsYANGGoEnum ensures that IsisPolicy_MetricStyle implements the yang.GoEnum
// interface. This ensures that IsisPolicy_MetricStyle can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisPolicy_MetricStyle) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisPolicy_MetricStyle.
func (E_IsisPolicy_MetricStyle) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisPolicy_MetricStyle.
func (e E_IsisPolicy_MetricStyle) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisPolicy_MetricStyle")
}

const (
	// IsisPolicy_MetricStyle_UNSET corresponds to the value UNSET of IsisPolicy_MetricStyle
	IsisPolicy_MetricStyle_UNSET E_IsisPolicy_MetricStyle = 0
	// IsisPolicy_MetricStyle_NARROW_METRIC corresponds to the value NARROW_METRIC of IsisPolicy_MetricStyle
	IsisPolicy_MetricStyle_NARROW_METRIC E_IsisPolicy_MetricStyle = 1
	// IsisPolicy_MetricStyle_WIDE_METRIC corresponds to the value WIDE_METRIC of IsisPolicy_MetricStyle
	IsisPolicy_MetricStyle_WIDE_METRIC E_IsisPolicy_MetricStyle = 2
)

// E_IsisPolicy_MetricType is a derived int64 type which is used to represent
// the enumerated node IsisPolicy_MetricType. An additional value named
// IsisPolicy_MetricType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisPolicy_MetricType int64

// IsYANGGoEnum ensures that IsisPolicy_MetricType implements the yang.GoEnum
// interface. This ensures that IsisPolicy_MetricType can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisPolicy_MetricType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisPolicy_MetricType.
func (E_IsisPolicy_MetricType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisPolicy_MetricType.
func (e E_IsisPolicy_MetricType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisPolicy_MetricType")
}

const (
	// IsisPolicy_MetricType_UNSET corresponds to the value UNSET of IsisPolicy_MetricType
	IsisPolicy_MetricType_UNSET E_IsisPolicy_MetricType = 0
	// IsisPolicy_MetricType_INTERNAL corresponds to the value INTERNAL of IsisPolicy_MetricType
	IsisPolicy_MetricType_INTERNAL E_IsisPolicy_MetricType = 1
	// IsisPolicy_MetricType_EXTERNAL corresponds to the value EXTERNAL of IsisPolicy_MetricType
	IsisPolicy_MetricType_EXTERNAL E_IsisPolicy_MetricType = 2
)

// E_IsisTypes_AFI_SAFI_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_AFI_SAFI_TYPE. An additional value named
// IsisTypes_AFI_SAFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_AFI_SAFI_TYPE int64

// IsYANGGoEnum ensures that IsisTypes_AFI_SAFI_TYPE implements the yang.GoEnum
// interface. This ensures that IsisTypes_AFI_SAFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_AFI_SAFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_AFI_SAFI_TYPE.
func (E_IsisTypes_AFI_SAFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_AFI_SAFI_TYPE.
func (e E_IsisTypes_AFI_SAFI_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_AFI_SAFI_TYPE")
}

const (
	// IsisTypes_AFI_SAFI_TYPE_UNSET corresponds to the value UNSET of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_UNSET E_IsisTypes_AFI_SAFI_TYPE = 0
	// IsisTypes_AFI_SAFI_TYPE_IPV4_MULTICAST corresponds to the value IPV4_MULTICAST of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_IPV4_MULTICAST E_IsisTypes_AFI_SAFI_TYPE = 1
	// IsisTypes_AFI_SAFI_TYPE_IPV4_UNICAST corresponds to the value IPV4_UNICAST of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_IPV4_UNICAST E_IsisTypes_AFI_SAFI_TYPE = 2
	// IsisTypes_AFI_SAFI_TYPE_IPV6_MULTICAST corresponds to the value IPV6_MULTICAST of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_IPV6_MULTICAST E_IsisTypes_AFI_SAFI_TYPE = 3
	// IsisTypes_AFI_SAFI_TYPE_IPV6_UNICAST corresponds to the value IPV6_UNICAST of IsisTypes_AFI_SAFI_TYPE
	IsisTypes_AFI_SAFI_TYPE_IPV6_UNICAST E_IsisTypes_AFI_SAFI_TYPE = 4
)

// E_IsisTypes_AFI_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_AFI_TYPE. An additional value named
// IsisTypes_AFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_AFI_TYPE int64

// IsYANGGoEnum ensures that IsisTypes_AFI_TYPE implements the yang.GoEnum
// interface. This ensures that IsisTypes_AFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_AFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_AFI_TYPE.
func (E_IsisTypes_AFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_AFI_TYPE.
func (e E_IsisTypes_AFI_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_AFI_TYPE")
}

const (
	// IsisTypes_AFI_TYPE_UNSET corresponds to the value UNSET of IsisTypes_AFI_TYPE
	IsisTypes_AFI_TYPE_UNSET E_IsisTypes_AFI_TYPE = 0
	// IsisTypes_AFI_TYPE_IPV4 corresponds to the value IPV4 of IsisTypes_AFI_TYPE
	IsisTypes_AFI_TYPE_IPV4 E_IsisTypes_AFI_TYPE = 1
	// IsisTypes_AFI_TYPE_IPV6 corresponds to the value IPV6 of IsisTypes_AFI_TYPE
	IsisTypes_AFI_TYPE_IPV6 E_IsisTypes_AFI_TYPE = 2
)

// E_IsisTypes_AUTH_MODE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_AUTH_MODE. An additional value named
// IsisTypes_AUTH_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_AUTH_MODE int64

// IsYANGGoEnum ensures that IsisTypes_AUTH_MODE implements the yang.GoEnum
// interface. This ensures that IsisTypes_AUTH_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_AUTH_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_AUTH_MODE.
func (E_IsisTypes_AUTH_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_AUTH_MODE.
func (e E_IsisTypes_AUTH_MODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_AUTH_MODE")
}

const (
	// IsisTypes_AUTH_MODE_UNSET corresponds to the value UNSET of IsisTypes_AUTH_MODE
	IsisTypes_AUTH_MODE_UNSET E_IsisTypes_AUTH_MODE = 0
	// IsisTypes_AUTH_MODE_MD5 corresponds to the value MD5 of IsisTypes_AUTH_MODE
	IsisTypes_AUTH_MODE_MD5 E_IsisTypes_AUTH_MODE = 1
	// IsisTypes_AUTH_MODE_TEXT corresponds to the value TEXT of IsisTypes_AUTH_MODE
	IsisTypes_AUTH_MODE_TEXT E_IsisTypes_AUTH_MODE = 2
)

// E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE. An additional value named
// IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE int64

// IsYANGGoEnum ensures that IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE implements the yang.GoEnum
// interface. This ensures that IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE.
func (E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE.
func (e E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE")
}

const (
	// IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_UNSET corresponds to the value UNSET of IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
	IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_UNSET E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE = 0
	// IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_BGP corresponds to the value WAIT_FOR_BGP of IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
	IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_BGP E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE = 1
	// IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_SYSTEM corresponds to the value WAIT_FOR_SYSTEM of IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
	IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_SYSTEM E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE = 2
)

// E_IsisTypes_SAFI_TYPE is a derived int64 type which is used to represent
// the enumerated node IsisTypes_SAFI_TYPE. An additional value named
// IsisTypes_SAFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IsisTypes_SAFI_TYPE int64

// IsYANGGoEnum ensures that IsisTypes_SAFI_TYPE implements the yang.GoEnum
// interface. This ensures that IsisTypes_SAFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_IsisTypes_SAFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IsisTypes_SAFI_TYPE.
func (E_IsisTypes_SAFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_IsisTypes_SAFI_TYPE.
func (e E_IsisTypes_SAFI_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_IsisTypes_SAFI_TYPE")
}

const (
	// IsisTypes_SAFI_TYPE_UNSET corresponds to the value UNSET of IsisTypes_SAFI_TYPE
	IsisTypes_SAFI_TYPE_UNSET E_IsisTypes_SAFI_TYPE = 0
	// IsisTypes_SAFI_TYPE_MULTICAST corresponds to the value MULTICAST of IsisTypes_SAFI_TYPE
	IsisTypes_SAFI_TYPE_MULTICAST E_IsisTypes_SAFI_TYPE = 1
	// IsisTypes_SAFI_TYPE_UNICAST corresponds to the value UNICAST of IsisTypes_SAFI_TYPE
	IsisTypes_SAFI_TYPE_UNICAST E_IsisTypes_SAFI_TYPE = 2
)

// E_Isis_AdaptiveTimerType is a derived int64 type which is used to represent
// the enumerated node Isis_AdaptiveTimerType. An additional value named
// Isis_AdaptiveTimerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Isis_AdaptiveTimerType int64

// IsYANGGoEnum ensures that Isis_AdaptiveTimerType implements the yang.GoEnum
// interface. This ensures that Isis_AdaptiveTimerType can be identified as a
// mapped type for a YANG enumeration.
func (E_Isis_AdaptiveTimerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Isis_AdaptiveTimerType.
func (E_Isis_AdaptiveTimerType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Isis_AdaptiveTimerType.
func (e E_Isis_AdaptiveTimerType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Isis_AdaptiveTimerType")
}

const (
	// Isis_AdaptiveTimerType_UNSET corresponds to the value UNSET of Isis_AdaptiveTimerType
	Isis_AdaptiveTimerType_UNSET E_Isis_AdaptiveTimerType = 0
	// Isis_AdaptiveTimerType_LINEAR corresponds to the value LINEAR of Isis_AdaptiveTimerType
	Isis_AdaptiveTimerType_LINEAR E_Isis_AdaptiveTimerType = 1
	// Isis_AdaptiveTimerType_EXPONENTIAL corresponds to the value EXPONENTIAL of Isis_AdaptiveTimerType
	Isis_AdaptiveTimerType_EXPONENTIAL E_Isis_AdaptiveTimerType = 2
)

// E_Isis_CircuitType is a derived int64 type which is used to represent
// the enumerated node Isis_CircuitType. An additional value named
// Isis_CircuitType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Isis_CircuitType int64

// IsYANGGoEnum ensures that Isis_CircuitType implements the yang.GoEnum
// interface. This ensures that Isis_CircuitType can be identified as a
// mapped type for a YANG enumeration.
func (E_Isis_CircuitType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Isis_CircuitType.
func (E_Isis_CircuitType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Isis_CircuitType.
func (e E_Isis_CircuitType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Isis_CircuitType")
}

const (
	// Isis_CircuitType_UNSET corresponds to the value UNSET of Isis_CircuitType
	Isis_CircuitType_UNSET E_Isis_CircuitType = 0
	// Isis_CircuitType_POINT_TO_POINT corresponds to the value POINT_TO_POINT of Isis_CircuitType
	Isis_CircuitType_POINT_TO_POINT E_Isis_CircuitType = 1
	// Isis_CircuitType_BROADCAST corresponds to the value BROADCAST of Isis_CircuitType
	Isis_CircuitType_BROADCAST E_Isis_CircuitType = 2
)

// E_Isis_HelloPaddingType is a derived int64 type which is used to represent
// the enumerated node Isis_HelloPaddingType. An additional value named
// Isis_HelloPaddingType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Isis_HelloPaddingType int64

// IsYANGGoEnum ensures that Isis_HelloPaddingType implements the yang.GoEnum
// interface. This ensures that Isis_HelloPaddingType can be identified as a
// mapped type for a YANG enumeration.
func (E_Isis_HelloPaddingType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Isis_HelloPaddingType.
func (E_Isis_HelloPaddingType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Isis_HelloPaddingType.
func (e E_Isis_HelloPaddingType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Isis_HelloPaddingType")
}

const (
	// Isis_HelloPaddingType_UNSET corresponds to the value UNSET of Isis_HelloPaddingType
	Isis_HelloPaddingType_UNSET E_Isis_HelloPaddingType = 0
	// Isis_HelloPaddingType_STRICT corresponds to the value STRICT of Isis_HelloPaddingType
	Isis_HelloPaddingType_STRICT E_Isis_HelloPaddingType = 1
	// Isis_HelloPaddingType_LOOSE corresponds to the value LOOSE of Isis_HelloPaddingType
	Isis_HelloPaddingType_LOOSE E_Isis_HelloPaddingType = 2
	// Isis_HelloPaddingType_ADAPTIVE corresponds to the value ADAPTIVE of Isis_HelloPaddingType
	Isis_HelloPaddingType_ADAPTIVE E_Isis_HelloPaddingType = 3
	// Isis_HelloPaddingType_DISABLE corresponds to the value DISABLE of Isis_HelloPaddingType
	Isis_HelloPaddingType_DISABLE E_Isis_HelloPaddingType = 4
)

// E_Isis_IsisInterfaceAdjState is a derived int64 type which is used to represent
// the enumerated node Isis_IsisInterfaceAdjState. An additional value named
// Isis_IsisInterfaceAdjState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Isis_IsisInterfaceAdjState int64

// IsYANGGoEnum ensures that Isis_IsisInterfaceAdjState implements the yang.GoEnum
// interface. This ensures that Isis_IsisInterfaceAdjState can be identified as a
// mapped type for a YANG enumeration.
func (E_Isis_IsisInterfaceAdjState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Isis_IsisInterfaceAdjState.
func (E_Isis_IsisInterfaceAdjState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Isis_IsisInterfaceAdjState.
func (e E_Isis_IsisInterfaceAdjState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Isis_IsisInterfaceAdjState")
}

const (
	// Isis_IsisInterfaceAdjState_UNSET corresponds to the value UNSET of Isis_IsisInterfaceAdjState
	Isis_IsisInterfaceAdjState_UNSET E_Isis_IsisInterfaceAdjState = 0
	// Isis_IsisInterfaceAdjState_UP corresponds to the value UP of Isis_IsisInterfaceAdjState
	Isis_IsisInterfaceAdjState_UP E_Isis_IsisInterfaceAdjState = 1
	// Isis_IsisInterfaceAdjState_DOWN corresponds to the value DOWN of Isis_IsisInterfaceAdjState
	Isis_IsisInterfaceAdjState_DOWN E_Isis_IsisInterfaceAdjState = 2
	// Isis_IsisInterfaceAdjState_INIT corresponds to the value INIT of Isis_IsisInterfaceAdjState
	Isis_IsisInterfaceAdjState_INIT E_Isis_IsisInterfaceAdjState = 3
	// Isis_IsisInterfaceAdjState_FAILED corresponds to the value FAILED of Isis_IsisInterfaceAdjState
	Isis_IsisInterfaceAdjState_FAILED E_Isis_IsisInterfaceAdjState = 4
)

// E_Isis_IsisMetricFlags is a derived int64 type which is used to represent
// the enumerated node Isis_IsisMetricFlags. An additional value named
// Isis_IsisMetricFlags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Isis_IsisMetricFlags int64

// IsYANGGoEnum ensures that Isis_IsisMetricFlags implements the yang.GoEnum
// interface. This ensures that Isis_IsisMetricFlags can be identified as a
// mapped type for a YANG enumeration.
func (E_Isis_IsisMetricFlags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Isis_IsisMetricFlags.
func (E_Isis_IsisMetricFlags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Isis_IsisMetricFlags.
func (e E_Isis_IsisMetricFlags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Isis_IsisMetricFlags")
}

const (
	// Isis_IsisMetricFlags_UNSET corresponds to the value UNSET of Isis_IsisMetricFlags
	Isis_IsisMetricFlags_UNSET E_Isis_IsisMetricFlags = 0
	// Isis_IsisMetricFlags_INTERNAL corresponds to the value INTERNAL of Isis_IsisMetricFlags
	Isis_IsisMetricFlags_INTERNAL E_Isis_IsisMetricFlags = 1
	// Isis_IsisMetricFlags_UNSUPPORTED corresponds to the value UNSUPPORTED of Isis_IsisMetricFlags
	Isis_IsisMetricFlags_UNSUPPORTED E_Isis_IsisMetricFlags = 2
)

// E_Isis_LevelType is a derived int64 type which is used to represent
// the enumerated node Isis_LevelType. An additional value named
// Isis_LevelType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Isis_LevelType int64

// IsYANGGoEnum ensures that Isis_LevelType implements the yang.GoEnum
// interface. This ensures that Isis_LevelType can be identified as a
// mapped type for a YANG enumeration.
func (E_Isis_LevelType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Isis_LevelType.
func (E_Isis_LevelType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Isis_LevelType.
func (e E_Isis_LevelType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Isis_LevelType")
}

const (
	// Isis_LevelType_UNSET corresponds to the value UNSET of Isis_LevelType
	Isis_LevelType_UNSET E_Isis_LevelType = 0
	// Isis_LevelType_LEVEL_1 corresponds to the value LEVEL_1 of Isis_LevelType
	Isis_LevelType_LEVEL_1 E_Isis_LevelType = 1
	// Isis_LevelType_LEVEL_2 corresponds to the value LEVEL_2 of Isis_LevelType
	Isis_LevelType_LEVEL_2 E_Isis_LevelType = 2
	// Isis_LevelType_LEVEL_1_2 corresponds to the value LEVEL_1_2 of Isis_LevelType
	Isis_LevelType_LEVEL_1_2 E_Isis_LevelType = 3
)

// E_Isis_MetricStyle is a derived int64 type which is used to represent
// the enumerated node Isis_MetricStyle. An additional value named
// Isis_MetricStyle_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Isis_MetricStyle int64

// IsYANGGoEnum ensures that Isis_MetricStyle implements the yang.GoEnum
// interface. This ensures that Isis_MetricStyle can be identified as a
// mapped type for a YANG enumeration.
func (E_Isis_MetricStyle) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Isis_MetricStyle.
func (E_Isis_MetricStyle) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Isis_MetricStyle.
func (e E_Isis_MetricStyle) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Isis_MetricStyle")
}

const (
	// Isis_MetricStyle_UNSET corresponds to the value UNSET of Isis_MetricStyle
	Isis_MetricStyle_UNSET E_Isis_MetricStyle = 0
	// Isis_MetricStyle_NARROW_METRIC corresponds to the value NARROW_METRIC of Isis_MetricStyle
	Isis_MetricStyle_NARROW_METRIC E_Isis_MetricStyle = 1
	// Isis_MetricStyle_WIDE_METRIC corresponds to the value WIDE_METRIC of Isis_MetricStyle
	Isis_MetricStyle_WIDE_METRIC E_Isis_MetricStyle = 2
)

// E_KeychainTypes_AUTH_TYPE is a derived int64 type which is used to represent
// the enumerated node KeychainTypes_AUTH_TYPE. An additional value named
// KeychainTypes_AUTH_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_KeychainTypes_AUTH_TYPE int64

// IsYANGGoEnum ensures that KeychainTypes_AUTH_TYPE implements the yang.GoEnum
// interface. This ensures that KeychainTypes_AUTH_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_KeychainTypes_AUTH_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  KeychainTypes_AUTH_TYPE.
func (E_KeychainTypes_AUTH_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_KeychainTypes_AUTH_TYPE.
func (e E_KeychainTypes_AUTH_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_KeychainTypes_AUTH_TYPE")
}

const (
	// KeychainTypes_AUTH_TYPE_UNSET corresponds to the value UNSET of KeychainTypes_AUTH_TYPE
	KeychainTypes_AUTH_TYPE_UNSET E_KeychainTypes_AUTH_TYPE = 0
	// KeychainTypes_AUTH_TYPE_KEYCHAIN corresponds to the value KEYCHAIN of KeychainTypes_AUTH_TYPE
	KeychainTypes_AUTH_TYPE_KEYCHAIN E_KeychainTypes_AUTH_TYPE = 1
	// KeychainTypes_AUTH_TYPE_SIMPLE_KEY corresponds to the value SIMPLE_KEY of KeychainTypes_AUTH_TYPE
	KeychainTypes_AUTH_TYPE_SIMPLE_KEY E_KeychainTypes_AUTH_TYPE = 2
)

// E_KeychainTypes_CRYPTO_TYPE is a derived int64 type which is used to represent
// the enumerated node KeychainTypes_CRYPTO_TYPE. An additional value named
// KeychainTypes_CRYPTO_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_KeychainTypes_CRYPTO_TYPE int64

// IsYANGGoEnum ensures that KeychainTypes_CRYPTO_TYPE implements the yang.GoEnum
// interface. This ensures that KeychainTypes_CRYPTO_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_KeychainTypes_CRYPTO_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  KeychainTypes_CRYPTO_TYPE.
func (E_KeychainTypes_CRYPTO_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_KeychainTypes_CRYPTO_TYPE.
func (e E_KeychainTypes_CRYPTO_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_KeychainTypes_CRYPTO_TYPE")
}

const (
	// KeychainTypes_CRYPTO_TYPE_UNSET corresponds to the value UNSET of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_UNSET E_KeychainTypes_CRYPTO_TYPE = 0
	// KeychainTypes_CRYPTO_TYPE_AES_128_CMAC corresponds to the value AES_128_CMAC of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_AES_128_CMAC E_KeychainTypes_CRYPTO_TYPE = 1
	// KeychainTypes_CRYPTO_TYPE_AES_128_CMAC_96 corresponds to the value AES_128_CMAC_96 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_AES_128_CMAC_96 E_KeychainTypes_CRYPTO_TYPE = 2
	// KeychainTypes_CRYPTO_TYPE_AES_256_CMAC corresponds to the value AES_256_CMAC of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_AES_256_CMAC E_KeychainTypes_CRYPTO_TYPE = 3
	// KeychainTypes_CRYPTO_TYPE_CRYPTO_NONE corresponds to the value CRYPTO_NONE of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_CRYPTO_NONE E_KeychainTypes_CRYPTO_TYPE = 4
	// KeychainTypes_CRYPTO_TYPE_HMAC_MD5 corresponds to the value HMAC_MD5 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_MD5 E_KeychainTypes_CRYPTO_TYPE = 5
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1 corresponds to the value HMAC_SHA_1 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1 E_KeychainTypes_CRYPTO_TYPE = 6
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_12 corresponds to the value HMAC_SHA_1_12 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_12 E_KeychainTypes_CRYPTO_TYPE = 7
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_20 corresponds to the value HMAC_SHA_1_20 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_20 E_KeychainTypes_CRYPTO_TYPE = 8
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_96 corresponds to the value HMAC_SHA_1_96 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_1_96 E_KeychainTypes_CRYPTO_TYPE = 9
	// KeychainTypes_CRYPTO_TYPE_HMAC_SHA_256 corresponds to the value HMAC_SHA_256 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_HMAC_SHA_256 E_KeychainTypes_CRYPTO_TYPE = 10
	// KeychainTypes_CRYPTO_TYPE_MD5 corresponds to the value MD5 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_MD5 E_KeychainTypes_CRYPTO_TYPE = 11
	// KeychainTypes_CRYPTO_TYPE_SHA_1 corresponds to the value SHA_1 of KeychainTypes_CRYPTO_TYPE
	KeychainTypes_CRYPTO_TYPE_SHA_1 E_KeychainTypes_CRYPTO_TYPE = 12
)

// E_Keychain_Tolerance is a derived int64 type which is used to represent
// the enumerated node Keychain_Tolerance. An additional value named
// Keychain_Tolerance_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Keychain_Tolerance int64

// IsYANGGoEnum ensures that Keychain_Tolerance implements the yang.GoEnum
// interface. This ensures that Keychain_Tolerance can be identified as a
// mapped type for a YANG enumeration.
func (E_Keychain_Tolerance) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Keychain_Tolerance.
func (E_Keychain_Tolerance) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Keychain_Tolerance.
func (e E_Keychain_Tolerance) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Keychain_Tolerance")
}

const (
	// Keychain_Tolerance_UNSET corresponds to the value UNSET of Keychain_Tolerance
	Keychain_Tolerance_UNSET E_Keychain_Tolerance = 0
	// Keychain_Tolerance_FOREVER corresponds to the value FOREVER of Keychain_Tolerance
	Keychain_Tolerance_FOREVER E_Keychain_Tolerance = 1
)

// E_LabelEntry_Label is a derived int64 type which is used to represent
// the enumerated node LabelEntry_Label. An additional value named
// LabelEntry_Label_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LabelEntry_Label int64

// IsYANGGoEnum ensures that LabelEntry_Label implements the yang.GoEnum
// interface. This ensures that LabelEntry_Label can be identified as a
// mapped type for a YANG enumeration.
func (E_LabelEntry_Label) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LabelEntry_Label.
func (E_LabelEntry_Label) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LabelEntry_Label.
func (e E_LabelEntry_Label) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LabelEntry_Label")
}

const (
	// LabelEntry_Label_UNSET corresponds to the value UNSET of LabelEntry_Label
	LabelEntry_Label_UNSET E_LabelEntry_Label = 0
	// LabelEntry_Label_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of LabelEntry_Label
	LabelEntry_Label_IPV4_EXPLICIT_NULL E_LabelEntry_Label = 1
	// LabelEntry_Label_ROUTER_ALERT corresponds to the value ROUTER_ALERT of LabelEntry_Label
	LabelEntry_Label_ROUTER_ALERT E_LabelEntry_Label = 2
	// LabelEntry_Label_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of LabelEntry_Label
	LabelEntry_Label_IPV6_EXPLICIT_NULL E_LabelEntry_Label = 3
	// LabelEntry_Label_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of LabelEntry_Label
	LabelEntry_Label_IMPLICIT_NULL E_LabelEntry_Label = 4
	// LabelEntry_Label_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of LabelEntry_Label
	LabelEntry_Label_ENTROPY_LABEL_INDICATOR E_LabelEntry_Label = 8
	// LabelEntry_Label_NO_LABEL corresponds to the value NO_LABEL of LabelEntry_Label
	LabelEntry_Label_NO_LABEL E_LabelEntry_Label = 9
)

// E_LabelEntry_PoppedMplsLabelStack is a derived int64 type which is used to represent
// the enumerated node LabelEntry_PoppedMplsLabelStack. An additional value named
// LabelEntry_PoppedMplsLabelStack_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LabelEntry_PoppedMplsLabelStack int64

// IsYANGGoEnum ensures that LabelEntry_PoppedMplsLabelStack implements the yang.GoEnum
// interface. This ensures that LabelEntry_PoppedMplsLabelStack can be identified as a
// mapped type for a YANG enumeration.
func (E_LabelEntry_PoppedMplsLabelStack) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LabelEntry_PoppedMplsLabelStack.
func (E_LabelEntry_PoppedMplsLabelStack) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_LabelEntry_PoppedMplsLabelStack.
func (e E_LabelEntry_PoppedMplsLabelStack) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LabelEntry_PoppedMplsLabelStack")
}

const (
	// LabelEntry_PoppedMplsLabelStack_UNSET corresponds to the value UNSET of LabelEntry_PoppedMplsLabelStack
	LabelEntry_PoppedMplsLabelStack_UNSET E_LabelEntry_PoppedMplsLabelStack = 0
	// LabelEntry_PoppedMplsLabelStack_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of LabelEntry_PoppedMplsLabelStack
	LabelEntry_PoppedMplsLabelStack_IPV4_EXPLICIT_NULL E_LabelEntry_PoppedMplsLabelStack = 1
	// LabelEntry_PoppedMplsLabelStack_ROUTER_ALERT corresponds to the value ROUTER_ALERT of LabelEntry_PoppedMplsLabelStack
	LabelEntry_PoppedMplsLabelStack_ROUTER_ALERT E_LabelEntry_PoppedMplsLabelStack = 2
	// LabelEntry_PoppedMplsLabelStack_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of LabelEntry_PoppedMplsLabelStack
	LabelEntry_PoppedMplsLabelStack_IPV6_EXPLICIT_NULL E_LabelEntry_PoppedMplsLabelStack = 3
	// LabelEntry_PoppedMplsLabelStack_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of LabelEntry_PoppedMplsLabelStack
	LabelEntry_PoppedMplsLabelStack_IMPLICIT_NULL E_LabelEntry_PoppedMplsLabelStack = 4
	// LabelEntry_PoppedMplsLabelStack_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of LabelEntry_PoppedMplsLabelStack
	LabelEntry_PoppedMplsLabelStack_ENTROPY_LABEL_INDICATOR E_LabelEntry_PoppedMplsLabelStack = 8
	// LabelEntry_PoppedMplsLabelStack_NO_LABEL corresponds to the value NO_LABEL of LabelEntry_PoppedMplsLabelStack
	LabelEntry_PoppedMplsLabelStack_NO_LABEL E_LabelEntry_PoppedMplsLabelStack = 9
)

// E_Lacp_LacpActivityType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpActivityType. An additional value named
// Lacp_LacpActivityType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpActivityType int64

// IsYANGGoEnum ensures that Lacp_LacpActivityType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpActivityType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpActivityType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpActivityType.
func (E_Lacp_LacpActivityType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpActivityType.
func (e E_Lacp_LacpActivityType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpActivityType")
}

const (
	// Lacp_LacpActivityType_UNSET corresponds to the value UNSET of Lacp_LacpActivityType
	Lacp_LacpActivityType_UNSET E_Lacp_LacpActivityType = 0
	// Lacp_LacpActivityType_ACTIVE corresponds to the value ACTIVE of Lacp_LacpActivityType
	Lacp_LacpActivityType_ACTIVE E_Lacp_LacpActivityType = 1
	// Lacp_LacpActivityType_PASSIVE corresponds to the value PASSIVE of Lacp_LacpActivityType
	Lacp_LacpActivityType_PASSIVE E_Lacp_LacpActivityType = 2
)

// E_Lacp_LacpPeriodType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpPeriodType. An additional value named
// Lacp_LacpPeriodType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpPeriodType int64

// IsYANGGoEnum ensures that Lacp_LacpPeriodType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpPeriodType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpPeriodType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpPeriodType.
func (E_Lacp_LacpPeriodType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpPeriodType.
func (e E_Lacp_LacpPeriodType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpPeriodType")
}

const (
	// Lacp_LacpPeriodType_UNSET corresponds to the value UNSET of Lacp_LacpPeriodType
	Lacp_LacpPeriodType_UNSET E_Lacp_LacpPeriodType = 0
	// Lacp_LacpPeriodType_FAST corresponds to the value FAST of Lacp_LacpPeriodType
	Lacp_LacpPeriodType_FAST E_Lacp_LacpPeriodType = 1
	// Lacp_LacpPeriodType_SLOW corresponds to the value SLOW of Lacp_LacpPeriodType
	Lacp_LacpPeriodType_SLOW E_Lacp_LacpPeriodType = 2
)

// E_Lacp_LacpSynchronizationType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpSynchronizationType. An additional value named
// Lacp_LacpSynchronizationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpSynchronizationType int64

// IsYANGGoEnum ensures that Lacp_LacpSynchronizationType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpSynchronizationType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpSynchronizationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpSynchronizationType.
func (E_Lacp_LacpSynchronizationType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpSynchronizationType.
func (e E_Lacp_LacpSynchronizationType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpSynchronizationType")
}

const (
	// Lacp_LacpSynchronizationType_UNSET corresponds to the value UNSET of Lacp_LacpSynchronizationType
	Lacp_LacpSynchronizationType_UNSET E_Lacp_LacpSynchronizationType = 0
	// Lacp_LacpSynchronizationType_IN_SYNC corresponds to the value IN_SYNC of Lacp_LacpSynchronizationType
	Lacp_LacpSynchronizationType_IN_SYNC E_Lacp_LacpSynchronizationType = 1
	// Lacp_LacpSynchronizationType_OUT_SYNC corresponds to the value OUT_SYNC of Lacp_LacpSynchronizationType
	Lacp_LacpSynchronizationType_OUT_SYNC E_Lacp_LacpSynchronizationType = 2
)

// E_Lacp_LacpTimeoutType is a derived int64 type which is used to represent
// the enumerated node Lacp_LacpTimeoutType. An additional value named
// Lacp_LacpTimeoutType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lacp_LacpTimeoutType int64

// IsYANGGoEnum ensures that Lacp_LacpTimeoutType implements the yang.GoEnum
// interface. This ensures that Lacp_LacpTimeoutType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lacp_LacpTimeoutType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lacp_LacpTimeoutType.
func (E_Lacp_LacpTimeoutType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lacp_LacpTimeoutType.
func (e E_Lacp_LacpTimeoutType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lacp_LacpTimeoutType")
}

const (
	// Lacp_LacpTimeoutType_UNSET corresponds to the value UNSET of Lacp_LacpTimeoutType
	Lacp_LacpTimeoutType_UNSET E_Lacp_LacpTimeoutType = 0
	// Lacp_LacpTimeoutType_LONG corresponds to the value LONG of Lacp_LacpTimeoutType
	Lacp_LacpTimeoutType_LONG E_Lacp_LacpTimeoutType = 1
	// Lacp_LacpTimeoutType_SHORT corresponds to the value SHORT of Lacp_LacpTimeoutType
	Lacp_LacpTimeoutType_SHORT E_Lacp_LacpTimeoutType = 2
)

// E_LanAdjacencySid_Flags is a derived int64 type which is used to represent
// the enumerated node LanAdjacencySid_Flags. An additional value named
// LanAdjacencySid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LanAdjacencySid_Flags int64

// IsYANGGoEnum ensures that LanAdjacencySid_Flags implements the yang.GoEnum
// interface. This ensures that LanAdjacencySid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_LanAdjacencySid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LanAdjacencySid_Flags.
func (E_LanAdjacencySid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LanAdjacencySid_Flags.
func (e E_LanAdjacencySid_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LanAdjacencySid_Flags")
}

const (
	// LanAdjacencySid_Flags_UNSET corresponds to the value UNSET of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_UNSET E_LanAdjacencySid_Flags = 0
	// LanAdjacencySid_Flags_ADDRESS_FAMILY corresponds to the value ADDRESS_FAMILY of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_ADDRESS_FAMILY E_LanAdjacencySid_Flags = 1
	// LanAdjacencySid_Flags_BACKUP corresponds to the value BACKUP of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_BACKUP E_LanAdjacencySid_Flags = 2
	// LanAdjacencySid_Flags_VALUE corresponds to the value VALUE of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_VALUE E_LanAdjacencySid_Flags = 3
	// LanAdjacencySid_Flags_LOCAL corresponds to the value LOCAL of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_LOCAL E_LanAdjacencySid_Flags = 4
	// LanAdjacencySid_Flags_SET corresponds to the value SET of LanAdjacencySid_Flags
	LanAdjacencySid_Flags_SET E_LanAdjacencySid_Flags = 5
)

// E_LinkAttributes_LocalProtection is a derived int64 type which is used to represent
// the enumerated node LinkAttributes_LocalProtection. An additional value named
// LinkAttributes_LocalProtection_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LinkAttributes_LocalProtection int64

// IsYANGGoEnum ensures that LinkAttributes_LocalProtection implements the yang.GoEnum
// interface. This ensures that LinkAttributes_LocalProtection can be identified as a
// mapped type for a YANG enumeration.
func (E_LinkAttributes_LocalProtection) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LinkAttributes_LocalProtection.
func (E_LinkAttributes_LocalProtection) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_LinkAttributes_LocalProtection.
func (e E_LinkAttributes_LocalProtection) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LinkAttributes_LocalProtection")
}

const (
	// LinkAttributes_LocalProtection_UNSET corresponds to the value UNSET of LinkAttributes_LocalProtection
	LinkAttributes_LocalProtection_UNSET E_LinkAttributes_LocalProtection = 0
	// LinkAttributes_LocalProtection_LOCAL_PROTECTION corresponds to the value LOCAL_PROTECTION of LinkAttributes_LocalProtection
	LinkAttributes_LocalProtection_LOCAL_PROTECTION E_LinkAttributes_LocalProtection = 1
	// LinkAttributes_LocalProtection_LINK_EXCLUDED corresponds to the value LINK_EXCLUDED of LinkAttributes_LocalProtection
	LinkAttributes_LocalProtection_LINK_EXCLUDED E_LinkAttributes_LocalProtection = 2
)

// E_LinkProtectionType_Type is a derived int64 type which is used to represent
// the enumerated node LinkProtectionType_Type. An additional value named
// LinkProtectionType_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LinkProtectionType_Type int64

// IsYANGGoEnum ensures that LinkProtectionType_Type implements the yang.GoEnum
// interface. This ensures that LinkProtectionType_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_LinkProtectionType_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LinkProtectionType_Type.
func (E_LinkProtectionType_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LinkProtectionType_Type.
func (e E_LinkProtectionType_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LinkProtectionType_Type")
}

const (
	// LinkProtectionType_Type_UNSET corresponds to the value UNSET of LinkProtectionType_Type
	LinkProtectionType_Type_UNSET E_LinkProtectionType_Type = 0
	// LinkProtectionType_Type_EXTRA_TRAFFIC corresponds to the value EXTRA_TRAFFIC of LinkProtectionType_Type
	LinkProtectionType_Type_EXTRA_TRAFFIC E_LinkProtectionType_Type = 1
	// LinkProtectionType_Type_UNPROTECTED corresponds to the value UNPROTECTED of LinkProtectionType_Type
	LinkProtectionType_Type_UNPROTECTED E_LinkProtectionType_Type = 2
	// LinkProtectionType_Type_SHARED corresponds to the value SHARED of LinkProtectionType_Type
	LinkProtectionType_Type_SHARED E_LinkProtectionType_Type = 3
	// LinkProtectionType_Type_ONE_ONE corresponds to the value ONE_ONE of LinkProtectionType_Type
	LinkProtectionType_Type_ONE_ONE E_LinkProtectionType_Type = 4
	// LinkProtectionType_Type_PLUS_ONE corresponds to the value PLUS_ONE of LinkProtectionType_Type
	LinkProtectionType_Type_PLUS_ONE E_LinkProtectionType_Type = 5
	// LinkProtectionType_Type_ENHANCED corresponds to the value ENHANCED of LinkProtectionType_Type
	LinkProtectionType_Type_ENHANCED E_LinkProtectionType_Type = 6
)

// E_Link_SubTlv_Type is a derived int64 type which is used to represent
// the enumerated node Link_SubTlv_Type. An additional value named
// Link_SubTlv_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Link_SubTlv_Type int64

// IsYANGGoEnum ensures that Link_SubTlv_Type implements the yang.GoEnum
// interface. This ensures that Link_SubTlv_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Link_SubTlv_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Link_SubTlv_Type.
func (E_Link_SubTlv_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Link_SubTlv_Type.
func (e E_Link_SubTlv_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Link_SubTlv_Type")
}

const (
	// Link_SubTlv_Type_UNSET corresponds to the value UNSET of Link_SubTlv_Type
	Link_SubTlv_Type_UNSET E_Link_SubTlv_Type = 0
	// Link_SubTlv_Type_UNKNOWN corresponds to the value UNKNOWN of Link_SubTlv_Type
	Link_SubTlv_Type_UNKNOWN E_Link_SubTlv_Type = 1
)

// E_LldpTypes_LLDP_SYSTEM_CAPABILITY is a derived int64 type which is used to represent
// the enumerated node LldpTypes_LLDP_SYSTEM_CAPABILITY. An additional value named
// LldpTypes_LLDP_SYSTEM_CAPABILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LldpTypes_LLDP_SYSTEM_CAPABILITY int64

// IsYANGGoEnum ensures that LldpTypes_LLDP_SYSTEM_CAPABILITY implements the yang.GoEnum
// interface. This ensures that LldpTypes_LLDP_SYSTEM_CAPABILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_LldpTypes_LLDP_SYSTEM_CAPABILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LldpTypes_LLDP_SYSTEM_CAPABILITY.
func (E_LldpTypes_LLDP_SYSTEM_CAPABILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_LldpTypes_LLDP_SYSTEM_CAPABILITY.
func (e E_LldpTypes_LLDP_SYSTEM_CAPABILITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LldpTypes_LLDP_SYSTEM_CAPABILITY")
}

const (
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_UNSET corresponds to the value UNSET of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_UNSET E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 0
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_C_VLAN corresponds to the value C_VLAN of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_C_VLAN E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 1
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_DOCSIS_CABLE_DEVICE corresponds to the value DOCSIS_CABLE_DEVICE of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_DOCSIS_CABLE_DEVICE E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 2
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_MAC_BRIDGE corresponds to the value MAC_BRIDGE of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_MAC_BRIDGE E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 3
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_OTHER corresponds to the value OTHER of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_OTHER E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 4
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_REPEATER corresponds to the value REPEATER of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_REPEATER E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 5
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_ROUTER corresponds to the value ROUTER of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_ROUTER E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 6
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_STATION_ONLY corresponds to the value STATION_ONLY of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_STATION_ONLY E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 7
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_S_VLAN corresponds to the value S_VLAN of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_S_VLAN E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 8
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_TELEPHONE corresponds to the value TELEPHONE of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_TELEPHONE E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 9
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_TWO_PORT_MAC_RELAY corresponds to the value TWO_PORT_MAC_RELAY of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_TWO_PORT_MAC_RELAY E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 10
	// LldpTypes_LLDP_SYSTEM_CAPABILITY_WLAN_ACCESS_POINT corresponds to the value WLAN_ACCESS_POINT of LldpTypes_LLDP_SYSTEM_CAPABILITY
	LldpTypes_LLDP_SYSTEM_CAPABILITY_WLAN_ACCESS_POINT E_LldpTypes_LLDP_SYSTEM_CAPABILITY = 11
)

// E_LldpTypes_LLDP_TLV is a derived int64 type which is used to represent
// the enumerated node LldpTypes_LLDP_TLV. An additional value named
// LldpTypes_LLDP_TLV_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LldpTypes_LLDP_TLV int64

// IsYANGGoEnum ensures that LldpTypes_LLDP_TLV implements the yang.GoEnum
// interface. This ensures that LldpTypes_LLDP_TLV can be identified as a
// mapped type for a YANG enumeration.
func (E_LldpTypes_LLDP_TLV) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LldpTypes_LLDP_TLV.
func (E_LldpTypes_LLDP_TLV) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LldpTypes_LLDP_TLV.
func (e E_LldpTypes_LLDP_TLV) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LldpTypes_LLDP_TLV")
}

const (
	// LldpTypes_LLDP_TLV_UNSET corresponds to the value UNSET of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_UNSET E_LldpTypes_LLDP_TLV = 0
	// LldpTypes_LLDP_TLV_CHASSIS_ID corresponds to the value CHASSIS_ID of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_CHASSIS_ID E_LldpTypes_LLDP_TLV = 1
	// LldpTypes_LLDP_TLV_MANAGEMENT_ADDRESS corresponds to the value MANAGEMENT_ADDRESS of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_MANAGEMENT_ADDRESS E_LldpTypes_LLDP_TLV = 2
	// LldpTypes_LLDP_TLV_PORT_DESCRIPTION corresponds to the value PORT_DESCRIPTION of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_PORT_DESCRIPTION E_LldpTypes_LLDP_TLV = 3
	// LldpTypes_LLDP_TLV_PORT_ID corresponds to the value PORT_ID of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_PORT_ID E_LldpTypes_LLDP_TLV = 4
	// LldpTypes_LLDP_TLV_SYSTEM_CAPABILITIES corresponds to the value SYSTEM_CAPABILITIES of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_SYSTEM_CAPABILITIES E_LldpTypes_LLDP_TLV = 5
	// LldpTypes_LLDP_TLV_SYSTEM_DESCRIPTION corresponds to the value SYSTEM_DESCRIPTION of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_SYSTEM_DESCRIPTION E_LldpTypes_LLDP_TLV = 6
	// LldpTypes_LLDP_TLV_SYSTEM_NAME corresponds to the value SYSTEM_NAME of LldpTypes_LLDP_TLV
	LldpTypes_LLDP_TLV_SYSTEM_NAME E_LldpTypes_LLDP_TLV = 7
)

// E_Lldp_ChassisIdType is a derived int64 type which is used to represent
// the enumerated node Lldp_ChassisIdType. An additional value named
// Lldp_ChassisIdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lldp_ChassisIdType int64

// IsYANGGoEnum ensures that Lldp_ChassisIdType implements the yang.GoEnum
// interface. This ensures that Lldp_ChassisIdType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lldp_ChassisIdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lldp_ChassisIdType.
func (E_Lldp_ChassisIdType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lldp_ChassisIdType.
func (e E_Lldp_ChassisIdType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lldp_ChassisIdType")
}

const (
	// Lldp_ChassisIdType_UNSET corresponds to the value UNSET of Lldp_ChassisIdType
	Lldp_ChassisIdType_UNSET E_Lldp_ChassisIdType = 0
	// Lldp_ChassisIdType_CHASSIS_COMPONENT corresponds to the value CHASSIS_COMPONENT of Lldp_ChassisIdType
	Lldp_ChassisIdType_CHASSIS_COMPONENT E_Lldp_ChassisIdType = 1
	// Lldp_ChassisIdType_INTERFACE_ALIAS corresponds to the value INTERFACE_ALIAS of Lldp_ChassisIdType
	Lldp_ChassisIdType_INTERFACE_ALIAS E_Lldp_ChassisIdType = 2
	// Lldp_ChassisIdType_PORT_COMPONENT corresponds to the value PORT_COMPONENT of Lldp_ChassisIdType
	Lldp_ChassisIdType_PORT_COMPONENT E_Lldp_ChassisIdType = 3
	// Lldp_ChassisIdType_MAC_ADDRESS corresponds to the value MAC_ADDRESS of Lldp_ChassisIdType
	Lldp_ChassisIdType_MAC_ADDRESS E_Lldp_ChassisIdType = 4
	// Lldp_ChassisIdType_NETWORK_ADDRESS corresponds to the value NETWORK_ADDRESS of Lldp_ChassisIdType
	Lldp_ChassisIdType_NETWORK_ADDRESS E_Lldp_ChassisIdType = 5
	// Lldp_ChassisIdType_INTERFACE_NAME corresponds to the value INTERFACE_NAME of Lldp_ChassisIdType
	Lldp_ChassisIdType_INTERFACE_NAME E_Lldp_ChassisIdType = 6
	// Lldp_ChassisIdType_LOCAL corresponds to the value LOCAL of Lldp_ChassisIdType
	Lldp_ChassisIdType_LOCAL E_Lldp_ChassisIdType = 7
)

// E_Lldp_PortIdType is a derived int64 type which is used to represent
// the enumerated node Lldp_PortIdType. An additional value named
// Lldp_PortIdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lldp_PortIdType int64

// IsYANGGoEnum ensures that Lldp_PortIdType implements the yang.GoEnum
// interface. This ensures that Lldp_PortIdType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lldp_PortIdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lldp_PortIdType.
func (E_Lldp_PortIdType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lldp_PortIdType.
func (e E_Lldp_PortIdType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lldp_PortIdType")
}

const (
	// Lldp_PortIdType_UNSET corresponds to the value UNSET of Lldp_PortIdType
	Lldp_PortIdType_UNSET E_Lldp_PortIdType = 0
	// Lldp_PortIdType_INTERFACE_ALIAS corresponds to the value INTERFACE_ALIAS of Lldp_PortIdType
	Lldp_PortIdType_INTERFACE_ALIAS E_Lldp_PortIdType = 1
	// Lldp_PortIdType_PORT_COMPONENT corresponds to the value PORT_COMPONENT of Lldp_PortIdType
	Lldp_PortIdType_PORT_COMPONENT E_Lldp_PortIdType = 2
	// Lldp_PortIdType_MAC_ADDRESS corresponds to the value MAC_ADDRESS of Lldp_PortIdType
	Lldp_PortIdType_MAC_ADDRESS E_Lldp_PortIdType = 3
	// Lldp_PortIdType_NETWORK_ADDRESS corresponds to the value NETWORK_ADDRESS of Lldp_PortIdType
	Lldp_PortIdType_NETWORK_ADDRESS E_Lldp_PortIdType = 4
	// Lldp_PortIdType_INTERFACE_NAME corresponds to the value INTERFACE_NAME of Lldp_PortIdType
	Lldp_PortIdType_INTERFACE_NAME E_Lldp_PortIdType = 5
	// Lldp_PortIdType_AGENT_CIRCUIT_ID corresponds to the value AGENT_CIRCUIT_ID of Lldp_PortIdType
	Lldp_PortIdType_AGENT_CIRCUIT_ID E_Lldp_PortIdType = 6
	// Lldp_PortIdType_LOCAL corresponds to the value LOCAL of Lldp_PortIdType
	Lldp_PortIdType_LOCAL E_Lldp_PortIdType = 7
)

// E_LocalRouting_LOCAL_DEFINED_NEXT_HOP is a derived int64 type which is used to represent
// the enumerated node LocalRouting_LOCAL_DEFINED_NEXT_HOP. An additional value named
// LocalRouting_LOCAL_DEFINED_NEXT_HOP_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LocalRouting_LOCAL_DEFINED_NEXT_HOP int64

// IsYANGGoEnum ensures that LocalRouting_LOCAL_DEFINED_NEXT_HOP implements the yang.GoEnum
// interface. This ensures that LocalRouting_LOCAL_DEFINED_NEXT_HOP can be identified as a
// mapped type for a YANG enumeration.
func (E_LocalRouting_LOCAL_DEFINED_NEXT_HOP) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LocalRouting_LOCAL_DEFINED_NEXT_HOP.
func (E_LocalRouting_LOCAL_DEFINED_NEXT_HOP) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_LocalRouting_LOCAL_DEFINED_NEXT_HOP.
func (e E_LocalRouting_LOCAL_DEFINED_NEXT_HOP) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LocalRouting_LOCAL_DEFINED_NEXT_HOP")
}

const (
	// LocalRouting_LOCAL_DEFINED_NEXT_HOP_UNSET corresponds to the value UNSET of LocalRouting_LOCAL_DEFINED_NEXT_HOP
	LocalRouting_LOCAL_DEFINED_NEXT_HOP_UNSET E_LocalRouting_LOCAL_DEFINED_NEXT_HOP = 0
	// LocalRouting_LOCAL_DEFINED_NEXT_HOP_DROP corresponds to the value DROP of LocalRouting_LOCAL_DEFINED_NEXT_HOP
	LocalRouting_LOCAL_DEFINED_NEXT_HOP_DROP E_LocalRouting_LOCAL_DEFINED_NEXT_HOP = 1
	// LocalRouting_LOCAL_DEFINED_NEXT_HOP_LOCAL_LINK corresponds to the value LOCAL_LINK of LocalRouting_LOCAL_DEFINED_NEXT_HOP
	LocalRouting_LOCAL_DEFINED_NEXT_HOP_LOCAL_LINK E_LocalRouting_LOCAL_DEFINED_NEXT_HOP = 2
)

// E_LspNextHop_PushLabel is a derived int64 type which is used to represent
// the enumerated node LspNextHop_PushLabel. An additional value named
// LspNextHop_PushLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_LspNextHop_PushLabel int64

// IsYANGGoEnum ensures that LspNextHop_PushLabel implements the yang.GoEnum
// interface. This ensures that LspNextHop_PushLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_LspNextHop_PushLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  LspNextHop_PushLabel.
func (E_LspNextHop_PushLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_LspNextHop_PushLabel.
func (e E_LspNextHop_PushLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_LspNextHop_PushLabel")
}

const (
	// LspNextHop_PushLabel_UNSET corresponds to the value UNSET of LspNextHop_PushLabel
	LspNextHop_PushLabel_UNSET E_LspNextHop_PushLabel = 0
	// LspNextHop_PushLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of LspNextHop_PushLabel
	LspNextHop_PushLabel_IPV4_EXPLICIT_NULL E_LspNextHop_PushLabel = 1
	// LspNextHop_PushLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of LspNextHop_PushLabel
	LspNextHop_PushLabel_ROUTER_ALERT E_LspNextHop_PushLabel = 2
	// LspNextHop_PushLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of LspNextHop_PushLabel
	LspNextHop_PushLabel_IPV6_EXPLICIT_NULL E_LspNextHop_PushLabel = 3
	// LspNextHop_PushLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of LspNextHop_PushLabel
	LspNextHop_PushLabel_IMPLICIT_NULL E_LspNextHop_PushLabel = 4
	// LspNextHop_PushLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of LspNextHop_PushLabel
	LspNextHop_PushLabel_ENTROPY_LABEL_INDICATOR E_LspNextHop_PushLabel = 8
	// LspNextHop_PushLabel_NO_LABEL corresponds to the value NO_LABEL of LspNextHop_PushLabel
	LspNextHop_PushLabel_NO_LABEL E_LspNextHop_PushLabel = 9
)

// E_Lsp_Flags is a derived int64 type which is used to represent
// the enumerated node Lsp_Flags. An additional value named
// Lsp_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lsp_Flags int64

// IsYANGGoEnum ensures that Lsp_Flags implements the yang.GoEnum
// interface. This ensures that Lsp_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_Lsp_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lsp_Flags.
func (E_Lsp_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lsp_Flags.
func (e E_Lsp_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lsp_Flags")
}

const (
	// Lsp_Flags_UNSET corresponds to the value UNSET of Lsp_Flags
	Lsp_Flags_UNSET E_Lsp_Flags = 0
	// Lsp_Flags_PARTITION_REPAIR corresponds to the value PARTITION_REPAIR of Lsp_Flags
	Lsp_Flags_PARTITION_REPAIR E_Lsp_Flags = 1
	// Lsp_Flags_ATTACHED_ERROR corresponds to the value ATTACHED_ERROR of Lsp_Flags
	Lsp_Flags_ATTACHED_ERROR E_Lsp_Flags = 2
	// Lsp_Flags_ATTACHED_EXPENSE corresponds to the value ATTACHED_EXPENSE of Lsp_Flags
	Lsp_Flags_ATTACHED_EXPENSE E_Lsp_Flags = 3
	// Lsp_Flags_ATTACHED_DELAY corresponds to the value ATTACHED_DELAY of Lsp_Flags
	Lsp_Flags_ATTACHED_DELAY E_Lsp_Flags = 4
	// Lsp_Flags_ATTACHED_DEFAULT corresponds to the value ATTACHED_DEFAULT of Lsp_Flags
	Lsp_Flags_ATTACHED_DEFAULT E_Lsp_Flags = 5
	// Lsp_Flags_OVERLOAD corresponds to the value OVERLOAD of Lsp_Flags
	Lsp_Flags_OVERLOAD E_Lsp_Flags = 6
)

// E_Lsp_PduType is a derived int64 type which is used to represent
// the enumerated node Lsp_PduType. An additional value named
// Lsp_PduType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Lsp_PduType int64

// IsYANGGoEnum ensures that Lsp_PduType implements the yang.GoEnum
// interface. This ensures that Lsp_PduType can be identified as a
// mapped type for a YANG enumeration.
func (E_Lsp_PduType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Lsp_PduType.
func (E_Lsp_PduType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Lsp_PduType.
func (e E_Lsp_PduType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Lsp_PduType")
}

const (
	// Lsp_PduType_UNSET corresponds to the value UNSET of Lsp_PduType
	Lsp_PduType_UNSET E_Lsp_PduType = 0
	// Lsp_PduType_LEVEL_1 corresponds to the value LEVEL_1 of Lsp_PduType
	Lsp_PduType_LEVEL_1 E_Lsp_PduType = 1
	// Lsp_PduType_LEVEL_2 corresponds to the value LEVEL_2 of Lsp_PduType
	Lsp_PduType_LEVEL_2 E_Lsp_PduType = 2
)

// E_Messages_DEBUG_SERVICE is a derived int64 type which is used to represent
// the enumerated node Messages_DEBUG_SERVICE. An additional value named
// Messages_DEBUG_SERVICE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Messages_DEBUG_SERVICE int64

// IsYANGGoEnum ensures that Messages_DEBUG_SERVICE implements the yang.GoEnum
// interface. This ensures that Messages_DEBUG_SERVICE can be identified as a
// mapped type for a YANG enumeration.
func (E_Messages_DEBUG_SERVICE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Messages_DEBUG_SERVICE.
func (E_Messages_DEBUG_SERVICE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Messages_DEBUG_SERVICE.
func (e E_Messages_DEBUG_SERVICE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Messages_DEBUG_SERVICE")
}

const (
	// Messages_DEBUG_SERVICE_UNSET corresponds to the value UNSET of Messages_DEBUG_SERVICE
	Messages_DEBUG_SERVICE_UNSET E_Messages_DEBUG_SERVICE = 0
)

// E_Messages_SyslogSeverity is a derived int64 type which is used to represent
// the enumerated node Messages_SyslogSeverity. An additional value named
// Messages_SyslogSeverity_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Messages_SyslogSeverity int64

// IsYANGGoEnum ensures that Messages_SyslogSeverity implements the yang.GoEnum
// interface. This ensures that Messages_SyslogSeverity can be identified as a
// mapped type for a YANG enumeration.
func (E_Messages_SyslogSeverity) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Messages_SyslogSeverity.
func (E_Messages_SyslogSeverity) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Messages_SyslogSeverity.
func (e E_Messages_SyslogSeverity) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Messages_SyslogSeverity")
}

const (
	// Messages_SyslogSeverity_UNSET corresponds to the value UNSET of Messages_SyslogSeverity
	Messages_SyslogSeverity_UNSET E_Messages_SyslogSeverity = 0
	// Messages_SyslogSeverity_EMERGENCY corresponds to the value EMERGENCY of Messages_SyslogSeverity
	Messages_SyslogSeverity_EMERGENCY E_Messages_SyslogSeverity = 1
	// Messages_SyslogSeverity_ALERT corresponds to the value ALERT of Messages_SyslogSeverity
	Messages_SyslogSeverity_ALERT E_Messages_SyslogSeverity = 2
	// Messages_SyslogSeverity_CRITICAL corresponds to the value CRITICAL of Messages_SyslogSeverity
	Messages_SyslogSeverity_CRITICAL E_Messages_SyslogSeverity = 3
	// Messages_SyslogSeverity_ERROR corresponds to the value ERROR of Messages_SyslogSeverity
	Messages_SyslogSeverity_ERROR E_Messages_SyslogSeverity = 4
	// Messages_SyslogSeverity_WARNING corresponds to the value WARNING of Messages_SyslogSeverity
	Messages_SyslogSeverity_WARNING E_Messages_SyslogSeverity = 5
	// Messages_SyslogSeverity_NOTICE corresponds to the value NOTICE of Messages_SyslogSeverity
	Messages_SyslogSeverity_NOTICE E_Messages_SyslogSeverity = 6
	// Messages_SyslogSeverity_INFORMATIONAL corresponds to the value INFORMATIONAL of Messages_SyslogSeverity
	Messages_SyslogSeverity_INFORMATIONAL E_Messages_SyslogSeverity = 7
	// Messages_SyslogSeverity_DEBUG corresponds to the value DEBUG of Messages_SyslogSeverity
	Messages_SyslogSeverity_DEBUG E_Messages_SyslogSeverity = 8
)

// E_MplsLdp_LabelAdvertisementMode is a derived int64 type which is used to represent
// the enumerated node MplsLdp_LabelAdvertisementMode. An additional value named
// MplsLdp_LabelAdvertisementMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsLdp_LabelAdvertisementMode int64

// IsYANGGoEnum ensures that MplsLdp_LabelAdvertisementMode implements the yang.GoEnum
// interface. This ensures that MplsLdp_LabelAdvertisementMode can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsLdp_LabelAdvertisementMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsLdp_LabelAdvertisementMode.
func (E_MplsLdp_LabelAdvertisementMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsLdp_LabelAdvertisementMode.
func (e E_MplsLdp_LabelAdvertisementMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsLdp_LabelAdvertisementMode")
}

const (
	// MplsLdp_LabelAdvertisementMode_UNSET corresponds to the value UNSET of MplsLdp_LabelAdvertisementMode
	MplsLdp_LabelAdvertisementMode_UNSET E_MplsLdp_LabelAdvertisementMode = 0
	// MplsLdp_LabelAdvertisementMode_DOWNSTREAM_UNSOLICITED corresponds to the value DOWNSTREAM_UNSOLICITED of MplsLdp_LabelAdvertisementMode
	MplsLdp_LabelAdvertisementMode_DOWNSTREAM_UNSOLICITED E_MplsLdp_LabelAdvertisementMode = 1
	// MplsLdp_LabelAdvertisementMode_DOWNSTREAM_ON_DEMAND corresponds to the value DOWNSTREAM_ON_DEMAND of MplsLdp_LabelAdvertisementMode
	MplsLdp_LabelAdvertisementMode_DOWNSTREAM_ON_DEMAND E_MplsLdp_LabelAdvertisementMode = 2
)

// E_MplsLdp_MplsLdpAdjacencyType is a derived int64 type which is used to represent
// the enumerated node MplsLdp_MplsLdpAdjacencyType. An additional value named
// MplsLdp_MplsLdpAdjacencyType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsLdp_MplsLdpAdjacencyType int64

// IsYANGGoEnum ensures that MplsLdp_MplsLdpAdjacencyType implements the yang.GoEnum
// interface. This ensures that MplsLdp_MplsLdpAdjacencyType can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsLdp_MplsLdpAdjacencyType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsLdp_MplsLdpAdjacencyType.
func (E_MplsLdp_MplsLdpAdjacencyType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsLdp_MplsLdpAdjacencyType.
func (e E_MplsLdp_MplsLdpAdjacencyType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsLdp_MplsLdpAdjacencyType")
}

const (
	// MplsLdp_MplsLdpAdjacencyType_UNSET corresponds to the value UNSET of MplsLdp_MplsLdpAdjacencyType
	MplsLdp_MplsLdpAdjacencyType_UNSET E_MplsLdp_MplsLdpAdjacencyType = 0
	// MplsLdp_MplsLdpAdjacencyType_LINK corresponds to the value LINK of MplsLdp_MplsLdpAdjacencyType
	MplsLdp_MplsLdpAdjacencyType_LINK E_MplsLdp_MplsLdpAdjacencyType = 1
	// MplsLdp_MplsLdpAdjacencyType_TARGETED corresponds to the value TARGETED of MplsLdp_MplsLdpAdjacencyType
	MplsLdp_MplsLdpAdjacencyType_TARGETED E_MplsLdp_MplsLdpAdjacencyType = 2
)

// E_MplsLdp_MplsLdpAfi is a derived int64 type which is used to represent
// the enumerated node MplsLdp_MplsLdpAfi. An additional value named
// MplsLdp_MplsLdpAfi_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsLdp_MplsLdpAfi int64

// IsYANGGoEnum ensures that MplsLdp_MplsLdpAfi implements the yang.GoEnum
// interface. This ensures that MplsLdp_MplsLdpAfi can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsLdp_MplsLdpAfi) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsLdp_MplsLdpAfi.
func (E_MplsLdp_MplsLdpAfi) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsLdp_MplsLdpAfi.
func (e E_MplsLdp_MplsLdpAfi) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsLdp_MplsLdpAfi")
}

const (
	// MplsLdp_MplsLdpAfi_UNSET corresponds to the value UNSET of MplsLdp_MplsLdpAfi
	MplsLdp_MplsLdpAfi_UNSET E_MplsLdp_MplsLdpAfi = 0
	// MplsLdp_MplsLdpAfi_IPV4 corresponds to the value IPV4 of MplsLdp_MplsLdpAfi
	MplsLdp_MplsLdpAfi_IPV4 E_MplsLdp_MplsLdpAfi = 1
	// MplsLdp_MplsLdpAfi_IPV6 corresponds to the value IPV6 of MplsLdp_MplsLdpAfi
	MplsLdp_MplsLdpAfi_IPV6 E_MplsLdp_MplsLdpAfi = 2
)

// E_MplsLdp_Neighbor_SessionState is a derived int64 type which is used to represent
// the enumerated node MplsLdp_Neighbor_SessionState. An additional value named
// MplsLdp_Neighbor_SessionState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsLdp_Neighbor_SessionState int64

// IsYANGGoEnum ensures that MplsLdp_Neighbor_SessionState implements the yang.GoEnum
// interface. This ensures that MplsLdp_Neighbor_SessionState can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsLdp_Neighbor_SessionState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsLdp_Neighbor_SessionState.
func (E_MplsLdp_Neighbor_SessionState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsLdp_Neighbor_SessionState.
func (e E_MplsLdp_Neighbor_SessionState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsLdp_Neighbor_SessionState")
}

const (
	// MplsLdp_Neighbor_SessionState_UNSET corresponds to the value UNSET of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_UNSET E_MplsLdp_Neighbor_SessionState = 0
	// MplsLdp_Neighbor_SessionState_NON_EXISTENT corresponds to the value NON_EXISTENT of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_NON_EXISTENT E_MplsLdp_Neighbor_SessionState = 1
	// MplsLdp_Neighbor_SessionState_INITIALIZED corresponds to the value INITIALIZED of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_INITIALIZED E_MplsLdp_Neighbor_SessionState = 2
	// MplsLdp_Neighbor_SessionState_OPENREC corresponds to the value OPENREC of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_OPENREC E_MplsLdp_Neighbor_SessionState = 3
	// MplsLdp_Neighbor_SessionState_OPENSENT corresponds to the value OPENSENT of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_OPENSENT E_MplsLdp_Neighbor_SessionState = 4
	// MplsLdp_Neighbor_SessionState_OPERATIONAL corresponds to the value OPERATIONAL of MplsLdp_Neighbor_SessionState
	MplsLdp_Neighbor_SessionState_OPERATIONAL E_MplsLdp_Neighbor_SessionState = 5
)

// E_MplsTypes_LSP_METRIC_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_LSP_METRIC_TYPE. An additional value named
// MplsTypes_LSP_METRIC_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_LSP_METRIC_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_LSP_METRIC_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_LSP_METRIC_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_LSP_METRIC_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_LSP_METRIC_TYPE.
func (E_MplsTypes_LSP_METRIC_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_LSP_METRIC_TYPE.
func (e E_MplsTypes_LSP_METRIC_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_LSP_METRIC_TYPE")
}

const (
	// MplsTypes_LSP_METRIC_TYPE_UNSET corresponds to the value UNSET of MplsTypes_LSP_METRIC_TYPE
	MplsTypes_LSP_METRIC_TYPE_UNSET E_MplsTypes_LSP_METRIC_TYPE = 0
	// MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_ABSOLUTE corresponds to the value LSP_METRIC_ABSOLUTE of MplsTypes_LSP_METRIC_TYPE
	MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_ABSOLUTE E_MplsTypes_LSP_METRIC_TYPE = 1
	// MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_INHERITED corresponds to the value LSP_METRIC_INHERITED of MplsTypes_LSP_METRIC_TYPE
	MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_INHERITED E_MplsTypes_LSP_METRIC_TYPE = 2
	// MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_RELATIVE corresponds to the value LSP_METRIC_RELATIVE of MplsTypes_LSP_METRIC_TYPE
	MplsTypes_LSP_METRIC_TYPE_LSP_METRIC_RELATIVE E_MplsTypes_LSP_METRIC_TYPE = 3
)

// E_MplsTypes_LSP_OPER_STATUS is a derived int64 type which is used to represent
// the enumerated node MplsTypes_LSP_OPER_STATUS. An additional value named
// MplsTypes_LSP_OPER_STATUS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_LSP_OPER_STATUS int64

// IsYANGGoEnum ensures that MplsTypes_LSP_OPER_STATUS implements the yang.GoEnum
// interface. This ensures that MplsTypes_LSP_OPER_STATUS can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_LSP_OPER_STATUS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_LSP_OPER_STATUS.
func (E_MplsTypes_LSP_OPER_STATUS) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_LSP_OPER_STATUS.
func (e E_MplsTypes_LSP_OPER_STATUS) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_LSP_OPER_STATUS")
}

const (
	// MplsTypes_LSP_OPER_STATUS_UNSET corresponds to the value UNSET of MplsTypes_LSP_OPER_STATUS
	MplsTypes_LSP_OPER_STATUS_UNSET E_MplsTypes_LSP_OPER_STATUS = 0
	// MplsTypes_LSP_OPER_STATUS_DOWN corresponds to the value DOWN of MplsTypes_LSP_OPER_STATUS
	MplsTypes_LSP_OPER_STATUS_DOWN E_MplsTypes_LSP_OPER_STATUS = 1
	// MplsTypes_LSP_OPER_STATUS_UP corresponds to the value UP of MplsTypes_LSP_OPER_STATUS
	MplsTypes_LSP_OPER_STATUS_UP E_MplsTypes_LSP_OPER_STATUS = 2
)

// E_MplsTypes_LSP_ROLE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_LSP_ROLE. An additional value named
// MplsTypes_LSP_ROLE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_LSP_ROLE int64

// IsYANGGoEnum ensures that MplsTypes_LSP_ROLE implements the yang.GoEnum
// interface. This ensures that MplsTypes_LSP_ROLE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_LSP_ROLE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_LSP_ROLE.
func (E_MplsTypes_LSP_ROLE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_LSP_ROLE.
func (e E_MplsTypes_LSP_ROLE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_LSP_ROLE")
}

const (
	// MplsTypes_LSP_ROLE_UNSET corresponds to the value UNSET of MplsTypes_LSP_ROLE
	MplsTypes_LSP_ROLE_UNSET E_MplsTypes_LSP_ROLE = 0
	// MplsTypes_LSP_ROLE_EGRESS corresponds to the value EGRESS of MplsTypes_LSP_ROLE
	MplsTypes_LSP_ROLE_EGRESS E_MplsTypes_LSP_ROLE = 1
	// MplsTypes_LSP_ROLE_INGRESS corresponds to the value INGRESS of MplsTypes_LSP_ROLE
	MplsTypes_LSP_ROLE_INGRESS E_MplsTypes_LSP_ROLE = 2
	// MplsTypes_LSP_ROLE_TRANSIT corresponds to the value TRANSIT of MplsTypes_LSP_ROLE
	MplsTypes_LSP_ROLE_TRANSIT E_MplsTypes_LSP_ROLE = 3
)

// E_MplsTypes_NULL_LABEL_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_NULL_LABEL_TYPE. An additional value named
// MplsTypes_NULL_LABEL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_NULL_LABEL_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_NULL_LABEL_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_NULL_LABEL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_NULL_LABEL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_NULL_LABEL_TYPE.
func (E_MplsTypes_NULL_LABEL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_NULL_LABEL_TYPE.
func (e E_MplsTypes_NULL_LABEL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_NULL_LABEL_TYPE")
}

const (
	// MplsTypes_NULL_LABEL_TYPE_UNSET corresponds to the value UNSET of MplsTypes_NULL_LABEL_TYPE
	MplsTypes_NULL_LABEL_TYPE_UNSET E_MplsTypes_NULL_LABEL_TYPE = 0
	// MplsTypes_NULL_LABEL_TYPE_EXPLICIT corresponds to the value EXPLICIT of MplsTypes_NULL_LABEL_TYPE
	MplsTypes_NULL_LABEL_TYPE_EXPLICIT E_MplsTypes_NULL_LABEL_TYPE = 1
	// MplsTypes_NULL_LABEL_TYPE_IMPLICIT corresponds to the value IMPLICIT of MplsTypes_NULL_LABEL_TYPE
	MplsTypes_NULL_LABEL_TYPE_IMPLICIT E_MplsTypes_NULL_LABEL_TYPE = 2
)

// E_MplsTypes_PATH_COMPUTATION_METHOD is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PATH_COMPUTATION_METHOD. An additional value named
// MplsTypes_PATH_COMPUTATION_METHOD_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PATH_COMPUTATION_METHOD int64

// IsYANGGoEnum ensures that MplsTypes_PATH_COMPUTATION_METHOD implements the yang.GoEnum
// interface. This ensures that MplsTypes_PATH_COMPUTATION_METHOD can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PATH_COMPUTATION_METHOD) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PATH_COMPUTATION_METHOD.
func (E_MplsTypes_PATH_COMPUTATION_METHOD) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsTypes_PATH_COMPUTATION_METHOD.
func (e E_MplsTypes_PATH_COMPUTATION_METHOD) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PATH_COMPUTATION_METHOD")
}

const (
	// MplsTypes_PATH_COMPUTATION_METHOD_UNSET corresponds to the value UNSET of MplsTypes_PATH_COMPUTATION_METHOD
	MplsTypes_PATH_COMPUTATION_METHOD_UNSET E_MplsTypes_PATH_COMPUTATION_METHOD = 0
	// MplsTypes_PATH_COMPUTATION_METHOD_EXPLICITLY_DEFINED corresponds to the value EXPLICITLY_DEFINED of MplsTypes_PATH_COMPUTATION_METHOD
	MplsTypes_PATH_COMPUTATION_METHOD_EXPLICITLY_DEFINED E_MplsTypes_PATH_COMPUTATION_METHOD = 1
	// MplsTypes_PATH_COMPUTATION_METHOD_EXTERNALLY_QUERIED corresponds to the value EXTERNALLY_QUERIED of MplsTypes_PATH_COMPUTATION_METHOD
	MplsTypes_PATH_COMPUTATION_METHOD_EXTERNALLY_QUERIED E_MplsTypes_PATH_COMPUTATION_METHOD = 2
	// MplsTypes_PATH_COMPUTATION_METHOD_LOCALLY_COMPUTED corresponds to the value LOCALLY_COMPUTED of MplsTypes_PATH_COMPUTATION_METHOD
	MplsTypes_PATH_COMPUTATION_METHOD_LOCALLY_COMPUTED E_MplsTypes_PATH_COMPUTATION_METHOD = 3
)

// E_MplsTypes_PATH_METRIC_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PATH_METRIC_TYPE. An additional value named
// MplsTypes_PATH_METRIC_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PATH_METRIC_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_PATH_METRIC_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_PATH_METRIC_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PATH_METRIC_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PATH_METRIC_TYPE.
func (E_MplsTypes_PATH_METRIC_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_PATH_METRIC_TYPE.
func (e E_MplsTypes_PATH_METRIC_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PATH_METRIC_TYPE")
}

const (
	// MplsTypes_PATH_METRIC_TYPE_UNSET corresponds to the value UNSET of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_UNSET E_MplsTypes_PATH_METRIC_TYPE = 0
	// MplsTypes_PATH_METRIC_TYPE_HOP_COUNT corresponds to the value HOP_COUNT of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_HOP_COUNT E_MplsTypes_PATH_METRIC_TYPE = 1
	// MplsTypes_PATH_METRIC_TYPE_IGP_METRIC corresponds to the value IGP_METRIC of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_IGP_METRIC E_MplsTypes_PATH_METRIC_TYPE = 2
	// MplsTypes_PATH_METRIC_TYPE_PATH_DELAY corresponds to the value PATH_DELAY of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_PATH_DELAY E_MplsTypes_PATH_METRIC_TYPE = 3
	// MplsTypes_PATH_METRIC_TYPE_TE_METRIC corresponds to the value TE_METRIC of MplsTypes_PATH_METRIC_TYPE
	MplsTypes_PATH_METRIC_TYPE_TE_METRIC E_MplsTypes_PATH_METRIC_TYPE = 4
)

// E_MplsTypes_PATH_SETUP_PROTOCOL is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PATH_SETUP_PROTOCOL. An additional value named
// MplsTypes_PATH_SETUP_PROTOCOL_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PATH_SETUP_PROTOCOL int64

// IsYANGGoEnum ensures that MplsTypes_PATH_SETUP_PROTOCOL implements the yang.GoEnum
// interface. This ensures that MplsTypes_PATH_SETUP_PROTOCOL can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PATH_SETUP_PROTOCOL) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PATH_SETUP_PROTOCOL.
func (E_MplsTypes_PATH_SETUP_PROTOCOL) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsTypes_PATH_SETUP_PROTOCOL.
func (e E_MplsTypes_PATH_SETUP_PROTOCOL) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PATH_SETUP_PROTOCOL")
}

const (
	// MplsTypes_PATH_SETUP_PROTOCOL_UNSET corresponds to the value UNSET of MplsTypes_PATH_SETUP_PROTOCOL
	MplsTypes_PATH_SETUP_PROTOCOL_UNSET E_MplsTypes_PATH_SETUP_PROTOCOL = 0
	// MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_LDP corresponds to the value PATH_SETUP_LDP of MplsTypes_PATH_SETUP_PROTOCOL
	MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_LDP E_MplsTypes_PATH_SETUP_PROTOCOL = 1
	// MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_RSVP corresponds to the value PATH_SETUP_RSVP of MplsTypes_PATH_SETUP_PROTOCOL
	MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_RSVP E_MplsTypes_PATH_SETUP_PROTOCOL = 2
	// MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_SR corresponds to the value PATH_SETUP_SR of MplsTypes_PATH_SETUP_PROTOCOL
	MplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_SR E_MplsTypes_PATH_SETUP_PROTOCOL = 3
)

// E_MplsTypes_PROTECTION_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PROTECTION_TYPE. An additional value named
// MplsTypes_PROTECTION_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PROTECTION_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_PROTECTION_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_PROTECTION_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PROTECTION_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PROTECTION_TYPE.
func (E_MplsTypes_PROTECTION_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_PROTECTION_TYPE.
func (e E_MplsTypes_PROTECTION_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PROTECTION_TYPE")
}

const (
	// MplsTypes_PROTECTION_TYPE_UNSET corresponds to the value UNSET of MplsTypes_PROTECTION_TYPE
	MplsTypes_PROTECTION_TYPE_UNSET E_MplsTypes_PROTECTION_TYPE = 0
	// MplsTypes_PROTECTION_TYPE_LINK_NODE_PROTECTION_REQUESTED corresponds to the value LINK_NODE_PROTECTION_REQUESTED of MplsTypes_PROTECTION_TYPE
	MplsTypes_PROTECTION_TYPE_LINK_NODE_PROTECTION_REQUESTED E_MplsTypes_PROTECTION_TYPE = 1
	// MplsTypes_PROTECTION_TYPE_LINK_PROTECTION_REQUIRED corresponds to the value LINK_PROTECTION_REQUIRED of MplsTypes_PROTECTION_TYPE
	MplsTypes_PROTECTION_TYPE_LINK_PROTECTION_REQUIRED E_MplsTypes_PROTECTION_TYPE = 2
	// MplsTypes_PROTECTION_TYPE_UNPROTECTED corresponds to the value UNPROTECTED of MplsTypes_PROTECTION_TYPE
	MplsTypes_PROTECTION_TYPE_UNPROTECTED E_MplsTypes_PROTECTION_TYPE = 3
)

// E_MplsTypes_PSEUDOWIRE_ENCAPSULATION is a derived int64 type which is used to represent
// the enumerated node MplsTypes_PSEUDOWIRE_ENCAPSULATION. An additional value named
// MplsTypes_PSEUDOWIRE_ENCAPSULATION_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_PSEUDOWIRE_ENCAPSULATION int64

// IsYANGGoEnum ensures that MplsTypes_PSEUDOWIRE_ENCAPSULATION implements the yang.GoEnum
// interface. This ensures that MplsTypes_PSEUDOWIRE_ENCAPSULATION can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_PSEUDOWIRE_ENCAPSULATION) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_PSEUDOWIRE_ENCAPSULATION.
func (E_MplsTypes_PSEUDOWIRE_ENCAPSULATION) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsTypes_PSEUDOWIRE_ENCAPSULATION.
func (e E_MplsTypes_PSEUDOWIRE_ENCAPSULATION) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_PSEUDOWIRE_ENCAPSULATION")
}

const (
	// MplsTypes_PSEUDOWIRE_ENCAPSULATION_UNSET corresponds to the value UNSET of MplsTypes_PSEUDOWIRE_ENCAPSULATION
	MplsTypes_PSEUDOWIRE_ENCAPSULATION_UNSET E_MplsTypes_PSEUDOWIRE_ENCAPSULATION = 0
	// MplsTypes_PSEUDOWIRE_ENCAPSULATION_PWE_ETHERNET_RAW_MODE corresponds to the value PWE_ETHERNET_RAW_MODE of MplsTypes_PSEUDOWIRE_ENCAPSULATION
	MplsTypes_PSEUDOWIRE_ENCAPSULATION_PWE_ETHERNET_RAW_MODE E_MplsTypes_PSEUDOWIRE_ENCAPSULATION = 1
	// MplsTypes_PSEUDOWIRE_ENCAPSULATION_PWE_ETHERNET_TAGGED_MODE corresponds to the value PWE_ETHERNET_TAGGED_MODE of MplsTypes_PSEUDOWIRE_ENCAPSULATION
	MplsTypes_PSEUDOWIRE_ENCAPSULATION_PWE_ETHERNET_TAGGED_MODE E_MplsTypes_PSEUDOWIRE_ENCAPSULATION = 2
)

// E_MplsTypes_RSVP_AUTH_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_RSVP_AUTH_TYPE. An additional value named
// MplsTypes_RSVP_AUTH_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_RSVP_AUTH_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_RSVP_AUTH_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_RSVP_AUTH_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_RSVP_AUTH_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_RSVP_AUTH_TYPE.
func (E_MplsTypes_RSVP_AUTH_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_RSVP_AUTH_TYPE.
func (e E_MplsTypes_RSVP_AUTH_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_RSVP_AUTH_TYPE")
}

const (
	// MplsTypes_RSVP_AUTH_TYPE_UNSET corresponds to the value UNSET of MplsTypes_RSVP_AUTH_TYPE
	MplsTypes_RSVP_AUTH_TYPE_UNSET E_MplsTypes_RSVP_AUTH_TYPE = 0
	// MplsTypes_RSVP_AUTH_TYPE_RSVP_AUTH_MD5 corresponds to the value RSVP_AUTH_MD5 of MplsTypes_RSVP_AUTH_TYPE
	MplsTypes_RSVP_AUTH_TYPE_RSVP_AUTH_MD5 E_MplsTypes_RSVP_AUTH_TYPE = 1
)

// E_MplsTypes_TUNNEL_ADMIN_STATUS is a derived int64 type which is used to represent
// the enumerated node MplsTypes_TUNNEL_ADMIN_STATUS. An additional value named
// MplsTypes_TUNNEL_ADMIN_STATUS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_TUNNEL_ADMIN_STATUS int64

// IsYANGGoEnum ensures that MplsTypes_TUNNEL_ADMIN_STATUS implements the yang.GoEnum
// interface. This ensures that MplsTypes_TUNNEL_ADMIN_STATUS can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_TUNNEL_ADMIN_STATUS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_TUNNEL_ADMIN_STATUS.
func (E_MplsTypes_TUNNEL_ADMIN_STATUS) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_MplsTypes_TUNNEL_ADMIN_STATUS.
func (e E_MplsTypes_TUNNEL_ADMIN_STATUS) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_TUNNEL_ADMIN_STATUS")
}

const (
	// MplsTypes_TUNNEL_ADMIN_STATUS_UNSET corresponds to the value UNSET of MplsTypes_TUNNEL_ADMIN_STATUS
	MplsTypes_TUNNEL_ADMIN_STATUS_UNSET E_MplsTypes_TUNNEL_ADMIN_STATUS = 0
	// MplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_DOWN corresponds to the value ADMIN_DOWN of MplsTypes_TUNNEL_ADMIN_STATUS
	MplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_DOWN E_MplsTypes_TUNNEL_ADMIN_STATUS = 1
	// MplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_UP corresponds to the value ADMIN_UP of MplsTypes_TUNNEL_ADMIN_STATUS
	MplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_UP E_MplsTypes_TUNNEL_ADMIN_STATUS = 2
)

// E_MplsTypes_TUNNEL_TYPE is a derived int64 type which is used to represent
// the enumerated node MplsTypes_TUNNEL_TYPE. An additional value named
// MplsTypes_TUNNEL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_MplsTypes_TUNNEL_TYPE int64

// IsYANGGoEnum ensures that MplsTypes_TUNNEL_TYPE implements the yang.GoEnum
// interface. This ensures that MplsTypes_TUNNEL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_MplsTypes_TUNNEL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  MplsTypes_TUNNEL_TYPE.
func (E_MplsTypes_TUNNEL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_MplsTypes_TUNNEL_TYPE.
func (e E_MplsTypes_TUNNEL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_MplsTypes_TUNNEL_TYPE")
}

const (
	// MplsTypes_TUNNEL_TYPE_UNSET corresponds to the value UNSET of MplsTypes_TUNNEL_TYPE
	MplsTypes_TUNNEL_TYPE_UNSET E_MplsTypes_TUNNEL_TYPE = 0
	// MplsTypes_TUNNEL_TYPE_P2MP corresponds to the value P2MP of MplsTypes_TUNNEL_TYPE
	MplsTypes_TUNNEL_TYPE_P2MP E_MplsTypes_TUNNEL_TYPE = 1
	// MplsTypes_TUNNEL_TYPE_P2P corresponds to the value P2P of MplsTypes_TUNNEL_TYPE
	MplsTypes_TUNNEL_TYPE_P2P E_MplsTypes_TUNNEL_TYPE = 2
)

// E_Mpls_CspfTieBreaking is a derived int64 type which is used to represent
// the enumerated node Mpls_CspfTieBreaking. An additional value named
// Mpls_CspfTieBreaking_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_CspfTieBreaking int64

// IsYANGGoEnum ensures that Mpls_CspfTieBreaking implements the yang.GoEnum
// interface. This ensures that Mpls_CspfTieBreaking can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_CspfTieBreaking) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_CspfTieBreaking.
func (E_Mpls_CspfTieBreaking) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_CspfTieBreaking.
func (e E_Mpls_CspfTieBreaking) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_CspfTieBreaking")
}

const (
	// Mpls_CspfTieBreaking_UNSET corresponds to the value UNSET of Mpls_CspfTieBreaking
	Mpls_CspfTieBreaking_UNSET E_Mpls_CspfTieBreaking = 0
	// Mpls_CspfTieBreaking_RANDOM corresponds to the value RANDOM of Mpls_CspfTieBreaking
	Mpls_CspfTieBreaking_RANDOM E_Mpls_CspfTieBreaking = 1
	// Mpls_CspfTieBreaking_LEAST_FILL corresponds to the value LEAST_FILL of Mpls_CspfTieBreaking
	Mpls_CspfTieBreaking_LEAST_FILL E_Mpls_CspfTieBreaking = 2
	// Mpls_CspfTieBreaking_MOST_FILL corresponds to the value MOST_FILL of Mpls_CspfTieBreaking
	Mpls_CspfTieBreaking_MOST_FILL E_Mpls_CspfTieBreaking = 3
)

// E_Mpls_EndLabelValue is a derived int64 type which is used to represent
// the enumerated node Mpls_EndLabelValue. An additional value named
// Mpls_EndLabelValue_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_EndLabelValue int64

// IsYANGGoEnum ensures that Mpls_EndLabelValue implements the yang.GoEnum
// interface. This ensures that Mpls_EndLabelValue can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_EndLabelValue) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_EndLabelValue.
func (E_Mpls_EndLabelValue) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_EndLabelValue.
func (e E_Mpls_EndLabelValue) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_EndLabelValue")
}

const (
	// Mpls_EndLabelValue_UNSET corresponds to the value UNSET of Mpls_EndLabelValue
	Mpls_EndLabelValue_UNSET E_Mpls_EndLabelValue = 0
	// Mpls_EndLabelValue_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Mpls_EndLabelValue
	Mpls_EndLabelValue_IPV4_EXPLICIT_NULL E_Mpls_EndLabelValue = 1
	// Mpls_EndLabelValue_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Mpls_EndLabelValue
	Mpls_EndLabelValue_ROUTER_ALERT E_Mpls_EndLabelValue = 2
	// Mpls_EndLabelValue_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Mpls_EndLabelValue
	Mpls_EndLabelValue_IPV6_EXPLICIT_NULL E_Mpls_EndLabelValue = 3
	// Mpls_EndLabelValue_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Mpls_EndLabelValue
	Mpls_EndLabelValue_IMPLICIT_NULL E_Mpls_EndLabelValue = 4
	// Mpls_EndLabelValue_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Mpls_EndLabelValue
	Mpls_EndLabelValue_ENTROPY_LABEL_INDICATOR E_Mpls_EndLabelValue = 8
	// Mpls_EndLabelValue_NO_LABEL corresponds to the value NO_LABEL of Mpls_EndLabelValue
	Mpls_EndLabelValue_NO_LABEL E_Mpls_EndLabelValue = 9
)

// E_Mpls_LspControlType is a derived int64 type which is used to represent
// the enumerated node Mpls_LspControlType. An additional value named
// Mpls_LspControlType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_LspControlType int64

// IsYANGGoEnum ensures that Mpls_LspControlType implements the yang.GoEnum
// interface. This ensures that Mpls_LspControlType can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_LspControlType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_LspControlType.
func (E_Mpls_LspControlType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_LspControlType.
func (e E_Mpls_LspControlType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_LspControlType")
}

const (
	// Mpls_LspControlType_UNSET corresponds to the value UNSET of Mpls_LspControlType
	Mpls_LspControlType_UNSET E_Mpls_LspControlType = 0
	// Mpls_LspControlType_PCE_DELEGATED corresponds to the value PCE_DELEGATED of Mpls_LspControlType
	Mpls_LspControlType_PCE_DELEGATED E_Mpls_LspControlType = 1
	// Mpls_LspControlType_PCC_CONTROLLED corresponds to the value PCC_CONTROLLED of Mpls_LspControlType
	Mpls_LspControlType_PCC_CONTROLLED E_Mpls_LspControlType = 2
	// Mpls_LspControlType_PCC_REPORT_ONLY corresponds to the value PCC_REPORT_ONLY of Mpls_LspControlType
	Mpls_LspControlType_PCC_REPORT_ONLY E_Mpls_LspControlType = 3
)

// E_Mpls_MplsHopType is a derived int64 type which is used to represent
// the enumerated node Mpls_MplsHopType. An additional value named
// Mpls_MplsHopType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_MplsHopType int64

// IsYANGGoEnum ensures that Mpls_MplsHopType implements the yang.GoEnum
// interface. This ensures that Mpls_MplsHopType can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_MplsHopType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_MplsHopType.
func (E_Mpls_MplsHopType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_MplsHopType.
func (e E_Mpls_MplsHopType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_MplsHopType")
}

const (
	// Mpls_MplsHopType_UNSET corresponds to the value UNSET of Mpls_MplsHopType
	Mpls_MplsHopType_UNSET E_Mpls_MplsHopType = 0
	// Mpls_MplsHopType_LOOSE corresponds to the value LOOSE of Mpls_MplsHopType
	Mpls_MplsHopType_LOOSE E_Mpls_MplsHopType = 1
	// Mpls_MplsHopType_STRICT corresponds to the value STRICT of Mpls_MplsHopType
	Mpls_MplsHopType_STRICT E_Mpls_MplsHopType = 2
)

// E_Mpls_MplsLabelStack is a derived int64 type which is used to represent
// the enumerated node Mpls_MplsLabelStack. An additional value named
// Mpls_MplsLabelStack_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_MplsLabelStack int64

// IsYANGGoEnum ensures that Mpls_MplsLabelStack implements the yang.GoEnum
// interface. This ensures that Mpls_MplsLabelStack can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_MplsLabelStack) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_MplsLabelStack.
func (E_Mpls_MplsLabelStack) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_MplsLabelStack.
func (e E_Mpls_MplsLabelStack) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_MplsLabelStack")
}

const (
	// Mpls_MplsLabelStack_UNSET corresponds to the value UNSET of Mpls_MplsLabelStack
	Mpls_MplsLabelStack_UNSET E_Mpls_MplsLabelStack = 0
	// Mpls_MplsLabelStack_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Mpls_MplsLabelStack
	Mpls_MplsLabelStack_IPV4_EXPLICIT_NULL E_Mpls_MplsLabelStack = 1
	// Mpls_MplsLabelStack_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Mpls_MplsLabelStack
	Mpls_MplsLabelStack_ROUTER_ALERT E_Mpls_MplsLabelStack = 2
	// Mpls_MplsLabelStack_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Mpls_MplsLabelStack
	Mpls_MplsLabelStack_IPV6_EXPLICIT_NULL E_Mpls_MplsLabelStack = 3
	// Mpls_MplsLabelStack_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Mpls_MplsLabelStack
	Mpls_MplsLabelStack_IMPLICIT_NULL E_Mpls_MplsLabelStack = 4
	// Mpls_MplsLabelStack_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Mpls_MplsLabelStack
	Mpls_MplsLabelStack_ENTROPY_LABEL_INDICATOR E_Mpls_MplsLabelStack = 8
	// Mpls_MplsLabelStack_NO_LABEL corresponds to the value NO_LABEL of Mpls_MplsLabelStack
	Mpls_MplsLabelStack_NO_LABEL E_Mpls_MplsLabelStack = 9
)

// E_Mpls_MplsSrlgFloodingType is a derived int64 type which is used to represent
// the enumerated node Mpls_MplsSrlgFloodingType. An additional value named
// Mpls_MplsSrlgFloodingType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_MplsSrlgFloodingType int64

// IsYANGGoEnum ensures that Mpls_MplsSrlgFloodingType implements the yang.GoEnum
// interface. This ensures that Mpls_MplsSrlgFloodingType can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_MplsSrlgFloodingType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_MplsSrlgFloodingType.
func (E_Mpls_MplsSrlgFloodingType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_MplsSrlgFloodingType.
func (e E_Mpls_MplsSrlgFloodingType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_MplsSrlgFloodingType")
}

const (
	// Mpls_MplsSrlgFloodingType_UNSET corresponds to the value UNSET of Mpls_MplsSrlgFloodingType
	Mpls_MplsSrlgFloodingType_UNSET E_Mpls_MplsSrlgFloodingType = 0
	// Mpls_MplsSrlgFloodingType_FLOODED_SRLG corresponds to the value FLOODED_SRLG of Mpls_MplsSrlgFloodingType
	Mpls_MplsSrlgFloodingType_FLOODED_SRLG E_Mpls_MplsSrlgFloodingType = 1
	// Mpls_MplsSrlgFloodingType_STATIC_SRLG corresponds to the value STATIC_SRLG of Mpls_MplsSrlgFloodingType
	Mpls_MplsSrlgFloodingType_STATIC_SRLG E_Mpls_MplsSrlgFloodingType = 2
)

// E_Mpls_StartLabelValue is a derived int64 type which is used to represent
// the enumerated node Mpls_StartLabelValue. An additional value named
// Mpls_StartLabelValue_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_StartLabelValue int64

// IsYANGGoEnum ensures that Mpls_StartLabelValue implements the yang.GoEnum
// interface. This ensures that Mpls_StartLabelValue can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_StartLabelValue) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_StartLabelValue.
func (E_Mpls_StartLabelValue) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_StartLabelValue.
func (e E_Mpls_StartLabelValue) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_StartLabelValue")
}

const (
	// Mpls_StartLabelValue_UNSET corresponds to the value UNSET of Mpls_StartLabelValue
	Mpls_StartLabelValue_UNSET E_Mpls_StartLabelValue = 0
	// Mpls_StartLabelValue_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Mpls_StartLabelValue
	Mpls_StartLabelValue_IPV4_EXPLICIT_NULL E_Mpls_StartLabelValue = 1
	// Mpls_StartLabelValue_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Mpls_StartLabelValue
	Mpls_StartLabelValue_ROUTER_ALERT E_Mpls_StartLabelValue = 2
	// Mpls_StartLabelValue_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Mpls_StartLabelValue
	Mpls_StartLabelValue_IPV6_EXPLICIT_NULL E_Mpls_StartLabelValue = 3
	// Mpls_StartLabelValue_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Mpls_StartLabelValue
	Mpls_StartLabelValue_IMPLICIT_NULL E_Mpls_StartLabelValue = 4
	// Mpls_StartLabelValue_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Mpls_StartLabelValue
	Mpls_StartLabelValue_ENTROPY_LABEL_INDICATOR E_Mpls_StartLabelValue = 8
	// Mpls_StartLabelValue_NO_LABEL corresponds to the value NO_LABEL of Mpls_StartLabelValue
	Mpls_StartLabelValue_NO_LABEL E_Mpls_StartLabelValue = 9
)

// E_Mpls_TeBandwidthType is a derived int64 type which is used to represent
// the enumerated node Mpls_TeBandwidthType. An additional value named
// Mpls_TeBandwidthType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Mpls_TeBandwidthType int64

// IsYANGGoEnum ensures that Mpls_TeBandwidthType implements the yang.GoEnum
// interface. This ensures that Mpls_TeBandwidthType can be identified as a
// mapped type for a YANG enumeration.
func (E_Mpls_TeBandwidthType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Mpls_TeBandwidthType.
func (E_Mpls_TeBandwidthType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Mpls_TeBandwidthType.
func (e E_Mpls_TeBandwidthType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Mpls_TeBandwidthType")
}

const (
	// Mpls_TeBandwidthType_UNSET corresponds to the value UNSET of Mpls_TeBandwidthType
	Mpls_TeBandwidthType_UNSET E_Mpls_TeBandwidthType = 0
	// Mpls_TeBandwidthType_SPECIFIED corresponds to the value SPECIFIED of Mpls_TeBandwidthType
	Mpls_TeBandwidthType_SPECIFIED E_Mpls_TeBandwidthType = 1
	// Mpls_TeBandwidthType_AUTO corresponds to the value AUTO of Mpls_TeBandwidthType
	Mpls_TeBandwidthType_AUTO E_Mpls_TeBandwidthType = 2
)

// E_NamedExplicitPath_SidSelectionMode is a derived int64 type which is used to represent
// the enumerated node NamedExplicitPath_SidSelectionMode. An additional value named
// NamedExplicitPath_SidSelectionMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NamedExplicitPath_SidSelectionMode int64

// IsYANGGoEnum ensures that NamedExplicitPath_SidSelectionMode implements the yang.GoEnum
// interface. This ensures that NamedExplicitPath_SidSelectionMode can be identified as a
// mapped type for a YANG enumeration.
func (E_NamedExplicitPath_SidSelectionMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NamedExplicitPath_SidSelectionMode.
func (E_NamedExplicitPath_SidSelectionMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NamedExplicitPath_SidSelectionMode.
func (e E_NamedExplicitPath_SidSelectionMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NamedExplicitPath_SidSelectionMode")
}

const (
	// NamedExplicitPath_SidSelectionMode_UNSET corresponds to the value UNSET of NamedExplicitPath_SidSelectionMode
	NamedExplicitPath_SidSelectionMode_UNSET E_NamedExplicitPath_SidSelectionMode = 0
	// NamedExplicitPath_SidSelectionMode_ADJ_SID_ONLY corresponds to the value ADJ_SID_ONLY of NamedExplicitPath_SidSelectionMode
	NamedExplicitPath_SidSelectionMode_ADJ_SID_ONLY E_NamedExplicitPath_SidSelectionMode = 1
	// NamedExplicitPath_SidSelectionMode_MIXED_MODE corresponds to the value MIXED_MODE of NamedExplicitPath_SidSelectionMode
	NamedExplicitPath_SidSelectionMode_MIXED_MODE E_NamedExplicitPath_SidSelectionMode = 2
)

// E_Neighbor_NeighborState is a derived int64 type which is used to represent
// the enumerated node Neighbor_NeighborState. An additional value named
// Neighbor_NeighborState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Neighbor_NeighborState int64

// IsYANGGoEnum ensures that Neighbor_NeighborState implements the yang.GoEnum
// interface. This ensures that Neighbor_NeighborState can be identified as a
// mapped type for a YANG enumeration.
func (E_Neighbor_NeighborState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Neighbor_NeighborState.
func (E_Neighbor_NeighborState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Neighbor_NeighborState.
func (e E_Neighbor_NeighborState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Neighbor_NeighborState")
}

const (
	// Neighbor_NeighborState_UNSET corresponds to the value UNSET of Neighbor_NeighborState
	Neighbor_NeighborState_UNSET E_Neighbor_NeighborState = 0
	// Neighbor_NeighborState_INCOMPLETE corresponds to the value INCOMPLETE of Neighbor_NeighborState
	Neighbor_NeighborState_INCOMPLETE E_Neighbor_NeighborState = 1
	// Neighbor_NeighborState_REACHABLE corresponds to the value REACHABLE of Neighbor_NeighborState
	Neighbor_NeighborState_REACHABLE E_Neighbor_NeighborState = 2
	// Neighbor_NeighborState_STALE corresponds to the value STALE of Neighbor_NeighborState
	Neighbor_NeighborState_STALE E_Neighbor_NeighborState = 3
	// Neighbor_NeighborState_DELAY corresponds to the value DELAY of Neighbor_NeighborState
	Neighbor_NeighborState_DELAY E_Neighbor_NeighborState = 4
	// Neighbor_NeighborState_PROBE corresponds to the value PROBE of Neighbor_NeighborState
	Neighbor_NeighborState_PROBE E_Neighbor_NeighborState = 5
)

// E_Neighbor_NeighborStatus is a derived int64 type which is used to represent
// the enumerated node Neighbor_NeighborStatus. An additional value named
// Neighbor_NeighborStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Neighbor_NeighborStatus int64

// IsYANGGoEnum ensures that Neighbor_NeighborStatus implements the yang.GoEnum
// interface. This ensures that Neighbor_NeighborStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_Neighbor_NeighborStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Neighbor_NeighborStatus.
func (E_Neighbor_NeighborStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Neighbor_NeighborStatus.
func (e E_Neighbor_NeighborStatus) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Neighbor_NeighborStatus")
}

const (
	// Neighbor_NeighborStatus_UNSET corresponds to the value UNSET of Neighbor_NeighborStatus
	Neighbor_NeighborStatus_UNSET E_Neighbor_NeighborStatus = 0
	// Neighbor_NeighborStatus_UP corresponds to the value UP of Neighbor_NeighborStatus
	Neighbor_NeighborStatus_UP E_Neighbor_NeighborStatus = 1
	// Neighbor_NeighborStatus_DOWN corresponds to the value DOWN of Neighbor_NeighborStatus
	Neighbor_NeighborStatus_DOWN E_Neighbor_NeighborStatus = 2
)

// E_NetworkInstanceTypes_ENCAPSULATION is a derived int64 type which is used to represent
// the enumerated node NetworkInstanceTypes_ENCAPSULATION. An additional value named
// NetworkInstanceTypes_ENCAPSULATION_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NetworkInstanceTypes_ENCAPSULATION int64

// IsYANGGoEnum ensures that NetworkInstanceTypes_ENCAPSULATION implements the yang.GoEnum
// interface. This ensures that NetworkInstanceTypes_ENCAPSULATION can be identified as a
// mapped type for a YANG enumeration.
func (E_NetworkInstanceTypes_ENCAPSULATION) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NetworkInstanceTypes_ENCAPSULATION.
func (E_NetworkInstanceTypes_ENCAPSULATION) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NetworkInstanceTypes_ENCAPSULATION.
func (e E_NetworkInstanceTypes_ENCAPSULATION) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NetworkInstanceTypes_ENCAPSULATION")
}

const (
	// NetworkInstanceTypes_ENCAPSULATION_UNSET corresponds to the value UNSET of NetworkInstanceTypes_ENCAPSULATION
	NetworkInstanceTypes_ENCAPSULATION_UNSET E_NetworkInstanceTypes_ENCAPSULATION = 0
	// NetworkInstanceTypes_ENCAPSULATION_MPLS corresponds to the value MPLS of NetworkInstanceTypes_ENCAPSULATION
	NetworkInstanceTypes_ENCAPSULATION_MPLS E_NetworkInstanceTypes_ENCAPSULATION = 1
	// NetworkInstanceTypes_ENCAPSULATION_VXLAN corresponds to the value VXLAN of NetworkInstanceTypes_ENCAPSULATION
	NetworkInstanceTypes_ENCAPSULATION_VXLAN E_NetworkInstanceTypes_ENCAPSULATION = 2
)

// E_NetworkInstanceTypes_ENDPOINT_TYPE is a derived int64 type which is used to represent
// the enumerated node NetworkInstanceTypes_ENDPOINT_TYPE. An additional value named
// NetworkInstanceTypes_ENDPOINT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NetworkInstanceTypes_ENDPOINT_TYPE int64

// IsYANGGoEnum ensures that NetworkInstanceTypes_ENDPOINT_TYPE implements the yang.GoEnum
// interface. This ensures that NetworkInstanceTypes_ENDPOINT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_NetworkInstanceTypes_ENDPOINT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NetworkInstanceTypes_ENDPOINT_TYPE.
func (E_NetworkInstanceTypes_ENDPOINT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NetworkInstanceTypes_ENDPOINT_TYPE.
func (e E_NetworkInstanceTypes_ENDPOINT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NetworkInstanceTypes_ENDPOINT_TYPE")
}

const (
	// NetworkInstanceTypes_ENDPOINT_TYPE_UNSET corresponds to the value UNSET of NetworkInstanceTypes_ENDPOINT_TYPE
	NetworkInstanceTypes_ENDPOINT_TYPE_UNSET E_NetworkInstanceTypes_ENDPOINT_TYPE = 0
	// NetworkInstanceTypes_ENDPOINT_TYPE_LOCAL corresponds to the value LOCAL of NetworkInstanceTypes_ENDPOINT_TYPE
	NetworkInstanceTypes_ENDPOINT_TYPE_LOCAL E_NetworkInstanceTypes_ENDPOINT_TYPE = 1
	// NetworkInstanceTypes_ENDPOINT_TYPE_REMOTE corresponds to the value REMOTE of NetworkInstanceTypes_ENDPOINT_TYPE
	NetworkInstanceTypes_ENDPOINT_TYPE_REMOTE E_NetworkInstanceTypes_ENDPOINT_TYPE = 2
)

// E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE is a derived int64 type which is used to represent
// the enumerated node NetworkInstanceTypes_LABEL_ALLOCATION_MODE. An additional value named
// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE int64

// IsYANGGoEnum ensures that NetworkInstanceTypes_LABEL_ALLOCATION_MODE implements the yang.GoEnum
// interface. This ensures that NetworkInstanceTypes_LABEL_ALLOCATION_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NetworkInstanceTypes_LABEL_ALLOCATION_MODE.
func (E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE.
func (e E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE")
}

const (
	// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_UNSET corresponds to the value UNSET of NetworkInstanceTypes_LABEL_ALLOCATION_MODE
	NetworkInstanceTypes_LABEL_ALLOCATION_MODE_UNSET E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE = 0
	// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_INSTANCE_LABEL corresponds to the value INSTANCE_LABEL of NetworkInstanceTypes_LABEL_ALLOCATION_MODE
	NetworkInstanceTypes_LABEL_ALLOCATION_MODE_INSTANCE_LABEL E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE = 1
	// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_NEXTHOP corresponds to the value PER_NEXTHOP of NetworkInstanceTypes_LABEL_ALLOCATION_MODE
	NetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_NEXTHOP E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE = 2
	// NetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_PREFIX corresponds to the value PER_PREFIX of NetworkInstanceTypes_LABEL_ALLOCATION_MODE
	NetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_PREFIX E_NetworkInstanceTypes_LABEL_ALLOCATION_MODE = 3
)

// E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE is a derived int64 type which is used to represent
// the enumerated node NetworkInstanceTypes_NETWORK_INSTANCE_TYPE. An additional value named
// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE int64

// IsYANGGoEnum ensures that NetworkInstanceTypes_NETWORK_INSTANCE_TYPE implements the yang.GoEnum
// interface. This ensures that NetworkInstanceTypes_NETWORK_INSTANCE_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NetworkInstanceTypes_NETWORK_INSTANCE_TYPE.
func (E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE.
func (e E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE")
}

const (
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_UNSET corresponds to the value UNSET of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_UNSET E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 0
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_DEFAULT_INSTANCE corresponds to the value DEFAULT_INSTANCE of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_DEFAULT_INSTANCE E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 1
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2L3 corresponds to the value L2L3 of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2L3 E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 2
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2P2P corresponds to the value L2P2P of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2P2P E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 3
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2VSI corresponds to the value L2VSI of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2VSI E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 4
	// NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L3VRF corresponds to the value L3VRF of NetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	NetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L3VRF E_NetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 5
)

// E_NextHopGroup_Type is a derived int64 type which is used to represent
// the enumerated node NextHopGroup_Type. An additional value named
// NextHopGroup_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NextHopGroup_Type int64

// IsYANGGoEnum ensures that NextHopGroup_Type implements the yang.GoEnum
// interface. This ensures that NextHopGroup_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_NextHopGroup_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NextHopGroup_Type.
func (E_NextHopGroup_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_NextHopGroup_Type.
func (e E_NextHopGroup_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NextHopGroup_Type")
}

const (
	// NextHopGroup_Type_UNSET corresponds to the value UNSET of NextHopGroup_Type
	NextHopGroup_Type_UNSET E_NextHopGroup_Type = 0
	// NextHopGroup_Type_ESI corresponds to the value ESI of NextHopGroup_Type
	NextHopGroup_Type_ESI E_NextHopGroup_Type = 1
	// NextHopGroup_Type_ESI_EVI corresponds to the value ESI_EVI of NextHopGroup_Type
	NextHopGroup_Type_ESI_EVI E_NextHopGroup_Type = 2
	// NextHopGroup_Type_BASE_ECMP corresponds to the value BASE_ECMP of NextHopGroup_Type
	NextHopGroup_Type_BASE_ECMP E_NextHopGroup_Type = 3
)

// E_NextHop_PushedMplsLabelStack is a derived int64 type which is used to represent
// the enumerated node NextHop_PushedMplsLabelStack. An additional value named
// NextHop_PushedMplsLabelStack_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NextHop_PushedMplsLabelStack int64

// IsYANGGoEnum ensures that NextHop_PushedMplsLabelStack implements the yang.GoEnum
// interface. This ensures that NextHop_PushedMplsLabelStack can be identified as a
// mapped type for a YANG enumeration.
func (E_NextHop_PushedMplsLabelStack) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NextHop_PushedMplsLabelStack.
func (E_NextHop_PushedMplsLabelStack) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_NextHop_PushedMplsLabelStack.
func (e E_NextHop_PushedMplsLabelStack) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NextHop_PushedMplsLabelStack")
}

const (
	// NextHop_PushedMplsLabelStack_UNSET corresponds to the value UNSET of NextHop_PushedMplsLabelStack
	NextHop_PushedMplsLabelStack_UNSET E_NextHop_PushedMplsLabelStack = 0
	// NextHop_PushedMplsLabelStack_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of NextHop_PushedMplsLabelStack
	NextHop_PushedMplsLabelStack_IPV4_EXPLICIT_NULL E_NextHop_PushedMplsLabelStack = 1
	// NextHop_PushedMplsLabelStack_ROUTER_ALERT corresponds to the value ROUTER_ALERT of NextHop_PushedMplsLabelStack
	NextHop_PushedMplsLabelStack_ROUTER_ALERT E_NextHop_PushedMplsLabelStack = 2
	// NextHop_PushedMplsLabelStack_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of NextHop_PushedMplsLabelStack
	NextHop_PushedMplsLabelStack_IPV6_EXPLICIT_NULL E_NextHop_PushedMplsLabelStack = 3
	// NextHop_PushedMplsLabelStack_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of NextHop_PushedMplsLabelStack
	NextHop_PushedMplsLabelStack_IMPLICIT_NULL E_NextHop_PushedMplsLabelStack = 4
	// NextHop_PushedMplsLabelStack_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of NextHop_PushedMplsLabelStack
	NextHop_PushedMplsLabelStack_ENTROPY_LABEL_INDICATOR E_NextHop_PushedMplsLabelStack = 8
	// NextHop_PushedMplsLabelStack_NO_LABEL corresponds to the value NO_LABEL of NextHop_PushedMplsLabelStack
	NextHop_PushedMplsLabelStack_NO_LABEL E_NextHop_PushedMplsLabelStack = 9
)

// E_Nlpid_Nlpid is a derived int64 type which is used to represent
// the enumerated node Nlpid_Nlpid. An additional value named
// Nlpid_Nlpid_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Nlpid_Nlpid int64

// IsYANGGoEnum ensures that Nlpid_Nlpid implements the yang.GoEnum
// interface. This ensures that Nlpid_Nlpid can be identified as a
// mapped type for a YANG enumeration.
func (E_Nlpid_Nlpid) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Nlpid_Nlpid.
func (E_Nlpid_Nlpid) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Nlpid_Nlpid.
func (e E_Nlpid_Nlpid) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Nlpid_Nlpid")
}

const (
	// Nlpid_Nlpid_UNSET corresponds to the value UNSET of Nlpid_Nlpid
	Nlpid_Nlpid_UNSET E_Nlpid_Nlpid = 0
	// Nlpid_Nlpid_IPV4 corresponds to the value IPV4 of Nlpid_Nlpid
	Nlpid_Nlpid_IPV4 E_Nlpid_Nlpid = 1
	// Nlpid_Nlpid_IPV6 corresponds to the value IPV6 of Nlpid_Nlpid
	Nlpid_Nlpid_IPV6 E_Nlpid_Nlpid = 2
)

// E_NodeAttribute_SubTlv_Type is a derived int64 type which is used to represent
// the enumerated node NodeAttribute_SubTlv_Type. An additional value named
// NodeAttribute_SubTlv_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_NodeAttribute_SubTlv_Type int64

// IsYANGGoEnum ensures that NodeAttribute_SubTlv_Type implements the yang.GoEnum
// interface. This ensures that NodeAttribute_SubTlv_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_NodeAttribute_SubTlv_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  NodeAttribute_SubTlv_Type.
func (E_NodeAttribute_SubTlv_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_NodeAttribute_SubTlv_Type.
func (e E_NodeAttribute_SubTlv_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_NodeAttribute_SubTlv_Type")
}

const (
	// NodeAttribute_SubTlv_Type_UNSET corresponds to the value UNSET of NodeAttribute_SubTlv_Type
	NodeAttribute_SubTlv_Type_UNSET E_NodeAttribute_SubTlv_Type = 0
	// NodeAttribute_SubTlv_Type_UNKNOWN corresponds to the value UNKNOWN of NodeAttribute_SubTlv_Type
	NodeAttribute_SubTlv_Type_UNKNOWN E_NodeAttribute_SubTlv_Type = 1
)

// E_OpaqueLsa_Scope is a derived int64 type which is used to represent
// the enumerated node OpaqueLsa_Scope. An additional value named
// OpaqueLsa_Scope_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpaqueLsa_Scope int64

// IsYANGGoEnum ensures that OpaqueLsa_Scope implements the yang.GoEnum
// interface. This ensures that OpaqueLsa_Scope can be identified as a
// mapped type for a YANG enumeration.
func (E_OpaqueLsa_Scope) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpaqueLsa_Scope.
func (E_OpaqueLsa_Scope) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OpaqueLsa_Scope.
func (e E_OpaqueLsa_Scope) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OpaqueLsa_Scope")
}

const (
	// OpaqueLsa_Scope_UNSET corresponds to the value UNSET of OpaqueLsa_Scope
	OpaqueLsa_Scope_UNSET E_OpaqueLsa_Scope = 0
	// OpaqueLsa_Scope_LINK corresponds to the value LINK of OpaqueLsa_Scope
	OpaqueLsa_Scope_LINK E_OpaqueLsa_Scope = 1
	// OpaqueLsa_Scope_AREA corresponds to the value AREA of OpaqueLsa_Scope
	OpaqueLsa_Scope_AREA E_OpaqueLsa_Scope = 2
	// OpaqueLsa_Scope_AS corresponds to the value AS of OpaqueLsa_Scope
	OpaqueLsa_Scope_AS E_OpaqueLsa_Scope = 3
)

// E_OspfTypes_GRACE_LSA_TLV_TYPES is a derived int64 type which is used to represent
// the enumerated node OspfTypes_GRACE_LSA_TLV_TYPES. An additional value named
// OspfTypes_GRACE_LSA_TLV_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_GRACE_LSA_TLV_TYPES int64

// IsYANGGoEnum ensures that OspfTypes_GRACE_LSA_TLV_TYPES implements the yang.GoEnum
// interface. This ensures that OspfTypes_GRACE_LSA_TLV_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_GRACE_LSA_TLV_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_GRACE_LSA_TLV_TYPES.
func (E_OspfTypes_GRACE_LSA_TLV_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_GRACE_LSA_TLV_TYPES.
func (e E_OspfTypes_GRACE_LSA_TLV_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_GRACE_LSA_TLV_TYPES")
}

const (
	// OspfTypes_GRACE_LSA_TLV_TYPES_UNSET corresponds to the value UNSET of OspfTypes_GRACE_LSA_TLV_TYPES
	OspfTypes_GRACE_LSA_TLV_TYPES_UNSET E_OspfTypes_GRACE_LSA_TLV_TYPES = 0
	// OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_IP_INTERFACE_ADDRESS corresponds to the value GRACE_IP_INTERFACE_ADDRESS of OspfTypes_GRACE_LSA_TLV_TYPES
	OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_IP_INTERFACE_ADDRESS E_OspfTypes_GRACE_LSA_TLV_TYPES = 1
	// OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_PERIOD corresponds to the value GRACE_PERIOD of OspfTypes_GRACE_LSA_TLV_TYPES
	OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_PERIOD E_OspfTypes_GRACE_LSA_TLV_TYPES = 2
	// OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_RESTART_REASON corresponds to the value GRACE_RESTART_REASON of OspfTypes_GRACE_LSA_TLV_TYPES
	OspfTypes_GRACE_LSA_TLV_TYPES_GRACE_RESTART_REASON E_OspfTypes_GRACE_LSA_TLV_TYPES = 3
)

// E_OspfTypes_MAX_METRIC_INCLUDE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_MAX_METRIC_INCLUDE. An additional value named
// OspfTypes_MAX_METRIC_INCLUDE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_MAX_METRIC_INCLUDE int64

// IsYANGGoEnum ensures that OspfTypes_MAX_METRIC_INCLUDE implements the yang.GoEnum
// interface. This ensures that OspfTypes_MAX_METRIC_INCLUDE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_MAX_METRIC_INCLUDE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_MAX_METRIC_INCLUDE.
func (E_OspfTypes_MAX_METRIC_INCLUDE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_MAX_METRIC_INCLUDE.
func (e E_OspfTypes_MAX_METRIC_INCLUDE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_MAX_METRIC_INCLUDE")
}

const (
	// OspfTypes_MAX_METRIC_INCLUDE_UNSET corresponds to the value UNSET of OspfTypes_MAX_METRIC_INCLUDE
	OspfTypes_MAX_METRIC_INCLUDE_UNSET E_OspfTypes_MAX_METRIC_INCLUDE = 0
	// OspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_STUB corresponds to the value MAX_METRIC_INCLUDE_STUB of OspfTypes_MAX_METRIC_INCLUDE
	OspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_STUB E_OspfTypes_MAX_METRIC_INCLUDE = 1
	// OspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_TYPE2_EXTERNAL corresponds to the value MAX_METRIC_INCLUDE_TYPE2_EXTERNAL of OspfTypes_MAX_METRIC_INCLUDE
	OspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_TYPE2_EXTERNAL E_OspfTypes_MAX_METRIC_INCLUDE = 2
)

// E_OspfTypes_MAX_METRIC_TRIGGER is a derived int64 type which is used to represent
// the enumerated node OspfTypes_MAX_METRIC_TRIGGER. An additional value named
// OspfTypes_MAX_METRIC_TRIGGER_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_MAX_METRIC_TRIGGER int64

// IsYANGGoEnum ensures that OspfTypes_MAX_METRIC_TRIGGER implements the yang.GoEnum
// interface. This ensures that OspfTypes_MAX_METRIC_TRIGGER can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_MAX_METRIC_TRIGGER) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_MAX_METRIC_TRIGGER.
func (E_OspfTypes_MAX_METRIC_TRIGGER) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_MAX_METRIC_TRIGGER.
func (e E_OspfTypes_MAX_METRIC_TRIGGER) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_MAX_METRIC_TRIGGER")
}

const (
	// OspfTypes_MAX_METRIC_TRIGGER_UNSET corresponds to the value UNSET of OspfTypes_MAX_METRIC_TRIGGER
	OspfTypes_MAX_METRIC_TRIGGER_UNSET E_OspfTypes_MAX_METRIC_TRIGGER = 0
	// OspfTypes_MAX_METRIC_TRIGGER_MAX_METRIC_ON_SYSTEM_BOOT corresponds to the value MAX_METRIC_ON_SYSTEM_BOOT of OspfTypes_MAX_METRIC_TRIGGER
	OspfTypes_MAX_METRIC_TRIGGER_MAX_METRIC_ON_SYSTEM_BOOT E_OspfTypes_MAX_METRIC_TRIGGER = 1
)

// E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE. An additional value named
// OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE.
func (E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE.
func (e E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE")
}

const (
	// OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_UNSET E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE = 0
	// OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_ADJACENCY_SID corresponds to the value ADJACENCY_SID of OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_ADJACENCY_SID E_OspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE = 1
)

// E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE. An additional value named
// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE.
func (E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE.
func (e E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE")
}

const (
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_UNSET E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 0
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_METRIC corresponds to the value ERO_METRIC of OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_METRIC E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 1
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_PATH corresponds to the value ERO_PATH of OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_PATH E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 2
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_SID_MPLS_LABEL_BINDING corresponds to the value SID_MPLS_LABEL_BINDING of OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_SID_MPLS_LABEL_BINDING E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 3
)

// E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE. An additional value named
// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE.
func (E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE.
func (e E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE")
}

const (
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_UNSET E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 0
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_EXTENDED_PREFIX_RANGE corresponds to the value EXTENDED_PREFIX_RANGE of OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_EXTENDED_PREFIX_RANGE E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 1
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_PREFIX_SID corresponds to the value PREFIX_SID of OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_PREFIX_SID E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 2
	// OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_SID_LABEL_BINDING corresponds to the value SID_LABEL_BINDING of OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_SID_LABEL_BINDING E_OspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 3
)

// E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE. An additional value named
// OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE.
func (E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE.
func (e E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE")
}

const (
	// OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE
	OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNSET E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE = 0
	// OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_IPV4_SEGMENT corresponds to the value IPV4_SEGMENT of OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE
	OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_IPV4_SEGMENT E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE = 1
	// OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNNUMBERED_INTERFACE_SEGMENT corresponds to the value UNNUMBERED_INTERFACE_SEGMENT of OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE
	OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNNUMBERED_INTERFACE_SEGMENT E_OspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE = 2
)

// E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPFV2_ROUTER_LINK_TYPE. An additional value named
// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPFV2_ROUTER_LINK_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPFV2_ROUTER_LINK_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPFV2_ROUTER_LINK_TYPE.
func (E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE.
func (e E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE")
}

const (
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_UNSET E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 0
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_POINT_TO_POINT_LINK corresponds to the value POINT_TO_POINT_LINK of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_POINT_TO_POINT_LINK E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 1
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_STUB_NETWORK_LINK corresponds to the value STUB_NETWORK_LINK of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_STUB_NETWORK_LINK E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 2
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_TRANSIT_NETWORK_LINK corresponds to the value TRANSIT_NETWORK_LINK of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_TRANSIT_NETWORK_LINK E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 3
	// OspfTypes_OSPFV2_ROUTER_LINK_TYPE_VIRTUAL_LINK corresponds to the value VIRTUAL_LINK of OspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OspfTypes_OSPFV2_ROUTER_LINK_TYPE_VIRTUAL_LINK E_OspfTypes_OSPFV2_ROUTER_LINK_TYPE = 4
)

// E_OspfTypes_OSPF_ABR_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_ABR_TYPE. An additional value named
// OspfTypes_OSPF_ABR_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_ABR_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_ABR_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_ABR_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_ABR_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_ABR_TYPE.
func (E_OspfTypes_OSPF_ABR_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_OSPF_ABR_TYPE.
func (e E_OspfTypes_OSPF_ABR_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_ABR_TYPE")
}

const (
	// OspfTypes_OSPF_ABR_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_ABR_TYPE
	OspfTypes_OSPF_ABR_TYPE_UNSET E_OspfTypes_OSPF_ABR_TYPE = 0
	// OspfTypes_OSPF_ABR_TYPE_RFC2328_ABR corresponds to the value RFC2328_ABR of OspfTypes_OSPF_ABR_TYPE
	OspfTypes_OSPF_ABR_TYPE_RFC2328_ABR E_OspfTypes_OSPF_ABR_TYPE = 1
	// OspfTypes_OSPF_ABR_TYPE_RFC3509_ABR corresponds to the value RFC3509_ABR of OspfTypes_OSPF_ABR_TYPE
	OspfTypes_OSPF_ABR_TYPE_RFC3509_ABR E_OspfTypes_OSPF_ABR_TYPE = 2
)

// E_OspfTypes_OSPF_AREA_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_AREA_TYPE. An additional value named
// OspfTypes_OSPF_AREA_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_AREA_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_AREA_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_AREA_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_AREA_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_AREA_TYPE.
func (E_OspfTypes_OSPF_AREA_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_OSPF_AREA_TYPE.
func (e E_OspfTypes_OSPF_AREA_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_AREA_TYPE")
}

const (
	// OspfTypes_OSPF_AREA_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_AREA_TYPE
	OspfTypes_OSPF_AREA_TYPE_UNSET E_OspfTypes_OSPF_AREA_TYPE = 0
	// OspfTypes_OSPF_AREA_TYPE_NORMAL corresponds to the value NORMAL of OspfTypes_OSPF_AREA_TYPE
	OspfTypes_OSPF_AREA_TYPE_NORMAL E_OspfTypes_OSPF_AREA_TYPE = 1
	// OspfTypes_OSPF_AREA_TYPE_NSSA corresponds to the value NSSA of OspfTypes_OSPF_AREA_TYPE
	OspfTypes_OSPF_AREA_TYPE_NSSA E_OspfTypes_OSPF_AREA_TYPE = 2
	// OspfTypes_OSPF_AREA_TYPE_STUB corresponds to the value STUB of OspfTypes_OSPF_AREA_TYPE
	OspfTypes_OSPF_AREA_TYPE_STUB E_OspfTypes_OSPF_AREA_TYPE = 3
)

// E_OspfTypes_OSPF_LSA_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_LSA_TYPE. An additional value named
// OspfTypes_OSPF_LSA_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_LSA_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_LSA_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_LSA_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_LSA_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_LSA_TYPE.
func (E_OspfTypes_OSPF_LSA_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_OSPF_LSA_TYPE.
func (e E_OspfTypes_OSPF_LSA_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_LSA_TYPE")
}

const (
	// OspfTypes_OSPF_LSA_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_UNSET E_OspfTypes_OSPF_LSA_TYPE = 0
	// OspfTypes_OSPF_LSA_TYPE_AS_EXTERNAL_LSA corresponds to the value AS_EXTERNAL_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_AS_EXTERNAL_LSA E_OspfTypes_OSPF_LSA_TYPE = 1
	// OspfTypes_OSPF_LSA_TYPE_NETWORK_LSA corresponds to the value NETWORK_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_NETWORK_LSA E_OspfTypes_OSPF_LSA_TYPE = 2
	// OspfTypes_OSPF_LSA_TYPE_NSSA_AS_EXTERNAL_LSA corresponds to the value NSSA_AS_EXTERNAL_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_NSSA_AS_EXTERNAL_LSA E_OspfTypes_OSPF_LSA_TYPE = 3
	// OspfTypes_OSPF_LSA_TYPE_OSPFV2_AREA_SCOPE_OPAQUE_LSA corresponds to the value OSPFV2_AREA_SCOPE_OPAQUE_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_OSPFV2_AREA_SCOPE_OPAQUE_LSA E_OspfTypes_OSPF_LSA_TYPE = 4
	// OspfTypes_OSPF_LSA_TYPE_OSPFV2_AS_SCOPE_OPAQUE_LSA corresponds to the value OSPFV2_AS_SCOPE_OPAQUE_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_OSPFV2_AS_SCOPE_OPAQUE_LSA E_OspfTypes_OSPF_LSA_TYPE = 5
	// OspfTypes_OSPF_LSA_TYPE_OSPFV2_LINK_SCOPE_OPAQUE_LSA corresponds to the value OSPFV2_LINK_SCOPE_OPAQUE_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_OSPFV2_LINK_SCOPE_OPAQUE_LSA E_OspfTypes_OSPF_LSA_TYPE = 6
	// OspfTypes_OSPF_LSA_TYPE_ROUTER_LSA corresponds to the value ROUTER_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_ROUTER_LSA E_OspfTypes_OSPF_LSA_TYPE = 7
	// OspfTypes_OSPF_LSA_TYPE_SUMMARY_ASBR_LSA corresponds to the value SUMMARY_ASBR_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_SUMMARY_ASBR_LSA E_OspfTypes_OSPF_LSA_TYPE = 8
	// OspfTypes_OSPF_LSA_TYPE_SUMMARY_IP_NETWORK_LSA corresponds to the value SUMMARY_IP_NETWORK_LSA of OspfTypes_OSPF_LSA_TYPE
	OspfTypes_OSPF_LSA_TYPE_SUMMARY_IP_NETWORK_LSA E_OspfTypes_OSPF_LSA_TYPE = 9
)

// E_OspfTypes_OSPF_NEIGHBOR_STATE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_NEIGHBOR_STATE. An additional value named
// OspfTypes_OSPF_NEIGHBOR_STATE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_NEIGHBOR_STATE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_NEIGHBOR_STATE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_NEIGHBOR_STATE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_NEIGHBOR_STATE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_NEIGHBOR_STATE.
func (E_OspfTypes_OSPF_NEIGHBOR_STATE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_NEIGHBOR_STATE.
func (e E_OspfTypes_OSPF_NEIGHBOR_STATE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_NEIGHBOR_STATE")
}

const (
	// OspfTypes_OSPF_NEIGHBOR_STATE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_UNSET E_OspfTypes_OSPF_NEIGHBOR_STATE = 0
	// OspfTypes_OSPF_NEIGHBOR_STATE_ATTEMPT corresponds to the value ATTEMPT of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_ATTEMPT E_OspfTypes_OSPF_NEIGHBOR_STATE = 1
	// OspfTypes_OSPF_NEIGHBOR_STATE_DOWN corresponds to the value DOWN of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_DOWN E_OspfTypes_OSPF_NEIGHBOR_STATE = 2
	// OspfTypes_OSPF_NEIGHBOR_STATE_EXCHANGE corresponds to the value EXCHANGE of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_EXCHANGE E_OspfTypes_OSPF_NEIGHBOR_STATE = 3
	// OspfTypes_OSPF_NEIGHBOR_STATE_EXSTART corresponds to the value EXSTART of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_EXSTART E_OspfTypes_OSPF_NEIGHBOR_STATE = 4
	// OspfTypes_OSPF_NEIGHBOR_STATE_FULL corresponds to the value FULL of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_FULL E_OspfTypes_OSPF_NEIGHBOR_STATE = 5
	// OspfTypes_OSPF_NEIGHBOR_STATE_INIT corresponds to the value INIT of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_INIT E_OspfTypes_OSPF_NEIGHBOR_STATE = 6
	// OspfTypes_OSPF_NEIGHBOR_STATE_LOADING corresponds to the value LOADING of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_LOADING E_OspfTypes_OSPF_NEIGHBOR_STATE = 7
	// OspfTypes_OSPF_NEIGHBOR_STATE_TWO_WAY corresponds to the value TWO_WAY of OspfTypes_OSPF_NEIGHBOR_STATE
	OspfTypes_OSPF_NEIGHBOR_STATE_TWO_WAY E_OspfTypes_OSPF_NEIGHBOR_STATE = 8
)

// E_OspfTypes_OSPF_NETWORK_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_NETWORK_TYPE. An additional value named
// OspfTypes_OSPF_NETWORK_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_NETWORK_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_NETWORK_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_NETWORK_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_NETWORK_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_NETWORK_TYPE.
func (E_OspfTypes_OSPF_NETWORK_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_OSPF_NETWORK_TYPE.
func (e E_OspfTypes_OSPF_NETWORK_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_NETWORK_TYPE")
}

const (
	// OspfTypes_OSPF_NETWORK_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_NETWORK_TYPE
	OspfTypes_OSPF_NETWORK_TYPE_UNSET E_OspfTypes_OSPF_NETWORK_TYPE = 0
	// OspfTypes_OSPF_NETWORK_TYPE_BROADCAST_NETWORK corresponds to the value BROADCAST_NETWORK of OspfTypes_OSPF_NETWORK_TYPE
	OspfTypes_OSPF_NETWORK_TYPE_BROADCAST_NETWORK E_OspfTypes_OSPF_NETWORK_TYPE = 1
	// OspfTypes_OSPF_NETWORK_TYPE_NON_BROADCAST_NETWORK corresponds to the value NON_BROADCAST_NETWORK of OspfTypes_OSPF_NETWORK_TYPE
	OspfTypes_OSPF_NETWORK_TYPE_NON_BROADCAST_NETWORK E_OspfTypes_OSPF_NETWORK_TYPE = 2
	// OspfTypes_OSPF_NETWORK_TYPE_POINT_TO_POINT_NETWORK corresponds to the value POINT_TO_POINT_NETWORK of OspfTypes_OSPF_NETWORK_TYPE
	OspfTypes_OSPF_NETWORK_TYPE_POINT_TO_POINT_NETWORK E_OspfTypes_OSPF_NETWORK_TYPE = 3
)

// E_OspfTypes_OSPF_OPAQUE_LSA_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_OPAQUE_LSA_TYPE. An additional value named
// OspfTypes_OSPF_OPAQUE_LSA_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_OPAQUE_LSA_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_OPAQUE_LSA_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_OPAQUE_LSA_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_OPAQUE_LSA_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_OPAQUE_LSA_TYPE.
func (E_OspfTypes_OSPF_OPAQUE_LSA_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_OPAQUE_LSA_TYPE.
func (e E_OspfTypes_OSPF_OPAQUE_LSA_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_OPAQUE_LSA_TYPE")
}

const (
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_UNSET E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 0
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_GRACE_LSA corresponds to the value GRACE_LSA of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_GRACE_LSA E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 1
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_LINK corresponds to the value OSPFV2_EXTENDED_LINK of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_LINK E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 2
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_PREFIX corresponds to the value OSPFV2_EXTENDED_PREFIX of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_PREFIX E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 3
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_ROUTER_INFORMATION corresponds to the value ROUTER_INFORMATION of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_ROUTER_INFORMATION E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 4
	// OspfTypes_OSPF_OPAQUE_LSA_TYPE_TRAFFIC_ENGINEERING corresponds to the value TRAFFIC_ENGINEERING of OspfTypes_OSPF_OPAQUE_LSA_TYPE
	OspfTypes_OSPF_OPAQUE_LSA_TYPE_TRAFFIC_ENGINEERING E_OspfTypes_OSPF_OPAQUE_LSA_TYPE = 5
)

// E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES. An additional value named
// OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES.
func (E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES.
func (e E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES")
}

const (
	// OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_UNSET corresponds to the value UNSET of OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES
	OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_UNSET E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES = 0
	// OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_SR_SID_LABEL_TLV corresponds to the value SR_SID_LABEL_TLV of OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES
	OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_SR_SID_LABEL_TLV E_OspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES = 1
)

// E_OspfTypes_OSPF_TE_LINK_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_TE_LINK_TLV_TYPE. An additional value named
// OspfTypes_OSPF_TE_LINK_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_TE_LINK_TLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_TE_LINK_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_TE_LINK_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_TE_LINK_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_TE_LINK_TLV_TYPE.
func (E_OspfTypes_OSPF_TE_LINK_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_TE_LINK_TLV_TYPE.
func (e E_OspfTypes_OSPF_TE_LINK_TLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_TE_LINK_TLV_TYPE")
}

const (
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_UNSET E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 0
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ADMIN_GROUP corresponds to the value TE_LINK_ADMIN_GROUP of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ADMIN_GROUP E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 1
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ID corresponds to the value TE_LINK_ID of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ID E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 2
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_LOCAL_IP corresponds to the value TE_LINK_LOCAL_IP of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_LOCAL_IP E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 3
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_BANDWIDTH corresponds to the value TE_LINK_MAXIMUM_BANDWIDTH of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_BANDWIDTH E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 4
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_RESERVABLE_BANDWIDTH corresponds to the value TE_LINK_MAXIMUM_RESERVABLE_BANDWIDTH of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_RESERVABLE_BANDWIDTH E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 5
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_METRIC corresponds to the value TE_LINK_METRIC of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_METRIC E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 6
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_REMOTE_IP corresponds to the value TE_LINK_REMOTE_IP of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_REMOTE_IP E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 7
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_TYPE corresponds to the value TE_LINK_TYPE of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_TYPE E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 8
	// OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_UNRESERVED_BANDWIDTH corresponds to the value TE_LINK_UNRESERVED_BANDWIDTH of OspfTypes_OSPF_TE_LINK_TLV_TYPE
	OspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_UNRESERVED_BANDWIDTH E_OspfTypes_OSPF_TE_LINK_TLV_TYPE = 9
)

// E_OspfTypes_OSPF_TE_LSA_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_OSPF_TE_LSA_TLV_TYPE. An additional value named
// OspfTypes_OSPF_TE_LSA_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_OSPF_TE_LSA_TLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_OSPF_TE_LSA_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_OSPF_TE_LSA_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_OSPF_TE_LSA_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_OSPF_TE_LSA_TLV_TYPE.
func (E_OspfTypes_OSPF_TE_LSA_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_OSPF_TE_LSA_TLV_TYPE.
func (e E_OspfTypes_OSPF_TE_LSA_TLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_OSPF_TE_LSA_TLV_TYPE")
}

const (
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_UNSET E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 0
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK corresponds to the value TE_LINK of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 1
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK_LOCAL corresponds to the value TE_LINK_LOCAL of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK_LOCAL E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 2
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_NODE_ATTRIBUTE corresponds to the value TE_NODE_ATTRIBUTE of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_NODE_ATTRIBUTE E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 3
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_OPTICAL_NODE_PROPERTY corresponds to the value TE_OPTICAL_NODE_PROPERTY of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_OPTICAL_NODE_PROPERTY E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 4
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_ADDRESS corresponds to the value TE_ROUTER_ADDRESS of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_ADDRESS E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 5
	// OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_IPV6_ADDRESS corresponds to the value TE_ROUTER_IPV6_ADDRESS of OspfTypes_OSPF_TE_LSA_TLV_TYPE
	OspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_IPV6_ADDRESS E_OspfTypes_OSPF_TE_LSA_TLV_TYPE = 6
)

// E_OspfTypes_RI_LSA_TLV_TYPES is a derived int64 type which is used to represent
// the enumerated node OspfTypes_RI_LSA_TLV_TYPES. An additional value named
// OspfTypes_RI_LSA_TLV_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_RI_LSA_TLV_TYPES int64

// IsYANGGoEnum ensures that OspfTypes_RI_LSA_TLV_TYPES implements the yang.GoEnum
// interface. This ensures that OspfTypes_RI_LSA_TLV_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_RI_LSA_TLV_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_RI_LSA_TLV_TYPES.
func (E_OspfTypes_RI_LSA_TLV_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_RI_LSA_TLV_TYPES.
func (e E_OspfTypes_RI_LSA_TLV_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_RI_LSA_TLV_TYPES")
}

const (
	// OspfTypes_RI_LSA_TLV_TYPES_UNSET corresponds to the value UNSET of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_UNSET E_OspfTypes_RI_LSA_TLV_TYPES = 0
	// OspfTypes_RI_LSA_TLV_TYPES_RI_FUNCTIONAL_CAPABILITIES corresponds to the value RI_FUNCTIONAL_CAPABILITIES of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_FUNCTIONAL_CAPABILITIES E_OspfTypes_RI_LSA_TLV_TYPES = 1
	// OspfTypes_RI_LSA_TLV_TYPES_RI_INFORMATIONAL_CAPABILITIES corresponds to the value RI_INFORMATIONAL_CAPABILITIES of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_INFORMATIONAL_CAPABILITIES E_OspfTypes_RI_LSA_TLV_TYPES = 2
	// OspfTypes_RI_LSA_TLV_TYPES_RI_NODE_ADMIN_TAG corresponds to the value RI_NODE_ADMIN_TAG of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_NODE_ADMIN_TAG E_OspfTypes_RI_LSA_TLV_TYPES = 3
	// OspfTypes_RI_LSA_TLV_TYPES_RI_SR_ALGORITHM corresponds to the value RI_SR_ALGORITHM of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_SR_ALGORITHM E_OspfTypes_RI_LSA_TLV_TYPES = 4
	// OspfTypes_RI_LSA_TLV_TYPES_RI_SR_SID_LABEL_RANGE corresponds to the value RI_SR_SID_LABEL_RANGE of OspfTypes_RI_LSA_TLV_TYPES
	OspfTypes_RI_LSA_TLV_TYPES_RI_SR_SID_LABEL_RANGE E_OspfTypes_RI_LSA_TLV_TYPES = 5
)

// E_OspfTypes_ROUTER_LSA_TYPES is a derived int64 type which is used to represent
// the enumerated node OspfTypes_ROUTER_LSA_TYPES. An additional value named
// OspfTypes_ROUTER_LSA_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_ROUTER_LSA_TYPES int64

// IsYANGGoEnum ensures that OspfTypes_ROUTER_LSA_TYPES implements the yang.GoEnum
// interface. This ensures that OspfTypes_ROUTER_LSA_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_ROUTER_LSA_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_ROUTER_LSA_TYPES.
func (E_OspfTypes_ROUTER_LSA_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_ROUTER_LSA_TYPES.
func (e E_OspfTypes_ROUTER_LSA_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_ROUTER_LSA_TYPES")
}

const (
	// OspfTypes_ROUTER_LSA_TYPES_UNSET corresponds to the value UNSET of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_UNSET E_OspfTypes_ROUTER_LSA_TYPES = 0
	// OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_P2P corresponds to the value ROUTER_LSA_P2P of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_P2P E_OspfTypes_ROUTER_LSA_TYPES = 1
	// OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_STUB_NETWORK corresponds to the value ROUTER_LSA_STUB_NETWORK of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_STUB_NETWORK E_OspfTypes_ROUTER_LSA_TYPES = 2
	// OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_TRANSIT_NETWORK corresponds to the value ROUTER_LSA_TRANSIT_NETWORK of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_TRANSIT_NETWORK E_OspfTypes_ROUTER_LSA_TYPES = 3
	// OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_VIRTUAL_LINK corresponds to the value ROUTER_LSA_VIRTUAL_LINK of OspfTypes_ROUTER_LSA_TYPES
	OspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_VIRTUAL_LINK E_OspfTypes_ROUTER_LSA_TYPES = 4
)

// E_OspfTypes_SR_ALGORITHM is a derived int64 type which is used to represent
// the enumerated node OspfTypes_SR_ALGORITHM. An additional value named
// OspfTypes_SR_ALGORITHM_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_SR_ALGORITHM int64

// IsYANGGoEnum ensures that OspfTypes_SR_ALGORITHM implements the yang.GoEnum
// interface. This ensures that OspfTypes_SR_ALGORITHM can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_SR_ALGORITHM) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_SR_ALGORITHM.
func (E_OspfTypes_SR_ALGORITHM) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_OspfTypes_SR_ALGORITHM.
func (e E_OspfTypes_SR_ALGORITHM) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_SR_ALGORITHM")
}

const (
	// OspfTypes_SR_ALGORITHM_UNSET corresponds to the value UNSET of OspfTypes_SR_ALGORITHM
	OspfTypes_SR_ALGORITHM_UNSET E_OspfTypes_SR_ALGORITHM = 0
	// OspfTypes_SR_ALGORITHM_SPF corresponds to the value SPF of OspfTypes_SR_ALGORITHM
	OspfTypes_SR_ALGORITHM_SPF E_OspfTypes_SR_ALGORITHM = 1
	// OspfTypes_SR_ALGORITHM_STRICT_SPF corresponds to the value STRICT_SPF of OspfTypes_SR_ALGORITHM
	OspfTypes_SR_ALGORITHM_STRICT_SPF E_OspfTypes_SR_ALGORITHM = 2
)

// E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE. An additional value named
// OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE int64

// IsYANGGoEnum ensures that OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE.
func (E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE.
func (e E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE")
}

const (
	// OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_UNSET corresponds to the value UNSET of OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
	OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_UNSET E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE = 0
	// OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV4_LOCAL_ADDRESS corresponds to the value NODE_IPV4_LOCAL_ADDRESS of OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
	OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV4_LOCAL_ADDRESS E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE = 1
	// OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV6_LOCAL_ADDRESS corresponds to the value NODE_IPV6_LOCAL_ADDRESS of OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
	OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV6_LOCAL_ADDRESS E_OspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE = 2
)

// E_Ospf_LsaGeneration_TimerType is a derived int64 type which is used to represent
// the enumerated node Ospf_LsaGeneration_TimerType. An additional value named
// Ospf_LsaGeneration_TimerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ospf_LsaGeneration_TimerType int64

// IsYANGGoEnum ensures that Ospf_LsaGeneration_TimerType implements the yang.GoEnum
// interface. This ensures that Ospf_LsaGeneration_TimerType can be identified as a
// mapped type for a YANG enumeration.
func (E_Ospf_LsaGeneration_TimerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ospf_LsaGeneration_TimerType.
func (E_Ospf_LsaGeneration_TimerType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ospf_LsaGeneration_TimerType.
func (e E_Ospf_LsaGeneration_TimerType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ospf_LsaGeneration_TimerType")
}

const (
	// Ospf_LsaGeneration_TimerType_UNSET corresponds to the value UNSET of Ospf_LsaGeneration_TimerType
	Ospf_LsaGeneration_TimerType_UNSET E_Ospf_LsaGeneration_TimerType = 0
	// Ospf_LsaGeneration_TimerType_LINEAR_BACKOFF corresponds to the value LINEAR_BACKOFF of Ospf_LsaGeneration_TimerType
	Ospf_LsaGeneration_TimerType_LINEAR_BACKOFF E_Ospf_LsaGeneration_TimerType = 1
	// Ospf_LsaGeneration_TimerType_EXPONENTIAL_BACKOFF corresponds to the value EXPONENTIAL_BACKOFF of Ospf_LsaGeneration_TimerType
	Ospf_LsaGeneration_TimerType_EXPONENTIAL_BACKOFF E_Ospf_LsaGeneration_TimerType = 2
)

// E_Ospfv2_LsaGeneration_TimerType is a derived int64 type which is used to represent
// the enumerated node Ospfv2_LsaGeneration_TimerType. An additional value named
// Ospfv2_LsaGeneration_TimerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ospfv2_LsaGeneration_TimerType int64

// IsYANGGoEnum ensures that Ospfv2_LsaGeneration_TimerType implements the yang.GoEnum
// interface. This ensures that Ospfv2_LsaGeneration_TimerType can be identified as a
// mapped type for a YANG enumeration.
func (E_Ospfv2_LsaGeneration_TimerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ospfv2_LsaGeneration_TimerType.
func (E_Ospfv2_LsaGeneration_TimerType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Ospfv2_LsaGeneration_TimerType.
func (e E_Ospfv2_LsaGeneration_TimerType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ospfv2_LsaGeneration_TimerType")
}

const (
	// Ospfv2_LsaGeneration_TimerType_UNSET corresponds to the value UNSET of Ospfv2_LsaGeneration_TimerType
	Ospfv2_LsaGeneration_TimerType_UNSET E_Ospfv2_LsaGeneration_TimerType = 0
	// Ospfv2_LsaGeneration_TimerType_LINEAR_BACKOFF corresponds to the value LINEAR_BACKOFF of Ospfv2_LsaGeneration_TimerType
	Ospfv2_LsaGeneration_TimerType_LINEAR_BACKOFF E_Ospfv2_LsaGeneration_TimerType = 1
	// Ospfv2_LsaGeneration_TimerType_EXPONENTIAL_BACKOFF corresponds to the value EXPONENTIAL_BACKOFF of Ospfv2_LsaGeneration_TimerType
	Ospfv2_LsaGeneration_TimerType_EXPONENTIAL_BACKOFF E_Ospfv2_LsaGeneration_TimerType = 2
)

// E_Ospfv2_SrSidType is a derived int64 type which is used to represent
// the enumerated node Ospfv2_SrSidType. An additional value named
// Ospfv2_SrSidType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Ospfv2_SrSidType int64

// IsYANGGoEnum ensures that Ospfv2_SrSidType implements the yang.GoEnum
// interface. This ensures that Ospfv2_SrSidType can be identified as a
// mapped type for a YANG enumeration.
func (E_Ospfv2_SrSidType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Ospfv2_SrSidType.
func (E_Ospfv2_SrSidType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Ospfv2_SrSidType.
func (e E_Ospfv2_SrSidType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Ospfv2_SrSidType")
}

const (
	// Ospfv2_SrSidType_UNSET corresponds to the value UNSET of Ospfv2_SrSidType
	Ospfv2_SrSidType_UNSET E_Ospfv2_SrSidType = 0
	// Ospfv2_SrSidType_LABEL corresponds to the value LABEL of Ospfv2_SrSidType
	Ospfv2_SrSidType_LABEL E_Ospfv2_SrSidType = 1
	// Ospfv2_SrSidType_SID corresponds to the value SID of Ospfv2_SrSidType
	Ospfv2_SrSidType_SID E_Ospfv2_SrSidType = 2
)

// E_Output_OutputType is a derived int64 type which is used to represent
// the enumerated node Output_OutputType. An additional value named
// Output_OutputType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Output_OutputType int64

// IsYANGGoEnum ensures that Output_OutputType implements the yang.GoEnum
// interface. This ensures that Output_OutputType can be identified as a
// mapped type for a YANG enumeration.
func (E_Output_OutputType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Output_OutputType.
func (E_Output_OutputType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Output_OutputType.
func (e E_Output_OutputType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Output_OutputType")
}

const (
	// Output_OutputType_UNSET corresponds to the value UNSET of Output_OutputType
	Output_OutputType_UNSET E_Output_OutputType = 0
	// Output_OutputType_SCHEDULER corresponds to the value SCHEDULER of Output_OutputType
	Output_OutputType_SCHEDULER E_Output_OutputType = 1
	// Output_OutputType_FWD_GROUP corresponds to the value FWD_GROUP of Output_OutputType
	Output_OutputType_FWD_GROUP E_Output_OutputType = 2
	// Output_OutputType_INTERFACE corresponds to the value INTERFACE of Output_OutputType
	Output_OutputType_INTERFACE E_Output_OutputType = 3
)

// E_PacketMatchTypes_ETHERTYPE is a derived int64 type which is used to represent
// the enumerated node PacketMatchTypes_ETHERTYPE. An additional value named
// PacketMatchTypes_ETHERTYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PacketMatchTypes_ETHERTYPE int64

// IsYANGGoEnum ensures that PacketMatchTypes_ETHERTYPE implements the yang.GoEnum
// interface. This ensures that PacketMatchTypes_ETHERTYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PacketMatchTypes_ETHERTYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PacketMatchTypes_ETHERTYPE.
func (E_PacketMatchTypes_ETHERTYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PacketMatchTypes_ETHERTYPE.
func (e E_PacketMatchTypes_ETHERTYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PacketMatchTypes_ETHERTYPE")
}

const (
	// PacketMatchTypes_ETHERTYPE_UNSET corresponds to the value UNSET of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_UNSET E_PacketMatchTypes_ETHERTYPE = 0
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_ARP corresponds to the value ETHERTYPE_ARP of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_ARP E_PacketMatchTypes_ETHERTYPE = 1
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV4 corresponds to the value ETHERTYPE_IPV4 of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV4 E_PacketMatchTypes_ETHERTYPE = 2
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV6 corresponds to the value ETHERTYPE_IPV6 of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV6 E_PacketMatchTypes_ETHERTYPE = 3
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_LLDP corresponds to the value ETHERTYPE_LLDP of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_LLDP E_PacketMatchTypes_ETHERTYPE = 4
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_MPLS corresponds to the value ETHERTYPE_MPLS of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_MPLS E_PacketMatchTypes_ETHERTYPE = 5
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_ROCE corresponds to the value ETHERTYPE_ROCE of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_ROCE E_PacketMatchTypes_ETHERTYPE = 6
	// PacketMatchTypes_ETHERTYPE_ETHERTYPE_VLAN corresponds to the value ETHERTYPE_VLAN of PacketMatchTypes_ETHERTYPE
	PacketMatchTypes_ETHERTYPE_ETHERTYPE_VLAN E_PacketMatchTypes_ETHERTYPE = 7
)

// E_PacketMatchTypes_IP_PROTOCOL is a derived int64 type which is used to represent
// the enumerated node PacketMatchTypes_IP_PROTOCOL. An additional value named
// PacketMatchTypes_IP_PROTOCOL_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PacketMatchTypes_IP_PROTOCOL int64

// IsYANGGoEnum ensures that PacketMatchTypes_IP_PROTOCOL implements the yang.GoEnum
// interface. This ensures that PacketMatchTypes_IP_PROTOCOL can be identified as a
// mapped type for a YANG enumeration.
func (E_PacketMatchTypes_IP_PROTOCOL) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PacketMatchTypes_IP_PROTOCOL.
func (E_PacketMatchTypes_IP_PROTOCOL) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PacketMatchTypes_IP_PROTOCOL.
func (e E_PacketMatchTypes_IP_PROTOCOL) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PacketMatchTypes_IP_PROTOCOL")
}

const (
	// PacketMatchTypes_IP_PROTOCOL_UNSET corresponds to the value UNSET of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_UNSET E_PacketMatchTypes_IP_PROTOCOL = 0
	// PacketMatchTypes_IP_PROTOCOL_IP_AUTH corresponds to the value IP_AUTH of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_AUTH E_PacketMatchTypes_IP_PROTOCOL = 1
	// PacketMatchTypes_IP_PROTOCOL_IP_GRE corresponds to the value IP_GRE of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_GRE E_PacketMatchTypes_IP_PROTOCOL = 2
	// PacketMatchTypes_IP_PROTOCOL_IP_ICMP corresponds to the value IP_ICMP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_ICMP E_PacketMatchTypes_IP_PROTOCOL = 3
	// PacketMatchTypes_IP_PROTOCOL_IP_IGMP corresponds to the value IP_IGMP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_IGMP E_PacketMatchTypes_IP_PROTOCOL = 4
	// PacketMatchTypes_IP_PROTOCOL_IP_IN_IP corresponds to the value IP_IN_IP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_IN_IP E_PacketMatchTypes_IP_PROTOCOL = 5
	// PacketMatchTypes_IP_PROTOCOL_IP_L2TP corresponds to the value IP_L2TP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_L2TP E_PacketMatchTypes_IP_PROTOCOL = 6
	// PacketMatchTypes_IP_PROTOCOL_IP_PIM corresponds to the value IP_PIM of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_PIM E_PacketMatchTypes_IP_PROTOCOL = 7
	// PacketMatchTypes_IP_PROTOCOL_IP_RSVP corresponds to the value IP_RSVP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_RSVP E_PacketMatchTypes_IP_PROTOCOL = 8
	// PacketMatchTypes_IP_PROTOCOL_IP_TCP corresponds to the value IP_TCP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_TCP E_PacketMatchTypes_IP_PROTOCOL = 9
	// PacketMatchTypes_IP_PROTOCOL_IP_UDP corresponds to the value IP_UDP of PacketMatchTypes_IP_PROTOCOL
	PacketMatchTypes_IP_PROTOCOL_IP_UDP E_PacketMatchTypes_IP_PROTOCOL = 10
)

// E_PacketMatchTypes_TCP_FLAGS is a derived int64 type which is used to represent
// the enumerated node PacketMatchTypes_TCP_FLAGS. An additional value named
// PacketMatchTypes_TCP_FLAGS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PacketMatchTypes_TCP_FLAGS int64

// IsYANGGoEnum ensures that PacketMatchTypes_TCP_FLAGS implements the yang.GoEnum
// interface. This ensures that PacketMatchTypes_TCP_FLAGS can be identified as a
// mapped type for a YANG enumeration.
func (E_PacketMatchTypes_TCP_FLAGS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PacketMatchTypes_TCP_FLAGS.
func (E_PacketMatchTypes_TCP_FLAGS) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PacketMatchTypes_TCP_FLAGS.
func (e E_PacketMatchTypes_TCP_FLAGS) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PacketMatchTypes_TCP_FLAGS")
}

const (
	// PacketMatchTypes_TCP_FLAGS_UNSET corresponds to the value UNSET of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_UNSET E_PacketMatchTypes_TCP_FLAGS = 0
	// PacketMatchTypes_TCP_FLAGS_TCP_ACK corresponds to the value TCP_ACK of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_ACK E_PacketMatchTypes_TCP_FLAGS = 1
	// PacketMatchTypes_TCP_FLAGS_TCP_CWR corresponds to the value TCP_CWR of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_CWR E_PacketMatchTypes_TCP_FLAGS = 2
	// PacketMatchTypes_TCP_FLAGS_TCP_ECE corresponds to the value TCP_ECE of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_ECE E_PacketMatchTypes_TCP_FLAGS = 3
	// PacketMatchTypes_TCP_FLAGS_TCP_FIN corresponds to the value TCP_FIN of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_FIN E_PacketMatchTypes_TCP_FLAGS = 4
	// PacketMatchTypes_TCP_FLAGS_TCP_PSH corresponds to the value TCP_PSH of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_PSH E_PacketMatchTypes_TCP_FLAGS = 5
	// PacketMatchTypes_TCP_FLAGS_TCP_RST corresponds to the value TCP_RST of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_RST E_PacketMatchTypes_TCP_FLAGS = 6
	// PacketMatchTypes_TCP_FLAGS_TCP_SYN corresponds to the value TCP_SYN of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_SYN E_PacketMatchTypes_TCP_FLAGS = 7
	// PacketMatchTypes_TCP_FLAGS_TCP_URG corresponds to the value TCP_URG of PacketMatchTypes_TCP_FLAGS
	PacketMatchTypes_TCP_FLAGS_TCP_URG E_PacketMatchTypes_TCP_FLAGS = 8
)

// E_Pcep_PceModeType is a derived int64 type which is used to represent
// the enumerated node Pcep_PceModeType. An additional value named
// Pcep_PceModeType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Pcep_PceModeType int64

// IsYANGGoEnum ensures that Pcep_PceModeType implements the yang.GoEnum
// interface. This ensures that Pcep_PceModeType can be identified as a
// mapped type for a YANG enumeration.
func (E_Pcep_PceModeType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Pcep_PceModeType.
func (E_Pcep_PceModeType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Pcep_PceModeType.
func (e E_Pcep_PceModeType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Pcep_PceModeType")
}

const (
	// Pcep_PceModeType_UNSET corresponds to the value UNSET of Pcep_PceModeType
	Pcep_PceModeType_UNSET E_Pcep_PceModeType = 0
	// Pcep_PceModeType_STATELESS corresponds to the value STATELESS of Pcep_PceModeType
	Pcep_PceModeType_STATELESS E_Pcep_PceModeType = 1
	// Pcep_PceModeType_STATEFUL_PASSIVE corresponds to the value STATEFUL_PASSIVE of Pcep_PceModeType
	Pcep_PceModeType_STATEFUL_PASSIVE E_Pcep_PceModeType = 2
	// Pcep_PceModeType_STATEFUL_ACTIVE corresponds to the value STATEFUL_ACTIVE of Pcep_PceModeType
	Pcep_PceModeType_STATEFUL_ACTIVE E_Pcep_PceModeType = 3
)

// E_PimTypes_PIM_MODE is a derived int64 type which is used to represent
// the enumerated node PimTypes_PIM_MODE. An additional value named
// PimTypes_PIM_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PimTypes_PIM_MODE int64

// IsYANGGoEnum ensures that PimTypes_PIM_MODE implements the yang.GoEnum
// interface. This ensures that PimTypes_PIM_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_PimTypes_PIM_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PimTypes_PIM_MODE.
func (E_PimTypes_PIM_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PimTypes_PIM_MODE.
func (e E_PimTypes_PIM_MODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PimTypes_PIM_MODE")
}

const (
	// PimTypes_PIM_MODE_UNSET corresponds to the value UNSET of PimTypes_PIM_MODE
	PimTypes_PIM_MODE_UNSET E_PimTypes_PIM_MODE = 0
	// PimTypes_PIM_MODE_PIM_MODE_BIDIR corresponds to the value PIM_MODE_BIDIR of PimTypes_PIM_MODE
	PimTypes_PIM_MODE_PIM_MODE_BIDIR E_PimTypes_PIM_MODE = 1
	// PimTypes_PIM_MODE_PIM_MODE_DENSE corresponds to the value PIM_MODE_DENSE of PimTypes_PIM_MODE
	PimTypes_PIM_MODE_PIM_MODE_DENSE E_PimTypes_PIM_MODE = 2
	// PimTypes_PIM_MODE_PIM_MODE_SPARSE corresponds to the value PIM_MODE_SPARSE of PimTypes_PIM_MODE
	PimTypes_PIM_MODE_PIM_MODE_SPARSE E_PimTypes_PIM_MODE = 3
)

// E_PlatformSoftware_SOFTWARE_MODULE_TYPE is a derived int64 type which is used to represent
// the enumerated node PlatformSoftware_SOFTWARE_MODULE_TYPE. An additional value named
// PlatformSoftware_SOFTWARE_MODULE_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformSoftware_SOFTWARE_MODULE_TYPE int64

// IsYANGGoEnum ensures that PlatformSoftware_SOFTWARE_MODULE_TYPE implements the yang.GoEnum
// interface. This ensures that PlatformSoftware_SOFTWARE_MODULE_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformSoftware_SOFTWARE_MODULE_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformSoftware_SOFTWARE_MODULE_TYPE.
func (E_PlatformSoftware_SOFTWARE_MODULE_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformSoftware_SOFTWARE_MODULE_TYPE.
func (e E_PlatformSoftware_SOFTWARE_MODULE_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformSoftware_SOFTWARE_MODULE_TYPE")
}

const (
	// PlatformSoftware_SOFTWARE_MODULE_TYPE_UNSET corresponds to the value UNSET of PlatformSoftware_SOFTWARE_MODULE_TYPE
	PlatformSoftware_SOFTWARE_MODULE_TYPE_UNSET E_PlatformSoftware_SOFTWARE_MODULE_TYPE = 0
	// PlatformSoftware_SOFTWARE_MODULE_TYPE_USERSPACE_PACKAGE corresponds to the value USERSPACE_PACKAGE of PlatformSoftware_SOFTWARE_MODULE_TYPE
	PlatformSoftware_SOFTWARE_MODULE_TYPE_USERSPACE_PACKAGE E_PlatformSoftware_SOFTWARE_MODULE_TYPE = 1
	// PlatformSoftware_SOFTWARE_MODULE_TYPE_USERSPACE_PACKAGE_BUNDLE corresponds to the value USERSPACE_PACKAGE_BUNDLE of PlatformSoftware_SOFTWARE_MODULE_TYPE
	PlatformSoftware_SOFTWARE_MODULE_TYPE_USERSPACE_PACKAGE_BUNDLE E_PlatformSoftware_SOFTWARE_MODULE_TYPE = 2
)

// E_PlatformTypes_COMPONENT_OPER_STATUS is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_COMPONENT_OPER_STATUS. An additional value named
// PlatformTypes_COMPONENT_OPER_STATUS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_COMPONENT_OPER_STATUS int64

// IsYANGGoEnum ensures that PlatformTypes_COMPONENT_OPER_STATUS implements the yang.GoEnum
// interface. This ensures that PlatformTypes_COMPONENT_OPER_STATUS can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_COMPONENT_OPER_STATUS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_COMPONENT_OPER_STATUS.
func (E_PlatformTypes_COMPONENT_OPER_STATUS) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_COMPONENT_OPER_STATUS.
func (e E_PlatformTypes_COMPONENT_OPER_STATUS) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_COMPONENT_OPER_STATUS")
}

const (
	// PlatformTypes_COMPONENT_OPER_STATUS_UNSET corresponds to the value UNSET of PlatformTypes_COMPONENT_OPER_STATUS
	PlatformTypes_COMPONENT_OPER_STATUS_UNSET E_PlatformTypes_COMPONENT_OPER_STATUS = 0
	// PlatformTypes_COMPONENT_OPER_STATUS_ACTIVE corresponds to the value ACTIVE of PlatformTypes_COMPONENT_OPER_STATUS
	PlatformTypes_COMPONENT_OPER_STATUS_ACTIVE E_PlatformTypes_COMPONENT_OPER_STATUS = 1
	// PlatformTypes_COMPONENT_OPER_STATUS_DISABLED corresponds to the value DISABLED of PlatformTypes_COMPONENT_OPER_STATUS
	PlatformTypes_COMPONENT_OPER_STATUS_DISABLED E_PlatformTypes_COMPONENT_OPER_STATUS = 2
	// PlatformTypes_COMPONENT_OPER_STATUS_INACTIVE corresponds to the value INACTIVE of PlatformTypes_COMPONENT_OPER_STATUS
	PlatformTypes_COMPONENT_OPER_STATUS_INACTIVE E_PlatformTypes_COMPONENT_OPER_STATUS = 3
)

// E_PlatformTypes_COMPONENT_REBOOT_REASON is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_COMPONENT_REBOOT_REASON. An additional value named
// PlatformTypes_COMPONENT_REBOOT_REASON_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_COMPONENT_REBOOT_REASON int64

// IsYANGGoEnum ensures that PlatformTypes_COMPONENT_REBOOT_REASON implements the yang.GoEnum
// interface. This ensures that PlatformTypes_COMPONENT_REBOOT_REASON can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_COMPONENT_REBOOT_REASON) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_COMPONENT_REBOOT_REASON.
func (E_PlatformTypes_COMPONENT_REBOOT_REASON) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_COMPONENT_REBOOT_REASON.
func (e E_PlatformTypes_COMPONENT_REBOOT_REASON) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_COMPONENT_REBOOT_REASON")
}

const (
	// PlatformTypes_COMPONENT_REBOOT_REASON_UNSET corresponds to the value UNSET of PlatformTypes_COMPONENT_REBOOT_REASON
	PlatformTypes_COMPONENT_REBOOT_REASON_UNSET E_PlatformTypes_COMPONENT_REBOOT_REASON = 0
	// PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_CRITICAL_ERROR corresponds to the value REBOOT_CRITICAL_ERROR of PlatformTypes_COMPONENT_REBOOT_REASON
	PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_CRITICAL_ERROR E_PlatformTypes_COMPONENT_REBOOT_REASON = 1
	// PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_POWER_FAILURE corresponds to the value REBOOT_POWER_FAILURE of PlatformTypes_COMPONENT_REBOOT_REASON
	PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_POWER_FAILURE E_PlatformTypes_COMPONENT_REBOOT_REASON = 2
	// PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_USER_INITIATED corresponds to the value REBOOT_USER_INITIATED of PlatformTypes_COMPONENT_REBOOT_REASON
	PlatformTypes_COMPONENT_REBOOT_REASON_REBOOT_USER_INITIATED E_PlatformTypes_COMPONENT_REBOOT_REASON = 3
)

// E_PlatformTypes_ComponentLastPoweroffReasonTrigger is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_ComponentLastPoweroffReasonTrigger. An additional value named
// PlatformTypes_ComponentLastPoweroffReasonTrigger_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_ComponentLastPoweroffReasonTrigger int64

// IsYANGGoEnum ensures that PlatformTypes_ComponentLastPoweroffReasonTrigger implements the yang.GoEnum
// interface. This ensures that PlatformTypes_ComponentLastPoweroffReasonTrigger can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_ComponentLastPoweroffReasonTrigger) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_ComponentLastPoweroffReasonTrigger.
func (E_PlatformTypes_ComponentLastPoweroffReasonTrigger) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_ComponentLastPoweroffReasonTrigger.
func (e E_PlatformTypes_ComponentLastPoweroffReasonTrigger) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_ComponentLastPoweroffReasonTrigger")
}

const (
	// PlatformTypes_ComponentLastPoweroffReasonTrigger_UNSET corresponds to the value UNSET of PlatformTypes_ComponentLastPoweroffReasonTrigger
	PlatformTypes_ComponentLastPoweroffReasonTrigger_UNSET E_PlatformTypes_ComponentLastPoweroffReasonTrigger = 0
	// PlatformTypes_ComponentLastPoweroffReasonTrigger_USER_INITIATED corresponds to the value USER_INITIATED of PlatformTypes_ComponentLastPoweroffReasonTrigger
	PlatformTypes_ComponentLastPoweroffReasonTrigger_USER_INITIATED E_PlatformTypes_ComponentLastPoweroffReasonTrigger = 1
	// PlatformTypes_ComponentLastPoweroffReasonTrigger_SYSTEM_INITIATED corresponds to the value SYSTEM_INITIATED of PlatformTypes_ComponentLastPoweroffReasonTrigger
	PlatformTypes_ComponentLastPoweroffReasonTrigger_SYSTEM_INITIATED E_PlatformTypes_ComponentLastPoweroffReasonTrigger = 2
	// PlatformTypes_ComponentLastPoweroffReasonTrigger_POWER_FAILURE corresponds to the value POWER_FAILURE of PlatformTypes_ComponentLastPoweroffReasonTrigger
	PlatformTypes_ComponentLastPoweroffReasonTrigger_POWER_FAILURE E_PlatformTypes_ComponentLastPoweroffReasonTrigger = 3
)

// E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger. An additional value named
// PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger int64

// IsYANGGoEnum ensures that PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger implements the yang.GoEnum
// interface. This ensures that PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger.
func (E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger.
func (e E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger")
}

const (
	// PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_UNSET corresponds to the value UNSET of PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger
	PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_UNSET E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger = 0
	// PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_USER_INITIATED corresponds to the value USER_INITIATED of PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger
	PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_USER_INITIATED E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger = 1
	// PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_SYSTEM_INITIATED corresponds to the value SYSTEM_INITIATED of PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger
	PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger_SYSTEM_INITIATED E_PlatformTypes_ComponentRedundantRoleSwitchoverReasonTrigger = 2
)

// E_PlatformTypes_FEC_MODE_TYPE is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_FEC_MODE_TYPE. An additional value named
// PlatformTypes_FEC_MODE_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_FEC_MODE_TYPE int64

// IsYANGGoEnum ensures that PlatformTypes_FEC_MODE_TYPE implements the yang.GoEnum
// interface. This ensures that PlatformTypes_FEC_MODE_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_FEC_MODE_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_FEC_MODE_TYPE.
func (E_PlatformTypes_FEC_MODE_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PlatformTypes_FEC_MODE_TYPE.
func (e E_PlatformTypes_FEC_MODE_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_FEC_MODE_TYPE")
}

const (
	// PlatformTypes_FEC_MODE_TYPE_UNSET corresponds to the value UNSET of PlatformTypes_FEC_MODE_TYPE
	PlatformTypes_FEC_MODE_TYPE_UNSET E_PlatformTypes_FEC_MODE_TYPE = 0
	// PlatformTypes_FEC_MODE_TYPE_FEC_AUTO corresponds to the value FEC_AUTO of PlatformTypes_FEC_MODE_TYPE
	PlatformTypes_FEC_MODE_TYPE_FEC_AUTO E_PlatformTypes_FEC_MODE_TYPE = 1
	// PlatformTypes_FEC_MODE_TYPE_FEC_DISABLED corresponds to the value FEC_DISABLED of PlatformTypes_FEC_MODE_TYPE
	PlatformTypes_FEC_MODE_TYPE_FEC_DISABLED E_PlatformTypes_FEC_MODE_TYPE = 2
	// PlatformTypes_FEC_MODE_TYPE_FEC_ENABLED corresponds to the value FEC_ENABLED of PlatformTypes_FEC_MODE_TYPE
	PlatformTypes_FEC_MODE_TYPE_FEC_ENABLED E_PlatformTypes_FEC_MODE_TYPE = 3
)

// E_PlatformTypes_FEC_STATUS_TYPE is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_FEC_STATUS_TYPE. An additional value named
// PlatformTypes_FEC_STATUS_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_FEC_STATUS_TYPE int64

// IsYANGGoEnum ensures that PlatformTypes_FEC_STATUS_TYPE implements the yang.GoEnum
// interface. This ensures that PlatformTypes_FEC_STATUS_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_FEC_STATUS_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_FEC_STATUS_TYPE.
func (E_PlatformTypes_FEC_STATUS_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_FEC_STATUS_TYPE.
func (e E_PlatformTypes_FEC_STATUS_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_FEC_STATUS_TYPE")
}

const (
	// PlatformTypes_FEC_STATUS_TYPE_UNSET corresponds to the value UNSET of PlatformTypes_FEC_STATUS_TYPE
	PlatformTypes_FEC_STATUS_TYPE_UNSET E_PlatformTypes_FEC_STATUS_TYPE = 0
	// PlatformTypes_FEC_STATUS_TYPE_FEC_STATUS_LOCKED corresponds to the value FEC_STATUS_LOCKED of PlatformTypes_FEC_STATUS_TYPE
	PlatformTypes_FEC_STATUS_TYPE_FEC_STATUS_LOCKED E_PlatformTypes_FEC_STATUS_TYPE = 1
	// PlatformTypes_FEC_STATUS_TYPE_FEC_STATUS_UNLOCKED corresponds to the value FEC_STATUS_UNLOCKED of PlatformTypes_FEC_STATUS_TYPE
	PlatformTypes_FEC_STATUS_TYPE_FEC_STATUS_UNLOCKED E_PlatformTypes_FEC_STATUS_TYPE = 2
)

// E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT. An additional value named
// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT int64

// IsYANGGoEnum ensures that PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT implements the yang.GoEnum
// interface. This ensures that PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT.
func (E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT.
func (e E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT")
}

const (
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_UNSET corresponds to the value UNSET of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_UNSET E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 0
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_BACKPLANE corresponds to the value BACKPLANE of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_BACKPLANE E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 1
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CHASSIS corresponds to the value CHASSIS of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CHASSIS E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 2
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CONTROLLER_CARD corresponds to the value CONTROLLER_CARD of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CONTROLLER_CARD E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 3
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CPU corresponds to the value CPU of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CPU E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 4
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FABRIC corresponds to the value FABRIC of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FABRIC E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 5
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN corresponds to the value FAN of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 6
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN_TRAY corresponds to the value FAN_TRAY of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN_TRAY E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 7
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN_TRAY_CONTROLLER corresponds to the value FAN_TRAY_CONTROLLER of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN_TRAY_CONTROLLER E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 8
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FRU corresponds to the value FRU of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FRU E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 9
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_INTEGRATED_CIRCUIT corresponds to the value INTEGRATED_CIRCUIT of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_INTEGRATED_CIRCUIT E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 10
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_LINECARD corresponds to the value LINECARD of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_LINECARD E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 11
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_OPTICAL_CHANNEL corresponds to the value OPTICAL_CHANNEL of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_OPTICAL_CHANNEL E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 12
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_PORT corresponds to the value PORT of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_PORT E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 13
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_POWER_SUPPLY corresponds to the value POWER_SUPPLY of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_POWER_SUPPLY E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 14
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_SENSOR corresponds to the value SENSOR of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_SENSOR E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 15
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_STORAGE corresponds to the value STORAGE of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_STORAGE E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 16
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_TRANSCEIVER corresponds to the value TRANSCEIVER of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_TRANSCEIVER E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 17
	// PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_WIFI_ACCESS_POINT corresponds to the value WIFI_ACCESS_POINT of PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_WIFI_ACCESS_POINT E_PlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 18
)

// E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT is a derived int64 type which is used to represent
// the enumerated node PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT. An additional value named
// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT int64

// IsYANGGoEnum ensures that PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT implements the yang.GoEnum
// interface. This ensures that PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT can be identified as a
// mapped type for a YANG enumeration.
func (E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT.
func (E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT.
func (e E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT")
}

const (
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_UNSET corresponds to the value UNSET of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_UNSET E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 0
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_BIOS corresponds to the value BIOS of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_BIOS E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 1
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_BOOT_LOADER corresponds to the value BOOT_LOADER of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_BOOT_LOADER E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 2
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM corresponds to the value OPERATING_SYSTEM of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 3
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM_UPDATE corresponds to the value OPERATING_SYSTEM_UPDATE of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM_UPDATE E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 4
	// PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_SOFTWARE_MODULE corresponds to the value SOFTWARE_MODULE of PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_SOFTWARE_MODULE E_PlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 5
)

// E_Platform_ComponentPowerType is a derived int64 type which is used to represent
// the enumerated node Platform_ComponentPowerType. An additional value named
// Platform_ComponentPowerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Platform_ComponentPowerType int64

// IsYANGGoEnum ensures that Platform_ComponentPowerType implements the yang.GoEnum
// interface. This ensures that Platform_ComponentPowerType can be identified as a
// mapped type for a YANG enumeration.
func (E_Platform_ComponentPowerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Platform_ComponentPowerType.
func (E_Platform_ComponentPowerType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Platform_ComponentPowerType.
func (e E_Platform_ComponentPowerType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Platform_ComponentPowerType")
}

const (
	// Platform_ComponentPowerType_UNSET corresponds to the value UNSET of Platform_ComponentPowerType
	Platform_ComponentPowerType_UNSET E_Platform_ComponentPowerType = 0
	// Platform_ComponentPowerType_POWER_ENABLED corresponds to the value POWER_ENABLED of Platform_ComponentPowerType
	Platform_ComponentPowerType_POWER_ENABLED E_Platform_ComponentPowerType = 1
	// Platform_ComponentPowerType_POWER_DISABLED corresponds to the value POWER_DISABLED of Platform_ComponentPowerType
	Platform_ComponentPowerType_POWER_DISABLED E_Platform_ComponentPowerType = 2
)

// E_Platform_ComponentRedundantRole is a derived int64 type which is used to represent
// the enumerated node Platform_ComponentRedundantRole. An additional value named
// Platform_ComponentRedundantRole_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Platform_ComponentRedundantRole int64

// IsYANGGoEnum ensures that Platform_ComponentRedundantRole implements the yang.GoEnum
// interface. This ensures that Platform_ComponentRedundantRole can be identified as a
// mapped type for a YANG enumeration.
func (E_Platform_ComponentRedundantRole) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Platform_ComponentRedundantRole.
func (E_Platform_ComponentRedundantRole) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Platform_ComponentRedundantRole.
func (e E_Platform_ComponentRedundantRole) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Platform_ComponentRedundantRole")
}

const (
	// Platform_ComponentRedundantRole_UNSET corresponds to the value UNSET of Platform_ComponentRedundantRole
	Platform_ComponentRedundantRole_UNSET E_Platform_ComponentRedundantRole = 0
	// Platform_ComponentRedundantRole_PRIMARY corresponds to the value PRIMARY of Platform_ComponentRedundantRole
	Platform_ComponentRedundantRole_PRIMARY E_Platform_ComponentRedundantRole = 1
	// Platform_ComponentRedundantRole_SECONDARY corresponds to the value SECONDARY of Platform_ComponentRedundantRole
	Platform_ComponentRedundantRole_SECONDARY E_Platform_ComponentRedundantRole = 2
)

// E_PolicyForwardingEntry_MplsLabel is a derived int64 type which is used to represent
// the enumerated node PolicyForwardingEntry_MplsLabel. An additional value named
// PolicyForwardingEntry_MplsLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PolicyForwardingEntry_MplsLabel int64

// IsYANGGoEnum ensures that PolicyForwardingEntry_MplsLabel implements the yang.GoEnum
// interface. This ensures that PolicyForwardingEntry_MplsLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_PolicyForwardingEntry_MplsLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PolicyForwardingEntry_MplsLabel.
func (E_PolicyForwardingEntry_MplsLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PolicyForwardingEntry_MplsLabel.
func (e E_PolicyForwardingEntry_MplsLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PolicyForwardingEntry_MplsLabel")
}

const (
	// PolicyForwardingEntry_MplsLabel_UNSET corresponds to the value UNSET of PolicyForwardingEntry_MplsLabel
	PolicyForwardingEntry_MplsLabel_UNSET E_PolicyForwardingEntry_MplsLabel = 0
	// PolicyForwardingEntry_MplsLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of PolicyForwardingEntry_MplsLabel
	PolicyForwardingEntry_MplsLabel_IPV4_EXPLICIT_NULL E_PolicyForwardingEntry_MplsLabel = 1
	// PolicyForwardingEntry_MplsLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of PolicyForwardingEntry_MplsLabel
	PolicyForwardingEntry_MplsLabel_ROUTER_ALERT E_PolicyForwardingEntry_MplsLabel = 2
	// PolicyForwardingEntry_MplsLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of PolicyForwardingEntry_MplsLabel
	PolicyForwardingEntry_MplsLabel_IPV6_EXPLICIT_NULL E_PolicyForwardingEntry_MplsLabel = 3
	// PolicyForwardingEntry_MplsLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of PolicyForwardingEntry_MplsLabel
	PolicyForwardingEntry_MplsLabel_IMPLICIT_NULL E_PolicyForwardingEntry_MplsLabel = 4
	// PolicyForwardingEntry_MplsLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of PolicyForwardingEntry_MplsLabel
	PolicyForwardingEntry_MplsLabel_ENTROPY_LABEL_INDICATOR E_PolicyForwardingEntry_MplsLabel = 8
	// PolicyForwardingEntry_MplsLabel_NO_LABEL corresponds to the value NO_LABEL of PolicyForwardingEntry_MplsLabel
	PolicyForwardingEntry_MplsLabel_NO_LABEL E_PolicyForwardingEntry_MplsLabel = 9
)

// E_PolicyTypes_ATTRIBUTE_COMPARISON is a derived int64 type which is used to represent
// the enumerated node PolicyTypes_ATTRIBUTE_COMPARISON. An additional value named
// PolicyTypes_ATTRIBUTE_COMPARISON_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PolicyTypes_ATTRIBUTE_COMPARISON int64

// IsYANGGoEnum ensures that PolicyTypes_ATTRIBUTE_COMPARISON implements the yang.GoEnum
// interface. This ensures that PolicyTypes_ATTRIBUTE_COMPARISON can be identified as a
// mapped type for a YANG enumeration.
func (E_PolicyTypes_ATTRIBUTE_COMPARISON) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PolicyTypes_ATTRIBUTE_COMPARISON.
func (E_PolicyTypes_ATTRIBUTE_COMPARISON) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PolicyTypes_ATTRIBUTE_COMPARISON.
func (e E_PolicyTypes_ATTRIBUTE_COMPARISON) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PolicyTypes_ATTRIBUTE_COMPARISON")
}

const (
	// PolicyTypes_ATTRIBUTE_COMPARISON_UNSET corresponds to the value UNSET of PolicyTypes_ATTRIBUTE_COMPARISON
	PolicyTypes_ATTRIBUTE_COMPARISON_UNSET E_PolicyTypes_ATTRIBUTE_COMPARISON = 0
	// PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_EQ corresponds to the value ATTRIBUTE_EQ of PolicyTypes_ATTRIBUTE_COMPARISON
	PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_EQ E_PolicyTypes_ATTRIBUTE_COMPARISON = 1
	// PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_GE corresponds to the value ATTRIBUTE_GE of PolicyTypes_ATTRIBUTE_COMPARISON
	PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_GE E_PolicyTypes_ATTRIBUTE_COMPARISON = 2
	// PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_LE corresponds to the value ATTRIBUTE_LE of PolicyTypes_ATTRIBUTE_COMPARISON
	PolicyTypes_ATTRIBUTE_COMPARISON_ATTRIBUTE_LE E_PolicyTypes_ATTRIBUTE_COMPARISON = 3
)

// E_PolicyTypes_INSTALL_PROTOCOL_TYPE is a derived int64 type which is used to represent
// the enumerated node PolicyTypes_INSTALL_PROTOCOL_TYPE. An additional value named
// PolicyTypes_INSTALL_PROTOCOL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PolicyTypes_INSTALL_PROTOCOL_TYPE int64

// IsYANGGoEnum ensures that PolicyTypes_INSTALL_PROTOCOL_TYPE implements the yang.GoEnum
// interface. This ensures that PolicyTypes_INSTALL_PROTOCOL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_PolicyTypes_INSTALL_PROTOCOL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PolicyTypes_INSTALL_PROTOCOL_TYPE.
func (E_PolicyTypes_INSTALL_PROTOCOL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_PolicyTypes_INSTALL_PROTOCOL_TYPE.
func (e E_PolicyTypes_INSTALL_PROTOCOL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PolicyTypes_INSTALL_PROTOCOL_TYPE")
}

const (
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_UNSET corresponds to the value UNSET of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_UNSET E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 0
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_BGP corresponds to the value BGP of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_BGP E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 1
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_DIRECTLY_CONNECTED corresponds to the value DIRECTLY_CONNECTED of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_DIRECTLY_CONNECTED E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 2
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_GRIBI corresponds to the value GRIBI of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_GRIBI E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 3
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_IGMP corresponds to the value IGMP of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_IGMP E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 4
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_ISIS corresponds to the value ISIS of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_ISIS E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 5
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_LOCAL corresponds to the value LOCAL of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_LOCAL E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 6
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_LOCAL_AGGREGATE corresponds to the value LOCAL_AGGREGATE of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_LOCAL_AGGREGATE E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 7
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF corresponds to the value OSPF of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 8
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF3 corresponds to the value OSPF3 of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF3 E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 9
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_PCEP corresponds to the value PCEP of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_PCEP E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 10
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_PIM corresponds to the value PIM of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_PIM E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 11
	// PolicyTypes_INSTALL_PROTOCOL_TYPE_STATIC corresponds to the value STATIC of PolicyTypes_INSTALL_PROTOCOL_TYPE
	PolicyTypes_INSTALL_PROTOCOL_TYPE_STATIC E_PolicyTypes_INSTALL_PROTOCOL_TYPE = 12
)

// E_Policy_Instance is a derived int64 type which is used to represent
// the enumerated node Policy_Instance. An additional value named
// Policy_Instance_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Policy_Instance int64

// IsYANGGoEnum ensures that Policy_Instance implements the yang.GoEnum
// interface. This ensures that Policy_Instance can be identified as a
// mapped type for a YANG enumeration.
func (E_Policy_Instance) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Policy_Instance.
func (E_Policy_Instance) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Policy_Instance.
func (e E_Policy_Instance) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Policy_Instance")
}

const (
	// Policy_Instance_UNSET corresponds to the value UNSET of Policy_Instance
	Policy_Instance_UNSET E_Policy_Instance = 0
	// Policy_Instance_ACTIVE corresponds to the value ACTIVE of Policy_Instance
	Policy_Instance_ACTIVE E_Policy_Instance = 2
	// Policy_Instance_SANDBOX corresponds to the value SANDBOX of Policy_Instance
	Policy_Instance_SANDBOX E_Policy_Instance = 3
)

// E_Policy_Type is a derived int64 type which is used to represent
// the enumerated node Policy_Type. An additional value named
// Policy_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Policy_Type int64

// IsYANGGoEnum ensures that Policy_Type implements the yang.GoEnum
// interface. This ensures that Policy_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Policy_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Policy_Type.
func (E_Policy_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Policy_Type.
func (e E_Policy_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Policy_Type")
}

const (
	// Policy_Type_UNSET corresponds to the value UNSET of Policy_Type
	Policy_Type_UNSET E_Policy_Type = 0
	// Policy_Type_PBR_POLICY corresponds to the value PBR_POLICY of Policy_Type
	Policy_Type_PBR_POLICY E_Policy_Type = 1
	// Policy_Type_VRF_SELECTION_POLICY corresponds to the value VRF_SELECTION_POLICY of Policy_Type
	Policy_Type_VRF_SELECTION_POLICY E_Policy_Type = 2
)

// E_PortSet_Port is a derived int64 type which is used to represent
// the enumerated node PortSet_Port. An additional value named
// PortSet_Port_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PortSet_Port int64

// IsYANGGoEnum ensures that PortSet_Port implements the yang.GoEnum
// interface. This ensures that PortSet_Port can be identified as a
// mapped type for a YANG enumeration.
func (E_PortSet_Port) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PortSet_Port.
func (E_PortSet_Port) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PortSet_Port.
func (e E_PortSet_Port) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PortSet_Port")
}

const (
	// PortSet_Port_UNSET corresponds to the value UNSET of PortSet_Port
	PortSet_Port_UNSET E_PortSet_Port = 0
	// PortSet_Port_ANY corresponds to the value ANY of PortSet_Port
	PortSet_Port_ANY E_PortSet_Port = 1
)

// E_PrefixSet_Mode is a derived int64 type which is used to represent
// the enumerated node PrefixSet_Mode. An additional value named
// PrefixSet_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSet_Mode int64

// IsYANGGoEnum ensures that PrefixSet_Mode implements the yang.GoEnum
// interface. This ensures that PrefixSet_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSet_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSet_Mode.
func (E_PrefixSet_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSet_Mode.
func (e E_PrefixSet_Mode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSet_Mode")
}

const (
	// PrefixSet_Mode_UNSET corresponds to the value UNSET of PrefixSet_Mode
	PrefixSet_Mode_UNSET E_PrefixSet_Mode = 0
	// PrefixSet_Mode_IPV4 corresponds to the value IPV4 of PrefixSet_Mode
	PrefixSet_Mode_IPV4 E_PrefixSet_Mode = 1
	// PrefixSet_Mode_IPV6 corresponds to the value IPV6 of PrefixSet_Mode
	PrefixSet_Mode_IPV6 E_PrefixSet_Mode = 2
	// PrefixSet_Mode_MIXED corresponds to the value MIXED of PrefixSet_Mode
	PrefixSet_Mode_MIXED E_PrefixSet_Mode = 3
)

// E_PrefixSid_Flags is a derived int64 type which is used to represent
// the enumerated node PrefixSid_Flags. An additional value named
// PrefixSid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_Flags int64

// IsYANGGoEnum ensures that PrefixSid_Flags implements the yang.GoEnum
// interface. This ensures that PrefixSid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_Flags.
func (E_PrefixSid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_Flags.
func (e E_PrefixSid_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_Flags")
}

const (
	// PrefixSid_Flags_UNSET corresponds to the value UNSET of PrefixSid_Flags
	PrefixSid_Flags_UNSET E_PrefixSid_Flags = 0
	// PrefixSid_Flags_READVERTISEMENT corresponds to the value READVERTISEMENT of PrefixSid_Flags
	PrefixSid_Flags_READVERTISEMENT E_PrefixSid_Flags = 1
	// PrefixSid_Flags_NODE corresponds to the value NODE of PrefixSid_Flags
	PrefixSid_Flags_NODE E_PrefixSid_Flags = 2
	// PrefixSid_Flags_NO_PHP corresponds to the value NO_PHP of PrefixSid_Flags
	PrefixSid_Flags_NO_PHP E_PrefixSid_Flags = 3
	// PrefixSid_Flags_EXPLICIT_NULL corresponds to the value EXPLICIT_NULL of PrefixSid_Flags
	PrefixSid_Flags_EXPLICIT_NULL E_PrefixSid_Flags = 4
	// PrefixSid_Flags_VALUE corresponds to the value VALUE of PrefixSid_Flags
	PrefixSid_Flags_VALUE E_PrefixSid_Flags = 5
	// PrefixSid_Flags_LOCAL corresponds to the value LOCAL of PrefixSid_Flags
	PrefixSid_Flags_LOCAL E_PrefixSid_Flags = 6
)

// E_PrefixSid_LabelOptions is a derived int64 type which is used to represent
// the enumerated node PrefixSid_LabelOptions. An additional value named
// PrefixSid_LabelOptions_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_LabelOptions int64

// IsYANGGoEnum ensures that PrefixSid_LabelOptions implements the yang.GoEnum
// interface. This ensures that PrefixSid_LabelOptions can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_LabelOptions) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_LabelOptions.
func (E_PrefixSid_LabelOptions) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_LabelOptions.
func (e E_PrefixSid_LabelOptions) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_LabelOptions")
}

const (
	// PrefixSid_LabelOptions_UNSET corresponds to the value UNSET of PrefixSid_LabelOptions
	PrefixSid_LabelOptions_UNSET E_PrefixSid_LabelOptions = 0
	// PrefixSid_LabelOptions_NO_PHP corresponds to the value NO_PHP of PrefixSid_LabelOptions
	PrefixSid_LabelOptions_NO_PHP E_PrefixSid_LabelOptions = 1
	// PrefixSid_LabelOptions_EXPLICIT_NULL corresponds to the value EXPLICIT_NULL of PrefixSid_LabelOptions
	PrefixSid_LabelOptions_EXPLICIT_NULL E_PrefixSid_LabelOptions = 2
)

// E_PrefixSid_SidId is a derived int64 type which is used to represent
// the enumerated node PrefixSid_SidId. An additional value named
// PrefixSid_SidId_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_SidId int64

// IsYANGGoEnum ensures that PrefixSid_SidId implements the yang.GoEnum
// interface. This ensures that PrefixSid_SidId can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_SidId) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_SidId.
func (E_PrefixSid_SidId) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_SidId.
func (e E_PrefixSid_SidId) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_SidId")
}

const (
	// PrefixSid_SidId_UNSET corresponds to the value UNSET of PrefixSid_SidId
	PrefixSid_SidId_UNSET E_PrefixSid_SidId = 0
	// PrefixSid_SidId_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of PrefixSid_SidId
	PrefixSid_SidId_IPV4_EXPLICIT_NULL E_PrefixSid_SidId = 1
	// PrefixSid_SidId_ROUTER_ALERT corresponds to the value ROUTER_ALERT of PrefixSid_SidId
	PrefixSid_SidId_ROUTER_ALERT E_PrefixSid_SidId = 2
	// PrefixSid_SidId_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of PrefixSid_SidId
	PrefixSid_SidId_IPV6_EXPLICIT_NULL E_PrefixSid_SidId = 3
	// PrefixSid_SidId_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of PrefixSid_SidId
	PrefixSid_SidId_IMPLICIT_NULL E_PrefixSid_SidId = 4
	// PrefixSid_SidId_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of PrefixSid_SidId
	PrefixSid_SidId_ENTROPY_LABEL_INDICATOR E_PrefixSid_SidId = 8
	// PrefixSid_SidId_NO_LABEL corresponds to the value NO_LABEL of PrefixSid_SidId
	PrefixSid_SidId_NO_LABEL E_PrefixSid_SidId = 9
)

// E_PrefixSid_SidScope is a derived int64 type which is used to represent
// the enumerated node PrefixSid_SidScope. An additional value named
// PrefixSid_SidScope_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_SidScope int64

// IsYANGGoEnum ensures that PrefixSid_SidScope implements the yang.GoEnum
// interface. This ensures that PrefixSid_SidScope can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_SidScope) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_SidScope.
func (E_PrefixSid_SidScope) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_SidScope.
func (e E_PrefixSid_SidScope) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_SidScope")
}

const (
	// PrefixSid_SidScope_UNSET corresponds to the value UNSET of PrefixSid_SidScope
	PrefixSid_SidScope_UNSET E_PrefixSid_SidScope = 0
	// PrefixSid_SidScope_LOCAL corresponds to the value LOCAL of PrefixSid_SidScope
	PrefixSid_SidScope_LOCAL E_PrefixSid_SidScope = 1
	// PrefixSid_SidScope_GLOBAL corresponds to the value GLOBAL of PrefixSid_SidScope
	PrefixSid_SidScope_GLOBAL E_PrefixSid_SidScope = 2
)

// E_PrefixSid_SidValueType is a derived int64 type which is used to represent
// the enumerated node PrefixSid_SidValueType. An additional value named
// PrefixSid_SidValueType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_PrefixSid_SidValueType int64

// IsYANGGoEnum ensures that PrefixSid_SidValueType implements the yang.GoEnum
// interface. This ensures that PrefixSid_SidValueType can be identified as a
// mapped type for a YANG enumeration.
func (E_PrefixSid_SidValueType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  PrefixSid_SidValueType.
func (E_PrefixSid_SidValueType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_PrefixSid_SidValueType.
func (e E_PrefixSid_SidValueType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_PrefixSid_SidValueType")
}

const (
	// PrefixSid_SidValueType_UNSET corresponds to the value UNSET of PrefixSid_SidValueType
	PrefixSid_SidValueType_UNSET E_PrefixSid_SidValueType = 0
	// PrefixSid_SidValueType_ABSOLUTE corresponds to the value ABSOLUTE of PrefixSid_SidValueType
	PrefixSid_SidValueType_ABSOLUTE E_PrefixSid_SidValueType = 1
	// PrefixSid_SidValueType_INDEX corresponds to the value INDEX of PrefixSid_SidValueType
	PrefixSid_SidValueType_INDEX E_PrefixSid_SidValueType = 2
)

// E_Producer_MobilityState is a derived int64 type which is used to represent
// the enumerated node Producer_MobilityState. An additional value named
// Producer_MobilityState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Producer_MobilityState int64

// IsYANGGoEnum ensures that Producer_MobilityState implements the yang.GoEnum
// interface. This ensures that Producer_MobilityState can be identified as a
// mapped type for a YANG enumeration.
func (E_Producer_MobilityState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Producer_MobilityState.
func (E_Producer_MobilityState) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Producer_MobilityState.
func (e E_Producer_MobilityState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Producer_MobilityState")
}

const (
	// Producer_MobilityState_UNSET corresponds to the value UNSET of Producer_MobilityState
	Producer_MobilityState_UNSET E_Producer_MobilityState = 0
	// Producer_MobilityState_FROZEN corresponds to the value FROZEN of Producer_MobilityState
	Producer_MobilityState_FROZEN E_Producer_MobilityState = 1
	// Producer_MobilityState_DUPLICATE corresponds to the value DUPLICATE of Producer_MobilityState
	Producer_MobilityState_DUPLICATE E_Producer_MobilityState = 2
)

// E_Producer_Producer is a derived int64 type which is used to represent
// the enumerated node Producer_Producer. An additional value named
// Producer_Producer_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Producer_Producer int64

// IsYANGGoEnum ensures that Producer_Producer implements the yang.GoEnum
// interface. This ensures that Producer_Producer can be identified as a
// mapped type for a YANG enumeration.
func (E_Producer_Producer) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Producer_Producer.
func (E_Producer_Producer) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Producer_Producer.
func (e E_Producer_Producer) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Producer_Producer")
}

const (
	// Producer_Producer_UNSET corresponds to the value UNSET of Producer_Producer
	Producer_Producer_UNSET E_Producer_Producer = 0
	// Producer_Producer_LOCAL corresponds to the value LOCAL of Producer_Producer
	Producer_Producer_LOCAL E_Producer_Producer = 1
	// Producer_Producer_STATIC corresponds to the value STATIC of Producer_Producer
	Producer_Producer_STATIC E_Producer_Producer = 2
	// Producer_Producer_BGP corresponds to the value BGP of Producer_Producer
	Producer_Producer_BGP E_Producer_Producer = 3
)

// E_ProxyArp_Mode is a derived int64 type which is used to represent
// the enumerated node ProxyArp_Mode. An additional value named
// ProxyArp_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ProxyArp_Mode int64

// IsYANGGoEnum ensures that ProxyArp_Mode implements the yang.GoEnum
// interface. This ensures that ProxyArp_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_ProxyArp_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ProxyArp_Mode.
func (E_ProxyArp_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_ProxyArp_Mode.
func (e E_ProxyArp_Mode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ProxyArp_Mode")
}

const (
	// ProxyArp_Mode_UNSET corresponds to the value UNSET of ProxyArp_Mode
	ProxyArp_Mode_UNSET E_ProxyArp_Mode = 0
	// ProxyArp_Mode_DISABLE corresponds to the value DISABLE of ProxyArp_Mode
	ProxyArp_Mode_DISABLE E_ProxyArp_Mode = 1
	// ProxyArp_Mode_REMOTE_ONLY corresponds to the value REMOTE_ONLY of ProxyArp_Mode
	ProxyArp_Mode_REMOTE_ONLY E_ProxyArp_Mode = 2
	// ProxyArp_Mode_ALL corresponds to the value ALL of ProxyArp_Mode
	ProxyArp_Mode_ALL E_ProxyArp_Mode = 3
)

// E_QosTypes_QOS_SCHEDULER_TYPE is a derived int64 type which is used to represent
// the enumerated node QosTypes_QOS_SCHEDULER_TYPE. An additional value named
// QosTypes_QOS_SCHEDULER_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_QosTypes_QOS_SCHEDULER_TYPE int64

// IsYANGGoEnum ensures that QosTypes_QOS_SCHEDULER_TYPE implements the yang.GoEnum
// interface. This ensures that QosTypes_QOS_SCHEDULER_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_QosTypes_QOS_SCHEDULER_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  QosTypes_QOS_SCHEDULER_TYPE.
func (E_QosTypes_QOS_SCHEDULER_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_QosTypes_QOS_SCHEDULER_TYPE.
func (e E_QosTypes_QOS_SCHEDULER_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_QosTypes_QOS_SCHEDULER_TYPE")
}

const (
	// QosTypes_QOS_SCHEDULER_TYPE_UNSET corresponds to the value UNSET of QosTypes_QOS_SCHEDULER_TYPE
	QosTypes_QOS_SCHEDULER_TYPE_UNSET E_QosTypes_QOS_SCHEDULER_TYPE = 0
	// QosTypes_QOS_SCHEDULER_TYPE_ONE_RATE_TWO_COLOR corresponds to the value ONE_RATE_TWO_COLOR of QosTypes_QOS_SCHEDULER_TYPE
	QosTypes_QOS_SCHEDULER_TYPE_ONE_RATE_TWO_COLOR E_QosTypes_QOS_SCHEDULER_TYPE = 1
	// QosTypes_QOS_SCHEDULER_TYPE_TWO_RATE_THREE_COLOR corresponds to the value TWO_RATE_THREE_COLOR of QosTypes_QOS_SCHEDULER_TYPE
	QosTypes_QOS_SCHEDULER_TYPE_TWO_RATE_THREE_COLOR E_QosTypes_QOS_SCHEDULER_TYPE = 2
)

// E_Qos_Classifier_Type is a derived int64 type which is used to represent
// the enumerated node Qos_Classifier_Type. An additional value named
// Qos_Classifier_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Qos_Classifier_Type int64

// IsYANGGoEnum ensures that Qos_Classifier_Type implements the yang.GoEnum
// interface. This ensures that Qos_Classifier_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Qos_Classifier_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Qos_Classifier_Type.
func (E_Qos_Classifier_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Qos_Classifier_Type.
func (e E_Qos_Classifier_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Qos_Classifier_Type")
}

const (
	// Qos_Classifier_Type_UNSET corresponds to the value UNSET of Qos_Classifier_Type
	Qos_Classifier_Type_UNSET E_Qos_Classifier_Type = 0
	// Qos_Classifier_Type_IPV4 corresponds to the value IPV4 of Qos_Classifier_Type
	Qos_Classifier_Type_IPV4 E_Qos_Classifier_Type = 1
	// Qos_Classifier_Type_IPV6 corresponds to the value IPV6 of Qos_Classifier_Type
	Qos_Classifier_Type_IPV6 E_Qos_Classifier_Type = 2
	// Qos_Classifier_Type_MPLS corresponds to the value MPLS of Qos_Classifier_Type
	Qos_Classifier_Type_MPLS E_Qos_Classifier_Type = 3
	// Qos_Classifier_Type_ETHERNET corresponds to the value ETHERNET of Qos_Classifier_Type
	Qos_Classifier_Type_ETHERNET E_Qos_Classifier_Type = 4
)

// E_Qos_QueueBehavior is a derived int64 type which is used to represent
// the enumerated node Qos_QueueBehavior. An additional value named
// Qos_QueueBehavior_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Qos_QueueBehavior int64

// IsYANGGoEnum ensures that Qos_QueueBehavior implements the yang.GoEnum
// interface. This ensures that Qos_QueueBehavior can be identified as a
// mapped type for a YANG enumeration.
func (E_Qos_QueueBehavior) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Qos_QueueBehavior.
func (E_Qos_QueueBehavior) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Qos_QueueBehavior.
func (e E_Qos_QueueBehavior) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Qos_QueueBehavior")
}

const (
	// Qos_QueueBehavior_UNSET corresponds to the value UNSET of Qos_QueueBehavior
	Qos_QueueBehavior_UNSET E_Qos_QueueBehavior = 0
	// Qos_QueueBehavior_SHAPE corresponds to the value SHAPE of Qos_QueueBehavior
	Qos_QueueBehavior_SHAPE E_Qos_QueueBehavior = 1
	// Qos_QueueBehavior_POLICE corresponds to the value POLICE of Qos_QueueBehavior
	Qos_QueueBehavior_POLICE E_Qos_QueueBehavior = 2
)

// E_Qos_SHARED_BUFFER_LIMIT_TYPE is a derived int64 type which is used to represent
// the enumerated node Qos_SHARED_BUFFER_LIMIT_TYPE. An additional value named
// Qos_SHARED_BUFFER_LIMIT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Qos_SHARED_BUFFER_LIMIT_TYPE int64

// IsYANGGoEnum ensures that Qos_SHARED_BUFFER_LIMIT_TYPE implements the yang.GoEnum
// interface. This ensures that Qos_SHARED_BUFFER_LIMIT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_Qos_SHARED_BUFFER_LIMIT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Qos_SHARED_BUFFER_LIMIT_TYPE.
func (E_Qos_SHARED_BUFFER_LIMIT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Qos_SHARED_BUFFER_LIMIT_TYPE.
func (e E_Qos_SHARED_BUFFER_LIMIT_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Qos_SHARED_BUFFER_LIMIT_TYPE")
}

const (
	// Qos_SHARED_BUFFER_LIMIT_TYPE_UNSET corresponds to the value UNSET of Qos_SHARED_BUFFER_LIMIT_TYPE
	Qos_SHARED_BUFFER_LIMIT_TYPE_UNSET E_Qos_SHARED_BUFFER_LIMIT_TYPE = 0
	// Qos_SHARED_BUFFER_LIMIT_TYPE_DYNAMIC_BASED_ON_SCALING_FACTOR corresponds to the value DYNAMIC_BASED_ON_SCALING_FACTOR of Qos_SHARED_BUFFER_LIMIT_TYPE
	Qos_SHARED_BUFFER_LIMIT_TYPE_DYNAMIC_BASED_ON_SCALING_FACTOR E_Qos_SHARED_BUFFER_LIMIT_TYPE = 1
	// Qos_SHARED_BUFFER_LIMIT_TYPE_STATIC corresponds to the value STATIC of Qos_SHARED_BUFFER_LIMIT_TYPE
	Qos_SHARED_BUFFER_LIMIT_TYPE_STATIC E_Qos_SHARED_BUFFER_LIMIT_TYPE = 2
)

// E_RecordRouteObject_ReportedLabel is a derived int64 type which is used to represent
// the enumerated node RecordRouteObject_ReportedLabel. An additional value named
// RecordRouteObject_ReportedLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RecordRouteObject_ReportedLabel int64

// IsYANGGoEnum ensures that RecordRouteObject_ReportedLabel implements the yang.GoEnum
// interface. This ensures that RecordRouteObject_ReportedLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_RecordRouteObject_ReportedLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RecordRouteObject_ReportedLabel.
func (E_RecordRouteObject_ReportedLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RecordRouteObject_ReportedLabel.
func (e E_RecordRouteObject_ReportedLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RecordRouteObject_ReportedLabel")
}

const (
	// RecordRouteObject_ReportedLabel_UNSET corresponds to the value UNSET of RecordRouteObject_ReportedLabel
	RecordRouteObject_ReportedLabel_UNSET E_RecordRouteObject_ReportedLabel = 0
	// RecordRouteObject_ReportedLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of RecordRouteObject_ReportedLabel
	RecordRouteObject_ReportedLabel_IPV4_EXPLICIT_NULL E_RecordRouteObject_ReportedLabel = 1
	// RecordRouteObject_ReportedLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of RecordRouteObject_ReportedLabel
	RecordRouteObject_ReportedLabel_ROUTER_ALERT E_RecordRouteObject_ReportedLabel = 2
	// RecordRouteObject_ReportedLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of RecordRouteObject_ReportedLabel
	RecordRouteObject_ReportedLabel_IPV6_EXPLICIT_NULL E_RecordRouteObject_ReportedLabel = 3
	// RecordRouteObject_ReportedLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of RecordRouteObject_ReportedLabel
	RecordRouteObject_ReportedLabel_IMPLICIT_NULL E_RecordRouteObject_ReportedLabel = 4
	// RecordRouteObject_ReportedLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of RecordRouteObject_ReportedLabel
	RecordRouteObject_ReportedLabel_ENTROPY_LABEL_INDICATOR E_RecordRouteObject_ReportedLabel = 8
	// RecordRouteObject_ReportedLabel_NO_LABEL corresponds to the value NO_LABEL of RecordRouteObject_ReportedLabel
	RecordRouteObject_ReportedLabel_NO_LABEL E_RecordRouteObject_ReportedLabel = 9
)

// E_ReservedLabelBlock_LowerBound is a derived int64 type which is used to represent
// the enumerated node ReservedLabelBlock_LowerBound. An additional value named
// ReservedLabelBlock_LowerBound_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ReservedLabelBlock_LowerBound int64

// IsYANGGoEnum ensures that ReservedLabelBlock_LowerBound implements the yang.GoEnum
// interface. This ensures that ReservedLabelBlock_LowerBound can be identified as a
// mapped type for a YANG enumeration.
func (E_ReservedLabelBlock_LowerBound) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ReservedLabelBlock_LowerBound.
func (E_ReservedLabelBlock_LowerBound) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_ReservedLabelBlock_LowerBound.
func (e E_ReservedLabelBlock_LowerBound) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ReservedLabelBlock_LowerBound")
}

const (
	// ReservedLabelBlock_LowerBound_UNSET corresponds to the value UNSET of ReservedLabelBlock_LowerBound
	ReservedLabelBlock_LowerBound_UNSET E_ReservedLabelBlock_LowerBound = 0
	// ReservedLabelBlock_LowerBound_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of ReservedLabelBlock_LowerBound
	ReservedLabelBlock_LowerBound_IPV4_EXPLICIT_NULL E_ReservedLabelBlock_LowerBound = 1
	// ReservedLabelBlock_LowerBound_ROUTER_ALERT corresponds to the value ROUTER_ALERT of ReservedLabelBlock_LowerBound
	ReservedLabelBlock_LowerBound_ROUTER_ALERT E_ReservedLabelBlock_LowerBound = 2
	// ReservedLabelBlock_LowerBound_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of ReservedLabelBlock_LowerBound
	ReservedLabelBlock_LowerBound_IPV6_EXPLICIT_NULL E_ReservedLabelBlock_LowerBound = 3
	// ReservedLabelBlock_LowerBound_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of ReservedLabelBlock_LowerBound
	ReservedLabelBlock_LowerBound_IMPLICIT_NULL E_ReservedLabelBlock_LowerBound = 4
	// ReservedLabelBlock_LowerBound_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of ReservedLabelBlock_LowerBound
	ReservedLabelBlock_LowerBound_ENTROPY_LABEL_INDICATOR E_ReservedLabelBlock_LowerBound = 8
	// ReservedLabelBlock_LowerBound_NO_LABEL corresponds to the value NO_LABEL of ReservedLabelBlock_LowerBound
	ReservedLabelBlock_LowerBound_NO_LABEL E_ReservedLabelBlock_LowerBound = 9
)

// E_ReservedLabelBlock_UpperBound is a derived int64 type which is used to represent
// the enumerated node ReservedLabelBlock_UpperBound. An additional value named
// ReservedLabelBlock_UpperBound_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_ReservedLabelBlock_UpperBound int64

// IsYANGGoEnum ensures that ReservedLabelBlock_UpperBound implements the yang.GoEnum
// interface. This ensures that ReservedLabelBlock_UpperBound can be identified as a
// mapped type for a YANG enumeration.
func (E_ReservedLabelBlock_UpperBound) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  ReservedLabelBlock_UpperBound.
func (E_ReservedLabelBlock_UpperBound) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_ReservedLabelBlock_UpperBound.
func (e E_ReservedLabelBlock_UpperBound) String() string {
	return ygot.EnumLogString(e, int64(e), "E_ReservedLabelBlock_UpperBound")
}

const (
	// ReservedLabelBlock_UpperBound_UNSET corresponds to the value UNSET of ReservedLabelBlock_UpperBound
	ReservedLabelBlock_UpperBound_UNSET E_ReservedLabelBlock_UpperBound = 0
	// ReservedLabelBlock_UpperBound_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of ReservedLabelBlock_UpperBound
	ReservedLabelBlock_UpperBound_IPV4_EXPLICIT_NULL E_ReservedLabelBlock_UpperBound = 1
	// ReservedLabelBlock_UpperBound_ROUTER_ALERT corresponds to the value ROUTER_ALERT of ReservedLabelBlock_UpperBound
	ReservedLabelBlock_UpperBound_ROUTER_ALERT E_ReservedLabelBlock_UpperBound = 2
	// ReservedLabelBlock_UpperBound_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of ReservedLabelBlock_UpperBound
	ReservedLabelBlock_UpperBound_IPV6_EXPLICIT_NULL E_ReservedLabelBlock_UpperBound = 3
	// ReservedLabelBlock_UpperBound_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of ReservedLabelBlock_UpperBound
	ReservedLabelBlock_UpperBound_IMPLICIT_NULL E_ReservedLabelBlock_UpperBound = 4
	// ReservedLabelBlock_UpperBound_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of ReservedLabelBlock_UpperBound
	ReservedLabelBlock_UpperBound_ENTROPY_LABEL_INDICATOR E_ReservedLabelBlock_UpperBound = 8
	// ReservedLabelBlock_UpperBound_NO_LABEL corresponds to the value NO_LABEL of ReservedLabelBlock_UpperBound
	ReservedLabelBlock_UpperBound_NO_LABEL E_ReservedLabelBlock_UpperBound = 9
)

// E_RibBgpTypes_INVALID_ROUTE_REASON is a derived int64 type which is used to represent
// the enumerated node RibBgpTypes_INVALID_ROUTE_REASON. An additional value named
// RibBgpTypes_INVALID_ROUTE_REASON_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RibBgpTypes_INVALID_ROUTE_REASON int64

// IsYANGGoEnum ensures that RibBgpTypes_INVALID_ROUTE_REASON implements the yang.GoEnum
// interface. This ensures that RibBgpTypes_INVALID_ROUTE_REASON can be identified as a
// mapped type for a YANG enumeration.
func (E_RibBgpTypes_INVALID_ROUTE_REASON) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RibBgpTypes_INVALID_ROUTE_REASON.
func (E_RibBgpTypes_INVALID_ROUTE_REASON) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RibBgpTypes_INVALID_ROUTE_REASON.
func (e E_RibBgpTypes_INVALID_ROUTE_REASON) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RibBgpTypes_INVALID_ROUTE_REASON")
}

const (
	// RibBgpTypes_INVALID_ROUTE_REASON_UNSET corresponds to the value UNSET of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_UNSET E_RibBgpTypes_INVALID_ROUTE_REASON = 0
	// RibBgpTypes_INVALID_ROUTE_REASON_INVALID_AS_LOOP corresponds to the value INVALID_AS_LOOP of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_INVALID_AS_LOOP E_RibBgpTypes_INVALID_ROUTE_REASON = 1
	// RibBgpTypes_INVALID_ROUTE_REASON_INVALID_CLUSTER_LOOP corresponds to the value INVALID_CLUSTER_LOOP of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_INVALID_CLUSTER_LOOP E_RibBgpTypes_INVALID_ROUTE_REASON = 2
	// RibBgpTypes_INVALID_ROUTE_REASON_INVALID_CONFED corresponds to the value INVALID_CONFED of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_INVALID_CONFED E_RibBgpTypes_INVALID_ROUTE_REASON = 3
	// RibBgpTypes_INVALID_ROUTE_REASON_INVALID_ORIGINATOR corresponds to the value INVALID_ORIGINATOR of RibBgpTypes_INVALID_ROUTE_REASON
	RibBgpTypes_INVALID_ROUTE_REASON_INVALID_ORIGINATOR E_RibBgpTypes_INVALID_ROUTE_REASON = 4
)

// E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE. An additional value named
// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE.
func (E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE.
func (e E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE")
}

const (
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_UNSET corresponds to the value UNSET of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_UNSET E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 0
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_BINDING_SID corresponds to the value SRTE_BINDING_SID of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_BINDING_SID E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 1
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_PREFERENCE corresponds to the value SRTE_PREFERENCE of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_PREFERENCE E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 2
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_SEGMENT_LIST corresponds to the value SRTE_SEGMENT_LIST of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_SRTE_SEGMENT_LIST E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 3
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_TUNNEL_COLOR corresponds to the value TUNNEL_COLOR of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_TUNNEL_COLOR E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 4
	// RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_TUNNEL_REMOTE_ENDPOINT corresponds to the value TUNNEL_REMOTE_ENDPOINT of RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE_TUNNEL_REMOTE_ENDPOINT E_RibBgpTypes_TUNNEL_ENCAPSULATION_SUBTLV_TYPE = 5
)

// E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE is a derived int64 type which is used to represent
// the enumerated node RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE. An additional value named
// RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE int64

// IsYANGGoEnum ensures that RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE implements the yang.GoEnum
// interface. This ensures that RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE.
func (E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE.
func (e E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE")
}

const (
	// RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_UNSET corresponds to the value UNSET of RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_UNSET E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE = 0
	// RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_SRTE_POLICY_TUNNEL corresponds to the value SRTE_POLICY_TUNNEL of RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE
	RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE_SRTE_POLICY_TUNNEL E_RibBgpTypes_TUNNEL_ENCAPSULATION_TYPE = 1
)

// E_RibBgp_AsPathSegmentType is a derived int64 type which is used to represent
// the enumerated node RibBgp_AsPathSegmentType. An additional value named
// RibBgp_AsPathSegmentType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RibBgp_AsPathSegmentType int64

// IsYANGGoEnum ensures that RibBgp_AsPathSegmentType implements the yang.GoEnum
// interface. This ensures that RibBgp_AsPathSegmentType can be identified as a
// mapped type for a YANG enumeration.
func (E_RibBgp_AsPathSegmentType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RibBgp_AsPathSegmentType.
func (E_RibBgp_AsPathSegmentType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_RibBgp_AsPathSegmentType.
func (e E_RibBgp_AsPathSegmentType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RibBgp_AsPathSegmentType")
}

const (
	// RibBgp_AsPathSegmentType_UNSET corresponds to the value UNSET of RibBgp_AsPathSegmentType
	RibBgp_AsPathSegmentType_UNSET E_RibBgp_AsPathSegmentType = 0
	// RibBgp_AsPathSegmentType_AS_SEQ corresponds to the value AS_SEQ of RibBgp_AsPathSegmentType
	RibBgp_AsPathSegmentType_AS_SEQ E_RibBgp_AsPathSegmentType = 1
	// RibBgp_AsPathSegmentType_AS_SET corresponds to the value AS_SET of RibBgp_AsPathSegmentType
	RibBgp_AsPathSegmentType_AS_SET E_RibBgp_AsPathSegmentType = 2
	// RibBgp_AsPathSegmentType_AS_CONFED_SEQUENCE corresponds to the value AS_CONFED_SEQUENCE of RibBgp_AsPathSegmentType
	RibBgp_AsPathSegmentType_AS_CONFED_SEQUENCE E_RibBgp_AsPathSegmentType = 3
	// RibBgp_AsPathSegmentType_AS_CONFED_SET corresponds to the value AS_CONFED_SET of RibBgp_AsPathSegmentType
	RibBgp_AsPathSegmentType_AS_CONFED_SET E_RibBgp_AsPathSegmentType = 4
)

// E_RibBgp_BgpOriginAttrType is a derived int64 type which is used to represent
// the enumerated node RibBgp_BgpOriginAttrType. An additional value named
// RibBgp_BgpOriginAttrType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RibBgp_BgpOriginAttrType int64

// IsYANGGoEnum ensures that RibBgp_BgpOriginAttrType implements the yang.GoEnum
// interface. This ensures that RibBgp_BgpOriginAttrType can be identified as a
// mapped type for a YANG enumeration.
func (E_RibBgp_BgpOriginAttrType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RibBgp_BgpOriginAttrType.
func (E_RibBgp_BgpOriginAttrType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_RibBgp_BgpOriginAttrType.
func (e E_RibBgp_BgpOriginAttrType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RibBgp_BgpOriginAttrType")
}

const (
	// RibBgp_BgpOriginAttrType_UNSET corresponds to the value UNSET of RibBgp_BgpOriginAttrType
	RibBgp_BgpOriginAttrType_UNSET E_RibBgp_BgpOriginAttrType = 0
	// RibBgp_BgpOriginAttrType_IGP corresponds to the value IGP of RibBgp_BgpOriginAttrType
	RibBgp_BgpOriginAttrType_IGP E_RibBgp_BgpOriginAttrType = 1
	// RibBgp_BgpOriginAttrType_EGP corresponds to the value EGP of RibBgp_BgpOriginAttrType
	RibBgp_BgpOriginAttrType_EGP E_RibBgp_BgpOriginAttrType = 2
	// RibBgp_BgpOriginAttrType_INCOMPLETE corresponds to the value INCOMPLETE of RibBgp_BgpOriginAttrType
	RibBgp_BgpOriginAttrType_INCOMPLETE E_RibBgp_BgpOriginAttrType = 3
)

// E_RouterAdvertisement_Mode is a derived int64 type which is used to represent
// the enumerated node RouterAdvertisement_Mode. An additional value named
// RouterAdvertisement_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RouterAdvertisement_Mode int64

// IsYANGGoEnum ensures that RouterAdvertisement_Mode implements the yang.GoEnum
// interface. This ensures that RouterAdvertisement_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_RouterAdvertisement_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RouterAdvertisement_Mode.
func (E_RouterAdvertisement_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_RouterAdvertisement_Mode.
func (e E_RouterAdvertisement_Mode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RouterAdvertisement_Mode")
}

const (
	// RouterAdvertisement_Mode_UNSET corresponds to the value UNSET of RouterAdvertisement_Mode
	RouterAdvertisement_Mode_UNSET E_RouterAdvertisement_Mode = 0
	// RouterAdvertisement_Mode_ALL corresponds to the value ALL of RouterAdvertisement_Mode
	RouterAdvertisement_Mode_ALL E_RouterAdvertisement_Mode = 1
	// RouterAdvertisement_Mode_DISABLE_UNSOLICITED_RA corresponds to the value DISABLE_UNSOLICITED_RA of RouterAdvertisement_Mode
	RouterAdvertisement_Mode_DISABLE_UNSOLICITED_RA E_RouterAdvertisement_Mode = 2
)

// E_RouterInformation_Tlv_Type is a derived int64 type which is used to represent
// the enumerated node RouterInformation_Tlv_Type. An additional value named
// RouterInformation_Tlv_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RouterInformation_Tlv_Type int64

// IsYANGGoEnum ensures that RouterInformation_Tlv_Type implements the yang.GoEnum
// interface. This ensures that RouterInformation_Tlv_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_RouterInformation_Tlv_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RouterInformation_Tlv_Type.
func (E_RouterInformation_Tlv_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_RouterInformation_Tlv_Type.
func (e E_RouterInformation_Tlv_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RouterInformation_Tlv_Type")
}

const (
	// RouterInformation_Tlv_Type_UNSET corresponds to the value UNSET of RouterInformation_Tlv_Type
	RouterInformation_Tlv_Type_UNSET E_RouterInformation_Tlv_Type = 0
	// RouterInformation_Tlv_Type_UNKNOWN corresponds to the value UNKNOWN of RouterInformation_Tlv_Type
	RouterInformation_Tlv_Type_UNKNOWN E_RouterInformation_Tlv_Type = 1
)

// E_RoutingPolicy_DefaultPolicyType is a derived int64 type which is used to represent
// the enumerated node RoutingPolicy_DefaultPolicyType. An additional value named
// RoutingPolicy_DefaultPolicyType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RoutingPolicy_DefaultPolicyType int64

// IsYANGGoEnum ensures that RoutingPolicy_DefaultPolicyType implements the yang.GoEnum
// interface. This ensures that RoutingPolicy_DefaultPolicyType can be identified as a
// mapped type for a YANG enumeration.
func (E_RoutingPolicy_DefaultPolicyType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RoutingPolicy_DefaultPolicyType.
func (E_RoutingPolicy_DefaultPolicyType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RoutingPolicy_DefaultPolicyType.
func (e E_RoutingPolicy_DefaultPolicyType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RoutingPolicy_DefaultPolicyType")
}

const (
	// RoutingPolicy_DefaultPolicyType_UNSET corresponds to the value UNSET of RoutingPolicy_DefaultPolicyType
	RoutingPolicy_DefaultPolicyType_UNSET E_RoutingPolicy_DefaultPolicyType = 0
	// RoutingPolicy_DefaultPolicyType_ACCEPT_ROUTE corresponds to the value ACCEPT_ROUTE of RoutingPolicy_DefaultPolicyType
	RoutingPolicy_DefaultPolicyType_ACCEPT_ROUTE E_RoutingPolicy_DefaultPolicyType = 1
	// RoutingPolicy_DefaultPolicyType_REJECT_ROUTE corresponds to the value REJECT_ROUTE of RoutingPolicy_DefaultPolicyType
	RoutingPolicy_DefaultPolicyType_REJECT_ROUTE E_RoutingPolicy_DefaultPolicyType = 2
)

// E_RoutingPolicy_MatchSetOptionsRestrictedType is a derived int64 type which is used to represent
// the enumerated node RoutingPolicy_MatchSetOptionsRestrictedType. An additional value named
// RoutingPolicy_MatchSetOptionsRestrictedType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RoutingPolicy_MatchSetOptionsRestrictedType int64

// IsYANGGoEnum ensures that RoutingPolicy_MatchSetOptionsRestrictedType implements the yang.GoEnum
// interface. This ensures that RoutingPolicy_MatchSetOptionsRestrictedType can be identified as a
// mapped type for a YANG enumeration.
func (E_RoutingPolicy_MatchSetOptionsRestrictedType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RoutingPolicy_MatchSetOptionsRestrictedType.
func (E_RoutingPolicy_MatchSetOptionsRestrictedType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RoutingPolicy_MatchSetOptionsRestrictedType.
func (e E_RoutingPolicy_MatchSetOptionsRestrictedType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RoutingPolicy_MatchSetOptionsRestrictedType")
}

const (
	// RoutingPolicy_MatchSetOptionsRestrictedType_UNSET corresponds to the value UNSET of RoutingPolicy_MatchSetOptionsRestrictedType
	RoutingPolicy_MatchSetOptionsRestrictedType_UNSET E_RoutingPolicy_MatchSetOptionsRestrictedType = 0
	// RoutingPolicy_MatchSetOptionsRestrictedType_ANY corresponds to the value ANY of RoutingPolicy_MatchSetOptionsRestrictedType
	RoutingPolicy_MatchSetOptionsRestrictedType_ANY E_RoutingPolicy_MatchSetOptionsRestrictedType = 1
	// RoutingPolicy_MatchSetOptionsRestrictedType_INVERT corresponds to the value INVERT of RoutingPolicy_MatchSetOptionsRestrictedType
	RoutingPolicy_MatchSetOptionsRestrictedType_INVERT E_RoutingPolicy_MatchSetOptionsRestrictedType = 2
)

// E_RoutingPolicy_MatchSetOptionsType is a derived int64 type which is used to represent
// the enumerated node RoutingPolicy_MatchSetOptionsType. An additional value named
// RoutingPolicy_MatchSetOptionsType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RoutingPolicy_MatchSetOptionsType int64

// IsYANGGoEnum ensures that RoutingPolicy_MatchSetOptionsType implements the yang.GoEnum
// interface. This ensures that RoutingPolicy_MatchSetOptionsType can be identified as a
// mapped type for a YANG enumeration.
func (E_RoutingPolicy_MatchSetOptionsType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RoutingPolicy_MatchSetOptionsType.
func (E_RoutingPolicy_MatchSetOptionsType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RoutingPolicy_MatchSetOptionsType.
func (e E_RoutingPolicy_MatchSetOptionsType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RoutingPolicy_MatchSetOptionsType")
}

const (
	// RoutingPolicy_MatchSetOptionsType_UNSET corresponds to the value UNSET of RoutingPolicy_MatchSetOptionsType
	RoutingPolicy_MatchSetOptionsType_UNSET E_RoutingPolicy_MatchSetOptionsType = 0
	// RoutingPolicy_MatchSetOptionsType_ANY corresponds to the value ANY of RoutingPolicy_MatchSetOptionsType
	RoutingPolicy_MatchSetOptionsType_ANY E_RoutingPolicy_MatchSetOptionsType = 1
	// RoutingPolicy_MatchSetOptionsType_ALL corresponds to the value ALL of RoutingPolicy_MatchSetOptionsType
	RoutingPolicy_MatchSetOptionsType_ALL E_RoutingPolicy_MatchSetOptionsType = 2
	// RoutingPolicy_MatchSetOptionsType_INVERT corresponds to the value INVERT of RoutingPolicy_MatchSetOptionsType
	RoutingPolicy_MatchSetOptionsType_INVERT E_RoutingPolicy_MatchSetOptionsType = 3
)

// E_RoutingPolicy_PolicyResultType is a derived int64 type which is used to represent
// the enumerated node RoutingPolicy_PolicyResultType. An additional value named
// RoutingPolicy_PolicyResultType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_RoutingPolicy_PolicyResultType int64

// IsYANGGoEnum ensures that RoutingPolicy_PolicyResultType implements the yang.GoEnum
// interface. This ensures that RoutingPolicy_PolicyResultType can be identified as a
// mapped type for a YANG enumeration.
func (E_RoutingPolicy_PolicyResultType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  RoutingPolicy_PolicyResultType.
func (E_RoutingPolicy_PolicyResultType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_RoutingPolicy_PolicyResultType.
func (e E_RoutingPolicy_PolicyResultType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_RoutingPolicy_PolicyResultType")
}

const (
	// RoutingPolicy_PolicyResultType_UNSET corresponds to the value UNSET of RoutingPolicy_PolicyResultType
	RoutingPolicy_PolicyResultType_UNSET E_RoutingPolicy_PolicyResultType = 0
	// RoutingPolicy_PolicyResultType_ACCEPT_ROUTE corresponds to the value ACCEPT_ROUTE of RoutingPolicy_PolicyResultType
	RoutingPolicy_PolicyResultType_ACCEPT_ROUTE E_RoutingPolicy_PolicyResultType = 1
	// RoutingPolicy_PolicyResultType_REJECT_ROUTE corresponds to the value REJECT_ROUTE of RoutingPolicy_PolicyResultType
	RoutingPolicy_PolicyResultType_REJECT_ROUTE E_RoutingPolicy_PolicyResultType = 2
	// RoutingPolicy_PolicyResultType_NEXT_STATEMENT corresponds to the value NEXT_STATEMENT of RoutingPolicy_PolicyResultType
	RoutingPolicy_PolicyResultType_NEXT_STATEMENT E_RoutingPolicy_PolicyResultType = 3
)

// E_Scheduler_Priority is a derived int64 type which is used to represent
// the enumerated node Scheduler_Priority. An additional value named
// Scheduler_Priority_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Scheduler_Priority int64

// IsYANGGoEnum ensures that Scheduler_Priority implements the yang.GoEnum
// interface. This ensures that Scheduler_Priority can be identified as a
// mapped type for a YANG enumeration.
func (E_Scheduler_Priority) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Scheduler_Priority.
func (E_Scheduler_Priority) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Scheduler_Priority.
func (e E_Scheduler_Priority) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Scheduler_Priority")
}

const (
	// Scheduler_Priority_UNSET corresponds to the value UNSET of Scheduler_Priority
	Scheduler_Priority_UNSET E_Scheduler_Priority = 0
	// Scheduler_Priority_STRICT corresponds to the value STRICT of Scheduler_Priority
	Scheduler_Priority_STRICT E_Scheduler_Priority = 1
)

// E_SegmentRoutingAlgorithms_Algorithm is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingAlgorithms_Algorithm. An additional value named
// SegmentRoutingAlgorithms_Algorithm_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingAlgorithms_Algorithm int64

// IsYANGGoEnum ensures that SegmentRoutingAlgorithms_Algorithm implements the yang.GoEnum
// interface. This ensures that SegmentRoutingAlgorithms_Algorithm can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingAlgorithms_Algorithm) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingAlgorithms_Algorithm.
func (E_SegmentRoutingAlgorithms_Algorithm) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingAlgorithms_Algorithm.
func (e E_SegmentRoutingAlgorithms_Algorithm) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingAlgorithms_Algorithm")
}

const (
	// SegmentRoutingAlgorithms_Algorithm_UNSET corresponds to the value UNSET of SegmentRoutingAlgorithms_Algorithm
	SegmentRoutingAlgorithms_Algorithm_UNSET E_SegmentRoutingAlgorithms_Algorithm = 0
	// SegmentRoutingAlgorithms_Algorithm_SPF corresponds to the value SPF of SegmentRoutingAlgorithms_Algorithm
	SegmentRoutingAlgorithms_Algorithm_SPF E_SegmentRoutingAlgorithms_Algorithm = 1
	// SegmentRoutingAlgorithms_Algorithm_STRICT_SPF corresponds to the value STRICT_SPF of SegmentRoutingAlgorithms_Algorithm
	SegmentRoutingAlgorithms_Algorithm_STRICT_SPF E_SegmentRoutingAlgorithms_Algorithm = 2
)

// E_SegmentRoutingCapability_Flags is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingCapability_Flags. An additional value named
// SegmentRoutingCapability_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingCapability_Flags int64

// IsYANGGoEnum ensures that SegmentRoutingCapability_Flags implements the yang.GoEnum
// interface. This ensures that SegmentRoutingCapability_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingCapability_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingCapability_Flags.
func (E_SegmentRoutingCapability_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingCapability_Flags.
func (e E_SegmentRoutingCapability_Flags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingCapability_Flags")
}

const (
	// SegmentRoutingCapability_Flags_UNSET corresponds to the value UNSET of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_UNSET E_SegmentRoutingCapability_Flags = 0
	// SegmentRoutingCapability_Flags_IPV4_MPLS corresponds to the value IPV4_MPLS of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_IPV4_MPLS E_SegmentRoutingCapability_Flags = 1
	// SegmentRoutingCapability_Flags_IPV6_MPLS corresponds to the value IPV6_MPLS of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_IPV6_MPLS E_SegmentRoutingCapability_Flags = 2
	// SegmentRoutingCapability_Flags_IPV6_SR corresponds to the value IPV6_SR of SegmentRoutingCapability_Flags
	SegmentRoutingCapability_Flags_IPV6_SR E_SegmentRoutingCapability_Flags = 3
)

// E_SegmentRoutingSidLabelRange_Tlv_Type is a derived int64 type which is used to represent
// the enumerated node SegmentRoutingSidLabelRange_Tlv_Type. An additional value named
// SegmentRoutingSidLabelRange_Tlv_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRoutingSidLabelRange_Tlv_Type int64

// IsYANGGoEnum ensures that SegmentRoutingSidLabelRange_Tlv_Type implements the yang.GoEnum
// interface. This ensures that SegmentRoutingSidLabelRange_Tlv_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRoutingSidLabelRange_Tlv_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRoutingSidLabelRange_Tlv_Type.
func (E_SegmentRoutingSidLabelRange_Tlv_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRoutingSidLabelRange_Tlv_Type.
func (e E_SegmentRoutingSidLabelRange_Tlv_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRoutingSidLabelRange_Tlv_Type")
}

const (
	// SegmentRoutingSidLabelRange_Tlv_Type_UNSET corresponds to the value UNSET of SegmentRoutingSidLabelRange_Tlv_Type
	SegmentRoutingSidLabelRange_Tlv_Type_UNSET E_SegmentRoutingSidLabelRange_Tlv_Type = 0
	// SegmentRoutingSidLabelRange_Tlv_Type_UNKNOWN corresponds to the value UNKNOWN of SegmentRoutingSidLabelRange_Tlv_Type
	SegmentRoutingSidLabelRange_Tlv_Type_UNKNOWN E_SegmentRoutingSidLabelRange_Tlv_Type = 1
)

// E_SegmentRouting_LevelType is a derived int64 type which is used to represent
// the enumerated node SegmentRouting_LevelType. An additional value named
// SegmentRouting_LevelType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRouting_LevelType int64

// IsYANGGoEnum ensures that SegmentRouting_LevelType implements the yang.GoEnum
// interface. This ensures that SegmentRouting_LevelType can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRouting_LevelType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRouting_LevelType.
func (E_SegmentRouting_LevelType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SegmentRouting_LevelType.
func (e E_SegmentRouting_LevelType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRouting_LevelType")
}

const (
	// SegmentRouting_LevelType_UNSET corresponds to the value UNSET of SegmentRouting_LevelType
	SegmentRouting_LevelType_UNSET E_SegmentRouting_LevelType = 0
	// SegmentRouting_LevelType_LEVEL_1 corresponds to the value LEVEL_1 of SegmentRouting_LevelType
	SegmentRouting_LevelType_LEVEL_1 E_SegmentRouting_LevelType = 1
	// SegmentRouting_LevelType_LEVEL_2 corresponds to the value LEVEL_2 of SegmentRouting_LevelType
	SegmentRouting_LevelType_LEVEL_2 E_SegmentRouting_LevelType = 2
	// SegmentRouting_LevelType_LEVEL_1_2 corresponds to the value LEVEL_1_2 of SegmentRouting_LevelType
	SegmentRouting_LevelType_LEVEL_1_2 E_SegmentRouting_LevelType = 3
)

// E_SegmentRouting_SrDataplaneType is a derived int64 type which is used to represent
// the enumerated node SegmentRouting_SrDataplaneType. An additional value named
// SegmentRouting_SrDataplaneType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SegmentRouting_SrDataplaneType int64

// IsYANGGoEnum ensures that SegmentRouting_SrDataplaneType implements the yang.GoEnum
// interface. This ensures that SegmentRouting_SrDataplaneType can be identified as a
// mapped type for a YANG enumeration.
func (E_SegmentRouting_SrDataplaneType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SegmentRouting_SrDataplaneType.
func (E_SegmentRouting_SrDataplaneType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SegmentRouting_SrDataplaneType.
func (e E_SegmentRouting_SrDataplaneType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SegmentRouting_SrDataplaneType")
}

const (
	// SegmentRouting_SrDataplaneType_UNSET corresponds to the value UNSET of SegmentRouting_SrDataplaneType
	SegmentRouting_SrDataplaneType_UNSET E_SegmentRouting_SrDataplaneType = 0
	// SegmentRouting_SrDataplaneType_MPLS corresponds to the value MPLS of SegmentRouting_SrDataplaneType
	SegmentRouting_SrDataplaneType_MPLS E_SegmentRouting_SrDataplaneType = 1
	// SegmentRouting_SrDataplaneType_IPV6 corresponds to the value IPV6 of SegmentRouting_SrDataplaneType
	SegmentRouting_SrDataplaneType_IPV6 E_SegmentRouting_SrDataplaneType = 2
)

// E_Segment_Sid is a derived int64 type which is used to represent
// the enumerated node Segment_Sid. An additional value named
// Segment_Sid_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Segment_Sid int64

// IsYANGGoEnum ensures that Segment_Sid implements the yang.GoEnum
// interface. This ensures that Segment_Sid can be identified as a
// mapped type for a YANG enumeration.
func (E_Segment_Sid) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Segment_Sid.
func (E_Segment_Sid) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Segment_Sid.
func (e E_Segment_Sid) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Segment_Sid")
}

const (
	// Segment_Sid_UNSET corresponds to the value UNSET of Segment_Sid
	Segment_Sid_UNSET E_Segment_Sid = 0
	// Segment_Sid_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Segment_Sid
	Segment_Sid_IPV4_EXPLICIT_NULL E_Segment_Sid = 1
	// Segment_Sid_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Segment_Sid
	Segment_Sid_ROUTER_ALERT E_Segment_Sid = 2
	// Segment_Sid_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Segment_Sid
	Segment_Sid_IPV6_EXPLICIT_NULL E_Segment_Sid = 3
	// Segment_Sid_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Segment_Sid
	Segment_Sid_IMPLICIT_NULL E_Segment_Sid = 4
	// Segment_Sid_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Segment_Sid
	Segment_Sid_ENTROPY_LABEL_INDICATOR E_Segment_Sid = 8
	// Segment_Sid_NO_LABEL corresponds to the value NO_LABEL of Segment_Sid
	Segment_Sid_NO_LABEL E_Segment_Sid = 9
)

// E_Segment_Type is a derived int64 type which is used to represent
// the enumerated node Segment_Type. An additional value named
// Segment_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Segment_Type int64

// IsYANGGoEnum ensures that Segment_Type implements the yang.GoEnum
// interface. This ensures that Segment_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_Segment_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Segment_Type.
func (E_Segment_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Segment_Type.
func (e E_Segment_Type) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Segment_Type")
}

const (
	// Segment_Type_UNSET corresponds to the value UNSET of Segment_Type
	Segment_Type_UNSET E_Segment_Type = 0
	// Segment_Type_MPLS_SID corresponds to the value MPLS_SID of Segment_Type
	Segment_Type_MPLS_SID E_Segment_Type = 2
	// Segment_Type_IPV6_SID corresponds to the value IPV6_SID of Segment_Type
	Segment_Type_IPV6_SID E_Segment_Type = 3
	// Segment_Type_IPV4_NODE_ADDRESS corresponds to the value IPV4_NODE_ADDRESS of Segment_Type
	Segment_Type_IPV4_NODE_ADDRESS E_Segment_Type = 4
	// Segment_Type_IPV6_NODE_ADDRESS corresponds to the value IPV6_NODE_ADDRESS of Segment_Type
	Segment_Type_IPV6_NODE_ADDRESS E_Segment_Type = 5
	// Segment_Type_IPV4_LOCAL_INTF_ID corresponds to the value IPV4_LOCAL_INTF_ID of Segment_Type
	Segment_Type_IPV4_LOCAL_INTF_ID E_Segment_Type = 6
	// Segment_Type_IPV4_LOCAL_REMOTE_ADDR corresponds to the value IPV4_LOCAL_REMOTE_ADDR of Segment_Type
	Segment_Type_IPV4_LOCAL_REMOTE_ADDR E_Segment_Type = 7
	// Segment_Type_IPV6_LOCAL_INTF_ID corresponds to the value IPV6_LOCAL_INTF_ID of Segment_Type
	Segment_Type_IPV6_LOCAL_INTF_ID E_Segment_Type = 8
	// Segment_Type_IPV6_LOCAL_REMOTE_ADDR corresponds to the value IPV6_LOCAL_REMOTE_ADDR of Segment_Type
	Segment_Type_IPV6_LOCAL_REMOTE_ADDR E_Segment_Type = 9
)

// E_Server_AssociationType is a derived int64 type which is used to represent
// the enumerated node Server_AssociationType. An additional value named
// Server_AssociationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Server_AssociationType int64

// IsYANGGoEnum ensures that Server_AssociationType implements the yang.GoEnum
// interface. This ensures that Server_AssociationType can be identified as a
// mapped type for a YANG enumeration.
func (E_Server_AssociationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Server_AssociationType.
func (E_Server_AssociationType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Server_AssociationType.
func (e E_Server_AssociationType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Server_AssociationType")
}

const (
	// Server_AssociationType_UNSET corresponds to the value UNSET of Server_AssociationType
	Server_AssociationType_UNSET E_Server_AssociationType = 0
	// Server_AssociationType_SERVER corresponds to the value SERVER of Server_AssociationType
	Server_AssociationType_SERVER E_Server_AssociationType = 1
	// Server_AssociationType_PEER corresponds to the value PEER of Server_AssociationType
	Server_AssociationType_PEER E_Server_AssociationType = 2
	// Server_AssociationType_POOL corresponds to the value POOL of Server_AssociationType
	Server_AssociationType_POOL E_Server_AssociationType = 3
)

// E_Session_LabelIn is a derived int64 type which is used to represent
// the enumerated node Session_LabelIn. An additional value named
// Session_LabelIn_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Session_LabelIn int64

// IsYANGGoEnum ensures that Session_LabelIn implements the yang.GoEnum
// interface. This ensures that Session_LabelIn can be identified as a
// mapped type for a YANG enumeration.
func (E_Session_LabelIn) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Session_LabelIn.
func (E_Session_LabelIn) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Session_LabelIn.
func (e E_Session_LabelIn) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Session_LabelIn")
}

const (
	// Session_LabelIn_UNSET corresponds to the value UNSET of Session_LabelIn
	Session_LabelIn_UNSET E_Session_LabelIn = 0
	// Session_LabelIn_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Session_LabelIn
	Session_LabelIn_IPV4_EXPLICIT_NULL E_Session_LabelIn = 1
	// Session_LabelIn_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Session_LabelIn
	Session_LabelIn_ROUTER_ALERT E_Session_LabelIn = 2
	// Session_LabelIn_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Session_LabelIn
	Session_LabelIn_IPV6_EXPLICIT_NULL E_Session_LabelIn = 3
	// Session_LabelIn_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Session_LabelIn
	Session_LabelIn_IMPLICIT_NULL E_Session_LabelIn = 4
	// Session_LabelIn_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Session_LabelIn
	Session_LabelIn_ENTROPY_LABEL_INDICATOR E_Session_LabelIn = 8
	// Session_LabelIn_NO_LABEL corresponds to the value NO_LABEL of Session_LabelIn
	Session_LabelIn_NO_LABEL E_Session_LabelIn = 9
)

// E_Session_LabelOut is a derived int64 type which is used to represent
// the enumerated node Session_LabelOut. An additional value named
// Session_LabelOut_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Session_LabelOut int64

// IsYANGGoEnum ensures that Session_LabelOut implements the yang.GoEnum
// interface. This ensures that Session_LabelOut can be identified as a
// mapped type for a YANG enumeration.
func (E_Session_LabelOut) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Session_LabelOut.
func (E_Session_LabelOut) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Session_LabelOut.
func (e E_Session_LabelOut) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Session_LabelOut")
}

const (
	// Session_LabelOut_UNSET corresponds to the value UNSET of Session_LabelOut
	Session_LabelOut_UNSET E_Session_LabelOut = 0
	// Session_LabelOut_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Session_LabelOut
	Session_LabelOut_IPV4_EXPLICIT_NULL E_Session_LabelOut = 1
	// Session_LabelOut_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Session_LabelOut
	Session_LabelOut_ROUTER_ALERT E_Session_LabelOut = 2
	// Session_LabelOut_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Session_LabelOut
	Session_LabelOut_IPV6_EXPLICIT_NULL E_Session_LabelOut = 3
	// Session_LabelOut_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Session_LabelOut
	Session_LabelOut_IMPLICIT_NULL E_Session_LabelOut = 4
	// Session_LabelOut_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Session_LabelOut
	Session_LabelOut_ENTROPY_LABEL_INDICATOR E_Session_LabelOut = 8
	// Session_LabelOut_NO_LABEL corresponds to the value NO_LABEL of Session_LabelOut
	Session_LabelOut_NO_LABEL E_Session_LabelOut = 9
)

// E_Session_Status is a derived int64 type which is used to represent
// the enumerated node Session_Status. An additional value named
// Session_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Session_Status int64

// IsYANGGoEnum ensures that Session_Status implements the yang.GoEnum
// interface. This ensures that Session_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_Session_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Session_Status.
func (E_Session_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Session_Status.
func (e E_Session_Status) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Session_Status")
}

const (
	// Session_Status_UNSET corresponds to the value UNSET of Session_Status
	Session_Status_UNSET E_Session_Status = 0
	// Session_Status_UP corresponds to the value UP of Session_Status
	Session_Status_UP E_Session_Status = 1
	// Session_Status_DOWN corresponds to the value DOWN of Session_Status
	Session_Status_DOWN E_Session_Status = 2
)

// E_SetCommunity_Method is a derived int64 type which is used to represent
// the enumerated node SetCommunity_Method. An additional value named
// SetCommunity_Method_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SetCommunity_Method int64

// IsYANGGoEnum ensures that SetCommunity_Method implements the yang.GoEnum
// interface. This ensures that SetCommunity_Method can be identified as a
// mapped type for a YANG enumeration.
func (E_SetCommunity_Method) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SetCommunity_Method.
func (E_SetCommunity_Method) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SetCommunity_Method.
func (e E_SetCommunity_Method) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SetCommunity_Method")
}

const (
	// SetCommunity_Method_UNSET corresponds to the value UNSET of SetCommunity_Method
	SetCommunity_Method_UNSET E_SetCommunity_Method = 0
	// SetCommunity_Method_INLINE corresponds to the value INLINE of SetCommunity_Method
	SetCommunity_Method_INLINE E_SetCommunity_Method = 1
	// SetCommunity_Method_REFERENCE corresponds to the value REFERENCE of SetCommunity_Method
	SetCommunity_Method_REFERENCE E_SetCommunity_Method = 2
)

// E_SetMetric_MetricType is a derived int64 type which is used to represent
// the enumerated node SetMetric_MetricType. An additional value named
// SetMetric_MetricType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SetMetric_MetricType int64

// IsYANGGoEnum ensures that SetMetric_MetricType implements the yang.GoEnum
// interface. This ensures that SetMetric_MetricType can be identified as a
// mapped type for a YANG enumeration.
func (E_SetMetric_MetricType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SetMetric_MetricType.
func (E_SetMetric_MetricType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SetMetric_MetricType.
func (e E_SetMetric_MetricType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SetMetric_MetricType")
}

const (
	// SetMetric_MetricType_UNSET corresponds to the value UNSET of SetMetric_MetricType
	SetMetric_MetricType_UNSET E_SetMetric_MetricType = 0
	// SetMetric_MetricType_EXTERNAL_TYPE_1 corresponds to the value EXTERNAL_TYPE_1 of SetMetric_MetricType
	SetMetric_MetricType_EXTERNAL_TYPE_1 E_SetMetric_MetricType = 1
	// SetMetric_MetricType_EXTERNAL_TYPE_2 corresponds to the value EXTERNAL_TYPE_2 of SetMetric_MetricType
	SetMetric_MetricType_EXTERNAL_TYPE_2 E_SetMetric_MetricType = 2
)

// E_SetTag_Mode is a derived int64 type which is used to represent
// the enumerated node SetTag_Mode. An additional value named
// SetTag_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SetTag_Mode int64

// IsYANGGoEnum ensures that SetTag_Mode implements the yang.GoEnum
// interface. This ensures that SetTag_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_SetTag_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SetTag_Mode.
func (E_SetTag_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SetTag_Mode.
func (e E_SetTag_Mode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SetTag_Mode")
}

const (
	// SetTag_Mode_UNSET corresponds to the value UNSET of SetTag_Mode
	SetTag_Mode_UNSET E_SetTag_Mode = 0
	// SetTag_Mode_INLINE corresponds to the value INLINE of SetTag_Mode
	SetTag_Mode_INLINE E_SetTag_Mode = 1
	// SetTag_Mode_REFERENCE corresponds to the value REFERENCE of SetTag_Mode
	SetTag_Mode_REFERENCE E_SetTag_Mode = 2
)

// E_SidCounter_MplsLabel is a derived int64 type which is used to represent
// the enumerated node SidCounter_MplsLabel. An additional value named
// SidCounter_MplsLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SidCounter_MplsLabel int64

// IsYANGGoEnum ensures that SidCounter_MplsLabel implements the yang.GoEnum
// interface. This ensures that SidCounter_MplsLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_SidCounter_MplsLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SidCounter_MplsLabel.
func (E_SidCounter_MplsLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SidCounter_MplsLabel.
func (e E_SidCounter_MplsLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SidCounter_MplsLabel")
}

const (
	// SidCounter_MplsLabel_UNSET corresponds to the value UNSET of SidCounter_MplsLabel
	SidCounter_MplsLabel_UNSET E_SidCounter_MplsLabel = 0
	// SidCounter_MplsLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of SidCounter_MplsLabel
	SidCounter_MplsLabel_IPV4_EXPLICIT_NULL E_SidCounter_MplsLabel = 1
	// SidCounter_MplsLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of SidCounter_MplsLabel
	SidCounter_MplsLabel_ROUTER_ALERT E_SidCounter_MplsLabel = 2
	// SidCounter_MplsLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of SidCounter_MplsLabel
	SidCounter_MplsLabel_IPV6_EXPLICIT_NULL E_SidCounter_MplsLabel = 3
	// SidCounter_MplsLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of SidCounter_MplsLabel
	SidCounter_MplsLabel_IMPLICIT_NULL E_SidCounter_MplsLabel = 4
	// SidCounter_MplsLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of SidCounter_MplsLabel
	SidCounter_MplsLabel_ENTROPY_LABEL_INDICATOR E_SidCounter_MplsLabel = 8
	// SidCounter_MplsLabel_NO_LABEL corresponds to the value NO_LABEL of SidCounter_MplsLabel
	SidCounter_MplsLabel_NO_LABEL E_SidCounter_MplsLabel = 9
)

// E_Sid_Value is a derived int64 type which is used to represent
// the enumerated node Sid_Value. An additional value named
// Sid_Value_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Sid_Value int64

// IsYANGGoEnum ensures that Sid_Value implements the yang.GoEnum
// interface. This ensures that Sid_Value can be identified as a
// mapped type for a YANG enumeration.
func (E_Sid_Value) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Sid_Value.
func (E_Sid_Value) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Sid_Value.
func (e E_Sid_Value) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Sid_Value")
}

const (
	// Sid_Value_UNSET corresponds to the value UNSET of Sid_Value
	Sid_Value_UNSET E_Sid_Value = 0
	// Sid_Value_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Sid_Value
	Sid_Value_IPV4_EXPLICIT_NULL E_Sid_Value = 1
	// Sid_Value_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Sid_Value
	Sid_Value_ROUTER_ALERT E_Sid_Value = 2
	// Sid_Value_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Sid_Value
	Sid_Value_IPV6_EXPLICIT_NULL E_Sid_Value = 3
	// Sid_Value_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Sid_Value
	Sid_Value_IMPLICIT_NULL E_Sid_Value = 4
	// Sid_Value_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Sid_Value
	Sid_Value_ENTROPY_LABEL_INDICATOR E_Sid_Value = 8
	// Sid_Value_NO_LABEL corresponds to the value NO_LABEL of Sid_Value
	Sid_Value_NO_LABEL E_Sid_Value = 9
)

// E_SrgbDescriptor_Label is a derived int64 type which is used to represent
// the enumerated node SrgbDescriptor_Label. An additional value named
// SrgbDescriptor_Label_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SrgbDescriptor_Label int64

// IsYANGGoEnum ensures that SrgbDescriptor_Label implements the yang.GoEnum
// interface. This ensures that SrgbDescriptor_Label can be identified as a
// mapped type for a YANG enumeration.
func (E_SrgbDescriptor_Label) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SrgbDescriptor_Label.
func (E_SrgbDescriptor_Label) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SrgbDescriptor_Label.
func (e E_SrgbDescriptor_Label) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SrgbDescriptor_Label")
}

const (
	// SrgbDescriptor_Label_UNSET corresponds to the value UNSET of SrgbDescriptor_Label
	SrgbDescriptor_Label_UNSET E_SrgbDescriptor_Label = 0
	// SrgbDescriptor_Label_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of SrgbDescriptor_Label
	SrgbDescriptor_Label_IPV4_EXPLICIT_NULL E_SrgbDescriptor_Label = 1
	// SrgbDescriptor_Label_ROUTER_ALERT corresponds to the value ROUTER_ALERT of SrgbDescriptor_Label
	SrgbDescriptor_Label_ROUTER_ALERT E_SrgbDescriptor_Label = 2
	// SrgbDescriptor_Label_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of SrgbDescriptor_Label
	SrgbDescriptor_Label_IPV6_EXPLICIT_NULL E_SrgbDescriptor_Label = 3
	// SrgbDescriptor_Label_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of SrgbDescriptor_Label
	SrgbDescriptor_Label_IMPLICIT_NULL E_SrgbDescriptor_Label = 4
	// SrgbDescriptor_Label_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of SrgbDescriptor_Label
	SrgbDescriptor_Label_ENTROPY_LABEL_INDICATOR E_SrgbDescriptor_Label = 8
	// SrgbDescriptor_Label_NO_LABEL corresponds to the value NO_LABEL of SrgbDescriptor_Label
	SrgbDescriptor_Label_NO_LABEL E_SrgbDescriptor_Label = 9
)

// E_SrtePolicy_EnlpType is a derived int64 type which is used to represent
// the enumerated node SrtePolicy_EnlpType. An additional value named
// SrtePolicy_EnlpType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SrtePolicy_EnlpType int64

// IsYANGGoEnum ensures that SrtePolicy_EnlpType implements the yang.GoEnum
// interface. This ensures that SrtePolicy_EnlpType can be identified as a
// mapped type for a YANG enumeration.
func (E_SrtePolicy_EnlpType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SrtePolicy_EnlpType.
func (E_SrtePolicy_EnlpType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SrtePolicy_EnlpType.
func (e E_SrtePolicy_EnlpType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SrtePolicy_EnlpType")
}

const (
	// SrtePolicy_EnlpType_UNSET corresponds to the value UNSET of SrtePolicy_EnlpType
	SrtePolicy_EnlpType_UNSET E_SrtePolicy_EnlpType = 0
	// SrtePolicy_EnlpType_PUSH_IPV4_EXPLICIT_NULL corresponds to the value PUSH_IPV4_EXPLICIT_NULL of SrtePolicy_EnlpType
	SrtePolicy_EnlpType_PUSH_IPV4_EXPLICIT_NULL E_SrtePolicy_EnlpType = 1
	// SrtePolicy_EnlpType_PUSH_IPV6_EXPLICIT_NULL corresponds to the value PUSH_IPV6_EXPLICIT_NULL of SrtePolicy_EnlpType
	SrtePolicy_EnlpType_PUSH_IPV6_EXPLICIT_NULL E_SrtePolicy_EnlpType = 2
	// SrtePolicy_EnlpType_PUSH_IPV46_EXPLICIT_NULL corresponds to the value PUSH_IPV46_EXPLICIT_NULL of SrtePolicy_EnlpType
	SrtePolicy_EnlpType_PUSH_IPV46_EXPLICIT_NULL E_SrtePolicy_EnlpType = 3
	// SrtePolicy_EnlpType_NO_EXPLICIT_NULL corresponds to the value NO_EXPLICIT_NULL of SrtePolicy_EnlpType
	SrtePolicy_EnlpType_NO_EXPLICIT_NULL E_SrtePolicy_EnlpType = 4
)

// E_SrtePolicy_SrteInvalidSlReason is a derived int64 type which is used to represent
// the enumerated node SrtePolicy_SrteInvalidSlReason. An additional value named
// SrtePolicy_SrteInvalidSlReason_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SrtePolicy_SrteInvalidSlReason int64

// IsYANGGoEnum ensures that SrtePolicy_SrteInvalidSlReason implements the yang.GoEnum
// interface. This ensures that SrtePolicy_SrteInvalidSlReason can be identified as a
// mapped type for a YANG enumeration.
func (E_SrtePolicy_SrteInvalidSlReason) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SrtePolicy_SrteInvalidSlReason.
func (E_SrtePolicy_SrteInvalidSlReason) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SrtePolicy_SrteInvalidSlReason.
func (e E_SrtePolicy_SrteInvalidSlReason) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SrtePolicy_SrteInvalidSlReason")
}

const (
	// SrtePolicy_SrteInvalidSlReason_UNSET corresponds to the value UNSET of SrtePolicy_SrteInvalidSlReason
	SrtePolicy_SrteInvalidSlReason_UNSET E_SrtePolicy_SrteInvalidSlReason = 0
	// SrtePolicy_SrteInvalidSlReason_EMPTY_SL corresponds to the value EMPTY_SL of SrtePolicy_SrteInvalidSlReason
	SrtePolicy_SrteInvalidSlReason_EMPTY_SL E_SrtePolicy_SrteInvalidSlReason = 1
	// SrtePolicy_SrteInvalidSlReason_ZERO_WEIGHT corresponds to the value ZERO_WEIGHT of SrtePolicy_SrteInvalidSlReason
	SrtePolicy_SrteInvalidSlReason_ZERO_WEIGHT E_SrtePolicy_SrteInvalidSlReason = 2
	// SrtePolicy_SrteInvalidSlReason_FIRST_SID_UNRESOLVABLE corresponds to the value FIRST_SID_UNRESOLVABLE of SrtePolicy_SrteInvalidSlReason
	SrtePolicy_SrteInvalidSlReason_FIRST_SID_UNRESOLVABLE E_SrtePolicy_SrteInvalidSlReason = 3
	// SrtePolicy_SrteInvalidSlReason_OTHER_SID_UNRESOLVABLE corresponds to the value OTHER_SID_UNRESOLVABLE of SrtePolicy_SrteInvalidSlReason
	SrtePolicy_SrteInvalidSlReason_OTHER_SID_UNRESOLVABLE E_SrtePolicy_SrteInvalidSlReason = 4
	// SrtePolicy_SrteInvalidSlReason_VERIFICATION_FAIL corresponds to the value VERIFICATION_FAIL of SrtePolicy_SrteInvalidSlReason
	SrtePolicy_SrteInvalidSlReason_VERIFICATION_FAIL E_SrtePolicy_SrteInvalidSlReason = 5
)

// E_SrtePolicy_SrteProtocolType is a derived int64 type which is used to represent
// the enumerated node SrtePolicy_SrteProtocolType. An additional value named
// SrtePolicy_SrteProtocolType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SrtePolicy_SrteProtocolType int64

// IsYANGGoEnum ensures that SrtePolicy_SrteProtocolType implements the yang.GoEnum
// interface. This ensures that SrtePolicy_SrteProtocolType can be identified as a
// mapped type for a YANG enumeration.
func (E_SrtePolicy_SrteProtocolType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SrtePolicy_SrteProtocolType.
func (E_SrtePolicy_SrteProtocolType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SrtePolicy_SrteProtocolType.
func (e E_SrtePolicy_SrteProtocolType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SrtePolicy_SrteProtocolType")
}

const (
	// SrtePolicy_SrteProtocolType_UNSET corresponds to the value UNSET of SrtePolicy_SrteProtocolType
	SrtePolicy_SrteProtocolType_UNSET E_SrtePolicy_SrteProtocolType = 0
	// SrtePolicy_SrteProtocolType_PCEP corresponds to the value PCEP of SrtePolicy_SrteProtocolType
	SrtePolicy_SrteProtocolType_PCEP E_SrtePolicy_SrteProtocolType = 11
	// SrtePolicy_SrteProtocolType_BGP corresponds to the value BGP of SrtePolicy_SrteProtocolType
	SrtePolicy_SrteProtocolType_BGP E_SrtePolicy_SrteProtocolType = 21
	// SrtePolicy_SrteProtocolType_CONFIG corresponds to the value CONFIG of SrtePolicy_SrteProtocolType
	SrtePolicy_SrteProtocolType_CONFIG E_SrtePolicy_SrteProtocolType = 31
)

// E_SshServer_ProtocolVersion is a derived int64 type which is used to represent
// the enumerated node SshServer_ProtocolVersion. An additional value named
// SshServer_ProtocolVersion_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SshServer_ProtocolVersion int64

// IsYANGGoEnum ensures that SshServer_ProtocolVersion implements the yang.GoEnum
// interface. This ensures that SshServer_ProtocolVersion can be identified as a
// mapped type for a YANG enumeration.
func (E_SshServer_ProtocolVersion) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SshServer_ProtocolVersion.
func (E_SshServer_ProtocolVersion) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SshServer_ProtocolVersion.
func (e E_SshServer_ProtocolVersion) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SshServer_ProtocolVersion")
}

const (
	// SshServer_ProtocolVersion_UNSET corresponds to the value UNSET of SshServer_ProtocolVersion
	SshServer_ProtocolVersion_UNSET E_SshServer_ProtocolVersion = 0
	// SshServer_ProtocolVersion_V2 corresponds to the value V2 of SshServer_ProtocolVersion
	SshServer_ProtocolVersion_V2 E_SshServer_ProtocolVersion = 1
	// SshServer_ProtocolVersion_V1 corresponds to the value V1 of SshServer_ProtocolVersion
	SshServer_ProtocolVersion_V1 E_SshServer_ProtocolVersion = 2
	// SshServer_ProtocolVersion_V1_V2 corresponds to the value V1_V2 of SshServer_ProtocolVersion
	SshServer_ProtocolVersion_V1_V2 E_SshServer_ProtocolVersion = 3
)

// E_SubTlv_LinkType is a derived int64 type which is used to represent
// the enumerated node SubTlv_LinkType. An additional value named
// SubTlv_LinkType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SubTlv_LinkType int64

// IsYANGGoEnum ensures that SubTlv_LinkType implements the yang.GoEnum
// interface. This ensures that SubTlv_LinkType can be identified as a
// mapped type for a YANG enumeration.
func (E_SubTlv_LinkType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SubTlv_LinkType.
func (E_SubTlv_LinkType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SubTlv_LinkType.
func (e E_SubTlv_LinkType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SubTlv_LinkType")
}

const (
	// SubTlv_LinkType_UNSET corresponds to the value UNSET of SubTlv_LinkType
	SubTlv_LinkType_UNSET E_SubTlv_LinkType = 0
	// SubTlv_LinkType_POINT_TO_POINT corresponds to the value POINT_TO_POINT of SubTlv_LinkType
	SubTlv_LinkType_POINT_TO_POINT E_SubTlv_LinkType = 1
	// SubTlv_LinkType_MULTI_ACCESS corresponds to the value MULTI_ACCESS of SubTlv_LinkType
	SubTlv_LinkType_MULTI_ACCESS E_SubTlv_LinkType = 2
	// SubTlv_LinkType_UNKNOWN corresponds to the value UNKNOWN of SubTlv_LinkType
	SubTlv_LinkType_UNKNOWN E_SubTlv_LinkType = 3
)

// E_Subtlv_BindingSid is a derived int64 type which is used to represent
// the enumerated node Subtlv_BindingSid. An additional value named
// Subtlv_BindingSid_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Subtlv_BindingSid int64

// IsYANGGoEnum ensures that Subtlv_BindingSid implements the yang.GoEnum
// interface. This ensures that Subtlv_BindingSid can be identified as a
// mapped type for a YANG enumeration.
func (E_Subtlv_BindingSid) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Subtlv_BindingSid.
func (E_Subtlv_BindingSid) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Subtlv_BindingSid.
func (e E_Subtlv_BindingSid) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Subtlv_BindingSid")
}

const (
	// Subtlv_BindingSid_UNSET corresponds to the value UNSET of Subtlv_BindingSid
	Subtlv_BindingSid_UNSET E_Subtlv_BindingSid = 0
	// Subtlv_BindingSid_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Subtlv_BindingSid
	Subtlv_BindingSid_IPV4_EXPLICIT_NULL E_Subtlv_BindingSid = 1
	// Subtlv_BindingSid_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Subtlv_BindingSid
	Subtlv_BindingSid_ROUTER_ALERT E_Subtlv_BindingSid = 2
	// Subtlv_BindingSid_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Subtlv_BindingSid
	Subtlv_BindingSid_IPV6_EXPLICIT_NULL E_Subtlv_BindingSid = 3
	// Subtlv_BindingSid_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Subtlv_BindingSid
	Subtlv_BindingSid_IMPLICIT_NULL E_Subtlv_BindingSid = 4
	// Subtlv_BindingSid_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Subtlv_BindingSid
	Subtlv_BindingSid_ENTROPY_LABEL_INDICATOR E_Subtlv_BindingSid = 8
	// Subtlv_BindingSid_NO_LABEL corresponds to the value NO_LABEL of Subtlv_BindingSid
	Subtlv_BindingSid_NO_LABEL E_Subtlv_BindingSid = 9
)

// E_SystemGrpc_GRPC_SERVICE is a derived int64 type which is used to represent
// the enumerated node SystemGrpc_GRPC_SERVICE. An additional value named
// SystemGrpc_GRPC_SERVICE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SystemGrpc_GRPC_SERVICE int64

// IsYANGGoEnum ensures that SystemGrpc_GRPC_SERVICE implements the yang.GoEnum
// interface. This ensures that SystemGrpc_GRPC_SERVICE can be identified as a
// mapped type for a YANG enumeration.
func (E_SystemGrpc_GRPC_SERVICE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SystemGrpc_GRPC_SERVICE.
func (E_SystemGrpc_GRPC_SERVICE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SystemGrpc_GRPC_SERVICE.
func (e E_SystemGrpc_GRPC_SERVICE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SystemGrpc_GRPC_SERVICE")
}

const (
	// SystemGrpc_GRPC_SERVICE_UNSET corresponds to the value UNSET of SystemGrpc_GRPC_SERVICE
	SystemGrpc_GRPC_SERVICE_UNSET E_SystemGrpc_GRPC_SERVICE = 0
	// SystemGrpc_GRPC_SERVICE_GNMI corresponds to the value GNMI of SystemGrpc_GRPC_SERVICE
	SystemGrpc_GRPC_SERVICE_GNMI E_SystemGrpc_GRPC_SERVICE = 1
	// SystemGrpc_GRPC_SERVICE_GNSI corresponds to the value GNSI of SystemGrpc_GRPC_SERVICE
	SystemGrpc_GRPC_SERVICE_GNSI E_SystemGrpc_GRPC_SERVICE = 2
	// SystemGrpc_GRPC_SERVICE_GRIBI corresponds to the value GRIBI of SystemGrpc_GRPC_SERVICE
	SystemGrpc_GRPC_SERVICE_GRIBI E_SystemGrpc_GRPC_SERVICE = 3
	// SystemGrpc_GRPC_SERVICE_P4RT corresponds to the value P4RT of SystemGrpc_GRPC_SERVICE
	SystemGrpc_GRPC_SERVICE_P4RT E_SystemGrpc_GRPC_SERVICE = 4
)

// E_SystemLogging_SYSLOG_FACILITY is a derived int64 type which is used to represent
// the enumerated node SystemLogging_SYSLOG_FACILITY. An additional value named
// SystemLogging_SYSLOG_FACILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SystemLogging_SYSLOG_FACILITY int64

// IsYANGGoEnum ensures that SystemLogging_SYSLOG_FACILITY implements the yang.GoEnum
// interface. This ensures that SystemLogging_SYSLOG_FACILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_SystemLogging_SYSLOG_FACILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SystemLogging_SYSLOG_FACILITY.
func (E_SystemLogging_SYSLOG_FACILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_SystemLogging_SYSLOG_FACILITY.
func (e E_SystemLogging_SYSLOG_FACILITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SystemLogging_SYSLOG_FACILITY")
}

const (
	// SystemLogging_SYSLOG_FACILITY_UNSET corresponds to the value UNSET of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_UNSET E_SystemLogging_SYSLOG_FACILITY = 0
	// SystemLogging_SYSLOG_FACILITY_ALL corresponds to the value ALL of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_ALL E_SystemLogging_SYSLOG_FACILITY = 1
	// SystemLogging_SYSLOG_FACILITY_AUDIT corresponds to the value AUDIT of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_AUDIT E_SystemLogging_SYSLOG_FACILITY = 2
	// SystemLogging_SYSLOG_FACILITY_AUTH corresponds to the value AUTH of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_AUTH E_SystemLogging_SYSLOG_FACILITY = 3
	// SystemLogging_SYSLOG_FACILITY_AUTHPRIV corresponds to the value AUTHPRIV of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_AUTHPRIV E_SystemLogging_SYSLOG_FACILITY = 4
	// SystemLogging_SYSLOG_FACILITY_CONSOLE corresponds to the value CONSOLE of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_CONSOLE E_SystemLogging_SYSLOG_FACILITY = 5
	// SystemLogging_SYSLOG_FACILITY_KERNEL corresponds to the value KERNEL of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_KERNEL E_SystemLogging_SYSLOG_FACILITY = 6
	// SystemLogging_SYSLOG_FACILITY_LOCAL0 corresponds to the value LOCAL0 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL0 E_SystemLogging_SYSLOG_FACILITY = 7
	// SystemLogging_SYSLOG_FACILITY_LOCAL1 corresponds to the value LOCAL1 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL1 E_SystemLogging_SYSLOG_FACILITY = 8
	// SystemLogging_SYSLOG_FACILITY_LOCAL2 corresponds to the value LOCAL2 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL2 E_SystemLogging_SYSLOG_FACILITY = 9
	// SystemLogging_SYSLOG_FACILITY_LOCAL3 corresponds to the value LOCAL3 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL3 E_SystemLogging_SYSLOG_FACILITY = 10
	// SystemLogging_SYSLOG_FACILITY_LOCAL4 corresponds to the value LOCAL4 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL4 E_SystemLogging_SYSLOG_FACILITY = 11
	// SystemLogging_SYSLOG_FACILITY_LOCAL5 corresponds to the value LOCAL5 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL5 E_SystemLogging_SYSLOG_FACILITY = 12
	// SystemLogging_SYSLOG_FACILITY_LOCAL6 corresponds to the value LOCAL6 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL6 E_SystemLogging_SYSLOG_FACILITY = 13
	// SystemLogging_SYSLOG_FACILITY_LOCAL7 corresponds to the value LOCAL7 of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_LOCAL7 E_SystemLogging_SYSLOG_FACILITY = 14
	// SystemLogging_SYSLOG_FACILITY_MAIL corresponds to the value MAIL of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_MAIL E_SystemLogging_SYSLOG_FACILITY = 15
	// SystemLogging_SYSLOG_FACILITY_NTP corresponds to the value NTP of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_NTP E_SystemLogging_SYSLOG_FACILITY = 16
	// SystemLogging_SYSLOG_FACILITY_SYSLOG corresponds to the value SYSLOG of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_SYSLOG E_SystemLogging_SYSLOG_FACILITY = 17
	// SystemLogging_SYSLOG_FACILITY_SYSTEM_DAEMON corresponds to the value SYSTEM_DAEMON of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_SYSTEM_DAEMON E_SystemLogging_SYSLOG_FACILITY = 18
	// SystemLogging_SYSLOG_FACILITY_USER corresponds to the value USER of SystemLogging_SYSLOG_FACILITY
	SystemLogging_SYSLOG_FACILITY_USER E_SystemLogging_SYSLOG_FACILITY = 19
)

// E_SystemLogging_SyslogSeverity is a derived int64 type which is used to represent
// the enumerated node SystemLogging_SyslogSeverity. An additional value named
// SystemLogging_SyslogSeverity_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_SystemLogging_SyslogSeverity int64

// IsYANGGoEnum ensures that SystemLogging_SyslogSeverity implements the yang.GoEnum
// interface. This ensures that SystemLogging_SyslogSeverity can be identified as a
// mapped type for a YANG enumeration.
func (E_SystemLogging_SyslogSeverity) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  SystemLogging_SyslogSeverity.
func (E_SystemLogging_SyslogSeverity) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_SystemLogging_SyslogSeverity.
func (e E_SystemLogging_SyslogSeverity) String() string {
	return ygot.EnumLogString(e, int64(e), "E_SystemLogging_SyslogSeverity")
}

const (
	// SystemLogging_SyslogSeverity_UNSET corresponds to the value UNSET of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_UNSET E_SystemLogging_SyslogSeverity = 0
	// SystemLogging_SyslogSeverity_EMERGENCY corresponds to the value EMERGENCY of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_EMERGENCY E_SystemLogging_SyslogSeverity = 1
	// SystemLogging_SyslogSeverity_ALERT corresponds to the value ALERT of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_ALERT E_SystemLogging_SyslogSeverity = 2
	// SystemLogging_SyslogSeverity_CRITICAL corresponds to the value CRITICAL of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_CRITICAL E_SystemLogging_SyslogSeverity = 3
	// SystemLogging_SyslogSeverity_ERROR corresponds to the value ERROR of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_ERROR E_SystemLogging_SyslogSeverity = 4
	// SystemLogging_SyslogSeverity_WARNING corresponds to the value WARNING of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_WARNING E_SystemLogging_SyslogSeverity = 5
	// SystemLogging_SyslogSeverity_NOTICE corresponds to the value NOTICE of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_NOTICE E_SystemLogging_SyslogSeverity = 6
	// SystemLogging_SyslogSeverity_INFORMATIONAL corresponds to the value INFORMATIONAL of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_INFORMATIONAL E_SystemLogging_SyslogSeverity = 7
	// SystemLogging_SyslogSeverity_DEBUG corresponds to the value DEBUG of SystemLogging_SyslogSeverity
	SystemLogging_SyslogSeverity_DEBUG E_SystemLogging_SyslogSeverity = 8
)

// E_System_NTP_AUTH_TYPE is a derived int64 type which is used to represent
// the enumerated node System_NTP_AUTH_TYPE. An additional value named
// System_NTP_AUTH_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_System_NTP_AUTH_TYPE int64

// IsYANGGoEnum ensures that System_NTP_AUTH_TYPE implements the yang.GoEnum
// interface. This ensures that System_NTP_AUTH_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_System_NTP_AUTH_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  System_NTP_AUTH_TYPE.
func (E_System_NTP_AUTH_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_System_NTP_AUTH_TYPE.
func (e E_System_NTP_AUTH_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_System_NTP_AUTH_TYPE")
}

const (
	// System_NTP_AUTH_TYPE_UNSET corresponds to the value UNSET of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_UNSET E_System_NTP_AUTH_TYPE = 0
	// System_NTP_AUTH_TYPE_NTP_AUTH_AES_CBC_128 corresponds to the value NTP_AUTH_AES_CBC_128 of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_NTP_AUTH_AES_CBC_128 E_System_NTP_AUTH_TYPE = 1
	// System_NTP_AUTH_TYPE_NTP_AUTH_AES_CBC_256 corresponds to the value NTP_AUTH_AES_CBC_256 of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_NTP_AUTH_AES_CBC_256 E_System_NTP_AUTH_TYPE = 2
	// System_NTP_AUTH_TYPE_NTP_AUTH_MD5 corresponds to the value NTP_AUTH_MD5 of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_NTP_AUTH_MD5 E_System_NTP_AUTH_TYPE = 3
	// System_NTP_AUTH_TYPE_NTP_AUTH_SHA1 corresponds to the value NTP_AUTH_SHA1 of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_NTP_AUTH_SHA1 E_System_NTP_AUTH_TYPE = 4
	// System_NTP_AUTH_TYPE_NTP_AUTH_SHA256 corresponds to the value NTP_AUTH_SHA256 of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_NTP_AUTH_SHA256 E_System_NTP_AUTH_TYPE = 5
	// System_NTP_AUTH_TYPE_NTP_AUTH_SHA384 corresponds to the value NTP_AUTH_SHA384 of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_NTP_AUTH_SHA384 E_System_NTP_AUTH_TYPE = 6
	// System_NTP_AUTH_TYPE_NTP_AUTH_SHA512 corresponds to the value NTP_AUTH_SHA512 of System_NTP_AUTH_TYPE
	System_NTP_AUTH_TYPE_NTP_AUTH_SHA512 E_System_NTP_AUTH_TYPE = 7
)

// E_TePolicy_Bsid is a derived int64 type which is used to represent
// the enumerated node TePolicy_Bsid. An additional value named
// TePolicy_Bsid_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TePolicy_Bsid int64

// IsYANGGoEnum ensures that TePolicy_Bsid implements the yang.GoEnum
// interface. This ensures that TePolicy_Bsid can be identified as a
// mapped type for a YANG enumeration.
func (E_TePolicy_Bsid) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TePolicy_Bsid.
func (E_TePolicy_Bsid) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_TePolicy_Bsid.
func (e E_TePolicy_Bsid) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TePolicy_Bsid")
}

const (
	// TePolicy_Bsid_UNSET corresponds to the value UNSET of TePolicy_Bsid
	TePolicy_Bsid_UNSET E_TePolicy_Bsid = 0
	// TePolicy_Bsid_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of TePolicy_Bsid
	TePolicy_Bsid_IPV4_EXPLICIT_NULL E_TePolicy_Bsid = 1
	// TePolicy_Bsid_ROUTER_ALERT corresponds to the value ROUTER_ALERT of TePolicy_Bsid
	TePolicy_Bsid_ROUTER_ALERT E_TePolicy_Bsid = 2
	// TePolicy_Bsid_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of TePolicy_Bsid
	TePolicy_Bsid_IPV6_EXPLICIT_NULL E_TePolicy_Bsid = 3
	// TePolicy_Bsid_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of TePolicy_Bsid
	TePolicy_Bsid_IMPLICIT_NULL E_TePolicy_Bsid = 4
	// TePolicy_Bsid_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of TePolicy_Bsid
	TePolicy_Bsid_ENTROPY_LABEL_INDICATOR E_TePolicy_Bsid = 8
	// TePolicy_Bsid_NO_LABEL corresponds to the value NO_LABEL of TePolicy_Bsid
	TePolicy_Bsid_NO_LABEL E_TePolicy_Bsid = 9
)

// E_TerminalDevice_AdminStateType is a derived int64 type which is used to represent
// the enumerated node TerminalDevice_AdminStateType. An additional value named
// TerminalDevice_AdminStateType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TerminalDevice_AdminStateType int64

// IsYANGGoEnum ensures that TerminalDevice_AdminStateType implements the yang.GoEnum
// interface. This ensures that TerminalDevice_AdminStateType can be identified as a
// mapped type for a YANG enumeration.
func (E_TerminalDevice_AdminStateType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TerminalDevice_AdminStateType.
func (E_TerminalDevice_AdminStateType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TerminalDevice_AdminStateType.
func (e E_TerminalDevice_AdminStateType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TerminalDevice_AdminStateType")
}

const (
	// TerminalDevice_AdminStateType_UNSET corresponds to the value UNSET of TerminalDevice_AdminStateType
	TerminalDevice_AdminStateType_UNSET E_TerminalDevice_AdminStateType = 0
	// TerminalDevice_AdminStateType_ENABLED corresponds to the value ENABLED of TerminalDevice_AdminStateType
	TerminalDevice_AdminStateType_ENABLED E_TerminalDevice_AdminStateType = 1
	// TerminalDevice_AdminStateType_DISABLED corresponds to the value DISABLED of TerminalDevice_AdminStateType
	TerminalDevice_AdminStateType_DISABLED E_TerminalDevice_AdminStateType = 2
	// TerminalDevice_AdminStateType_MAINT corresponds to the value MAINT of TerminalDevice_AdminStateType
	TerminalDevice_AdminStateType_MAINT E_TerminalDevice_AdminStateType = 3
)

// E_TerminalDevice_LoopbackModeType is a derived int64 type which is used to represent
// the enumerated node TerminalDevice_LoopbackModeType. An additional value named
// TerminalDevice_LoopbackModeType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TerminalDevice_LoopbackModeType int64

// IsYANGGoEnum ensures that TerminalDevice_LoopbackModeType implements the yang.GoEnum
// interface. This ensures that TerminalDevice_LoopbackModeType can be identified as a
// mapped type for a YANG enumeration.
func (E_TerminalDevice_LoopbackModeType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TerminalDevice_LoopbackModeType.
func (E_TerminalDevice_LoopbackModeType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TerminalDevice_LoopbackModeType.
func (e E_TerminalDevice_LoopbackModeType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TerminalDevice_LoopbackModeType")
}

const (
	// TerminalDevice_LoopbackModeType_UNSET corresponds to the value UNSET of TerminalDevice_LoopbackModeType
	TerminalDevice_LoopbackModeType_UNSET E_TerminalDevice_LoopbackModeType = 0
	// TerminalDevice_LoopbackModeType_NONE corresponds to the value NONE of TerminalDevice_LoopbackModeType
	TerminalDevice_LoopbackModeType_NONE E_TerminalDevice_LoopbackModeType = 1
	// TerminalDevice_LoopbackModeType_FACILITY corresponds to the value FACILITY of TerminalDevice_LoopbackModeType
	TerminalDevice_LoopbackModeType_FACILITY E_TerminalDevice_LoopbackModeType = 2
	// TerminalDevice_LoopbackModeType_TERMINAL corresponds to the value TERMINAL of TerminalDevice_LoopbackModeType
	TerminalDevice_LoopbackModeType_TERMINAL E_TerminalDevice_LoopbackModeType = 3
	// TerminalDevice_LoopbackModeType_ASIC_PHY_LOCAL corresponds to the value ASIC_PHY_LOCAL of TerminalDevice_LoopbackModeType
	TerminalDevice_LoopbackModeType_ASIC_PHY_LOCAL E_TerminalDevice_LoopbackModeType = 4
	// TerminalDevice_LoopbackModeType_ASIC_PHY_REMOTE corresponds to the value ASIC_PHY_REMOTE of TerminalDevice_LoopbackModeType
	TerminalDevice_LoopbackModeType_ASIC_PHY_REMOTE E_TerminalDevice_LoopbackModeType = 5
	// TerminalDevice_LoopbackModeType_ASIC_MAC_LOCAL corresponds to the value ASIC_MAC_LOCAL of TerminalDevice_LoopbackModeType
	TerminalDevice_LoopbackModeType_ASIC_MAC_LOCAL E_TerminalDevice_LoopbackModeType = 6
	// TerminalDevice_LoopbackModeType_ASIC_MAC_REMOTE corresponds to the value ASIC_MAC_REMOTE of TerminalDevice_LoopbackModeType
	TerminalDevice_LoopbackModeType_ASIC_MAC_REMOTE E_TerminalDevice_LoopbackModeType = 7
)

// E_Tlv_Reason is a derived int64 type which is used to represent
// the enumerated node Tlv_Reason. An additional value named
// Tlv_Reason_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Tlv_Reason int64

// IsYANGGoEnum ensures that Tlv_Reason implements the yang.GoEnum
// interface. This ensures that Tlv_Reason can be identified as a
// mapped type for a YANG enumeration.
func (E_Tlv_Reason) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Tlv_Reason.
func (E_Tlv_Reason) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Tlv_Reason.
func (e E_Tlv_Reason) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Tlv_Reason")
}

const (
	// Tlv_Reason_UNSET corresponds to the value UNSET of Tlv_Reason
	Tlv_Reason_UNSET E_Tlv_Reason = 0
	// Tlv_Reason_UNKNOWN corresponds to the value UNKNOWN of Tlv_Reason
	Tlv_Reason_UNKNOWN E_Tlv_Reason = 1
	// Tlv_Reason_SOFTWARE_RESTART corresponds to the value SOFTWARE_RESTART of Tlv_Reason
	Tlv_Reason_SOFTWARE_RESTART E_Tlv_Reason = 2
	// Tlv_Reason_SOFTWARE_RELOAD_UPGRADE corresponds to the value SOFTWARE_RELOAD_UPGRADE of Tlv_Reason
	Tlv_Reason_SOFTWARE_RELOAD_UPGRADE E_Tlv_Reason = 3
	// Tlv_Reason_CONTROL_PROCESSOR_SWITCH corresponds to the value CONTROL_PROCESSOR_SWITCH of Tlv_Reason
	Tlv_Reason_CONTROL_PROCESSOR_SWITCH E_Tlv_Reason = 4
)

// E_Topology_Attributes is a derived int64 type which is used to represent
// the enumerated node Topology_Attributes. An additional value named
// Topology_Attributes_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Topology_Attributes int64

// IsYANGGoEnum ensures that Topology_Attributes implements the yang.GoEnum
// interface. This ensures that Topology_Attributes can be identified as a
// mapped type for a YANG enumeration.
func (E_Topology_Attributes) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Topology_Attributes.
func (E_Topology_Attributes) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Topology_Attributes.
func (e E_Topology_Attributes) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Topology_Attributes")
}

const (
	// Topology_Attributes_UNSET corresponds to the value UNSET of Topology_Attributes
	Topology_Attributes_UNSET E_Topology_Attributes = 0
	// Topology_Attributes_OVERLOAD corresponds to the value OVERLOAD of Topology_Attributes
	Topology_Attributes_OVERLOAD E_Topology_Attributes = 1
	// Topology_Attributes_ATTACHED corresponds to the value ATTACHED of Topology_Attributes
	Topology_Attributes_ATTACHED E_Topology_Attributes = 2
)

// E_Transceiver_Present is a derived int64 type which is used to represent
// the enumerated node Transceiver_Present. An additional value named
// Transceiver_Present_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Transceiver_Present int64

// IsYANGGoEnum ensures that Transceiver_Present implements the yang.GoEnum
// interface. This ensures that Transceiver_Present can be identified as a
// mapped type for a YANG enumeration.
func (E_Transceiver_Present) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Transceiver_Present.
func (E_Transceiver_Present) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Transceiver_Present.
func (e E_Transceiver_Present) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Transceiver_Present")
}

const (
	// Transceiver_Present_UNSET corresponds to the value UNSET of Transceiver_Present
	Transceiver_Present_UNSET E_Transceiver_Present = 0
	// Transceiver_Present_PRESENT corresponds to the value PRESENT of Transceiver_Present
	Transceiver_Present_PRESENT E_Transceiver_Present = 1
	// Transceiver_Present_NOT_PRESENT corresponds to the value NOT_PRESENT of Transceiver_Present
	Transceiver_Present_NOT_PRESENT E_Transceiver_Present = 2
)

// E_Transit_IncomingLabel is a derived int64 type which is used to represent
// the enumerated node Transit_IncomingLabel. An additional value named
// Transit_IncomingLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Transit_IncomingLabel int64

// IsYANGGoEnum ensures that Transit_IncomingLabel implements the yang.GoEnum
// interface. This ensures that Transit_IncomingLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_Transit_IncomingLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Transit_IncomingLabel.
func (E_Transit_IncomingLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Transit_IncomingLabel.
func (e E_Transit_IncomingLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Transit_IncomingLabel")
}

const (
	// Transit_IncomingLabel_UNSET corresponds to the value UNSET of Transit_IncomingLabel
	Transit_IncomingLabel_UNSET E_Transit_IncomingLabel = 0
	// Transit_IncomingLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Transit_IncomingLabel
	Transit_IncomingLabel_IPV4_EXPLICIT_NULL E_Transit_IncomingLabel = 1
	// Transit_IncomingLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Transit_IncomingLabel
	Transit_IncomingLabel_ROUTER_ALERT E_Transit_IncomingLabel = 2
	// Transit_IncomingLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Transit_IncomingLabel
	Transit_IncomingLabel_IPV6_EXPLICIT_NULL E_Transit_IncomingLabel = 3
	// Transit_IncomingLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Transit_IncomingLabel
	Transit_IncomingLabel_IMPLICIT_NULL E_Transit_IncomingLabel = 4
	// Transit_IncomingLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Transit_IncomingLabel
	Transit_IncomingLabel_ENTROPY_LABEL_INDICATOR E_Transit_IncomingLabel = 8
	// Transit_IncomingLabel_NO_LABEL corresponds to the value NO_LABEL of Transit_IncomingLabel
	Transit_IncomingLabel_NO_LABEL E_Transit_IncomingLabel = 9
)

// E_Transit_PushLabel is a derived int64 type which is used to represent
// the enumerated node Transit_PushLabel. An additional value named
// Transit_PushLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Transit_PushLabel int64

// IsYANGGoEnum ensures that Transit_PushLabel implements the yang.GoEnum
// interface. This ensures that Transit_PushLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_Transit_PushLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Transit_PushLabel.
func (E_Transit_PushLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Transit_PushLabel.
func (e E_Transit_PushLabel) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Transit_PushLabel")
}

const (
	// Transit_PushLabel_UNSET corresponds to the value UNSET of Transit_PushLabel
	Transit_PushLabel_UNSET E_Transit_PushLabel = 0
	// Transit_PushLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of Transit_PushLabel
	Transit_PushLabel_IPV4_EXPLICIT_NULL E_Transit_PushLabel = 1
	// Transit_PushLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of Transit_PushLabel
	Transit_PushLabel_ROUTER_ALERT E_Transit_PushLabel = 2
	// Transit_PushLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of Transit_PushLabel
	Transit_PushLabel_IPV6_EXPLICIT_NULL E_Transit_PushLabel = 3
	// Transit_PushLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of Transit_PushLabel
	Transit_PushLabel_IMPLICIT_NULL E_Transit_PushLabel = 4
	// Transit_PushLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of Transit_PushLabel
	Transit_PushLabel_ENTROPY_LABEL_INDICATOR E_Transit_PushLabel = 8
	// Transit_PushLabel_NO_LABEL corresponds to the value NO_LABEL of Transit_PushLabel
	Transit_PushLabel_NO_LABEL E_Transit_PushLabel = 9
)

// E_TransportTypes_CLIENT_MAPPING_MODE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_CLIENT_MAPPING_MODE. An additional value named
// TransportTypes_CLIENT_MAPPING_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_CLIENT_MAPPING_MODE int64

// IsYANGGoEnum ensures that TransportTypes_CLIENT_MAPPING_MODE implements the yang.GoEnum
// interface. This ensures that TransportTypes_CLIENT_MAPPING_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_CLIENT_MAPPING_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_CLIENT_MAPPING_MODE.
func (E_TransportTypes_CLIENT_MAPPING_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_CLIENT_MAPPING_MODE.
func (e E_TransportTypes_CLIENT_MAPPING_MODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_CLIENT_MAPPING_MODE")
}

const (
	// TransportTypes_CLIENT_MAPPING_MODE_UNSET corresponds to the value UNSET of TransportTypes_CLIENT_MAPPING_MODE
	TransportTypes_CLIENT_MAPPING_MODE_UNSET E_TransportTypes_CLIENT_MAPPING_MODE = 0
	// TransportTypes_CLIENT_MAPPING_MODE_MODE_1X100G corresponds to the value MODE_1X100G of TransportTypes_CLIENT_MAPPING_MODE
	TransportTypes_CLIENT_MAPPING_MODE_MODE_1X100G E_TransportTypes_CLIENT_MAPPING_MODE = 1
	// TransportTypes_CLIENT_MAPPING_MODE_MODE_1X200G corresponds to the value MODE_1X200G of TransportTypes_CLIENT_MAPPING_MODE
	TransportTypes_CLIENT_MAPPING_MODE_MODE_1X200G E_TransportTypes_CLIENT_MAPPING_MODE = 2
	// TransportTypes_CLIENT_MAPPING_MODE_MODE_1X400G corresponds to the value MODE_1X400G of TransportTypes_CLIENT_MAPPING_MODE
	TransportTypes_CLIENT_MAPPING_MODE_MODE_1X400G E_TransportTypes_CLIENT_MAPPING_MODE = 3
	// TransportTypes_CLIENT_MAPPING_MODE_MODE_2X100G corresponds to the value MODE_2X100G of TransportTypes_CLIENT_MAPPING_MODE
	TransportTypes_CLIENT_MAPPING_MODE_MODE_2X100G E_TransportTypes_CLIENT_MAPPING_MODE = 4
	// TransportTypes_CLIENT_MAPPING_MODE_MODE_2X200G corresponds to the value MODE_2X200G of TransportTypes_CLIENT_MAPPING_MODE
	TransportTypes_CLIENT_MAPPING_MODE_MODE_2X200G E_TransportTypes_CLIENT_MAPPING_MODE = 5
	// TransportTypes_CLIENT_MAPPING_MODE_MODE_3X100G corresponds to the value MODE_3X100G of TransportTypes_CLIENT_MAPPING_MODE
	TransportTypes_CLIENT_MAPPING_MODE_MODE_3X100G E_TransportTypes_CLIENT_MAPPING_MODE = 6
	// TransportTypes_CLIENT_MAPPING_MODE_MODE_4X100G corresponds to the value MODE_4X100G of TransportTypes_CLIENT_MAPPING_MODE
	TransportTypes_CLIENT_MAPPING_MODE_MODE_4X100G E_TransportTypes_CLIENT_MAPPING_MODE = 7
)

// E_TransportTypes_ETHERNET_PMD_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_ETHERNET_PMD_TYPE. An additional value named
// TransportTypes_ETHERNET_PMD_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_ETHERNET_PMD_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_ETHERNET_PMD_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_ETHERNET_PMD_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_ETHERNET_PMD_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_ETHERNET_PMD_TYPE.
func (E_TransportTypes_ETHERNET_PMD_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_ETHERNET_PMD_TYPE.
func (e E_TransportTypes_ETHERNET_PMD_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_ETHERNET_PMD_TYPE")
}

const (
	// TransportTypes_ETHERNET_PMD_TYPE_UNSET corresponds to the value UNSET of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_UNSET E_TransportTypes_ETHERNET_PMD_TYPE = 0
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_1000BASE_LX10 corresponds to the value ETH_1000BASE_LX10 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_1000BASE_LX10 E_TransportTypes_ETHERNET_PMD_TYPE = 1
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CLR4 corresponds to the value ETH_100GBASE_CLR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CLR4 E_TransportTypes_ETHERNET_PMD_TYPE = 2
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CR4 corresponds to the value ETH_100GBASE_CR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CR4 E_TransportTypes_ETHERNET_PMD_TYPE = 3
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CWDM4 corresponds to the value ETH_100GBASE_CWDM4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CWDM4 E_TransportTypes_ETHERNET_PMD_TYPE = 4
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_DR corresponds to the value ETH_100GBASE_DR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_DR E_TransportTypes_ETHERNET_PMD_TYPE = 5
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_ER4 corresponds to the value ETH_100GBASE_ER4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_ER4 E_TransportTypes_ETHERNET_PMD_TYPE = 6
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_ER4L corresponds to the value ETH_100GBASE_ER4L of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_ER4L E_TransportTypes_ETHERNET_PMD_TYPE = 7
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_FR corresponds to the value ETH_100GBASE_FR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_FR E_TransportTypes_ETHERNET_PMD_TYPE = 8
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_LR4 corresponds to the value ETH_100GBASE_LR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_LR4 E_TransportTypes_ETHERNET_PMD_TYPE = 9
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_PSM4 corresponds to the value ETH_100GBASE_PSM4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_PSM4 E_TransportTypes_ETHERNET_PMD_TYPE = 10
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR10 corresponds to the value ETH_100GBASE_SR10 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR10 E_TransportTypes_ETHERNET_PMD_TYPE = 11
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR4 corresponds to the value ETH_100GBASE_SR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR4 E_TransportTypes_ETHERNET_PMD_TYPE = 12
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100G_ACC corresponds to the value ETH_100G_ACC of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100G_ACC E_TransportTypes_ETHERNET_PMD_TYPE = 13
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_100G_AOC corresponds to the value ETH_100G_AOC of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_100G_AOC E_TransportTypes_ETHERNET_PMD_TYPE = 14
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ER corresponds to the value ETH_10GBASE_ER of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ER E_TransportTypes_ETHERNET_PMD_TYPE = 15
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LR corresponds to the value ETH_10GBASE_LR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LR E_TransportTypes_ETHERNET_PMD_TYPE = 16
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LRM corresponds to the value ETH_10GBASE_LRM of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LRM E_TransportTypes_ETHERNET_PMD_TYPE = 17
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_SR corresponds to the value ETH_10GBASE_SR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_SR E_TransportTypes_ETHERNET_PMD_TYPE = 18
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ZR corresponds to the value ETH_10GBASE_ZR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ZR E_TransportTypes_ETHERNET_PMD_TYPE = 19
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_25GBASE_LR corresponds to the value ETH_25GBASE_LR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_25GBASE_LR E_TransportTypes_ETHERNET_PMD_TYPE = 20
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_25GBASE_SR corresponds to the value ETH_25GBASE_SR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_25GBASE_SR E_TransportTypes_ETHERNET_PMD_TYPE = 21
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_DR4 corresponds to the value ETH_400GBASE_DR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_DR4 E_TransportTypes_ETHERNET_PMD_TYPE = 22
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_FR4 corresponds to the value ETH_400GBASE_FR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_FR4 E_TransportTypes_ETHERNET_PMD_TYPE = 23
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_LR4 corresponds to the value ETH_400GBASE_LR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_LR4 E_TransportTypes_ETHERNET_PMD_TYPE = 24
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_LR8 corresponds to the value ETH_400GBASE_LR8 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_LR8 E_TransportTypes_ETHERNET_PMD_TYPE = 25
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_ZR corresponds to the value ETH_400GBASE_ZR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GBASE_ZR E_TransportTypes_ETHERNET_PMD_TYPE = 26
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_400GMSA_PSM4 corresponds to the value ETH_400GMSA_PSM4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_400GMSA_PSM4 E_TransportTypes_ETHERNET_PMD_TYPE = 27
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_CR4 corresponds to the value ETH_40GBASE_CR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_CR4 E_TransportTypes_ETHERNET_PMD_TYPE = 28
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_ER4 corresponds to the value ETH_40GBASE_ER4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_ER4 E_TransportTypes_ETHERNET_PMD_TYPE = 29
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_LR4 corresponds to the value ETH_40GBASE_LR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_LR4 E_TransportTypes_ETHERNET_PMD_TYPE = 30
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_PSM4 corresponds to the value ETH_40GBASE_PSM4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_PSM4 E_TransportTypes_ETHERNET_PMD_TYPE = 31
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_SR4 corresponds to the value ETH_40GBASE_SR4 of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_SR4 E_TransportTypes_ETHERNET_PMD_TYPE = 32
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_LR corresponds to the value ETH_4X10GBASE_LR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_LR E_TransportTypes_ETHERNET_PMD_TYPE = 33
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_SR corresponds to the value ETH_4X10GBASE_SR of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_SR E_TransportTypes_ETHERNET_PMD_TYPE = 34
	// TransportTypes_ETHERNET_PMD_TYPE_ETH_UNDEFINED corresponds to the value ETH_UNDEFINED of TransportTypes_ETHERNET_PMD_TYPE
	TransportTypes_ETHERNET_PMD_TYPE_ETH_UNDEFINED E_TransportTypes_ETHERNET_PMD_TYPE = 35
)

// E_TransportTypes_FIBER_CONNECTOR_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_FIBER_CONNECTOR_TYPE. An additional value named
// TransportTypes_FIBER_CONNECTOR_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_FIBER_CONNECTOR_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_FIBER_CONNECTOR_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_FIBER_CONNECTOR_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_FIBER_CONNECTOR_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_FIBER_CONNECTOR_TYPE.
func (E_TransportTypes_FIBER_CONNECTOR_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_FIBER_CONNECTOR_TYPE.
func (e E_TransportTypes_FIBER_CONNECTOR_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_FIBER_CONNECTOR_TYPE")
}

const (
	// TransportTypes_FIBER_CONNECTOR_TYPE_UNSET corresponds to the value UNSET of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_UNSET E_TransportTypes_FIBER_CONNECTOR_TYPE = 0
	// TransportTypes_FIBER_CONNECTOR_TYPE_AOC_CONNECTOR corresponds to the value AOC_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_AOC_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 1
	// TransportTypes_FIBER_CONNECTOR_TYPE_DAC_CONNECTOR corresponds to the value DAC_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_DAC_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 2
	// TransportTypes_FIBER_CONNECTOR_TYPE_LC_CONNECTOR corresponds to the value LC_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_LC_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 3
	// TransportTypes_FIBER_CONNECTOR_TYPE_MPO_CONNECTOR corresponds to the value MPO_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_MPO_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 4
	// TransportTypes_FIBER_CONNECTOR_TYPE_SC_CONNECTOR corresponds to the value SC_CONNECTOR of TransportTypes_FIBER_CONNECTOR_TYPE
	TransportTypes_FIBER_CONNECTOR_TYPE_SC_CONNECTOR E_TransportTypes_FIBER_CONNECTOR_TYPE = 5
)

// E_TransportTypes_FRAME_MAPPING_PROTOCOL is a derived int64 type which is used to represent
// the enumerated node TransportTypes_FRAME_MAPPING_PROTOCOL. An additional value named
// TransportTypes_FRAME_MAPPING_PROTOCOL_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_FRAME_MAPPING_PROTOCOL int64

// IsYANGGoEnum ensures that TransportTypes_FRAME_MAPPING_PROTOCOL implements the yang.GoEnum
// interface. This ensures that TransportTypes_FRAME_MAPPING_PROTOCOL can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_FRAME_MAPPING_PROTOCOL) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_FRAME_MAPPING_PROTOCOL.
func (E_TransportTypes_FRAME_MAPPING_PROTOCOL) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_FRAME_MAPPING_PROTOCOL.
func (e E_TransportTypes_FRAME_MAPPING_PROTOCOL) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_FRAME_MAPPING_PROTOCOL")
}

const (
	// TransportTypes_FRAME_MAPPING_PROTOCOL_UNSET corresponds to the value UNSET of TransportTypes_FRAME_MAPPING_PROTOCOL
	TransportTypes_FRAME_MAPPING_PROTOCOL_UNSET E_TransportTypes_FRAME_MAPPING_PROTOCOL = 0
	// TransportTypes_FRAME_MAPPING_PROTOCOL_AMP corresponds to the value AMP of TransportTypes_FRAME_MAPPING_PROTOCOL
	TransportTypes_FRAME_MAPPING_PROTOCOL_AMP E_TransportTypes_FRAME_MAPPING_PROTOCOL = 1
	// TransportTypes_FRAME_MAPPING_PROTOCOL_BMP corresponds to the value BMP of TransportTypes_FRAME_MAPPING_PROTOCOL
	TransportTypes_FRAME_MAPPING_PROTOCOL_BMP E_TransportTypes_FRAME_MAPPING_PROTOCOL = 2
	// TransportTypes_FRAME_MAPPING_PROTOCOL_CBR corresponds to the value CBR of TransportTypes_FRAME_MAPPING_PROTOCOL
	TransportTypes_FRAME_MAPPING_PROTOCOL_CBR E_TransportTypes_FRAME_MAPPING_PROTOCOL = 3
	// TransportTypes_FRAME_MAPPING_PROTOCOL_GFP_F corresponds to the value GFP_F of TransportTypes_FRAME_MAPPING_PROTOCOL
	TransportTypes_FRAME_MAPPING_PROTOCOL_GFP_F E_TransportTypes_FRAME_MAPPING_PROTOCOL = 4
	// TransportTypes_FRAME_MAPPING_PROTOCOL_GFP_T corresponds to the value GFP_T of TransportTypes_FRAME_MAPPING_PROTOCOL
	TransportTypes_FRAME_MAPPING_PROTOCOL_GFP_T E_TransportTypes_FRAME_MAPPING_PROTOCOL = 5
	// TransportTypes_FRAME_MAPPING_PROTOCOL_GMP corresponds to the value GMP of TransportTypes_FRAME_MAPPING_PROTOCOL
	TransportTypes_FRAME_MAPPING_PROTOCOL_GMP E_TransportTypes_FRAME_MAPPING_PROTOCOL = 6
)

// E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE. An additional value named
// TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE.
func (E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE.
func (e E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE")
}

const (
	// TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_UNSET corresponds to the value UNSET of TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE
	TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_UNSET E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE = 0
	// TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_PROT_ETHERNET corresponds to the value PROT_ETHERNET of TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE
	TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_PROT_ETHERNET E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE = 1
	// TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_PROT_OTN corresponds to the value PROT_OTN of TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE
	TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_PROT_OTN E_TransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE = 2
)

// E_TransportTypes_OTN_APPLICATION_CODE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_OTN_APPLICATION_CODE. An additional value named
// TransportTypes_OTN_APPLICATION_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_OTN_APPLICATION_CODE int64

// IsYANGGoEnum ensures that TransportTypes_OTN_APPLICATION_CODE implements the yang.GoEnum
// interface. This ensures that TransportTypes_OTN_APPLICATION_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_OTN_APPLICATION_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_OTN_APPLICATION_CODE.
func (E_TransportTypes_OTN_APPLICATION_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_OTN_APPLICATION_CODE.
func (e E_TransportTypes_OTN_APPLICATION_CODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_OTN_APPLICATION_CODE")
}

const (
	// TransportTypes_OTN_APPLICATION_CODE_UNSET corresponds to the value UNSET of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_UNSET E_TransportTypes_OTN_APPLICATION_CODE = 0
	// TransportTypes_OTN_APPLICATION_CODE_OTN_UNDEFINED corresponds to the value OTN_UNDEFINED of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_OTN_UNDEFINED E_TransportTypes_OTN_APPLICATION_CODE = 1
	// TransportTypes_OTN_APPLICATION_CODE_P1L1_2D1 corresponds to the value P1L1_2D1 of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_P1L1_2D1 E_TransportTypes_OTN_APPLICATION_CODE = 2
	// TransportTypes_OTN_APPLICATION_CODE_P1L1_2D2 corresponds to the value P1L1_2D2 of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_P1L1_2D2 E_TransportTypes_OTN_APPLICATION_CODE = 3
	// TransportTypes_OTN_APPLICATION_CODE_P1S1_2D2 corresponds to the value P1S1_2D2 of TransportTypes_OTN_APPLICATION_CODE
	TransportTypes_OTN_APPLICATION_CODE_P1S1_2D2 E_TransportTypes_OTN_APPLICATION_CODE = 4
)

// E_TransportTypes_SONET_APPLICATION_CODE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_SONET_APPLICATION_CODE. An additional value named
// TransportTypes_SONET_APPLICATION_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_SONET_APPLICATION_CODE int64

// IsYANGGoEnum ensures that TransportTypes_SONET_APPLICATION_CODE implements the yang.GoEnum
// interface. This ensures that TransportTypes_SONET_APPLICATION_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_SONET_APPLICATION_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_SONET_APPLICATION_CODE.
func (E_TransportTypes_SONET_APPLICATION_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_SONET_APPLICATION_CODE.
func (e E_TransportTypes_SONET_APPLICATION_CODE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_SONET_APPLICATION_CODE")
}

const (
	// TransportTypes_SONET_APPLICATION_CODE_UNSET corresponds to the value UNSET of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_UNSET E_TransportTypes_SONET_APPLICATION_CODE = 0
	// TransportTypes_SONET_APPLICATION_CODE_SONET_UNDEFINED corresponds to the value SONET_UNDEFINED of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_SONET_UNDEFINED E_TransportTypes_SONET_APPLICATION_CODE = 1
	// TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R2 corresponds to the value VSR2000_3R2 of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R2 E_TransportTypes_SONET_APPLICATION_CODE = 2
	// TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R3 corresponds to the value VSR2000_3R3 of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R3 E_TransportTypes_SONET_APPLICATION_CODE = 3
	// TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R5 corresponds to the value VSR2000_3R5 of TransportTypes_SONET_APPLICATION_CODE
	TransportTypes_SONET_APPLICATION_CODE_VSR2000_3R5 E_TransportTypes_SONET_APPLICATION_CODE = 4
)

// E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE. An additional value named
// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE.
func (E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE.
func (e E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE")
}

const (
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_UNSET corresponds to the value UNSET of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_UNSET E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 0
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP corresponds to the value CFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 1
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2 corresponds to the value CFP2 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 2
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2_ACO corresponds to the value CFP2_ACO of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2_ACO E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 3
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP4 corresponds to the value CFP4 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP4 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 4
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CPAK corresponds to the value CPAK of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CPAK E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 5
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CSFP corresponds to the value CSFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CSFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 6
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_DSFP corresponds to the value DSFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_DSFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 7
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_NON_PLUGGABLE corresponds to the value NON_PLUGGABLE of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_NON_PLUGGABLE E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 8
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OSFP corresponds to the value OSFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OSFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 9
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OTHER corresponds to the value OTHER of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OTHER E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 10
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP corresponds to the value QSFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 11
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP28 corresponds to the value QSFP28 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP28 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 12
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP28_DD corresponds to the value QSFP28_DD of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP28_DD E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 13
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56 corresponds to the value QSFP56 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 14
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD corresponds to the value QSFP56_DD of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 15
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD_TYPE1 corresponds to the value QSFP56_DD_TYPE1 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD_TYPE1 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 16
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD_TYPE2 corresponds to the value QSFP56_DD_TYPE2 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP56_DD_TYPE2 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 17
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP_PLUS corresponds to the value QSFP_PLUS of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP_PLUS E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 18
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP corresponds to the value SFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 19
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP28 corresponds to the value SFP28 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP28 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 20
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP56 corresponds to the value SFP56 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP56 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 21
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP_DD corresponds to the value SFP_DD of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP_DD E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 22
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP_PLUS corresponds to the value SFP_PLUS of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP_PLUS E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 23
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_X2 corresponds to the value X2 of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_X2 E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 24
	// TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_XFP corresponds to the value XFP of TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_XFP E_TransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 25
)

// E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE. An additional value named
// TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE.
func (E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE.
func (e E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE")
}

const (
	// TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_UNSET corresponds to the value UNSET of TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE
	TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_UNSET E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE = 0
	// TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_TYPE_DIGITAL_COHERENT_OPTIC corresponds to the value TYPE_DIGITAL_COHERENT_OPTIC of TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE
	TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_TYPE_DIGITAL_COHERENT_OPTIC E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE = 1
	// TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_TYPE_STANDARD_OPTIC corresponds to the value TYPE_STANDARD_OPTIC of TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE
	TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE_TYPE_STANDARD_OPTIC E_TransportTypes_TRANSCEIVER_MODULE_FUNCTIONAL_TYPE = 2
)

// E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_TRIBUTARY_PROTOCOL_TYPE. An additional value named
// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_TRIBUTARY_PROTOCOL_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_TRIBUTARY_PROTOCOL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_TRIBUTARY_PROTOCOL_TYPE.
func (E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE.
func (e E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE")
}

const (
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_UNSET corresponds to the value UNSET of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_UNSET E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 0
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_100GE corresponds to the value PROT_100GE of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_100GE E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 1
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_100G_MLG corresponds to the value PROT_100G_MLG of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_100G_MLG E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 2
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_10GE_LAN corresponds to the value PROT_10GE_LAN of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_10GE_LAN E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 3
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_10GE_WAN corresponds to the value PROT_10GE_WAN of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_10GE_WAN E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 4
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_1GE corresponds to the value PROT_1GE of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_1GE E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 5
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_400GE corresponds to the value PROT_400GE of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_400GE E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 6
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_40GE corresponds to the value PROT_40GE of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_40GE E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 7
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_800GE corresponds to the value PROT_800GE of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_800GE E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 8
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_FLEXO corresponds to the value PROT_FLEXO of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_FLEXO E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 9
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC192 corresponds to the value PROT_OC192 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC192 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 10
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC48 corresponds to the value PROT_OC48 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC48 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 11
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC768 corresponds to the value PROT_OC768 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC768 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 12
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU2 corresponds to the value PROT_ODU2 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU2 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 13
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU2E corresponds to the value PROT_ODU2E of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU2E E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 14
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU3 corresponds to the value PROT_ODU3 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU3 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 15
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU4 corresponds to the value PROT_ODU4 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU4 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 16
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODUCN corresponds to the value PROT_ODUCN of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODUCN E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 17
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODUFLEX_CBR corresponds to the value PROT_ODUFLEX_CBR of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODUFLEX_CBR E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 18
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODUFLEX_GFP corresponds to the value PROT_ODUFLEX_GFP of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODUFLEX_GFP E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 19
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTSIG corresponds to the value PROT_OTSIG of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTSIG E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 20
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTSI_A corresponds to the value PROT_OTSI_A of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTSI_A E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 21
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU1E corresponds to the value PROT_OTU1E of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU1E E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 22
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU2 corresponds to the value PROT_OTU2 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU2 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 23
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU2E corresponds to the value PROT_OTU2E of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU2E E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 24
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU3 corresponds to the value PROT_OTU3 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU3 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 25
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU4 corresponds to the value PROT_OTU4 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU4 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 26
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTUCN corresponds to the value PROT_OTUCN of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTUCN E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 27
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM16 corresponds to the value PROT_STM16 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM16 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 28
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM256 corresponds to the value PROT_STM256 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM256 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 29
	// TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM64 corresponds to the value PROT_STM64 of TransportTypes_TRIBUTARY_PROTOCOL_TYPE
	TransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM64 E_TransportTypes_TRIBUTARY_PROTOCOL_TYPE = 30
)

// E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE is a derived int64 type which is used to represent
// the enumerated node TransportTypes_TRIBUTARY_RATE_CLASS_TYPE. An additional value named
// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE int64

// IsYANGGoEnum ensures that TransportTypes_TRIBUTARY_RATE_CLASS_TYPE implements the yang.GoEnum
// interface. This ensures that TransportTypes_TRIBUTARY_RATE_CLASS_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_TRIBUTARY_RATE_CLASS_TYPE.
func (E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE.
func (e E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE")
}

const (
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_UNSET corresponds to the value UNSET of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_UNSET E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 0
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1000G corresponds to the value TRIB_RATE_1000G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1000G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 1
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_100G corresponds to the value TRIB_RATE_100G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_100G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 2
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1050G corresponds to the value TRIB_RATE_1050G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1050G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 3
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_10G corresponds to the value TRIB_RATE_10G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_10G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 4
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1100G corresponds to the value TRIB_RATE_1100G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1100G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 5
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1150G corresponds to the value TRIB_RATE_1150G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1150G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 6
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1200G corresponds to the value TRIB_RATE_1200G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1200G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 7
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1250G corresponds to the value TRIB_RATE_1250G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1250G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 8
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1300G corresponds to the value TRIB_RATE_1300G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1300G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 9
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1350G corresponds to the value TRIB_RATE_1350G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1350G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 10
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1400G corresponds to the value TRIB_RATE_1400G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1400G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 11
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1450G corresponds to the value TRIB_RATE_1450G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1450G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 12
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1500G corresponds to the value TRIB_RATE_1500G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1500G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 13
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_150G corresponds to the value TRIB_RATE_150G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_150G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 14
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1550G corresponds to the value TRIB_RATE_1550G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1550G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 15
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1600G corresponds to the value TRIB_RATE_1600G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1600G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 16
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1650G corresponds to the value TRIB_RATE_1650G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1650G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 17
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1700G corresponds to the value TRIB_RATE_1700G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1700G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 18
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1750G corresponds to the value TRIB_RATE_1750G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1750G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 19
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1800G corresponds to the value TRIB_RATE_1800G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1800G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 20
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1850G corresponds to the value TRIB_RATE_1850G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1850G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 21
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1900G corresponds to the value TRIB_RATE_1900G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1900G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 22
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1950G corresponds to the value TRIB_RATE_1950G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1950G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 23
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1G corresponds to the value TRIB_RATE_1G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 24
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2_5G corresponds to the value TRIB_RATE_2_5G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2_5G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 25
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2000G corresponds to the value TRIB_RATE_2000G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2000G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 26
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_200G corresponds to the value TRIB_RATE_200G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_200G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 27
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2050G corresponds to the value TRIB_RATE_2050G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2050G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 28
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2100G corresponds to the value TRIB_RATE_2100G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2100G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 29
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2150G corresponds to the value TRIB_RATE_2150G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2150G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 30
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2200G corresponds to the value TRIB_RATE_2200G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2200G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 31
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2250G corresponds to the value TRIB_RATE_2250G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2250G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 32
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2300G corresponds to the value TRIB_RATE_2300G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2300G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 33
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2350G corresponds to the value TRIB_RATE_2350G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2350G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 34
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2400G corresponds to the value TRIB_RATE_2400G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2400G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 35
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2450G corresponds to the value TRIB_RATE_2450G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2450G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 36
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2500G corresponds to the value TRIB_RATE_2500G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2500G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 37
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_250G corresponds to the value TRIB_RATE_250G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_250G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 38
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2550G corresponds to the value TRIB_RATE_2550G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2550G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 39
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2600G corresponds to the value TRIB_RATE_2600G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2600G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 40
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2650G corresponds to the value TRIB_RATE_2650G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2650G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 41
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2700G corresponds to the value TRIB_RATE_2700G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2700G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 42
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2750G corresponds to the value TRIB_RATE_2750G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2750G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 43
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2800G corresponds to the value TRIB_RATE_2800G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2800G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 44
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2850G corresponds to the value TRIB_RATE_2850G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2850G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 45
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2900G corresponds to the value TRIB_RATE_2900G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2900G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 46
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2950G corresponds to the value TRIB_RATE_2950G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2950G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 47
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3000G corresponds to the value TRIB_RATE_3000G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3000G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 48
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_300G corresponds to the value TRIB_RATE_300G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_300G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 49
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3050G corresponds to the value TRIB_RATE_3050G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3050G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 50
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3100G corresponds to the value TRIB_RATE_3100G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3100G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 51
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3150G corresponds to the value TRIB_RATE_3150G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3150G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 52
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3200G corresponds to the value TRIB_RATE_3200G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_3200G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 53
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_350G corresponds to the value TRIB_RATE_350G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_350G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 54
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_400G corresponds to the value TRIB_RATE_400G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_400G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 55
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_40G corresponds to the value TRIB_RATE_40G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_40G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 56
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_450G corresponds to the value TRIB_RATE_450G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_450G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 57
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_500G corresponds to the value TRIB_RATE_500G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_500G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 58
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_550G corresponds to the value TRIB_RATE_550G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_550G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 59
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_600G corresponds to the value TRIB_RATE_600G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_600G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 60
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_650G corresponds to the value TRIB_RATE_650G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_650G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 61
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_700G corresponds to the value TRIB_RATE_700G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_700G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 62
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_750G corresponds to the value TRIB_RATE_750G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_750G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 63
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_800G corresponds to the value TRIB_RATE_800G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_800G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 64
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_850G corresponds to the value TRIB_RATE_850G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_850G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 65
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_900G corresponds to the value TRIB_RATE_900G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_900G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 66
	// TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_950G corresponds to the value TRIB_RATE_950G of TransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	TransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_950G E_TransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 67
)

// E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY is a derived int64 type which is used to represent
// the enumerated node TransportTypes_TRIBUTARY_SLOT_GRANULARITY. An additional value named
// TransportTypes_TRIBUTARY_SLOT_GRANULARITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY int64

// IsYANGGoEnum ensures that TransportTypes_TRIBUTARY_SLOT_GRANULARITY implements the yang.GoEnum
// interface. This ensures that TransportTypes_TRIBUTARY_SLOT_GRANULARITY can be identified as a
// mapped type for a YANG enumeration.
func (E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  TransportTypes_TRIBUTARY_SLOT_GRANULARITY.
func (E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY.
func (e E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY")
}

const (
	// TransportTypes_TRIBUTARY_SLOT_GRANULARITY_UNSET corresponds to the value UNSET of TransportTypes_TRIBUTARY_SLOT_GRANULARITY
	TransportTypes_TRIBUTARY_SLOT_GRANULARITY_UNSET E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY = 0
	// TransportTypes_TRIBUTARY_SLOT_GRANULARITY_TRIB_SLOT_1_25G corresponds to the value TRIB_SLOT_1_25G of TransportTypes_TRIBUTARY_SLOT_GRANULARITY
	TransportTypes_TRIBUTARY_SLOT_GRANULARITY_TRIB_SLOT_1_25G E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY = 1
	// TransportTypes_TRIBUTARY_SLOT_GRANULARITY_TRIB_SLOT_2_5G corresponds to the value TRIB_SLOT_2_5G of TransportTypes_TRIBUTARY_SLOT_GRANULARITY
	TransportTypes_TRIBUTARY_SLOT_GRANULARITY_TRIB_SLOT_2_5G E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY = 2
	// TransportTypes_TRIBUTARY_SLOT_GRANULARITY_TRIB_SLOT_5G corresponds to the value TRIB_SLOT_5G of TransportTypes_TRIBUTARY_SLOT_GRANULARITY
	TransportTypes_TRIBUTARY_SLOT_GRANULARITY_TRIB_SLOT_5G E_TransportTypes_TRIBUTARY_SLOT_GRANULARITY = 3
)

// E_Transport_BuiltinDetail is a derived int64 type which is used to represent
// the enumerated node Transport_BuiltinDetail. An additional value named
// Transport_BuiltinDetail_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Transport_BuiltinDetail int64

// IsYANGGoEnum ensures that Transport_BuiltinDetail implements the yang.GoEnum
// interface. This ensures that Transport_BuiltinDetail can be identified as a
// mapped type for a YANG enumeration.
func (E_Transport_BuiltinDetail) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Transport_BuiltinDetail.
func (E_Transport_BuiltinDetail) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Transport_BuiltinDetail.
func (e E_Transport_BuiltinDetail) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Transport_BuiltinDetail")
}

const (
	// Transport_BuiltinDetail_UNSET corresponds to the value UNSET of Transport_BuiltinDetail
	Transport_BuiltinDetail_UNSET E_Transport_BuiltinDetail = 0
	// Transport_BuiltinDetail_TCP_INITIAL corresponds to the value TCP_INITIAL of Transport_BuiltinDetail
	Transport_BuiltinDetail_TCP_INITIAL E_Transport_BuiltinDetail = 1
	// Transport_BuiltinDetail_TCP_ESTABLISHED corresponds to the value TCP_ESTABLISHED of Transport_BuiltinDetail
	Transport_BuiltinDetail_TCP_ESTABLISHED E_Transport_BuiltinDetail = 2
	// Transport_BuiltinDetail_FRAGMENT corresponds to the value FRAGMENT of Transport_BuiltinDetail
	Transport_BuiltinDetail_FRAGMENT E_Transport_BuiltinDetail = 3
)

// E_Transport_DestinationPort is a derived int64 type which is used to represent
// the enumerated node Transport_DestinationPort. An additional value named
// Transport_DestinationPort_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Transport_DestinationPort int64

// IsYANGGoEnum ensures that Transport_DestinationPort implements the yang.GoEnum
// interface. This ensures that Transport_DestinationPort can be identified as a
// mapped type for a YANG enumeration.
func (E_Transport_DestinationPort) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Transport_DestinationPort.
func (E_Transport_DestinationPort) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Transport_DestinationPort.
func (e E_Transport_DestinationPort) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Transport_DestinationPort")
}

const (
	// Transport_DestinationPort_UNSET corresponds to the value UNSET of Transport_DestinationPort
	Transport_DestinationPort_UNSET E_Transport_DestinationPort = 0
	// Transport_DestinationPort_ANY corresponds to the value ANY of Transport_DestinationPort
	Transport_DestinationPort_ANY E_Transport_DestinationPort = 1
)

// E_Transport_DetailMode is a derived int64 type which is used to represent
// the enumerated node Transport_DetailMode. An additional value named
// Transport_DetailMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Transport_DetailMode int64

// IsYANGGoEnum ensures that Transport_DetailMode implements the yang.GoEnum
// interface. This ensures that Transport_DetailMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Transport_DetailMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Transport_DetailMode.
func (E_Transport_DetailMode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Transport_DetailMode.
func (e E_Transport_DetailMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Transport_DetailMode")
}

const (
	// Transport_DetailMode_UNSET corresponds to the value UNSET of Transport_DetailMode
	Transport_DetailMode_UNSET E_Transport_DetailMode = 0
	// Transport_DetailMode_EXPLICIT corresponds to the value EXPLICIT of Transport_DetailMode
	Transport_DetailMode_EXPLICIT E_Transport_DetailMode = 1
	// Transport_DetailMode_BUILTIN corresponds to the value BUILTIN of Transport_DetailMode
	Transport_DetailMode_BUILTIN E_Transport_DetailMode = 2
)

// E_Transport_ExplicitDetailMatchMode is a derived int64 type which is used to represent
// the enumerated node Transport_ExplicitDetailMatchMode. An additional value named
// Transport_ExplicitDetailMatchMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Transport_ExplicitDetailMatchMode int64

// IsYANGGoEnum ensures that Transport_ExplicitDetailMatchMode implements the yang.GoEnum
// interface. This ensures that Transport_ExplicitDetailMatchMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Transport_ExplicitDetailMatchMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Transport_ExplicitDetailMatchMode.
func (E_Transport_ExplicitDetailMatchMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Transport_ExplicitDetailMatchMode.
func (e E_Transport_ExplicitDetailMatchMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Transport_ExplicitDetailMatchMode")
}

const (
	// Transport_ExplicitDetailMatchMode_UNSET corresponds to the value UNSET of Transport_ExplicitDetailMatchMode
	Transport_ExplicitDetailMatchMode_UNSET E_Transport_ExplicitDetailMatchMode = 0
	// Transport_ExplicitDetailMatchMode_ANY corresponds to the value ANY of Transport_ExplicitDetailMatchMode
	Transport_ExplicitDetailMatchMode_ANY E_Transport_ExplicitDetailMatchMode = 1
	// Transport_ExplicitDetailMatchMode_ALL corresponds to the value ALL of Transport_ExplicitDetailMatchMode
	Transport_ExplicitDetailMatchMode_ALL E_Transport_ExplicitDetailMatchMode = 2
)

// E_Transport_SourcePort is a derived int64 type which is used to represent
// the enumerated node Transport_SourcePort. An additional value named
// Transport_SourcePort_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Transport_SourcePort int64

// IsYANGGoEnum ensures that Transport_SourcePort implements the yang.GoEnum
// interface. This ensures that Transport_SourcePort can be identified as a
// mapped type for a YANG enumeration.
func (E_Transport_SourcePort) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Transport_SourcePort.
func (E_Transport_SourcePort) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Transport_SourcePort.
func (e E_Transport_SourcePort) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Transport_SourcePort")
}

const (
	// Transport_SourcePort_UNSET corresponds to the value UNSET of Transport_SourcePort
	Transport_SourcePort_UNSET E_Transport_SourcePort = 0
	// Transport_SourcePort_ANY corresponds to the value ANY of Transport_SourcePort
	Transport_SourcePort_ANY E_Transport_SourcePort = 1
)

// E_Types_ADDRESS_FAMILY is a derived int64 type which is used to represent
// the enumerated node Types_ADDRESS_FAMILY. An additional value named
// Types_ADDRESS_FAMILY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Types_ADDRESS_FAMILY int64

// IsYANGGoEnum ensures that Types_ADDRESS_FAMILY implements the yang.GoEnum
// interface. This ensures that Types_ADDRESS_FAMILY can be identified as a
// mapped type for a YANG enumeration.
func (E_Types_ADDRESS_FAMILY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Types_ADDRESS_FAMILY.
func (E_Types_ADDRESS_FAMILY) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Types_ADDRESS_FAMILY.
func (e E_Types_ADDRESS_FAMILY) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Types_ADDRESS_FAMILY")
}

const (
	// Types_ADDRESS_FAMILY_UNSET corresponds to the value UNSET of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_UNSET E_Types_ADDRESS_FAMILY = 0
	// Types_ADDRESS_FAMILY_IPV4 corresponds to the value IPV4 of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_IPV4 E_Types_ADDRESS_FAMILY = 1
	// Types_ADDRESS_FAMILY_IPV6 corresponds to the value IPV6 of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_IPV6 E_Types_ADDRESS_FAMILY = 2
	// Types_ADDRESS_FAMILY_L2_ETHERNET corresponds to the value L2_ETHERNET of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_L2_ETHERNET E_Types_ADDRESS_FAMILY = 3
	// Types_ADDRESS_FAMILY_MPLS corresponds to the value MPLS of Types_ADDRESS_FAMILY
	Types_ADDRESS_FAMILY_MPLS E_Types_ADDRESS_FAMILY = 4
)

// E_VlanTypes_TPID_TYPES is a derived int64 type which is used to represent
// the enumerated node VlanTypes_TPID_TYPES. An additional value named
// VlanTypes_TPID_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_VlanTypes_TPID_TYPES int64

// IsYANGGoEnum ensures that VlanTypes_TPID_TYPES implements the yang.GoEnum
// interface. This ensures that VlanTypes_TPID_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_VlanTypes_TPID_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  VlanTypes_TPID_TYPES.
func (E_VlanTypes_TPID_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_VlanTypes_TPID_TYPES.
func (e E_VlanTypes_TPID_TYPES) String() string {
	return ygot.EnumLogString(e, int64(e), "E_VlanTypes_TPID_TYPES")
}

const (
	// VlanTypes_TPID_TYPES_UNSET corresponds to the value UNSET of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_UNSET E_VlanTypes_TPID_TYPES = 0
	// VlanTypes_TPID_TYPES_TPID_0X8100 corresponds to the value TPID_0X8100 of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_0X8100 E_VlanTypes_TPID_TYPES = 1
	// VlanTypes_TPID_TYPES_TPID_0X88A8 corresponds to the value TPID_0X88A8 of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_0X88A8 E_VlanTypes_TPID_TYPES = 2
	// VlanTypes_TPID_TYPES_TPID_0X9100 corresponds to the value TPID_0X9100 of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_0X9100 E_VlanTypes_TPID_TYPES = 3
	// VlanTypes_TPID_TYPES_TPID_0X9200 corresponds to the value TPID_0X9200 of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_0X9200 E_VlanTypes_TPID_TYPES = 4
	// VlanTypes_TPID_TYPES_TPID_ANY corresponds to the value TPID_ANY of VlanTypes_TPID_TYPES
	VlanTypes_TPID_TYPES_TPID_ANY E_VlanTypes_TPID_TYPES = 5
)

// E_Vlan_Status is a derived int64 type which is used to represent
// the enumerated node Vlan_Status. An additional value named
// Vlan_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Vlan_Status int64

// IsYANGGoEnum ensures that Vlan_Status implements the yang.GoEnum
// interface. This ensures that Vlan_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_Vlan_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Vlan_Status.
func (E_Vlan_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Vlan_Status.
func (e E_Vlan_Status) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Vlan_Status")
}

const (
	// Vlan_Status_UNSET corresponds to the value UNSET of Vlan_Status
	Vlan_Status_UNSET E_Vlan_Status = 0
	// Vlan_Status_ACTIVE corresponds to the value ACTIVE of Vlan_Status
	Vlan_Status_ACTIVE E_Vlan_Status = 1
	// Vlan_Status_SUSPENDED corresponds to the value SUSPENDED of Vlan_Status
	Vlan_Status_SUSPENDED E_Vlan_Status = 2
)

// E_Vlan_VlanModeType is a derived int64 type which is used to represent
// the enumerated node Vlan_VlanModeType. An additional value named
// Vlan_VlanModeType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Vlan_VlanModeType int64

// IsYANGGoEnum ensures that Vlan_VlanModeType implements the yang.GoEnum
// interface. This ensures that Vlan_VlanModeType can be identified as a
// mapped type for a YANG enumeration.
func (E_Vlan_VlanModeType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Vlan_VlanModeType.
func (E_Vlan_VlanModeType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Vlan_VlanModeType.
func (e E_Vlan_VlanModeType) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Vlan_VlanModeType")
}

const (
	// Vlan_VlanModeType_UNSET corresponds to the value UNSET of Vlan_VlanModeType
	Vlan_VlanModeType_UNSET E_Vlan_VlanModeType = 0
	// Vlan_VlanModeType_ACCESS corresponds to the value ACCESS of Vlan_VlanModeType
	Vlan_VlanModeType_ACCESS E_Vlan_VlanModeType = 1
	// Vlan_VlanModeType_TRUNK corresponds to the value TRUNK of Vlan_VlanModeType
	Vlan_VlanModeType_TRUNK E_Vlan_VlanModeType = 2
)

// E_Vlan_VlanStackAction is a derived int64 type which is used to represent
// the enumerated node Vlan_VlanStackAction. An additional value named
// Vlan_VlanStackAction_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Vlan_VlanStackAction int64

// IsYANGGoEnum ensures that Vlan_VlanStackAction implements the yang.GoEnum
// interface. This ensures that Vlan_VlanStackAction can be identified as a
// mapped type for a YANG enumeration.
func (E_Vlan_VlanStackAction) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Vlan_VlanStackAction.
func (E_Vlan_VlanStackAction) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

// String returns a logging-friendly string for E_Vlan_VlanStackAction.
func (e E_Vlan_VlanStackAction) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Vlan_VlanStackAction")
}

const (
	// Vlan_VlanStackAction_UNSET corresponds to the value UNSET of Vlan_VlanStackAction
	Vlan_VlanStackAction_UNSET E_Vlan_VlanStackAction = 0
	// Vlan_VlanStackAction_PUSH corresponds to the value PUSH of Vlan_VlanStackAction
	Vlan_VlanStackAction_PUSH E_Vlan_VlanStackAction = 1
	// Vlan_VlanStackAction_POP corresponds to the value POP of Vlan_VlanStackAction
	Vlan_VlanStackAction_POP E_Vlan_VlanStackAction = 2
	// Vlan_VlanStackAction_SWAP corresponds to the value SWAP of Vlan_VlanStackAction
	Vlan_VlanStackAction_SWAP E_Vlan_VlanStackAction = 3
)

// E_WeightedEcmp_LoadBalancingWeight is a derived int64 type which is used to represent
// the enumerated node WeightedEcmp_LoadBalancingWeight. An additional value named
// WeightedEcmp_LoadBalancingWeight_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_WeightedEcmp_LoadBalancingWeight int64

// IsYANGGoEnum ensures that WeightedEcmp_LoadBalancingWeight implements the yang.GoEnum
// interface. This ensures that WeightedEcmp_LoadBalancingWeight can be identified as a
// mapped type for a YANG enumeration.
func (E_WeightedEcmp_LoadBalancingWeight) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  WeightedEcmp_LoadBalancingWeight.
func (E_WeightedEcmp_LoadBalancingWeight) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_WeightedEcmp_LoadBalancingWeight.
func (e E_WeightedEcmp_LoadBalancingWeight) String() string {
	return ygot.EnumLogString(e, int64(e), "E_WeightedEcmp_LoadBalancingWeight")
}

const (
	// WeightedEcmp_LoadBalancingWeight_UNSET corresponds to the value UNSET of WeightedEcmp_LoadBalancingWeight
	WeightedEcmp_LoadBalancingWeight_UNSET E_WeightedEcmp_LoadBalancingWeight = 0
	// WeightedEcmp_LoadBalancingWeight_auto corresponds to the value auto of WeightedEcmp_LoadBalancingWeight
	WeightedEcmp_LoadBalancingWeight_auto E_WeightedEcmp_LoadBalancingWeight = 1
	// WeightedEcmp_LoadBalancingWeight_none corresponds to the value none of WeightedEcmp_LoadBalancingWeight
	WeightedEcmp_LoadBalancingWeight_none E_WeightedEcmp_LoadBalancingWeight = 2
)
