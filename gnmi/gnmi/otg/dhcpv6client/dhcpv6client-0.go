/*
Package dhcpv6client is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema.

This package was generated by ygnmi version: v0.11.1: (ygot: v0.29.20)
using the following YANG input files:
  - models-yang/models/bgp/open-traffic-generator-bgp.yang
  - models-yang/models/discovery/open-traffic-generator-discovery.yang
  - models-yang/models/dhcp/v4client/open-traffic-generator-dhcpv4client.yang
  - models-yang/models/dhcp/v4server/open-traffic-generator-dhcpv4server.yang
  - models-yang/models/dhcp/v6client/open-traffic-generator-dhcpv6client.yang
  - models-yang/models/dhcp/v6server/open-traffic-generator-dhcpv6server.yang
  - models-yang/models/flow/open-traffic-generator-flow.yang
  - models-yang/models/interface/open-traffic-generator-port.yang
  - models-yang/models/isis/open-traffic-generator-isis.yang
  - models-yang/models/lacp/open-traffic-generator-lacp.yang
  - models-yang/models/lag/open-traffic-generator-lag.yang
  - models-yang/models/lldp/open-traffic-generator-lldp.yang
  - models-yang/models/ospfv2/open-traffic-generator-ospfv2.yang
  - models-yang/models/platform/open-traffic-generator-platform.yang
  - models-yang/models/rsvp/open-traffic-generator-rsvp.yang
  - models-yang/models/types/open-traffic-generator-types.yang

Imported modules were sourced from:
  - models-yang/models/...
*/
package dhcpv6client

import (
	oc "github.com/openconfig/ondatra/gnmi/otg"
	"github.com/openconfig/ygnmi/ygnmi"
	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/ygot/ytypes"
)

// Dhcpv6Client_NamePath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/name YANG schema element.
type Dhcpv6Client_NamePath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_NamePathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/name YANG schema element.
type Dhcpv6Client_NamePathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "state/name"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/name"
func (n *Dhcpv6Client_NamePath) State() ygnmi.SingletonQuery[string] {
	return ygnmi.NewSingletonQuery[string](
		"Dhcpv6Client",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Dhcpv6Client).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "state/name"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/name"
func (n *Dhcpv6Client_NamePathAny) State() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Dhcpv6Client",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"state", "name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Dhcpv6Client).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "name"
//	Path from root:       ""
func (n *Dhcpv6Client_NamePath) Config() ygnmi.ConfigQuery[string] {
	return ygnmi.NewConfigQuery[string](
		"Dhcpv6Client",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Dhcpv6Client).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Config returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "name"
//	Path from root:       ""
func (n *Dhcpv6Client_NamePathAny) Config() ygnmi.WildcardQuery[string] {
	return ygnmi.NewWildcardQuery[string](
		"Dhcpv6Client",
		false,
		true,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"name"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (string, bool) {
			ret := gs.(*oc.Dhcpv6Client).Name
			if ret == nil {
				var zero string
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6ClientPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client YANG schema element.
type Dhcpv6ClientPath struct {
	*ygnmi.NodePath
}

// Dhcpv6ClientPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client YANG schema element.
type Dhcpv6ClientPathAny struct {
	*ygnmi.NodePath
}

// Dhcpv6ClientPathMap represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client YANG schema element.
type Dhcpv6ClientPathMap struct {
	*ygnmi.NodePath
}

// Dhcpv6ClientPathMapAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client YANG schema element.
type Dhcpv6ClientPathMapAny struct {
	*ygnmi.NodePath
}

// Counters (container): Counters of an individual DHCPv6 session.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "state/counters"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters"
func (n *Dhcpv6ClientPath) Counters() *Dhcpv6Client_CountersPath {
	ps := &Dhcpv6Client_CountersPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Counters (container): Counters of an individual DHCPv6 session.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "state/counters"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters"
func (n *Dhcpv6ClientPathAny) Counters() *Dhcpv6Client_CountersPathAny {
	ps := &Dhcpv6Client_CountersPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Interface (container): Information about address learned by an individual DHCPv6 session.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "state/interface"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/interface"
func (n *Dhcpv6ClientPath) Interface() *Dhcpv6Client_InterfacePath {
	ps := &Dhcpv6Client_InterfacePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Interface (container): Information about address learned by an individual DHCPv6 session.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "state/interface"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/interface"
func (n *Dhcpv6ClientPathAny) Interface() *Dhcpv6Client_InterfacePathAny {
	ps := &Dhcpv6Client_InterfacePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// Name (leaf): An arbitrary name of the DHCPv6 Client determined by the OTG
// configuration.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "*/name"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/*/name"
func (n *Dhcpv6ClientPath) Name() *Dhcpv6Client_NamePath {
	ps := &Dhcpv6Client_NamePath{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// Name (leaf): An arbitrary name of the DHCPv6 Client determined by the OTG
// configuration.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "*/name"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/*/name"
func (n *Dhcpv6ClientPathAny) Name() *Dhcpv6Client_NamePathAny {
	ps := &Dhcpv6Client_NamePathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"*", "name"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

func binarySliceToFloatSlice(in []oc.Binary) []float32 {
	converted := make([]float32, 0, len(in))
	for _, binary := range in {
		converted = append(converted, ygot.BinaryToFloat32(binary))
	}
	return converted
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6ClientPath) State() ygnmi.SingletonQuery[*oc.Dhcpv6Client] {
	return ygnmi.NewSingletonQuery[*oc.Dhcpv6Client](
		"Dhcpv6Client",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6ClientPathAny) State() ygnmi.WildcardQuery[*oc.Dhcpv6Client] {
	return ygnmi.NewWildcardQuery[*oc.Dhcpv6Client](
		"Dhcpv6Client",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_AdvertisementsIgnoredPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-ignored YANG schema element.
type Dhcpv6Client_Counters_AdvertisementsIgnoredPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_AdvertisementsIgnoredPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-ignored YANG schema element.
type Dhcpv6Client_Counters_AdvertisementsIgnoredPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "advertisements-ignored"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-ignored"
func (n *Dhcpv6Client_Counters_AdvertisementsIgnoredPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"advertisements-ignored"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).AdvertisementsIgnored
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "advertisements-ignored"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-ignored"
func (n *Dhcpv6Client_Counters_AdvertisementsIgnoredPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"advertisements-ignored"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).AdvertisementsIgnored
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_AdvertisementsReceivedPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-received YANG schema element.
type Dhcpv6Client_Counters_AdvertisementsReceivedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_AdvertisementsReceivedPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-received YANG schema element.
type Dhcpv6Client_Counters_AdvertisementsReceivedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "advertisements-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-received"
func (n *Dhcpv6Client_Counters_AdvertisementsReceivedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"advertisements-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).AdvertisementsReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "advertisements-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-received"
func (n *Dhcpv6Client_Counters_AdvertisementsReceivedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"advertisements-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).AdvertisementsReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_InformationRequestsSentPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/information-requests-sent YANG schema element.
type Dhcpv6Client_Counters_InformationRequestsSentPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_InformationRequestsSentPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/information-requests-sent YANG schema element.
type Dhcpv6Client_Counters_InformationRequestsSentPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "information-requests-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/information-requests-sent"
func (n *Dhcpv6Client_Counters_InformationRequestsSentPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"information-requests-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).InformationRequestsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "information-requests-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/information-requests-sent"
func (n *Dhcpv6Client_Counters_InformationRequestsSentPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"information-requests-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).InformationRequestsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_NacksReceivedPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/nacks-received YANG schema element.
type Dhcpv6Client_Counters_NacksReceivedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_NacksReceivedPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/nacks-received YANG schema element.
type Dhcpv6Client_Counters_NacksReceivedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "nacks-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/nacks-received"
func (n *Dhcpv6Client_Counters_NacksReceivedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"nacks-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).NacksReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "nacks-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/nacks-received"
func (n *Dhcpv6Client_Counters_NacksReceivedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"nacks-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).NacksReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_RapidCommitRepliesReceivedPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-replies-received YANG schema element.
type Dhcpv6Client_Counters_RapidCommitRepliesReceivedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_RapidCommitRepliesReceivedPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-replies-received YANG schema element.
type Dhcpv6Client_Counters_RapidCommitRepliesReceivedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rapid-commit-replies-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-replies-received"
func (n *Dhcpv6Client_Counters_RapidCommitRepliesReceivedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"rapid-commit-replies-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RapidCommitRepliesReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rapid-commit-replies-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-replies-received"
func (n *Dhcpv6Client_Counters_RapidCommitRepliesReceivedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"rapid-commit-replies-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RapidCommitRepliesReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_RapidCommitSolicitsSentPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-solicits-sent YANG schema element.
type Dhcpv6Client_Counters_RapidCommitSolicitsSentPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_RapidCommitSolicitsSentPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-solicits-sent YANG schema element.
type Dhcpv6Client_Counters_RapidCommitSolicitsSentPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rapid-commit-solicits-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-solicits-sent"
func (n *Dhcpv6Client_Counters_RapidCommitSolicitsSentPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"rapid-commit-solicits-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RapidCommitSolicitsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rapid-commit-solicits-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-solicits-sent"
func (n *Dhcpv6Client_Counters_RapidCommitSolicitsSentPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"rapid-commit-solicits-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RapidCommitSolicitsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_RebindsSentPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/rebinds-sent YANG schema element.
type Dhcpv6Client_Counters_RebindsSentPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_RebindsSentPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/rebinds-sent YANG schema element.
type Dhcpv6Client_Counters_RebindsSentPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rebinds-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rebinds-sent"
func (n *Dhcpv6Client_Counters_RebindsSentPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"rebinds-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RebindsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rebinds-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rebinds-sent"
func (n *Dhcpv6Client_Counters_RebindsSentPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"rebinds-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RebindsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_ReconfiguresReceivedPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/reconfigures-received YANG schema element.
type Dhcpv6Client_Counters_ReconfiguresReceivedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_ReconfiguresReceivedPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/reconfigures-received YANG schema element.
type Dhcpv6Client_Counters_ReconfiguresReceivedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "reconfigures-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/reconfigures-received"
func (n *Dhcpv6Client_Counters_ReconfiguresReceivedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"reconfigures-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).ReconfiguresReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "reconfigures-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/reconfigures-received"
func (n *Dhcpv6Client_Counters_ReconfiguresReceivedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"reconfigures-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).ReconfiguresReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_ReleasesSentPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/releases-sent YANG schema element.
type Dhcpv6Client_Counters_ReleasesSentPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_ReleasesSentPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/releases-sent YANG schema element.
type Dhcpv6Client_Counters_ReleasesSentPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "releases-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/releases-sent"
func (n *Dhcpv6Client_Counters_ReleasesSentPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"releases-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).ReleasesSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "releases-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/releases-sent"
func (n *Dhcpv6Client_Counters_ReleasesSentPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"releases-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).ReleasesSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_RenewsSentPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/renews-sent YANG schema element.
type Dhcpv6Client_Counters_RenewsSentPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_RenewsSentPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/renews-sent YANG schema element.
type Dhcpv6Client_Counters_RenewsSentPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "renews-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/renews-sent"
func (n *Dhcpv6Client_Counters_RenewsSentPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"renews-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RenewsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "renews-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/renews-sent"
func (n *Dhcpv6Client_Counters_RenewsSentPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"renews-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RenewsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_RepliesReceivedPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/replies-received YANG schema element.
type Dhcpv6Client_Counters_RepliesReceivedPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_RepliesReceivedPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/replies-received YANG schema element.
type Dhcpv6Client_Counters_RepliesReceivedPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "replies-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/replies-received"
func (n *Dhcpv6Client_Counters_RepliesReceivedPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"replies-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RepliesReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "replies-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/replies-received"
func (n *Dhcpv6Client_Counters_RepliesReceivedPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"replies-received"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RepliesReceived
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_RequestsSentPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/requests-sent YANG schema element.
type Dhcpv6Client_Counters_RequestsSentPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_RequestsSentPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/requests-sent YANG schema element.
type Dhcpv6Client_Counters_RequestsSentPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "requests-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/requests-sent"
func (n *Dhcpv6Client_Counters_RequestsSentPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"requests-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RequestsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "requests-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/requests-sent"
func (n *Dhcpv6Client_Counters_RequestsSentPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"requests-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).RequestsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Counters_SolicitsSentPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/solicits-sent YANG schema element.
type Dhcpv6Client_Counters_SolicitsSentPath struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// Dhcpv6Client_Counters_SolicitsSentPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters/solicits-sent YANG schema element.
type Dhcpv6Client_Counters_SolicitsSentPathAny struct {
	*ygnmi.NodePath
	parent ygnmi.PathStruct
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "solicits-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/solicits-sent"
func (n *Dhcpv6Client_Counters_SolicitsSentPath) State() ygnmi.SingletonQuery[uint64] {
	return ygnmi.NewSingletonQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"solicits-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).SolicitsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "solicits-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/solicits-sent"
func (n *Dhcpv6Client_Counters_SolicitsSentPathAny) State() ygnmi.WildcardQuery[uint64] {
	return ygnmi.NewWildcardQuery[uint64](
		"Dhcpv6Client_Counters",
		true,
		false,
		true,
		true,
		true,
		false,
		ygnmi.NewNodePath(
			[]string{"solicits-sent"},
			nil,
			n.parent,
		),
		func(gs ygot.ValidatedGoStruct) (uint64, bool) {
			ret := gs.(*oc.Dhcpv6Client_Counters).SolicitsSent
			if ret == nil {
				var zero uint64
				return zero, false
			}
			return *ret, true
		},
		func() ygot.ValidatedGoStruct { return new(oc.Dhcpv6Client_Counters) },
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_CountersPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters YANG schema element.
type Dhcpv6Client_CountersPath struct {
	*ygnmi.NodePath
}

// Dhcpv6Client_CountersPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/counters YANG schema element.
type Dhcpv6Client_CountersPathAny struct {
	*ygnmi.NodePath
}

// AdvertisementsIgnored (leaf): Number of DHCP Advertise messages ignored.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "advertisements-ignored"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-ignored"
func (n *Dhcpv6Client_CountersPath) AdvertisementsIgnored() *Dhcpv6Client_Counters_AdvertisementsIgnoredPath {
	ps := &Dhcpv6Client_Counters_AdvertisementsIgnoredPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"advertisements-ignored"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisementsIgnored (leaf): Number of DHCP Advertise messages ignored.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "advertisements-ignored"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-ignored"
func (n *Dhcpv6Client_CountersPathAny) AdvertisementsIgnored() *Dhcpv6Client_Counters_AdvertisementsIgnoredPathAny {
	ps := &Dhcpv6Client_Counters_AdvertisementsIgnoredPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"advertisements-ignored"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisementsReceived (leaf): Number of DHCP Advertise messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "advertisements-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-received"
func (n *Dhcpv6Client_CountersPath) AdvertisementsReceived() *Dhcpv6Client_Counters_AdvertisementsReceivedPath {
	ps := &Dhcpv6Client_Counters_AdvertisementsReceivedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"advertisements-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// AdvertisementsReceived (leaf): Number of DHCP Advertise messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "advertisements-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/advertisements-received"
func (n *Dhcpv6Client_CountersPathAny) AdvertisementsReceived() *Dhcpv6Client_Counters_AdvertisementsReceivedPathAny {
	ps := &Dhcpv6Client_Counters_AdvertisementsReceivedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"advertisements-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InformationRequestsSent (leaf): Number of DHCP Information messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "information-requests-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/information-requests-sent"
func (n *Dhcpv6Client_CountersPath) InformationRequestsSent() *Dhcpv6Client_Counters_InformationRequestsSentPath {
	ps := &Dhcpv6Client_Counters_InformationRequestsSentPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"information-requests-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// InformationRequestsSent (leaf): Number of DHCP Information messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "information-requests-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/information-requests-sent"
func (n *Dhcpv6Client_CountersPathAny) InformationRequestsSent() *Dhcpv6Client_Counters_InformationRequestsSentPathAny {
	ps := &Dhcpv6Client_Counters_InformationRequestsSentPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"information-requests-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// NacksReceived (leaf): Number of DHCP NACK messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "nacks-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/nacks-received"
func (n *Dhcpv6Client_CountersPath) NacksReceived() *Dhcpv6Client_Counters_NacksReceivedPath {
	ps := &Dhcpv6Client_Counters_NacksReceivedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"nacks-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// NacksReceived (leaf): Number of DHCP NACK messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "nacks-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/nacks-received"
func (n *Dhcpv6Client_CountersPathAny) NacksReceived() *Dhcpv6Client_Counters_NacksReceivedPathAny {
	ps := &Dhcpv6Client_Counters_NacksReceivedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"nacks-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RapidCommitRepliesReceived (leaf): Number of rapid-commit DHCP Reply messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rapid-commit-replies-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-replies-received"
func (n *Dhcpv6Client_CountersPath) RapidCommitRepliesReceived() *Dhcpv6Client_Counters_RapidCommitRepliesReceivedPath {
	ps := &Dhcpv6Client_Counters_RapidCommitRepliesReceivedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"rapid-commit-replies-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RapidCommitRepliesReceived (leaf): Number of rapid-commit DHCP Reply messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rapid-commit-replies-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-replies-received"
func (n *Dhcpv6Client_CountersPathAny) RapidCommitRepliesReceived() *Dhcpv6Client_Counters_RapidCommitRepliesReceivedPathAny {
	ps := &Dhcpv6Client_Counters_RapidCommitRepliesReceivedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"rapid-commit-replies-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RapidCommitSolicitsSent (leaf): Number of rapid-commit DHCPSOLICIT messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rapid-commit-solicits-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-solicits-sent"
func (n *Dhcpv6Client_CountersPath) RapidCommitSolicitsSent() *Dhcpv6Client_Counters_RapidCommitSolicitsSentPath {
	ps := &Dhcpv6Client_Counters_RapidCommitSolicitsSentPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"rapid-commit-solicits-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RapidCommitSolicitsSent (leaf): Number of rapid-commit DHCPSOLICIT messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rapid-commit-solicits-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rapid-commit-solicits-sent"
func (n *Dhcpv6Client_CountersPathAny) RapidCommitSolicitsSent() *Dhcpv6Client_Counters_RapidCommitSolicitsSentPathAny {
	ps := &Dhcpv6Client_Counters_RapidCommitSolicitsSentPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"rapid-commit-solicits-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RebindsSent (leaf): Number of DHCPR Rebind messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rebinds-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rebinds-sent"
func (n *Dhcpv6Client_CountersPath) RebindsSent() *Dhcpv6Client_Counters_RebindsSentPath {
	ps := &Dhcpv6Client_Counters_RebindsSentPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"rebinds-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RebindsSent (leaf): Number of DHCPR Rebind messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "rebinds-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/rebinds-sent"
func (n *Dhcpv6Client_CountersPathAny) RebindsSent() *Dhcpv6Client_Counters_RebindsSentPathAny {
	ps := &Dhcpv6Client_Counters_RebindsSentPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"rebinds-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ReconfiguresReceived (leaf): Number of DHCP Reconfigure messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "reconfigures-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/reconfigures-received"
func (n *Dhcpv6Client_CountersPath) ReconfiguresReceived() *Dhcpv6Client_Counters_ReconfiguresReceivedPath {
	ps := &Dhcpv6Client_Counters_ReconfiguresReceivedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"reconfigures-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ReconfiguresReceived (leaf): Number of DHCP Reconfigure messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "reconfigures-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/reconfigures-received"
func (n *Dhcpv6Client_CountersPathAny) ReconfiguresReceived() *Dhcpv6Client_Counters_ReconfiguresReceivedPathAny {
	ps := &Dhcpv6Client_Counters_ReconfiguresReceivedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"reconfigures-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ReleasesSent (leaf): Number of DHCPRELEASE messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "releases-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/releases-sent"
func (n *Dhcpv6Client_CountersPath) ReleasesSent() *Dhcpv6Client_Counters_ReleasesSentPath {
	ps := &Dhcpv6Client_Counters_ReleasesSentPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"releases-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// ReleasesSent (leaf): Number of DHCPRELEASE messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "releases-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/releases-sent"
func (n *Dhcpv6Client_CountersPathAny) ReleasesSent() *Dhcpv6Client_Counters_ReleasesSentPathAny {
	ps := &Dhcpv6Client_Counters_ReleasesSentPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"releases-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RenewsSent (leaf): Number of DHCPR Renew messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "renews-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/renews-sent"
func (n *Dhcpv6Client_CountersPath) RenewsSent() *Dhcpv6Client_Counters_RenewsSentPath {
	ps := &Dhcpv6Client_Counters_RenewsSentPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"renews-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RenewsSent (leaf): Number of DHCPR Renew messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "renews-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/renews-sent"
func (n *Dhcpv6Client_CountersPathAny) RenewsSent() *Dhcpv6Client_Counters_RenewsSentPathAny {
	ps := &Dhcpv6Client_Counters_RenewsSentPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"renews-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RepliesReceived (leaf): Number of DHCPOFFER messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "replies-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/replies-received"
func (n *Dhcpv6Client_CountersPath) RepliesReceived() *Dhcpv6Client_Counters_RepliesReceivedPath {
	ps := &Dhcpv6Client_Counters_RepliesReceivedPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"replies-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RepliesReceived (leaf): Number of DHCPOFFER messages received.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "replies-received"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/replies-received"
func (n *Dhcpv6Client_CountersPathAny) RepliesReceived() *Dhcpv6Client_Counters_RepliesReceivedPathAny {
	ps := &Dhcpv6Client_Counters_RepliesReceivedPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"replies-received"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RequestsSent (leaf): Number of DHCPREQUEST messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "requests-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/requests-sent"
func (n *Dhcpv6Client_CountersPath) RequestsSent() *Dhcpv6Client_Counters_RequestsSentPath {
	ps := &Dhcpv6Client_Counters_RequestsSentPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"requests-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// RequestsSent (leaf): Number of DHCPREQUEST messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "requests-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/requests-sent"
func (n *Dhcpv6Client_CountersPathAny) RequestsSent() *Dhcpv6Client_Counters_RequestsSentPathAny {
	ps := &Dhcpv6Client_Counters_RequestsSentPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"requests-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SolicitsSent (leaf): Number of DHCPSOLICIT messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "solicits-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/solicits-sent"
func (n *Dhcpv6Client_CountersPath) SolicitsSent() *Dhcpv6Client_Counters_SolicitsSentPath {
	ps := &Dhcpv6Client_Counters_SolicitsSentPath{
		NodePath: ygnmi.NewNodePath(
			[]string{"solicits-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// SolicitsSent (leaf): Number of DHCPSOLICIT messages sent.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "solicits-sent"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/counters/solicits-sent"
func (n *Dhcpv6Client_CountersPathAny) SolicitsSent() *Dhcpv6Client_Counters_SolicitsSentPathAny {
	ps := &Dhcpv6Client_Counters_SolicitsSentPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"solicits-sent"},
			map[string]interface{}{},
			n,
		),
		parent: n,
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6Client_CountersPath) State() ygnmi.SingletonQuery[*oc.Dhcpv6Client_Counters] {
	return ygnmi.NewSingletonQuery[*oc.Dhcpv6Client_Counters](
		"Dhcpv6Client_Counters",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6Client_CountersPathAny) State() ygnmi.WildcardQuery[*oc.Dhcpv6Client_Counters] {
	return ygnmi.NewWildcardQuery[*oc.Dhcpv6Client_Counters](
		"Dhcpv6Client_Counters",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_InterfacePath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/interface YANG schema element.
type Dhcpv6Client_InterfacePath struct {
	*ygnmi.NodePath
}

// Dhcpv6Client_InterfacePathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/interface YANG schema element.
type Dhcpv6Client_InterfacePathAny struct {
	*ygnmi.NodePath
}

// IaAddressAny (list): A list of IPv6 addresses and gateways.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "ia-addresses/ia-address"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/interface/ia-addresses/ia-address"
func (n *Dhcpv6Client_InterfacePath) IaAddressAny() *Dhcpv6Client_Interface_IaAddressPathAny {
	ps := &Dhcpv6Client_Interface_IaAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ia-addresses", "ia-address"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// IaAddressAny (list): A list of IPv6 addresses and gateways.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "ia-addresses/ia-address"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/interface/ia-addresses/ia-address"
func (n *Dhcpv6Client_InterfacePathAny) IaAddressAny() *Dhcpv6Client_Interface_IaAddressPathAny {
	ps := &Dhcpv6Client_Interface_IaAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"ia-addresses", "ia-address"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// IapdAddressAny (list): A list of IPv6 IAPD addresses and prefix lengths.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "iapd-addresses/iapd-address"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/interface/iapd-addresses/iapd-address"
func (n *Dhcpv6Client_InterfacePath) IapdAddressAny() *Dhcpv6Client_Interface_IapdAddressPathAny {
	ps := &Dhcpv6Client_Interface_IapdAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"iapd-addresses", "iapd-address"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// IapdAddressAny (list): A list of IPv6 IAPD addresses and prefix lengths.
//
//	Defining module:      "open-traffic-generator-dhcpv6client"
//	Instantiating module: "open-traffic-generator-dhcpv6client"
//	Path from parent:     "iapd-addresses/iapd-address"
//	Path from root:       "/dhcpv6-clients/dhcpv6-client/state/interface/iapd-addresses/iapd-address"
func (n *Dhcpv6Client_InterfacePathAny) IapdAddressAny() *Dhcpv6Client_Interface_IapdAddressPathAny {
	ps := &Dhcpv6Client_Interface_IapdAddressPathAny{
		NodePath: ygnmi.NewNodePath(
			[]string{"iapd-addresses", "iapd-address"},
			map[string]interface{}{},
			n,
		),
	}
	return ps
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6Client_InterfacePath) State() ygnmi.SingletonQuery[*oc.Dhcpv6Client_Interface] {
	return ygnmi.NewSingletonQuery[*oc.Dhcpv6Client_Interface](
		"Dhcpv6Client_Interface",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6Client_InterfacePathAny) State() ygnmi.WildcardQuery[*oc.Dhcpv6Client_Interface] {
	return ygnmi.NewWildcardQuery[*oc.Dhcpv6Client_Interface](
		"Dhcpv6Client_Interface",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Interface_IaAddressPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/interface/ia-addresses/ia-address YANG schema element.
type Dhcpv6Client_Interface_IaAddressPath struct {
	*ygnmi.NodePath
}

// Dhcpv6Client_Interface_IaAddressPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/interface/ia-addresses/ia-address YANG schema element.
type Dhcpv6Client_Interface_IaAddressPathAny struct {
	*ygnmi.NodePath
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6Client_Interface_IaAddressPath) State() ygnmi.SingletonQuery[*oc.Dhcpv6Client_Interface_IaAddress] {
	return ygnmi.NewSingletonQuery[*oc.Dhcpv6Client_Interface_IaAddress](
		"Dhcpv6Client_Interface_IaAddress",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6Client_Interface_IaAddressPathAny) State() ygnmi.WildcardQuery[*oc.Dhcpv6Client_Interface_IaAddress] {
	return ygnmi.NewWildcardQuery[*oc.Dhcpv6Client_Interface_IaAddress](
		"Dhcpv6Client_Interface_IaAddress",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// Dhcpv6Client_Interface_IapdAddressPath represents the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/interface/iapd-addresses/iapd-address YANG schema element.
type Dhcpv6Client_Interface_IapdAddressPath struct {
	*ygnmi.NodePath
}

// Dhcpv6Client_Interface_IapdAddressPathAny represents the wildcard version of the /open-traffic-generator-dhcpv6client/dhcpv6-clients/dhcpv6-client/state/interface/iapd-addresses/iapd-address YANG schema element.
type Dhcpv6Client_Interface_IapdAddressPathAny struct {
	*ygnmi.NodePath
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6Client_Interface_IapdAddressPath) State() ygnmi.SingletonQuery[*oc.Dhcpv6Client_Interface_IapdAddress] {
	return ygnmi.NewSingletonQuery[*oc.Dhcpv6Client_Interface_IapdAddress](
		"Dhcpv6Client_Interface_IapdAddress",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}

// State returns a Query that can be used in gNMI operations.
func (n *Dhcpv6Client_Interface_IapdAddressPathAny) State() ygnmi.WildcardQuery[*oc.Dhcpv6Client_Interface_IapdAddress] {
	return ygnmi.NewWildcardQuery[*oc.Dhcpv6Client_Interface_IapdAddress](
		"Dhcpv6Client_Interface_IapdAddress",
		true,
		false,
		false,
		false,
		true,
		false,
		n,
		nil,
		nil,
		func() *ytypes.Schema {
			return &ytypes.Schema{
				Root:       &oc.Root{},
				SchemaTree: oc.SchemaTree,
				Unmarshal:  oc.Unmarshal,
			}
		},
		nil,
		nil,
	)
}
